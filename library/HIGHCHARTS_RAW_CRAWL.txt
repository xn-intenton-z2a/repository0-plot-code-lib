If you are not redirected automatically, follow this link.\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API reference\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\n\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API reference\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\n\n\nSimply VisualizeWe make it easy for developers to create charts and dashboards for web and mobile platforms. For Javascript, Angular, React, VueJS, iOS, R, Python, and more. Try for
 Free View
 Demos    News & releases  Read the latest news     Highcharts Grid Lite   NEW   Create interactive data tables     Highcharts for Flutter   BETA  Try our beta integration     Highcharts Academy   NEW   Learn Highcharts for free  80 out of the world’s 100 largest companies
 trust us with their chartingOver a decade of first-hand experience in
 building charting solutions for large to small organizations helps us identify and
 solve real problems so you can get more things done.        Previous  Probably the best and the
 only
 charting
 library
 you
 need.     "The ease of use and the
 customization make it
 the
 most developer-friendly library. The documentation is so well
 organized and the examples are more than enough to get you
 started.
 They also have a good sandbox to play around. Most of the UI
 frameworks/libraries have a wrapper for Highcharts so can be
 used
 anywhere with anything."Saurabh M.Senior Software Engineer at Coditation
 Systems Read the full review on G2 Everything is possible with
 Highcharts     "Highcharts API is really
 flexible
 based on well designed fully customisable settings which can
 tweak
 your charts nitty-gritty details. It also supports responsive
 design, which means you can define screens size specific
 configurations and Highcharts will take care of how it will look
 on
 different devices. It can be integrated with Angular thanks to
 its
 official highcharts-angular wrapper....""Attila C.Angular Developer at Shields Energy
 Services Read the full review on G2 Great charting package! I use it for all my charting!     "Wide range of chart
 types are
 supported, including stock charts, which are especially needed
 working in a finance company. The paid support is great! I
 usually
 have answers to any of my questions the next morning!"Keith D.Senior Java / J2EE Software Engineer Read the full review on G2   Next The Only Charting Library You NeedThe Highcharts library comes with all the tools you
 need to create reliable and secure data visualizations. Built on JavaScript and TypeScript,
 all our charting libraries work with any back-end database or server stack. We offer
 wrappers for the most popular programming
 languages (.Net, PHP, Python, R, Java) as well as iOS and Android, and frameworks
 like Angular, Vue, and React.Start with Highcharts CoreIncludes all your essential chart types: line,
 bar, area, column, and more.Add additional librariesHighcharts MapsBuild interactive maps linked to geography Highcharts StockCreate stock or general timeline charts Highcharts GanttDisplay tasks and events along a timelineCreate Dashboards with Highcharts DashboardsSet up responsive, accessible dashboards in minutesVisualize Tabular Data with Highcharts GridCreate interactive, responsive data tablesStay up to date with Highcharts
 AdvantageTake advantage of premium support and entitlement to all
 new Highcharts releases.Popular TutorialsSmall multiples map with Highcharts and React   3 minutes read | Post-tags: Highcharts Maps,	 React,	 ReactJS,	 Small MultipleAngular Signals with Highcharts   2 minutes read | Post-tags: Angular,	 Signals Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *Submit#Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community How it All StartedIt all started with a snowy mountain, measuring cane, a passion for
 geology, and the urge to help the locals. Now, Highcharts is solving charting problems
 for developers all around the world.Our Story\n\nSimply VisualizeWe make it easy for developers to create charts and dashboards for web and mobile platforms. For Javascript, Angular, React, VueJS, iOS, R, Python, and more. Try for
 Free View
 Demos    News & releases  Read the latest news     Highcharts Grid Lite   NEW   Create interactive data tables     Highcharts for Flutter   BETA  Try our beta integration     Highcharts Academy   NEW   Learn Highcharts for free  80 out of the world’s 100 largest companies
 trust us with their chartingOver a decade of first-hand experience in
 building charting solutions for large to small organizations helps us identify and
 solve real problems so you can get more things done.        Previous  Probably the best and the
 only
 charting
 library
 you
 need.     "The ease of use and the
 customization make it
 the
 most developer-friendly library. The documentation is so well
 organized and the examples are more than enough to get you
 started.
 They also have a good sandbox to play around. Most of the UI
 frameworks/libraries have a wrapper for Highcharts so can be
 used
 anywhere with anything."Saurabh M.Senior Software Engineer at Coditation
 Systems Read the full review on G2 Everything is possible with
 Highcharts     "Highcharts API is really
 flexible
 based on well designed fully customisable settings which can
 tweak
 your charts nitty-gritty details. It also supports responsive
 design, which means you can define screens size specific
 configurations and Highcharts will take care of how it will look
 on
 different devices. It can be integrated with Angular thanks to
 its
 official highcharts-angular wrapper....""Attila C.Angular Developer at Shields Energy
 Services Read the full review on G2 Great charting package! I use it for all my charting!     "Wide range of chart
 types are
 supported, including stock charts, which are especially needed
 working in a finance company. The paid support is great! I
 usually
 have answers to any of my questions the next morning!"Keith D.Senior Java / J2EE Software Engineer Read the full review on G2   Next The Only Charting Library You NeedThe Highcharts library comes with all the tools you
 need to create reliable and secure data visualizations. Built on JavaScript and TypeScript,
 all our charting libraries work with any back-end database or server stack. We offer
 wrappers for the most popular programming
 languages (.Net, PHP, Python, R, Java) as well as iOS and Android, and frameworks
 like Angular, Vue, and React.Start with Highcharts CoreIncludes all your essential chart types: line,
 bar, area, column, and more.Add additional librariesHighcharts MapsBuild interactive maps linked to geography Highcharts StockCreate stock or general timeline charts Highcharts GanttDisplay tasks and events along a timelineCreate Dashboards with Highcharts DashboardsSet up responsive, accessible dashboards in minutesVisualize Tabular Data with Highcharts GridCreate interactive, responsive data tablesStay up to date with Highcharts
 AdvantageTake advantage of premium support and entitlement to all
 new Highcharts releases.Popular TutorialsSmall multiples map with Highcharts and React   3 minutes read | Post-tags: Highcharts Maps,	 React,	 ReactJS,	 Small MultipleAngular Signals with Highcharts   2 minutes read | Post-tags: Angular,	 Signals Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *Submit#Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community How it All StartedIt all started with a snowy mountain, measuring cane, a passion for
 geology, and the urge to help the locals. Now, Highcharts is solving charting problems
 for developers all around the world.Our Story\n\n\n\nHighcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS. Try for Free Buy Now Stop animation  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy Now  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy NowPopular Highcharts Core DemosDiscover all demos  Dependency Wheel  Stacked Area Chart  Area Range  Packed Bubble ChartHighcharts FeaturesIncludes All Major Chart Types + More From area to x-range, we've got you covered.Style with CSS or JavaScript Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure using JavaScript or CSS.Popular Wrappers Available For popular languages, such as .Net, PHP, Python, R, and Java, iOS, Android, and frameworks like Angular, Vue and React.Full-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS. Try for Free Buy Now Stop animation  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy Now  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy NowPopular Highcharts Core DemosDiscover all demos  Dependency Wheel  Stacked Area Chart  Area Range  Packed Bubble ChartHighcharts FeaturesIncludes All Major Chart Types + More From area to x-range, we've got you covered.Style with CSS or JavaScript Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure using JavaScript or CSS.Popular Wrappers Available For popular languages, such as .Net, PHP, Python, R, and Java, iOS, Android, and frameworks like Angular, Vue and React.Full-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS. Try for Free Buy Now Stop animation  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy Now  Highcharts® CoreHighcharts, the core library of our product suite, is a pure JavaScript charting library based on SVG that makes it easy for developers to create responsive, interactive and accessible charts. Our library includes all the standard chart types and more. From area to x-range, we've got you covered. Our simple options-structure allows for deep customization, and styling can be done via JavaScript or CSS.  Stop animation Try for Free Buy NowPopular Highcharts Core DemosDiscover all demos  Dependency Wheel  Stacked Area Chart  Area Range  Packed Bubble ChartHighcharts FeaturesIncludes All Major Chart Types + More From area to x-range, we've got you covered.Style with CSS or JavaScript Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure using JavaScript or CSS.Popular Wrappers Available For popular languages, such as .Net, PHP, Python, R, and Java, iOS, Android, and frameworks like Angular, Vue and React.Full-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nConnect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts. Try for Free Buy Now Stop animation Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy Now   Connect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy NowPopular Highcharts Stock DemosDiscover all demos  Compare Series  Dynamic Data  Acceleration Bands  Awesome OscillatorHighcharts Stock Features Supercharge your Stock Charts with Morningstar Data  NEWIntegrate Morningstar’s trusted data with Highcharts using our pre-built data connector. No development headaches or security concerns. Just connect and go. Connect to Morningstar data40+ Tech indicators Including SMA, MACD, CCI, RSI, Stochastic, Bollinger Bands, Pivot Points, PSAR, and Ichimoku Kinko Hyo. Check out the demo.Data grouping Group data into optional groups like days, weeks and months with Highcharts Stocks’ blazingly-fast data grouping feature.Navigation For Finance Includes small navigator series, preset date ranges, date picker, adjustable panes, scrolling and panning.Secure Use Highcharts Stock on your intranet or password protected websites without worrying about anyone siphoning your data.Stock Tools Analysts and end-users can annotate and apply statistical calculations on any data-set without the aid of developers.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Pivot Points Visualize the momentum and trend of your data with pivot point indicators.Cumulative Sum The Cumulative Sum tool sums all the previous values with the current value in a visible range.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nConnect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts. Try for Free Buy Now Stop animation Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy Now   Connect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy NowPopular Highcharts Stock DemosDiscover all demos  Compare Series  Dynamic Data  Acceleration Bands  Awesome OscillatorHighcharts Stock Features Supercharge your Stock Charts with Morningstar Data  NEWIntegrate Morningstar’s trusted data with Highcharts using our pre-built data connector. No development headaches or security concerns. Just connect and go. Connect to Morningstar data40+ Tech indicators Including SMA, MACD, CCI, RSI, Stochastic, Bollinger Bands, Pivot Points, PSAR, and Ichimoku Kinko Hyo. Check out the demo.Data grouping Group data into optional groups like days, weeks and months with Highcharts Stocks’ blazingly-fast data grouping feature.Navigation For Finance Includes small navigator series, preset date ranges, date picker, adjustable panes, scrolling and panning.Secure Use Highcharts Stock on your intranet or password protected websites without worrying about anyone siphoning your data.Stock Tools Analysts and end-users can annotate and apply statistical calculations on any data-set without the aid of developers.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Pivot Points Visualize the momentum and trend of your data with pivot point indicators.Cumulative Sum The Cumulative Sum tool sums all the previous values with the current value in a visible range.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nConnect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts. Try for Free Buy Now Stop animation Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy Now   Connect to Morningstar  NEW Use Morningstar data in stock charts Additional product Highcharts® StockCreate stock or general timeline charts for your web and mobile apps. Features sophisticated navigation for high-volume data, user annotations and over 40 built-in Technical Indicators. Based on Highcharts, the leading, battle-tested SVG-based charting tool, and leader in accessible charts.  Stop animation Try for Free Buy NowPopular Highcharts Stock DemosDiscover all demos  Compare Series  Dynamic Data  Acceleration Bands  Awesome OscillatorHighcharts Stock Features Supercharge your Stock Charts with Morningstar Data  NEWIntegrate Morningstar’s trusted data with Highcharts using our pre-built data connector. No development headaches or security concerns. Just connect and go. Connect to Morningstar data40+ Tech indicators Including SMA, MACD, CCI, RSI, Stochastic, Bollinger Bands, Pivot Points, PSAR, and Ichimoku Kinko Hyo. Check out the demo.Data grouping Group data into optional groups like days, weeks and months with Highcharts Stocks’ blazingly-fast data grouping feature.Navigation For Finance Includes small navigator series, preset date ranges, date picker, adjustable panes, scrolling and panning.Secure Use Highcharts Stock on your intranet or password protected websites without worrying about anyone siphoning your data.Stock Tools Analysts and end-users can annotate and apply statistical calculations on any data-set without the aid of developers.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Pivot Points Visualize the momentum and trend of your data with pivot point indicators.Cumulative Sum The Cumulative Sum tool sums all the previous values with the current value in a visible range.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nAdditional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography. Try for Free Buy Now Stop animation Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy Now Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy NowPopular Highcharts Maps DemosDiscover all demos  Spider Map  Current Temps  Marker Clusters  Built-In ProjectionHighcharts Maps FeaturesMap Collection We provide a collection of hundreds of maps, all optimized for fast download and rendering with Highcharts Maps. The map collection is also available via NPM.Built-in Projections Highcharts Maps includes some basic built-in projections, and other projections can be custom built and plugged in.Color Axis Control the color layout of Highcharts Maps choropleth maps in a separate color axis with common options like min, max, logarithmic scale and more.Custom Maps Create custom maps using SVG, such as this regular map of a made-up place, or this irregular map of a real place.Map Types Several map types are supported, including map area, map line, points of interest, bubbles on maps, heatmaps and tilemaps.Map Navigation Navigate Highcharts Maps with plus/minus buttons, doubleclick to zoom, mousewheel zooming, multitouch and panning.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Temperature Map Series (coming soon) Use the temperature map series to highlight areas of your map detailing the density or severity of the data.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography. Try for Free Buy Now Stop animation Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy Now Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy NowPopular Highcharts Maps DemosDiscover all demos  Spider Map  Current Temps  Marker Clusters  Built-In ProjectionHighcharts Maps FeaturesMap Collection We provide a collection of hundreds of maps, all optimized for fast download and rendering with Highcharts Maps. The map collection is also available via NPM.Built-in Projections Highcharts Maps includes some basic built-in projections, and other projections can be custom built and plugged in.Color Axis Control the color layout of Highcharts Maps choropleth maps in a separate color axis with common options like min, max, logarithmic scale and more.Custom Maps Create custom maps using SVG, such as this regular map of a made-up place, or this irregular map of a real place.Map Types Several map types are supported, including map area, map line, points of interest, bubbles on maps, heatmaps and tilemaps.Map Navigation Navigate Highcharts Maps with plus/minus buttons, doubleclick to zoom, mousewheel zooming, multitouch and panning.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Temperature Map Series (coming soon) Use the temperature map series to highlight areas of your map detailing the density or severity of the data.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography. Try for Free Buy Now Stop animation Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy Now Additional product Highcharts® MapsHighcharts Maps offers a standards-based way for generating schematic maps in web-based projects. It extends the user-friendly Highcharts JavaScript API and allows web developers to build interactive maps to display sales, election results or any other information linked to geography.  Stop animation Try for Free Buy NowPopular Highcharts Maps DemosDiscover all demos  Spider Map  Current Temps  Marker Clusters  Built-In ProjectionHighcharts Maps FeaturesMap Collection We provide a collection of hundreds of maps, all optimized for fast download and rendering with Highcharts Maps. The map collection is also available via NPM.Built-in Projections Highcharts Maps includes some basic built-in projections, and other projections can be custom built and plugged in.Color Axis Control the color layout of Highcharts Maps choropleth maps in a separate color axis with common options like min, max, logarithmic scale and more.Custom Maps Create custom maps using SVG, such as this regular map of a made-up place, or this irregular map of a real place.Map Types Several map types are supported, including map area, map line, points of interest, bubbles on maps, heatmaps and tilemaps.Map Navigation Navigate Highcharts Maps with plus/minus buttons, doubleclick to zoom, mousewheel zooming, multitouch and panning.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Temperature Map Series (coming soon) Use the temperature map series to highlight areas of your map detailing the density or severity of the data.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nAdditional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos. Try for Free Buy Now Stop animation Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy Now Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy NowPopular Highcharts Gantt DemosDiscover all demos  Inverted Chart  Interactive Gantt  Subtasks  With NavigationHighcharts Gantt FeaturesHelpful Standard Features Highcharts Gantt includes many advanced and useful features by default, such as Milestones, Percent-complete shadings, Current day indication, and Relationships between activities.Multi-format Exports Export Highcharts Gantt charts into multiple raster or vector graphics formats. Perfect for including the charts in static reports and presentations.Interactive Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Developed with Clients Highcharts Gantt was developed and quality-controlled in close dialogue with clients who were unable to find existing market solutions that met their needs.Use Cases Gantt charts are great for any kind of asset allocation or scheduling, from reserving meeting rooms at work to keeping track of the kids’ after-school activities.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Gantt Axis Grid The grid axis makes it easy to display task information in table form.Dependencies Between Tasks Configure dependencies between tasks to visualize the work breakdown structure of a project .Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos. Try for Free Buy Now Stop animation Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy Now Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy NowPopular Highcharts Gantt DemosDiscover all demos  Inverted Chart  Interactive Gantt  Subtasks  With NavigationHighcharts Gantt FeaturesHelpful Standard Features Highcharts Gantt includes many advanced and useful features by default, such as Milestones, Percent-complete shadings, Current day indication, and Relationships between activities.Multi-format Exports Export Highcharts Gantt charts into multiple raster or vector graphics formats. Perfect for including the charts in static reports and presentations.Interactive Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Developed with Clients Highcharts Gantt was developed and quality-controlled in close dialogue with clients who were unable to find existing market solutions that met their needs.Use Cases Gantt charts are great for any kind of asset allocation or scheduling, from reserving meeting rooms at work to keeping track of the kids’ after-school activities.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Gantt Axis Grid The grid axis makes it easy to display task information in table form.Dependencies Between Tasks Configure dependencies between tasks to visualize the work breakdown structure of a project .Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos. Try for Free Buy Now Stop animation Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy Now Additional product Highcharts® GanttGoing places no other JavaScript has gantt before. A robust JavaScript library that makes it easy for developers to build interactive charts for allocating, coordinating, and displaying tasks, events, and resources along a timeline. Check out our Highcharts Gantt demos.  Stop animation Try for Free Buy NowPopular Highcharts Gantt DemosDiscover all demos  Inverted Chart  Interactive Gantt  Subtasks  With NavigationHighcharts Gantt FeaturesHelpful Standard Features Highcharts Gantt includes many advanced and useful features by default, such as Milestones, Percent-complete shadings, Current day indication, and Relationships between activities.Multi-format Exports Export Highcharts Gantt charts into multiple raster or vector graphics formats. Perfect for including the charts in static reports and presentations.Interactive Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Developed with Clients Highcharts Gantt was developed and quality-controlled in close dialogue with clients who were unable to find existing market solutions that met their needs.Use Cases Gantt charts are great for any kind of asset allocation or scheduling, from reserving meeting rooms at work to keeping track of the kids’ after-school activities.Includes Highcharts Core The Highcharts Core library is also included, which provides an additional 30 different chart types.Gantt Axis Grid The grid axis makes it easy to display task information in table form.Dependencies Between Tasks Configure dependencies between tasks to visualize the work breakdown structure of a project .Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.Integrates with all Highcharts charting libraries and most major frameworks  Try for Free Buy Now Stop animation  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy Now  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy NowPopular Dashboards DemosDiscover all demos  Climate Dashboard  Basic Dashboard  Data Cursor Sync  Sync ExtremesMade by Developers for DevelopersDon’t waste time coding from scratch. Highcharts Dashboards is a development library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects. Our well-organized documentation keeps the learning curve short, and our simple configuration options and variable-driven CSS make it easy to customize and integrate Highcharts Dashboards into your existing applications. No proprietary editors. You control the code.Flexible FrameworkUse our framework to set up a functioning, responsive, accessible dashboard in minutes with minimal effort. Check out our demos and set-up docs.Pre-built ComponentsHighcharts Dashboard includes pre-built charts, KPI and data grid components, all configurable via the same JavaScript options structure used by all Highcharts charting libraries.Built-in Data SynchronizationConnect data from multiple external sources and Highcharts Dashboards will store and distribute them in a data table. When the data changes, so do your components, keeping everything in sync, no extra work necessary.Out-of-the-box ResponsivenessHighcharts Dashboards uses a layout engine based on Flexbox, ensuring components and layouts adjust dynamically and reliably on all modern browsers when the dashboard container resizes.Highcharts Grid Pro for DashboardsHighcharts Grid Pro is a powerful, lightweight, fully customizable solution for managing and visualizing tabular data. 
 Whether used as part of Highcharts Dashboards or as a standalone component, it provides an intuitive and flexible approach to data presentation.To use Highcharts Grid Pro, a Highcharts Dashboards license is required. Learn more about its features in our docs.Introducing Highcharts Grid LiteThe perfect tool for creating responsive, interactive tables.
 It's fast, reliable and free. Learn more about Grid Lite. Why Highcharts Dashboards?Highcharts Dashboard will significantly enhance your dashboard development process, making it more efficient, secure and user-friendly.Completely CustomizableOur simple configuration options and variable-driven CSS make it easy to theme Highcharts Dashboards to fit your application and brand. No proprietary editors or ugly hacks. You control the code.Self-hosted and SecureUnlike low or no-code dashboards that host your data offsite, Highcharts Dashboards is a completely self-hosted solution that poses zero risk to the integrity and privacy of your data.Edit Mode for End-UsersIn Edit Mode, dashboard users can rearrange components via drag and drop, and intuitively adjust the dimensions of rows and components without needing a developer.Integrates with HighchartsHighcharts Dashboards integrates seamlessly with all Highcharts data visualization libraries. Utilize all Highcharts charting methods and tools inside your components to supercharge your dashboard.How Highcharts Dashboards Works:Get the LibrariesInstall Highcharts Dashboards via npm or use our CDN to access the code directly. Check out our download page for more details Highcharts Core Highcharts Dashboards Accessibility Module  Configure your Data Pool & ConnectorsThe data pool centralizes your data and data management, and data connectors manage data transactions, such as server polling and column order. Use our pre-defined Google Sheets, CSV, JSON and HTML Table connectors to connect your data, or define your own connectors. Define your Dashboard LayoutSpecify the size of individual cells in absolute values or percentages in your dashboard configuration, and our layout engine will place components where they need to be. Our configuration options make it easy to create and manage nested layouts as well.   Configure & Connect ComponentsConfigure our pre-defined components or build your own custom components and link them to your data connectors. Specify the behaviors you want to synchronize across components. Then connect your components to your layout. Launch your DashboardIntegrate your dashboard configuration with an existing application or a stand-alone web page. Once published, end users can change the size of rows and individual components with our user-friendly Edit Mode and rearrange components via intuitive drag and drop controls.  Try for Free Buy Now\n\nHighcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.Integrates with all Highcharts charting libraries and most major frameworks  Try for Free Buy Now Stop animation  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy Now  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy NowPopular Dashboards DemosDiscover all demos  Climate Dashboard  Basic Dashboard  Data Cursor Sync  Sync ExtremesMade by Developers for DevelopersDon’t waste time coding from scratch. Highcharts Dashboards is a development library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects. Our well-organized documentation keeps the learning curve short, and our simple configuration options and variable-driven CSS make it easy to customize and integrate Highcharts Dashboards into your existing applications. No proprietary editors. You control the code.Flexible FrameworkUse our framework to set up a functioning, responsive, accessible dashboard in minutes with minimal effort. Check out our demos and set-up docs.Pre-built ComponentsHighcharts Dashboard includes pre-built charts, KPI and data grid components, all configurable via the same JavaScript options structure used by all Highcharts charting libraries.Built-in Data SynchronizationConnect data from multiple external sources and Highcharts Dashboards will store and distribute them in a data table. When the data changes, so do your components, keeping everything in sync, no extra work necessary.Out-of-the-box ResponsivenessHighcharts Dashboards uses a layout engine based on Flexbox, ensuring components and layouts adjust dynamically and reliably on all modern browsers when the dashboard container resizes.Highcharts Grid Pro for DashboardsHighcharts Grid Pro is a powerful, lightweight, fully customizable solution for managing and visualizing tabular data. 
 Whether used as part of Highcharts Dashboards or as a standalone component, it provides an intuitive and flexible approach to data presentation.To use Highcharts Grid Pro, a Highcharts Dashboards license is required. Learn more about its features in our docs.Introducing Highcharts Grid LiteThe perfect tool for creating responsive, interactive tables.
 It's fast, reliable and free. Learn more about Grid Lite. Why Highcharts Dashboards?Highcharts Dashboard will significantly enhance your dashboard development process, making it more efficient, secure and user-friendly.Completely CustomizableOur simple configuration options and variable-driven CSS make it easy to theme Highcharts Dashboards to fit your application and brand. No proprietary editors or ugly hacks. You control the code.Self-hosted and SecureUnlike low or no-code dashboards that host your data offsite, Highcharts Dashboards is a completely self-hosted solution that poses zero risk to the integrity and privacy of your data.Edit Mode for End-UsersIn Edit Mode, dashboard users can rearrange components via drag and drop, and intuitively adjust the dimensions of rows and components without needing a developer.Integrates with HighchartsHighcharts Dashboards integrates seamlessly with all Highcharts data visualization libraries. Utilize all Highcharts charting methods and tools inside your components to supercharge your dashboard.How Highcharts Dashboards Works:Get the LibrariesInstall Highcharts Dashboards via npm or use our CDN to access the code directly. Check out our download page for more details Highcharts Core Highcharts Dashboards Accessibility Module  Configure your Data Pool & ConnectorsThe data pool centralizes your data and data management, and data connectors manage data transactions, such as server polling and column order. Use our pre-defined Google Sheets, CSV, JSON and HTML Table connectors to connect your data, or define your own connectors. Define your Dashboard LayoutSpecify the size of individual cells in absolute values or percentages in your dashboard configuration, and our layout engine will place components where they need to be. Our configuration options make it easy to create and manage nested layouts as well.   Configure & Connect ComponentsConfigure our pre-defined components or build your own custom components and link them to your data connectors. Specify the behaviors you want to synchronize across components. Then connect your components to your layout. Launch your DashboardIntegrate your dashboard configuration with an existing application or a stand-alone web page. Once published, end users can change the size of rows and individual components with our user-friendly Edit Mode and rearrange components via intuitive drag and drop controls.  Try for Free Buy Now\n\nHighcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.Integrates with all Highcharts charting libraries and most major frameworks  Try for Free Buy Now Stop animation  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy Now  Highcharts® DashboardsDon’t start from scratch. With built-in data synchronization, ready-made components and completely customizable options, Highcharts Dashboards does all the heavy lifting out of the box, saving you valuable time on your dashboard projects.  Stop animation Try for Free Buy NowPopular Dashboards DemosDiscover all demos  Climate Dashboard  Basic Dashboard  Data Cursor Sync  Sync ExtremesMade by Developers for DevelopersDon’t waste time coding from scratch. Highcharts Dashboards is a development library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects. Our well-organized documentation keeps the learning curve short, and our simple configuration options and variable-driven CSS make it easy to customize and integrate Highcharts Dashboards into your existing applications. No proprietary editors. You control the code.Flexible FrameworkUse our framework to set up a functioning, responsive, accessible dashboard in minutes with minimal effort. Check out our demos and set-up docs.Pre-built ComponentsHighcharts Dashboard includes pre-built charts, KPI and data grid components, all configurable via the same JavaScript options structure used by all Highcharts charting libraries.Built-in Data SynchronizationConnect data from multiple external sources and Highcharts Dashboards will store and distribute them in a data table. When the data changes, so do your components, keeping everything in sync, no extra work necessary.Out-of-the-box ResponsivenessHighcharts Dashboards uses a layout engine based on Flexbox, ensuring components and layouts adjust dynamically and reliably on all modern browsers when the dashboard container resizes.Highcharts Grid Pro for DashboardsHighcharts Grid Pro is a powerful, lightweight, fully customizable solution for managing and visualizing tabular data. 
 Whether used as part of Highcharts Dashboards or as a standalone component, it provides an intuitive and flexible approach to data presentation.To use Highcharts Grid Pro, a Highcharts Dashboards license is required. Learn more about its features in our docs.Introducing Highcharts Grid LiteThe perfect tool for creating responsive, interactive tables.
 It's fast, reliable and free. Learn more about Grid Lite. Why Highcharts Dashboards?Highcharts Dashboard will significantly enhance your dashboard development process, making it more efficient, secure and user-friendly.Completely CustomizableOur simple configuration options and variable-driven CSS make it easy to theme Highcharts Dashboards to fit your application and brand. No proprietary editors or ugly hacks. You control the code.Self-hosted and SecureUnlike low or no-code dashboards that host your data offsite, Highcharts Dashboards is a completely self-hosted solution that poses zero risk to the integrity and privacy of your data.Edit Mode for End-UsersIn Edit Mode, dashboard users can rearrange components via drag and drop, and intuitively adjust the dimensions of rows and components without needing a developer.Integrates with HighchartsHighcharts Dashboards integrates seamlessly with all Highcharts data visualization libraries. Utilize all Highcharts charting methods and tools inside your components to supercharge your dashboard.How Highcharts Dashboards Works:Get the LibrariesInstall Highcharts Dashboards via npm or use our CDN to access the code directly. Check out our download page for more details Highcharts Core Highcharts Dashboards Accessibility Module  Configure your Data Pool & ConnectorsThe data pool centralizes your data and data management, and data connectors manage data transactions, such as server polling and column order. Use our pre-defined Google Sheets, CSV, JSON and HTML Table connectors to connect your data, or define your own connectors. Define your Dashboard LayoutSpecify the size of individual cells in absolute values or percentages in your dashboard configuration, and our layout engine will place components where they need to be. Our configuration options make it easy to create and manage nested layouts as well.   Configure & Connect ComponentsConfigure our pre-defined components or build your own custom components and link them to your data connectors. Specify the behaviors you want to synchronize across components. Then connect your components to your layout. Launch your DashboardIntegrate your dashboard configuration with an existing application or a stand-alone web page. Once published, end users can change the size of rows and individual components with our user-friendly Edit Mode and rearrange components via intuitive drag and drop controls.  Try for Free Buy Now\n\n\n\nHighcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.Works with most major frameworks  Download & Install Options  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data. Download & Install OptionsHelp shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy. Essential Tools for Tabular DataIntroducing Highcharts Grid Lite, the free version of Highcharts Grid. Designed to meet modern web standards, it’s perfect for creating responsive, interactive tables that elevate your data presentation. For even more power, check out the full version on our Dashboards product page. Standalone ImplementationImplement Highcharts Grid Lite as a standalone component or integrate it with your existing tech stack, leveraging its robust features to handle and display data effectively. Accessibility-first DesignHighcharts Grid Lite renders data to a standard HTML table that’s accessible to keyboard navigation and screen readers, and offers other WCAG-compliant features that ensure everyone can interact with your data. High Performance with Large DatasetsHighcharts Grid Lite uses row virtualization to render only the rows currently visible in the viewport, minimizing memory usage and ensuring smooth scrolling, even with thousands of records. Works with your Favorite FrameworksHighcharts DataGrid works with popular frameworks like React, Vue, and Angular and offers flexible integration options that adapt to your preferred development environment. Intuitive and Comprehensive APIWhether you’re populating data, configuring column behavior, or adding interactivity, our straightforward API helps you implement functionality quickly, saving you valuable development time. Customizable CSS ThemingHighcharts Grid Lite uses CSS variables, making it easy to create custom themes that match your application’s style. From fonts to cell colors, every visual aspect of the grid can be tailored to fit your needs.  Looking for more features?Go ProAs a core component of  Highcharts Dashboards, Highcharts Grid Pro comes with advanced features like cell editing, data synchronization and events. Read more on our Dashboards product page.Robustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.Works with most major frameworks  Download & Install Options  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data. Download & Install OptionsHelp shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy. Essential Tools for Tabular DataIntroducing Highcharts Grid Lite, the free version of Highcharts Grid. Designed to meet modern web standards, it’s perfect for creating responsive, interactive tables that elevate your data presentation. For even more power, check out the full version on our Dashboards product page. Standalone ImplementationImplement Highcharts Grid Lite as a standalone component or integrate it with your existing tech stack, leveraging its robust features to handle and display data effectively. Accessibility-first DesignHighcharts Grid Lite renders data to a standard HTML table that’s accessible to keyboard navigation and screen readers, and offers other WCAG-compliant features that ensure everyone can interact with your data. High Performance with Large DatasetsHighcharts Grid Lite uses row virtualization to render only the rows currently visible in the viewport, minimizing memory usage and ensuring smooth scrolling, even with thousands of records. Works with your Favorite FrameworksHighcharts DataGrid works with popular frameworks like React, Vue, and Angular and offers flexible integration options that adapt to your preferred development environment. Intuitive and Comprehensive APIWhether you’re populating data, configuring column behavior, or adding interactivity, our straightforward API helps you implement functionality quickly, saving you valuable development time. Customizable CSS ThemingHighcharts Grid Lite uses CSS variables, making it easy to create custom themes that match your application’s style. From fonts to cell colors, every visual aspect of the grid can be tailored to fit your needs.  Looking for more features?Go ProAs a core component of  Highcharts Dashboards, Highcharts Grid Pro comes with advanced features like cell editing, data synchronization and events. Read more on our Dashboards product page.Robustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.Works with most major frameworks  Download & Install Options  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data.  Highcharts® Grid LiteWith its modern design, customization options, framework compatibility and high performance capabilities, Highcharts Grid Lite is a versatile tool for displaying and managing tabular data. Download & Install OptionsHelp shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy. Essential Tools for Tabular DataIntroducing Highcharts Grid Lite, the free version of Highcharts Grid. Designed to meet modern web standards, it’s perfect for creating responsive, interactive tables that elevate your data presentation. For even more power, check out the full version on our Dashboards product page. Standalone ImplementationImplement Highcharts Grid Lite as a standalone component or integrate it with your existing tech stack, leveraging its robust features to handle and display data effectively. Accessibility-first DesignHighcharts Grid Lite renders data to a standard HTML table that’s accessible to keyboard navigation and screen readers, and offers other WCAG-compliant features that ensure everyone can interact with your data. High Performance with Large DatasetsHighcharts Grid Lite uses row virtualization to render only the rows currently visible in the viewport, minimizing memory usage and ensuring smooth scrolling, even with thousands of records. Works with your Favorite FrameworksHighcharts DataGrid works with popular frameworks like React, Vue, and Angular and offers flexible integration options that adapt to your preferred development environment. Intuitive and Comprehensive APIWhether you’re populating data, configuring column behavior, or adding interactivity, our straightforward API helps you implement functionality quickly, saving you valuable development time. Customizable CSS ThemingHighcharts Grid Lite uses CSS variables, making it easy to create custom themes that match your application’s style. From fonts to cell colors, every visual aspect of the grid can be tailored to fit your needs.  Looking for more features?Go ProAs a core component of  Highcharts Dashboards, Highcharts Grid Pro comes with advanced features like cell editing, data synchronization and events. Read more on our Dashboards product page.Robustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nCreate real charts with simple prompts.Easily transform copied data from spreadsheet applications, refine outputs with follow-up prompts, and create charts in any language.While the tool is free for crafting and design, a Highcharts commercial license is required for publishing.Explore our Documentation and Demo pages to experience the full potential of Highcharts. Try the beta for our new GPT-powered Highcharts Editor and our new Dashboards tool.Interested in API access?We have a limited amount of slots available! Fill out this contact form. We will contact you.ShortcutsProductsTry before you buyDemosGet a licenseAPI ReferenceJoin the TeamDocumentationOur Story© 2025 Highcharts. All Rights Reserved.Highcharts GPTCreate a donut chart of the world's top 5 car manufacturers, use dark modeCreate a chart with this data from Excel: Debit Credit 19/2 234 23 20/2 23 134 21/2 2 45Show me how to load data dynamicallyCreate a pie, line and column chartShow me how to dynamically add points to a seriesCreate a stock chart that compares 3 series over 10 yearsZeichnen Sie eine Sinuswelleデータモジュールを使用して外部データをロードする方法は何ですか？创建美国的等值线地图Do you offer consulting?Whats so great about Advantage+?Tell me more about accessibilitySend messageAI-generated charts may contain inaccuracies or copyright issues. Avoid personal data and ensure compliance with applicable laws, including the EU AI Act.\n\n\n\nAdditional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI. Try Now Get the Code Stop animation Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the Code Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the CodeHighcharts Editor FeaturesFull-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Open Source The editor is licensed under the MIT license, so you’re free to make any changes to it. Note that a Highcharts.js license is required, as the editor depends on Highcharts.js to function.Embeddable The editor ships with integrations for TinyMCE, CKEditor, and Wordpress - all ready to drop into your project.Extensible It's easy to tailor the editor to fit your needs. A powerful plugin-system allows for the creation of custom import/export plugins and most of the features can be enabled/disabled as required.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI. Try Now Get the Code Stop animation Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the Code Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the CodeHighcharts Editor FeaturesFull-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Open Source The editor is licensed under the MIT license, so you’re free to make any changes to it. Note that a Highcharts.js license is required, as the editor depends on Highcharts.js to function.Embeddable The editor ships with integrations for TinyMCE, CKEditor, and Wordpress - all ready to drop into your project.Extensible It's easy to tailor the editor to fit your needs. A powerful plugin-system allows for the creation of custom import/export plugins and most of the features can be enabled/disabled as required.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nAdditional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI. Try Now Get the Code Stop animation Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the Code Additional product Highcharts® EditorThe Highcharts Editor is a JavaScript/CSS library for Highcharts 5 or newer releases. Using Highcharts' rock-solid charting engine, the Editor enables less techy developers to create interactive charts. The user can seamlessly walk through the chart creation process, from start to finish, due to the Editor's easy-to-use wizard-style UI.  Stop animation Try Now Get the CodeHighcharts Editor FeaturesFull-Blown Editor for Non-Techies Walk through the chart creation process, from start to finish, using the Editor's easy-to-use wizard-style UI.Open Source The editor is licensed under the MIT license, so you’re free to make any changes to it. Note that a Highcharts.js license is required, as the editor depends on Highcharts.js to function.Embeddable The editor ships with integrations for TinyMCE, CKEditor, and Wordpress - all ready to drop into your project.Extensible It's easy to tailor the editor to fit your needs. A powerful plugin-system allows for the creation of custom import/export plugins and most of the features can be enabled/disabled as required.Main Highcharts Features   Works with your stack All our charting libraries work with any back-end database 
or server stack. Provide data in any form, including CSV, JSON, or load and update it live. Integration with 
popular languages, such as .Net, PHP, Python, R, and Java, as well as iOS, and Android, 
and frameworks like Svelte, Angular, Vue and React, are 
available from Highcharts or our community.  TypeScript Thanks to the native integration of TypeScript declarations, the Highcharts NPM package allows type checking for most options and functions, 
including auto-complete code with integrated documentation for TypeScript-capable 
editors like Visual Studio Code.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced cool use cases in our community section, and plugins in our extensions directory.  Responsive Intelligent responsiveness not only adjusts the chart to the dimensions of its container but also automatically 
places non-graph elements such as labels, legends, and headings in the most optimal 
location.  Multi-Touch Gesture Support Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag for data 
inspection, multi-touch for zooming, and more.  Annotations Draw simple shapes and text anywhere on the canvas 
to describe charts or tether them to specific data points. The annotation module 
also includes an API to configure toolbars and dialogues for end-users to place 
their annotations on a chart. Placement and visibility of annotations 
intelligently respond to canvas/screen size at run-time.  Accessibility & Sonification Highcharts offers an accessible interactive chart solution to 
empower people with disabilities. Each Highcharts license includes our 
Accessibility module and a flexible sonification API. 
The Accessibility module allows you to create charts as accessible as possible, 
whereas the sonification API helps you support multiple ways to bring data to 
life with sound. Visit our Accessibility Portal for more information.  Data Processing in the Browser With Highcharts, source data can be post-processed in the 
client to improve the user experience. An excellent data processing feature is 
the ability to sort data, 
regardless of whether the data source is sorted.  Big-Data Ready When you need to render thousands or millions of data 
points in the browser, our WebGL-powered boost module delivers incredible speed.  Export & Print With the export module enabled, your users can export the chart to PNG, JPG, PDF or SVG format at the 
click of a button, or print the chart directly from the web page.  Debugger The Highcharts Debugger will help you speed up development by providing instantaneous warnings and error 
reports above your charts. The error messages provide clear instructions on how 
to resolve your issue.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nSupport Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free. Contact Us Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animationHighcharts Support Plans & ServicesExplore our support plans and services, and discover the perfect fit for your Highcharts projects.  support  FreeCommunity SupportReceive help from our developer community. We also monitor
 questions
 and answer them daily on business days. Use our chatbot Highcharts GPT to ask questions in your own language Ask general questions about Highcharts products on our Highcharts Forums Search for specific programming solutions on Stack Overflow  support  AdvantageWe answer your questions.All new licenses come with a free year of Advantage with access to
 new releases, hot-fixes, chat support
 and more.  10 hour support per seat  36 hours Guaranteed initial response time  Everything in Free and...  All new releases  Access to 2nd line support by product developers  Chat support  Emergency hot-fixes Contact us for Advantage  support  NEW  Advantage+We guide you as you build.All the benefits of Advantage with double the developer hours,
 faster
 response times, and a dedicated
 support engineer.  20 hour support per seat  17 hours Guaranteed initial response time  Everything in Advantage and...  Dedicated Support Engineer  Implementation guidance and advice  Video calls Contact us for Advantage+  Service  NEW  Custom ProjectsWe build for you.Our experts will design, scope and implement your unique Highcharts
 use case and get it up and running in
 no time.  Years of dataviz expertise across a wide range of industries, frameworks and platforms.  Optimized and maintainable dataviz solutions tailored to your unique use case and tech stack  Best-in-class Accessibility and UX design  Stress-free implementation and troubleshooting to help keep your project on track Start a Custom ProjectFrequently Asked Questions   What kind of support is included in a license?  We have you covered. All new Perpetual licenses include a full year of Highcharts 
Advantage at no extra cost. Highcharts Advantage is included in the Annual license fee.
See our support page for a detailed overview of support features.  What are the features of Highcharts Advantage?  Highcharts Advantage gives you access to all new software Releases (minor 
and major) and our extended support offerings for the duration of your term.  I have an older license. Can I purchase a Highcharts Advantage Renewal?  Yes, if you have an older license and want to renew your support or access new 
versions, you can purchase a Highcharts Advantage Renewal for your existing license. When 
purchasing a Highcharts Advantage Renewal, you accept our current terms and conditions and will be 
transferred to our current license model. For customers who have custom terms with Highsoft, those 
terms will govern your renewal.
Have questions? Please refer to your License ID and contact us.  Where can I find my Highcharts Advantage ID?  Your Highcharts Advantage ID can be found on your License Statement. The 
License Statement is issued upon completion of the purchase. The Advantage ID is used to identify 
your license and support level upon contacting our Support Team.  What’s the difference between Advantage and Advantage+? We created Advantage+ to give you the personalized and dedicated support 
you need to get your Highcharts implementation up and running quickly. As such, the main differences 
between Advantage and Advantage+ are the type and amount of support you will receive.With an Advantage+ subscription, you will get:Double the developer hours (20 hours per seat  vs. 10 hours with Advantage)Faster guaranteed response times (17 hours vs. 36 hours with Advantage)A dedicated support engineer skilled in your tech stack and use case (vs. the general 
implementation guidance included with Advantage)Advantage+ also includes access to all new releases, hot fixes and chat support.  How do I subscribe to Advantage+?  Contact our sales team, and 
they will help you subscribe.  Is the first year of Advantage+ free?  No, only Advantage is free for the first year.  How will my dedicated support engineer be assigned?  After you've secured your Advantage+ subscription, our support team will handpick a 
dedicated support engineer with skills specialized to your chosen products.  I’m already subscribed to Advantage. How do I upgrade to Advantage+?  Contact our sales team, and they will 
help you upgrade your plan.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nSupport Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free. Contact Us Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animationHighcharts Support Plans & ServicesExplore our support plans and services, and discover the perfect fit for your Highcharts projects.  support  FreeCommunity SupportReceive help from our developer community. We also monitor
 questions
 and answer them daily on business days. Use our chatbot Highcharts GPT to ask questions in your own language Ask general questions about Highcharts products on our Highcharts Forums Search for specific programming solutions on Stack Overflow  support  AdvantageWe answer your questions.All new licenses come with a free year of Advantage with access to
 new releases, hot-fixes, chat support
 and more.  10 hour support per seat  36 hours Guaranteed initial response time  Everything in Free and...  All new releases  Access to 2nd line support by product developers  Chat support  Emergency hot-fixes Contact us for Advantage  support  NEW  Advantage+We guide you as you build.All the benefits of Advantage with double the developer hours,
 faster
 response times, and a dedicated
 support engineer.  20 hour support per seat  17 hours Guaranteed initial response time  Everything in Advantage and...  Dedicated Support Engineer  Implementation guidance and advice  Video calls Contact us for Advantage+  Service  NEW  Custom ProjectsWe build for you.Our experts will design, scope and implement your unique Highcharts
 use case and get it up and running in
 no time.  Years of dataviz expertise across a wide range of industries, frameworks and platforms.  Optimized and maintainable dataviz solutions tailored to your unique use case and tech stack  Best-in-class Accessibility and UX design  Stress-free implementation and troubleshooting to help keep your project on track Start a Custom ProjectFrequently Asked Questions   What kind of support is included in a license?  We have you covered. All new Perpetual licenses include a full year of Highcharts 
Advantage at no extra cost. Highcharts Advantage is included in the Annual license fee.
See our support page for a detailed overview of support features.  What are the features of Highcharts Advantage?  Highcharts Advantage gives you access to all new software Releases (minor 
and major) and our extended support offerings for the duration of your term.  I have an older license. Can I purchase a Highcharts Advantage Renewal?  Yes, if you have an older license and want to renew your support or access new 
versions, you can purchase a Highcharts Advantage Renewal for your existing license. When 
purchasing a Highcharts Advantage Renewal, you accept our current terms and conditions and will be 
transferred to our current license model. For customers who have custom terms with Highsoft, those 
terms will govern your renewal.
Have questions? Please refer to your License ID and contact us.  Where can I find my Highcharts Advantage ID?  Your Highcharts Advantage ID can be found on your License Statement. The 
License Statement is issued upon completion of the purchase. The Advantage ID is used to identify 
your license and support level upon contacting our Support Team.  What’s the difference between Advantage and Advantage+? We created Advantage+ to give you the personalized and dedicated support 
you need to get your Highcharts implementation up and running quickly. As such, the main differences 
between Advantage and Advantage+ are the type and amount of support you will receive.With an Advantage+ subscription, you will get:Double the developer hours (20 hours per seat  vs. 10 hours with Advantage)Faster guaranteed response times (17 hours vs. 36 hours with Advantage)A dedicated support engineer skilled in your tech stack and use case (vs. the general 
implementation guidance included with Advantage)Advantage+ also includes access to all new releases, hot fixes and chat support.  How do I subscribe to Advantage+?  Contact our sales team, and 
they will help you subscribe.  Is the first year of Advantage+ free?  No, only Advantage is free for the first year.  How will my dedicated support engineer be assigned?  After you've secured your Advantage+ subscription, our support team will handpick a 
dedicated support engineer with skills specialized to your chosen products.  I’m already subscribed to Advantage. How do I upgrade to Advantage+?  Contact our sales team, and they will 
help you upgrade your plan.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nSupport Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free. Contact Us Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animation Support Highcharts® Premium SupportWhether you’re a big company or a one-person shop, Highcharts premium support plans and services give you access to the resources and expertise you need to make your Highcharts implementation  fast and frustration free.  Stop animationHighcharts Support Plans & ServicesExplore our support plans and services, and discover the perfect fit for your Highcharts projects.  support  FreeCommunity SupportReceive help from our developer community. We also monitor
 questions
 and answer them daily on business days. Use our chatbot Highcharts GPT to ask questions in your own language Ask general questions about Highcharts products on our Highcharts Forums Search for specific programming solutions on Stack Overflow  support  AdvantageWe answer your questions.All new licenses come with a free year of Advantage with access to
 new releases, hot-fixes, chat support
 and more.  10 hour support per seat  36 hours Guaranteed initial response time  Everything in Free and...  All new releases  Access to 2nd line support by product developers  Chat support  Emergency hot-fixes Contact us for Advantage  support  NEW  Advantage+We guide you as you build.All the benefits of Advantage with double the developer hours,
 faster
 response times, and a dedicated
 support engineer.  20 hour support per seat  17 hours Guaranteed initial response time  Everything in Advantage and...  Dedicated Support Engineer  Implementation guidance and advice  Video calls Contact us for Advantage+  Service  NEW  Custom ProjectsWe build for you.Our experts will design, scope and implement your unique Highcharts
 use case and get it up and running in
 no time.  Years of dataviz expertise across a wide range of industries, frameworks and platforms.  Optimized and maintainable dataviz solutions tailored to your unique use case and tech stack  Best-in-class Accessibility and UX design  Stress-free implementation and troubleshooting to help keep your project on track Start a Custom ProjectFrequently Asked Questions   What kind of support is included in a license?  We have you covered. All new Perpetual licenses include a full year of Highcharts 
Advantage at no extra cost. Highcharts Advantage is included in the Annual license fee.
See our support page for a detailed overview of support features.  What are the features of Highcharts Advantage?  Highcharts Advantage gives you access to all new software Releases (minor 
and major) and our extended support offerings for the duration of your term.  I have an older license. Can I purchase a Highcharts Advantage Renewal?  Yes, if you have an older license and want to renew your support or access new 
versions, you can purchase a Highcharts Advantage Renewal for your existing license. When 
purchasing a Highcharts Advantage Renewal, you accept our current terms and conditions and will be 
transferred to our current license model. For customers who have custom terms with Highsoft, those 
terms will govern your renewal.
Have questions? Please refer to your License ID and contact us.  Where can I find my Highcharts Advantage ID?  Your Highcharts Advantage ID can be found on your License Statement. The 
License Statement is issued upon completion of the purchase. The Advantage ID is used to identify 
your license and support level upon contacting our Support Team.  What’s the difference between Advantage and Advantage+? We created Advantage+ to give you the personalized and dedicated support 
you need to get your Highcharts implementation up and running quickly. As such, the main differences 
between Advantage and Advantage+ are the type and amount of support you will receive.With an Advantage+ subscription, you will get:Double the developer hours (20 hours per seat  vs. 10 hours with Advantage)Faster guaranteed response times (17 hours vs. 36 hours with Advantage)A dedicated support engineer skilled in your tech stack and use case (vs. the general 
implementation guidance included with Advantage)Advantage+ also includes access to all new releases, hot fixes and chat support.  How do I subscribe to Advantage+?  Contact our sales team, and 
they will help you subscribe.  Is the first year of Advantage+ free?  No, only Advantage is free for the first year.  How will my dedicated support engineer be assigned?  After you've secured your Advantage+ subscription, our support team will handpick a 
dedicated support engineer with skills specialized to your chosen products.  I’m already subscribed to Advantage. How do I upgrade to Advantage+?  Contact our sales team, and they will 
help you upgrade your plan.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.  Additional product Highcharts EditorEnable less techy developers to create interactive charts on web and mobile
 platforms.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nCustom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact UsWe do viz so you can do bizMake the most of your data with Highcharts Custom Projects, our expert consulting services. From initial design to final implementation, our team will work with you every step of the way to ensure your custom data visualization solution is effective, easy to maintain, and beautifully integrated with your business. Expert help from start to finishOur dataviz experts have years of experience implementing custom solutions across a wide range of professional industries. They will become a trusted part of your team as they design, scope and implement your unique Highcharts use case, enabling you to stay focused on the bigger picture of running your business. Optimized, maintainable codeNo black boxes here. Our goal is to empower you with top-notch code that is well-documented and easy to understand. We will also ensure a smooth handover with a minimal learning curve, so you can maintain your solution with confidence. A meticulous eye for designData doesn’t have to be dull. Fueled by our passion for great user experiences, we will ensure your data not only tells a compelling story but also looks visually stunning. And as industry leaders in accessible data visualizations, we guarantee your solution will be user-friendly for everyone. Stress-free implementationIt’s all about you. We're all in on every step of your Highcharts journey. And our extensive experience with a wide range of speciality and edge cases means you’ll spend less time troubleshooting and more time growing your business.Contact our team for more infoCustom Data Visualization ProjectsFrom design to development to data management, our services tackle a wide range of data visualization challenges. No use case is too unique. Bespoke FunctionalityNeed custom functionality that generic out-of-the-box solutions just don’t offer? Our experts specialize in crafting custom features that fit your exact requirements so your dataviz solution does exactly what you need it to do. Proof of Concept DevelopmentNot sure if the Highcharts library can meet all your project needs? Our experts will analyze your requirements and build a working proof of concept to help you see firsthand if Highcharts is the right fit for your project. End-to-End ImplementationDon’t have an in-house dev team to implement your dataviz vision? No problem. Our team will handle everything from design to deployment without the need for internal technical resources. Custom UX/UI DesignLooking for a data visualization solution that can adapt to your brand’s unique design requirements? Our team excels at designing sophisticated, modern data visualizations that will compliment your style, not cramp it. Custom Data VisualizationsHave a need for non-standard charts, graphs, or maps? We specialize in creating original, business-specific data visualizations that fulfill unique use cases. Data Integration and ManagementLooking to create a low or no-code dataviz solution for your entire team or company? We will help you manage and connect your data to your app or website to ensure a smooth workflow that lets team members focus on insights, not infrastructure.Contact our team for more infoFrequently Asked Questions   How much does a custom project cost?  The cost of a custom project varies based on factors like project complexity, specific technical requirements, and the tools and approaches necessary to bring your vision to life.  What is the typical timeframe for a custom project?  The timeframe for completing a custom project depends on your project scope, technology stack, workflow complexity and more. The best way to get a ballpark timeframe for your custom project is to talk to our implementation team about your specific requirements and needs.
If you decide to move forward with Custom Projects, your Custom Projects project manager will work with our dev team to scope and create a detailed project timeline.  What are the project stages included in a custom project?  While the specific steps of a custom project vary depending on your requirements, our approach often includes some or all of the following phases:Discovery: We start by understanding your goals, needs, and tech stack to determine the best solution.Scoping and Timeline: We outline the project’s scope and establish a timeline that fits your schedule.Data Analysis & Preparation: Our team analyzes and, if necessary, prepares your data to ensure it’s ready for your dataviz solution.UI/UX design: We design an intuitive and accessible user experience that’s aligned with your brand.Development & Integration: Our developers build and integrate the solution into your project or app.Quality Assurance: We rigorously test the solution to guarantee it meets our high standards.Deployment & Maintenance: We deploy the solution and provide ongoing support and maintenance.  How do I get started with Custom Projects?  Getting started with Custom Projects is easy. Even if you’re not entirely sure what you need, our knowledgeable sales team is here to help. Contact us today to discuss your data visualization needs and learn how our Custom Projects services can help you achieve your goals.\n\nCustom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact UsWe do viz so you can do bizMake the most of your data with Highcharts Custom Projects, our expert consulting services. From initial design to final implementation, our team will work with you every step of the way to ensure your custom data visualization solution is effective, easy to maintain, and beautifully integrated with your business. Expert help from start to finishOur dataviz experts have years of experience implementing custom solutions across a wide range of professional industries. They will become a trusted part of your team as they design, scope and implement your unique Highcharts use case, enabling you to stay focused on the bigger picture of running your business. Optimized, maintainable codeNo black boxes here. Our goal is to empower you with top-notch code that is well-documented and easy to understand. We will also ensure a smooth handover with a minimal learning curve, so you can maintain your solution with confidence. A meticulous eye for designData doesn’t have to be dull. Fueled by our passion for great user experiences, we will ensure your data not only tells a compelling story but also looks visually stunning. And as industry leaders in accessible data visualizations, we guarantee your solution will be user-friendly for everyone. Stress-free implementationIt’s all about you. We're all in on every step of your Highcharts journey. And our extensive experience with a wide range of speciality and edge cases means you’ll spend less time troubleshooting and more time growing your business.Contact our team for more infoCustom Data Visualization ProjectsFrom design to development to data management, our services tackle a wide range of data visualization challenges. No use case is too unique. Bespoke FunctionalityNeed custom functionality that generic out-of-the-box solutions just don’t offer? Our experts specialize in crafting custom features that fit your exact requirements so your dataviz solution does exactly what you need it to do. Proof of Concept DevelopmentNot sure if the Highcharts library can meet all your project needs? Our experts will analyze your requirements and build a working proof of concept to help you see firsthand if Highcharts is the right fit for your project. End-to-End ImplementationDon’t have an in-house dev team to implement your dataviz vision? No problem. Our team will handle everything from design to deployment without the need for internal technical resources. Custom UX/UI DesignLooking for a data visualization solution that can adapt to your brand’s unique design requirements? Our team excels at designing sophisticated, modern data visualizations that will compliment your style, not cramp it. Custom Data VisualizationsHave a need for non-standard charts, graphs, or maps? We specialize in creating original, business-specific data visualizations that fulfill unique use cases. Data Integration and ManagementLooking to create a low or no-code dataviz solution for your entire team or company? We will help you manage and connect your data to your app or website to ensure a smooth workflow that lets team members focus on insights, not infrastructure.Contact our team for more infoFrequently Asked Questions   How much does a custom project cost?  The cost of a custom project varies based on factors like project complexity, specific technical requirements, and the tools and approaches necessary to bring your vision to life.  What is the typical timeframe for a custom project?  The timeframe for completing a custom project depends on your project scope, technology stack, workflow complexity and more. The best way to get a ballpark timeframe for your custom project is to talk to our implementation team about your specific requirements and needs.
If you decide to move forward with Custom Projects, your Custom Projects project manager will work with our dev team to scope and create a detailed project timeline.  What are the project stages included in a custom project?  While the specific steps of a custom project vary depending on your requirements, our approach often includes some or all of the following phases:Discovery: We start by understanding your goals, needs, and tech stack to determine the best solution.Scoping and Timeline: We outline the project’s scope and establish a timeline that fits your schedule.Data Analysis & Preparation: Our team analyzes and, if necessary, prepares your data to ensure it’s ready for your dataviz solution.UI/UX design: We design an intuitive and accessible user experience that’s aligned with your brand.Development & Integration: Our developers build and integrate the solution into your project or app.Quality Assurance: We rigorously test the solution to guarantee it meets our high standards.Deployment & Maintenance: We deploy the solution and provide ongoing support and maintenance.  How do I get started with Custom Projects?  Getting started with Custom Projects is easy. Even if you’re not entirely sure what you need, our knowledgeable sales team is here to help. Contact us today to discuss your data visualization needs and learn how our Custom Projects services can help you achieve your goals.\n\nCustom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact Us  Custom ProjectsNeed a customized dataviz solution?  Our experts will design, scope and implement your unique Highcharts use case and get it up and running in no time. Contact UsWe do viz so you can do bizMake the most of your data with Highcharts Custom Projects, our expert consulting services. From initial design to final implementation, our team will work with you every step of the way to ensure your custom data visualization solution is effective, easy to maintain, and beautifully integrated with your business. Expert help from start to finishOur dataviz experts have years of experience implementing custom solutions across a wide range of professional industries. They will become a trusted part of your team as they design, scope and implement your unique Highcharts use case, enabling you to stay focused on the bigger picture of running your business. Optimized, maintainable codeNo black boxes here. Our goal is to empower you with top-notch code that is well-documented and easy to understand. We will also ensure a smooth handover with a minimal learning curve, so you can maintain your solution with confidence. A meticulous eye for designData doesn’t have to be dull. Fueled by our passion for great user experiences, we will ensure your data not only tells a compelling story but also looks visually stunning. And as industry leaders in accessible data visualizations, we guarantee your solution will be user-friendly for everyone. Stress-free implementationIt’s all about you. We're all in on every step of your Highcharts journey. And our extensive experience with a wide range of speciality and edge cases means you’ll spend less time troubleshooting and more time growing your business.Contact our team for more infoCustom Data Visualization ProjectsFrom design to development to data management, our services tackle a wide range of data visualization challenges. No use case is too unique. Bespoke FunctionalityNeed custom functionality that generic out-of-the-box solutions just don’t offer? Our experts specialize in crafting custom features that fit your exact requirements so your dataviz solution does exactly what you need it to do. Proof of Concept DevelopmentNot sure if the Highcharts library can meet all your project needs? Our experts will analyze your requirements and build a working proof of concept to help you see firsthand if Highcharts is the right fit for your project. End-to-End ImplementationDon’t have an in-house dev team to implement your dataviz vision? No problem. Our team will handle everything from design to deployment without the need for internal technical resources. Custom UX/UI DesignLooking for a data visualization solution that can adapt to your brand’s unique design requirements? Our team excels at designing sophisticated, modern data visualizations that will compliment your style, not cramp it. Custom Data VisualizationsHave a need for non-standard charts, graphs, or maps? We specialize in creating original, business-specific data visualizations that fulfill unique use cases. Data Integration and ManagementLooking to create a low or no-code dataviz solution for your entire team or company? We will help you manage and connect your data to your app or website to ensure a smooth workflow that lets team members focus on insights, not infrastructure.Contact our team for more infoFrequently Asked Questions   How much does a custom project cost?  The cost of a custom project varies based on factors like project complexity, specific technical requirements, and the tools and approaches necessary to bring your vision to life.  What is the typical timeframe for a custom project?  The timeframe for completing a custom project depends on your project scope, technology stack, workflow complexity and more. The best way to get a ballpark timeframe for your custom project is to talk to our implementation team about your specific requirements and needs.
If you decide to move forward with Custom Projects, your Custom Projects project manager will work with our dev team to scope and create a detailed project timeline.  What are the project stages included in a custom project?  While the specific steps of a custom project vary depending on your requirements, our approach often includes some or all of the following phases:Discovery: We start by understanding your goals, needs, and tech stack to determine the best solution.Scoping and Timeline: We outline the project’s scope and establish a timeline that fits your schedule.Data Analysis & Preparation: Our team analyzes and, if necessary, prepares your data to ensure it’s ready for your dataviz solution.UI/UX design: We design an intuitive and accessible user experience that’s aligned with your brand.Development & Integration: Our developers build and integrate the solution into your project or app.Quality Assurance: We rigorously test the solution to guarantee it meets our high standards.Deployment & Maintenance: We deploy the solution and provide ongoing support and maintenance.  How do I get started with Custom Projects?  Getting started with Custom Projects is easy. Even if you’re not entirely sure what you need, our knowledgeable sales team is here to help. Contact us today to discuss your data visualization needs and learn how our Custom Projects services can help you achieve your goals.\n\n\n\nOfficial Highcharts® Integrations At Highcharts, we believe that good software tools make developers’
 lives easier. We’ve found reasons to fall in love with virtually
 every framework out there! That’s why we’ve developed official Highcharts integrations for
 frontend frameworks including Angular, React, Vue and more. Or
 incorporate Highcharts as a native component in your mobile or
 server-side projects with our integrations for iOS, Android, PHP,
 .NET and more. Our official integrations come with the quality and support that
 makes Highcharts a favorite in the developer community. Don’t
 reinvent the wheel. Use these integrations in your next project. Official Highcharts Integrations Angular  JavaScript  Flutter  BETA   NodeJS  Python  React  Svelte  TypeScript  Vue Feature Support Table The table below shows the Highcharts libraries and features supported by
 each of our official integrations.Highcharts JSHighcharts MapsHighcharts StockHighcharts GanttA11YBoostOffline ExportingData ExportDraggable PointsReact JSyesyesyesyesyesyesyesyesyesVueyesyesyesyesyesyesyesyesyesAngularyesyesyesyesyesyesyesyesyesSvelteyesyesyesyesyesyesyesyesyesFlutteryesyesyesyesyesyesyesyesyes Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nOfficial Highcharts® Integrations At Highcharts, we believe that good software tools make developers’
 lives easier. We’ve found reasons to fall in love with virtually
 every framework out there! That’s why we’ve developed official Highcharts integrations for
 frontend frameworks including Angular, React, Vue and more. Or
 incorporate Highcharts as a native component in your mobile or
 server-side projects with our integrations for iOS, Android, PHP,
 .NET and more. Our official integrations come with the quality and support that
 makes Highcharts a favorite in the developer community. Don’t
 reinvent the wheel. Use these integrations in your next project. Official Highcharts Integrations Angular  JavaScript  Flutter  BETA   NodeJS  Python  React  Svelte  TypeScript  Vue Feature Support Table The table below shows the Highcharts libraries and features supported by
 each of our official integrations.Highcharts JSHighcharts MapsHighcharts StockHighcharts GanttA11YBoostOffline ExportingData ExportDraggable PointsReact JSyesyesyesyesyesyesyesyesyesVueyesyesyesyesyesyesyesyesyesAngularyesyesyesyesyesyesyesyesyesSvelteyesyesyesyesyesyesyesyesyesFlutteryesyesyesyesyesyesyesyesyes Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nOfficial Highcharts® Integrations At Highcharts, we believe that good software tools make developers’
 lives easier. We’ve found reasons to fall in love with virtually
 every framework out there! That’s why we’ve developed official Highcharts integrations for
 frontend frameworks including Angular, React, Vue and more. Or
 incorporate Highcharts as a native component in your mobile or
 server-side projects with our integrations for iOS, Android, PHP,
 .NET and more. Our official integrations come with the quality and support that
 makes Highcharts a favorite in the developer community. Don’t
 reinvent the wheel. Use these integrations in your next project. Official Highcharts Integrations Angular  JavaScript  Flutter  BETA   NodeJS  Python  React  Svelte  TypeScript  Vue Feature Support Table The table below shows the Highcharts libraries and features supported by
 each of our official integrations.Highcharts JSHighcharts MapsHighcharts StockHighcharts GanttA11YBoostOffline ExportingData ExportDraggable PointsReact JSyesyesyesyesyesyesyesyesyesVueyesyesyesyesyesyesyesyesyesAngularyesyesyesyesyesyesyesyesyesSvelteyesyesyesyesyesyesyesyesyesFlutteryesyesyesyesyesyesyesyesyes Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPM Highcharts® for AngularIncorporate Highcharts data visualizations in your Angular projects with HighCharts Angular. Highcharts Angular on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.devKey FeaturesDevelop in Dart With Highcharts for Flutter, you can define and customize your Highcharts configurations directly in Dart without needing to switch to JavaScript. And since Dart is type-safe, it catches potential errors early, helping you work faster and write code that’s more reliable and easier to maintain.Charts that work across platforms Just like Flutter, Highcharts for Flutter is designed for cross-platform development. Whether it’s web, iOS or Android, your charts will render consistently across browsers and smartphones without extra configuration. Support for all chart types–basic to advanced Whether you need a simple bar chart or a sophisticated stock chart with interactive zooming, Highcharts for Flutter supports a full range of chart types. You can start with the basics and scale up to more advanced visualizations as your needs change.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.devKey FeaturesDevelop in Dart With Highcharts for Flutter, you can define and customize your Highcharts configurations directly in Dart without needing to switch to JavaScript. And since Dart is type-safe, it catches potential errors early, helping you work faster and write code that’s more reliable and easier to maintain.Charts that work across platforms Just like Flutter, Highcharts for Flutter is designed for cross-platform development. Whether it’s web, iOS or Android, your charts will render consistently across browsers and smartphones without extra configuration. Support for all chart types–basic to advanced Whether you need a simple bar chart or a sophisticated stock chart with interactive zooming, Highcharts for Flutter supports a full range of chart types. You can start with the basics and scale up to more advanced visualizations as your needs change.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.dev Highcharts® for Flutter (Beta)Add interactive charts to your Flutter applications without workarounds or third-party wrappers. Highcharts for Flutter on pub.devKey FeaturesDevelop in Dart With Highcharts for Flutter, you can define and customize your Highcharts configurations directly in Dart without needing to switch to JavaScript. And since Dart is type-safe, it catches potential errors early, helping you work faster and write code that’s more reliable and easier to maintain.Charts that work across platforms Just like Flutter, Highcharts for Flutter is designed for cross-platform development. Whether it’s web, iOS or Android, your charts will render consistently across browsers and smartphones without extra configuration. Support for all chart types–basic to advanced Whether you need a simple bar chart or a sophisticated stock chart with interactive zooming, Highcharts for Flutter supports a full range of chart types. You can start with the basics and scale up to more advanced visualizations as your needs change.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download Highcharts Highcharts® JavascriptAll Highcharts libraries are pure JavaScript, solely based on native browser technologies. All core functionality runs in the browser.Our product packages are also available as ES6-compatible modules, and all our charting libraries work with any back-end database or server stack. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on Github Highcharts® for NodeJSConvert charts to PNG, JPEG, SVG and PDF files with Highcharts NodeJS. Highcharts NodeJS can be used either as a CLI (Command Line Interface), as an HTTP server, or as a node.js module. Highcharts NodeJS on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.Key FeaturesComprehensive Highcharts Support Highcharts for Python, provides the full set of rich options, customizations, and interactivity provided by the Highcharts JavaScript libraries. Eliminating the need for “piecing together” partial solutions from unmaintained community libraries. Using a simple Pythonic API, the toolkit makes tapping into Highcharts features fast and simple - “batteries included” with full support for rich callback and formatter functions, SVG extensions, and more.Simple and Powerful Pythonic API Highcharts for Python does the heavy lifting of providing a truly Pythonic API. No need to rely on “hacky” solutions involving gigantic Python dict's, JSON files that only support part of the Highcharts JavaScript capabilities, or switching back and forth between Pythonic snake_case and JavaScript camelCase.Simple UI Integration Highcharts for Python is designed to simplify the integration of your (often back-end) Python code with your UI code. With one method call, you can generate the full set of JavaScript code that should be rendered by your UI to display the fully-configured data visualizations your applications need.Easy and Consistent Chart Downloads Download static versions of your data visualizations using all of their Highcharts formatting and configuration with just one method call. Easily export your charts to PNG, JPG, PDF, SVG, and more.Native Integration with the Python Ecosystem Using Highcharts for Python, you can easily integrate rich Highcharts visualizations into your Python stack taking advantage of native integrations with:Jupyter Labs/Jupyter NotebooksPandasPySparkGeoPandasand moreUsing the Python toolkit, you can easily leverage Highcharts in your exploratory data analysis (EDA) workflows, and use popular components of the modern data stack such as Databricks.Main Features   Work Where Your Data Lives Easily configure highly interactive rich data visualizations in your Python code – where you manage the data, anyway – and deliver those visualizations to your rendering layer with one method call. No need to maintain complicated custom serialization logic, or split your visualization configurations across multiple applications. Keep it simple by managing your visualization where you manage your data.  Works With Your Stack Highcharts for Python integrates with the most popular components of the Python data science ecosystem. Every Highcharts visualization can be constructed from a Pandas or PySpark DataFrame with one method call, and then rendered in Jupyter Labs/Notebooks using another method call.  Highcharts without the JavaScript Highcharts is a well-known JavaScript visualization library, but not everyone on your team works in JavaScript. Highcharts for Python translates the full set of JavaScript capabilities into a Pythonic form, using Python snake_case naming conventions, Python import conventions, standard class names, method patterns, etc. Don’t worry about learning JavaScript – Highcharts for Python lets you build the same powerful visualizations while working in Python.  Highly Configurable Using the Highcharts for Python library, you can configure custom styling, custom configuration, and custom logic for your data visualizations. Easily add custom event handlers, formatter functions, and JavaScript callback functions to give your audience the data experience they need.  One-Call Chart Download Having configured a beautiful, accessible, and easy-to-understand data visualization you (or your code) can now download it using one method call. Automatic integration with either the Highsoft-provided Highcharts Export Server, or with your own custom Highcharts Export Server deployed in your own environment.  What You Need, When You Need It Highcharts for Python consists of different Python libraries, each corresponding to one of the Highcharts JavaScript libraries or providing a specific niche capability. This lets you only install the code you need, minimizing and simplifying your dependencies.  Extensive Documentation Highcharts for Python has extensive documentation, including tutorials and reference documentation to help you and your teams rapidly begin using Highcharts in your work.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.  Easy to Install, Free to Try, Open Source, and Extensible You do not need a license to try Highcharts for Python – just install it using pip install highcharts-core – and feel free to experiment with it. You can also review the source code for each library in its corresponding Github repo, linked below:Highcharts Core for PythonHighcharts Stock for PythonHighcharts Maps for PythonHighcharts Gantt for PythonIf you wish to extend the library with your own code, you are welcome to do so - subject to the terms of our license, of course.  Support for Python Highcharts for Python is a software product distributed by Highsoft and owned by HCP, the creators of Highcharts for Python. HCP directly provides all technical support for all Highcharts for Python licensees. Please see the Highcharts for Python support page for more information.Try for freeAs with all Highcharts products, you are welcome to install and experiment with the Highcharts for Python toolkit before you purchase your license. If you wish to use it commercially, you will need to license it (does not apply for students, universities and personal use). But if you just want to give it a try, you can do easily by installing the appropriate Python library directly from PyPi using pip:pip install highcharts-corepip install highcharts-stockpip install highcharts-mapspip install highcharts-ganttWhen you are ready to adopt the Highcharts for Python toolkit in your data science or application stack, please visit our online shop.Tools in Highcharts for Python Highcharts Core for PythonThis is the core library. It provides full support for the Highcharts Core JavaScript library, and serves as the foundation for the entire Highcharts for Python toolkit.Install it using:pip install highcharts-coreDocumentationGithub RepoPyPiDemosTutorials Highcharts Stock for PythonThe Highcharts Stock for Python library extends the Highcharts Core Python library with full support for the Highcharts Stock JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with over 40 technical indicators, in-chart navigation and timelines, and rich tools for in-chart analysis and annotation of data.Install it using:pip install highcharts-stockDocumentationGithub RepoPyPiDemosTutorials Highcharts Maps for PythonThe Highcharts Maps for Python library extends the Highcharts Core Python library with full support for the Highcharts Maps JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with full TopoJSON and GeoJSON support, rich map projection and visualization capabilities, and native integration with GeoPandas for GIS data analysis.Install it using:pip install highcharts-mapsDocumentationGithub RepoPyPiDemosTutorials Highcharts Gantt for PythonThe Highcharts Gantt for Python library extends the Highcharts Core Python library with full support for the Highcharts Gantt JavaScript library. It includes the Highcharts Stock Python library, and extends its functionality with native integrations with JIRA, Asana, and Monday.com.Install it using:pip install highcharts-ganttDocumentationGithub RepoPyPiDemosTutorials\n\nHighcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.Key FeaturesComprehensive Highcharts Support Highcharts for Python, provides the full set of rich options, customizations, and interactivity provided by the Highcharts JavaScript libraries. Eliminating the need for “piecing together” partial solutions from unmaintained community libraries. Using a simple Pythonic API, the toolkit makes tapping into Highcharts features fast and simple - “batteries included” with full support for rich callback and formatter functions, SVG extensions, and more.Simple and Powerful Pythonic API Highcharts for Python does the heavy lifting of providing a truly Pythonic API. No need to rely on “hacky” solutions involving gigantic Python dict's, JSON files that only support part of the Highcharts JavaScript capabilities, or switching back and forth between Pythonic snake_case and JavaScript camelCase.Simple UI Integration Highcharts for Python is designed to simplify the integration of your (often back-end) Python code with your UI code. With one method call, you can generate the full set of JavaScript code that should be rendered by your UI to display the fully-configured data visualizations your applications need.Easy and Consistent Chart Downloads Download static versions of your data visualizations using all of their Highcharts formatting and configuration with just one method call. Easily export your charts to PNG, JPG, PDF, SVG, and more.Native Integration with the Python Ecosystem Using Highcharts for Python, you can easily integrate rich Highcharts visualizations into your Python stack taking advantage of native integrations with:Jupyter Labs/Jupyter NotebooksPandasPySparkGeoPandasand moreUsing the Python toolkit, you can easily leverage Highcharts in your exploratory data analysis (EDA) workflows, and use popular components of the modern data stack such as Databricks.Main Features   Work Where Your Data Lives Easily configure highly interactive rich data visualizations in your Python code – where you manage the data, anyway – and deliver those visualizations to your rendering layer with one method call. No need to maintain complicated custom serialization logic, or split your visualization configurations across multiple applications. Keep it simple by managing your visualization where you manage your data.  Works With Your Stack Highcharts for Python integrates with the most popular components of the Python data science ecosystem. Every Highcharts visualization can be constructed from a Pandas or PySpark DataFrame with one method call, and then rendered in Jupyter Labs/Notebooks using another method call.  Highcharts without the JavaScript Highcharts is a well-known JavaScript visualization library, but not everyone on your team works in JavaScript. Highcharts for Python translates the full set of JavaScript capabilities into a Pythonic form, using Python snake_case naming conventions, Python import conventions, standard class names, method patterns, etc. Don’t worry about learning JavaScript – Highcharts for Python lets you build the same powerful visualizations while working in Python.  Highly Configurable Using the Highcharts for Python library, you can configure custom styling, custom configuration, and custom logic for your data visualizations. Easily add custom event handlers, formatter functions, and JavaScript callback functions to give your audience the data experience they need.  One-Call Chart Download Having configured a beautiful, accessible, and easy-to-understand data visualization you (or your code) can now download it using one method call. Automatic integration with either the Highsoft-provided Highcharts Export Server, or with your own custom Highcharts Export Server deployed in your own environment.  What You Need, When You Need It Highcharts for Python consists of different Python libraries, each corresponding to one of the Highcharts JavaScript libraries or providing a specific niche capability. This lets you only install the code you need, minimizing and simplifying your dependencies.  Extensive Documentation Highcharts for Python has extensive documentation, including tutorials and reference documentation to help you and your teams rapidly begin using Highcharts in your work.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.  Easy to Install, Free to Try, Open Source, and Extensible You do not need a license to try Highcharts for Python – just install it using pip install highcharts-core – and feel free to experiment with it. You can also review the source code for each library in its corresponding Github repo, linked below:Highcharts Core for PythonHighcharts Stock for PythonHighcharts Maps for PythonHighcharts Gantt for PythonIf you wish to extend the library with your own code, you are welcome to do so - subject to the terms of our license, of course.  Support for Python Highcharts for Python is a software product distributed by Highsoft and owned by HCP, the creators of Highcharts for Python. HCP directly provides all technical support for all Highcharts for Python licensees. Please see the Highcharts for Python support page for more information.Try for freeAs with all Highcharts products, you are welcome to install and experiment with the Highcharts for Python toolkit before you purchase your license. If you wish to use it commercially, you will need to license it (does not apply for students, universities and personal use). But if you just want to give it a try, you can do easily by installing the appropriate Python library directly from PyPi using pip:pip install highcharts-corepip install highcharts-stockpip install highcharts-mapspip install highcharts-ganttWhen you are ready to adopt the Highcharts for Python toolkit in your data science or application stack, please visit our online shop.Tools in Highcharts for Python Highcharts Core for PythonThis is the core library. It provides full support for the Highcharts Core JavaScript library, and serves as the foundation for the entire Highcharts for Python toolkit.Install it using:pip install highcharts-coreDocumentationGithub RepoPyPiDemosTutorials Highcharts Stock for PythonThe Highcharts Stock for Python library extends the Highcharts Core Python library with full support for the Highcharts Stock JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with over 40 technical indicators, in-chart navigation and timelines, and rich tools for in-chart analysis and annotation of data.Install it using:pip install highcharts-stockDocumentationGithub RepoPyPiDemosTutorials Highcharts Maps for PythonThe Highcharts Maps for Python library extends the Highcharts Core Python library with full support for the Highcharts Maps JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with full TopoJSON and GeoJSON support, rich map projection and visualization capabilities, and native integration with GeoPandas for GIS data analysis.Install it using:pip install highcharts-mapsDocumentationGithub RepoPyPiDemosTutorials Highcharts Gantt for PythonThe Highcharts Gantt for Python library extends the Highcharts Core Python library with full support for the Highcharts Gantt JavaScript library. It includes the Highcharts Stock Python library, and extends its functionality with native integrations with JIRA, Asana, and Monday.com.Install it using:pip install highcharts-ganttDocumentationGithub RepoPyPiDemosTutorials\n\nHighcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.  Highcharts® PythonHighcharts for Python is a collection of Python libraries that gives you access to all the rich features of Highcharts Core, Stock, Maps and Gantt via a simple, Pythonic API. Try for Free Buy NowNeed technical assistance? Click here for Python support.Key FeaturesComprehensive Highcharts Support Highcharts for Python, provides the full set of rich options, customizations, and interactivity provided by the Highcharts JavaScript libraries. Eliminating the need for “piecing together” partial solutions from unmaintained community libraries. Using a simple Pythonic API, the toolkit makes tapping into Highcharts features fast and simple - “batteries included” with full support for rich callback and formatter functions, SVG extensions, and more.Simple and Powerful Pythonic API Highcharts for Python does the heavy lifting of providing a truly Pythonic API. No need to rely on “hacky” solutions involving gigantic Python dict's, JSON files that only support part of the Highcharts JavaScript capabilities, or switching back and forth between Pythonic snake_case and JavaScript camelCase.Simple UI Integration Highcharts for Python is designed to simplify the integration of your (often back-end) Python code with your UI code. With one method call, you can generate the full set of JavaScript code that should be rendered by your UI to display the fully-configured data visualizations your applications need.Easy and Consistent Chart Downloads Download static versions of your data visualizations using all of their Highcharts formatting and configuration with just one method call. Easily export your charts to PNG, JPG, PDF, SVG, and more.Native Integration with the Python Ecosystem Using Highcharts for Python, you can easily integrate rich Highcharts visualizations into your Python stack taking advantage of native integrations with:Jupyter Labs/Jupyter NotebooksPandasPySparkGeoPandasand moreUsing the Python toolkit, you can easily leverage Highcharts in your exploratory data analysis (EDA) workflows, and use popular components of the modern data stack such as Databricks.Main Features   Work Where Your Data Lives Easily configure highly interactive rich data visualizations in your Python code – where you manage the data, anyway – and deliver those visualizations to your rendering layer with one method call. No need to maintain complicated custom serialization logic, or split your visualization configurations across multiple applications. Keep it simple by managing your visualization where you manage your data.  Works With Your Stack Highcharts for Python integrates with the most popular components of the Python data science ecosystem. Every Highcharts visualization can be constructed from a Pandas or PySpark DataFrame with one method call, and then rendered in Jupyter Labs/Notebooks using another method call.  Highcharts without the JavaScript Highcharts is a well-known JavaScript visualization library, but not everyone on your team works in JavaScript. Highcharts for Python translates the full set of JavaScript capabilities into a Pythonic form, using Python snake_case naming conventions, Python import conventions, standard class names, method patterns, etc. Don’t worry about learning JavaScript – Highcharts for Python lets you build the same powerful visualizations while working in Python.  Highly Configurable Using the Highcharts for Python library, you can configure custom styling, custom configuration, and custom logic for your data visualizations. Easily add custom event handlers, formatter functions, and JavaScript callback functions to give your audience the data experience they need.  One-Call Chart Download Having configured a beautiful, accessible, and easy-to-understand data visualization you (or your code) can now download it using one method call. Automatic integration with either the Highsoft-provided Highcharts Export Server, or with your own custom Highcharts Export Server deployed in your own environment.  What You Need, When You Need It Highcharts for Python consists of different Python libraries, each corresponding to one of the Highcharts JavaScript libraries or providing a specific niche capability. This lets you only install the code you need, minimizing and simplifying your dependencies.  Extensive Documentation Highcharts for Python has extensive documentation, including tutorials and reference documentation to help you and your teams rapidly begin using Highcharts in your work.  Source Available Download the source code, inspect 
it, and make your edits as you wish. A trial license is not required to try the 
code. When you are ready to use the software for commercial projects, the 
appropriate license must be in place. Please see our shop for more information.  Easy to Install, Free to Try, Open Source, and Extensible You do not need a license to try Highcharts for Python – just install it using pip install highcharts-core – and feel free to experiment with it. You can also review the source code for each library in its corresponding Github repo, linked below:Highcharts Core for PythonHighcharts Stock for PythonHighcharts Maps for PythonHighcharts Gantt for PythonIf you wish to extend the library with your own code, you are welcome to do so - subject to the terms of our license, of course.  Support for Python Highcharts for Python is a software product distributed by Highsoft and owned by HCP, the creators of Highcharts for Python. HCP directly provides all technical support for all Highcharts for Python licensees. Please see the Highcharts for Python support page for more information.Try for freeAs with all Highcharts products, you are welcome to install and experiment with the Highcharts for Python toolkit before you purchase your license. If you wish to use it commercially, you will need to license it (does not apply for students, universities and personal use). But if you just want to give it a try, you can do easily by installing the appropriate Python library directly from PyPi using pip:pip install highcharts-corepip install highcharts-stockpip install highcharts-mapspip install highcharts-ganttWhen you are ready to adopt the Highcharts for Python toolkit in your data science or application stack, please visit our online shop.Tools in Highcharts for Python Highcharts Core for PythonThis is the core library. It provides full support for the Highcharts Core JavaScript library, and serves as the foundation for the entire Highcharts for Python toolkit.Install it using:pip install highcharts-coreDocumentationGithub RepoPyPiDemosTutorials Highcharts Stock for PythonThe Highcharts Stock for Python library extends the Highcharts Core Python library with full support for the Highcharts Stock JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with over 40 technical indicators, in-chart navigation and timelines, and rich tools for in-chart analysis and annotation of data.Install it using:pip install highcharts-stockDocumentationGithub RepoPyPiDemosTutorials Highcharts Maps for PythonThe Highcharts Maps for Python library extends the Highcharts Core Python library with full support for the Highcharts Maps JavaScript library. It includes the Highcharts Core Python library, but extends its functionality with full TopoJSON and GeoJSON support, rich map projection and visualization capabilities, and native integration with GeoPandas for GIS data analysis.Install it using:pip install highcharts-mapsDocumentationGithub RepoPyPiDemosTutorials Highcharts Gantt for PythonThe Highcharts Gantt for Python library extends the Highcharts Core Python library with full support for the Highcharts Gantt JavaScript library. It includes the Highcharts Stock Python library, and extends its functionality with native integrations with JIRA, Asana, and Monday.com.Install it using:pip install highcharts-ganttDocumentationGithub RepoPyPiDemosTutorials\n\n\n\nHighcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on Github Highcharts® for ReactIncorporate Highcharts data visualizations in your React projects with Highcharts React. Highcharts React on GithubKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPMKey FeaturesFast, Lightweight and Easy to Use Pass your Highcharts data visualization configurations as props to your Highcharts for Svelte components. Then use Svelte’s minimalist syntax to update the specific chart properties and behaviors you need without the overhead of editing external configurations.Works with Highcharts Core, Stock, Maps and Gantt Highcharts for Svelte comes with components for Highcharts Core, Stock, Maps and Gantt, giving you access to hundreds of data visualization possibilities for you Svelte applications and projects.Complete Highcharts API Coverage Highcharts for Svelte isn’t a watered-down version of Highcharts. Access all the options and customization capabilities of the full Highcharts API directly in your Svelte components.Pre-built TypeScript Definitions Don’t worry Typescript devs. All Highcharts for Svelte components include out-of-the-box type definitions, so there’s no need to manually define types for your Highcharts configurations. Comprehensive Support We’re here to assist with any technical challenges you may encounter.  Feel free to ask any Highcharts-related questions on our Highcharts Forums.  If you have a specific issue related to Highcharts for Svelte, or have ideas for enhancements, submit a request on our GitHub repository.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPMKey FeaturesFast, Lightweight and Easy to Use Pass your Highcharts data visualization configurations as props to your Highcharts for Svelte components. Then use Svelte’s minimalist syntax to update the specific chart properties and behaviors you need without the overhead of editing external configurations.Works with Highcharts Core, Stock, Maps and Gantt Highcharts for Svelte comes with components for Highcharts Core, Stock, Maps and Gantt, giving you access to hundreds of data visualization possibilities for you Svelte applications and projects.Complete Highcharts API Coverage Highcharts for Svelte isn’t a watered-down version of Highcharts. Access all the options and customization capabilities of the full Highcharts API directly in your Svelte components.Pre-built TypeScript Definitions Don’t worry Typescript devs. All Highcharts for Svelte components include out-of-the-box type definitions, so there’s no need to manually define types for your Highcharts configurations. Comprehensive Support We’re here to assist with any technical challenges you may encounter.  Feel free to ask any Highcharts-related questions on our Highcharts Forums.  If you have a specific issue related to Highcharts for Svelte, or have ideas for enhancements, submit a request on our GitHub repository.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPM Highcharts® for SvelteHighcharts for Svelte is a super-lightweight and fast package that lets you incorporate robust Highcharts data visualizations into your Svelte app or project without compromising performance. Highcharts for Svelte on NPMKey FeaturesFast, Lightweight and Easy to Use Pass your Highcharts data visualization configurations as props to your Highcharts for Svelte components. Then use Svelte’s minimalist syntax to update the specific chart properties and behaviors you need without the overhead of editing external configurations.Works with Highcharts Core, Stock, Maps and Gantt Highcharts for Svelte comes with components for Highcharts Core, Stock, Maps and Gantt, giving you access to hundreds of data visualization possibilities for you Svelte applications and projects.Complete Highcharts API Coverage Highcharts for Svelte isn’t a watered-down version of Highcharts. Access all the options and customization capabilities of the full Highcharts API directly in your Svelte components.Pre-built TypeScript Definitions Don’t worry Typescript devs. All Highcharts for Svelte components include out-of-the-box type definitions, so there’s no need to manually define types for your Highcharts configurations. Comprehensive Support We’re here to assist with any technical challenges you may encounter.  Feel free to ask any Highcharts-related questions on our Highcharts Forums.  If you have a specific issue related to Highcharts for Svelte, or have ideas for enhancements, submit a request on our GitHub repository.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download Highcharts Highcharts® for TypeScriptThanks to the integration of TypeScript declarations, the Highcharts NPM package allows type checking for most Highcharts options and functions, including auto-complete code with itegrated documentation for TypeScript-capable editors like Visual Studio Code. Download HighchartsKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPM Highcharts® for VueIncorporate Highcharts data visualizations in your Vue projects with HighCharts Vue. This package now also supports Vue v3. Highcharts Vue on NPMKey FeaturesWorks with all Highcharts libraries Create interactive, mobile-friendly data visualizations, maps, financial charts and timelines.Drag & Drop Interactivity Drag and drop objects to change their duration and order. The API also allows user-manipulation of the GUI to be written back to the server.Accessibility & Sonification Highcharts offer an accessible interactive chart solution to empower people with disablities. Each Highcharts license includes our Accessibility module that allows you to make your charts as accessible as possible. Visit our Accessibility Portal for more information.Big Data Ready When you need to render thousands or millions of data points in the browser, our WebGL-powered boost module delivers incredible speed.Export Charts Offline The offline-exporting module lets you export static chart images without having to send data to an external server.Export Data in Various Formats Options for exporting data to CSV or Excel, or displaying the data in a HTML table or a Javascript structure.Main Features   Vast chart collection Highcharts currently supports line, spline, area, areaspline, 
column, bar, pie, scatter, solid gauge, angular gauges, arearange, areasplinerange, columnrange, bubble, 
box plot, error bars, funnel, waterfall, polar chart types and much more.  Options are optional Highcharts simple options-structure allows for deep 
customization, and styling can be done via JavaScript or CSS. Highcharts 
is also extendable and pluggable for experts seeking advanced animations 
and functionality. Check out some advanced  cool use cases in our community section, and plugins in our our 
extensions directory.  Flexible styling Our elegant charts render crisp and clear at any resolution and are easily styled via our simple options-structure or CSS.  Dynamic & Customizable Our elegant charts render crisp and clear at any 
resolution and are easily styled via our simple options-structure using JavaScript or CSS. 
Highcharts is also extendable and pluggable for experts seeking advanced animations 
and functionality.  Touch and mobile-optimized  Intelligent responsiveness not only adjusts the chart to the 
dimensions of its container but also automatically places non-graph 
elements such as labels, legends, and headings in the most optimal 
location. Multi-touch gesture support allows for a native experience 
on mobile and touch screens. Touch gestures include single touch-drag 
for data inspection, multi-touch for   zooming, and more.  Vibrant community The largest developer community of any premium charting tool 
on Github,  StackOverflow, and other forums is eager to offer additional assistance, 
platform-specific implementation advice and inspiration when you need it. In 
addition, we have dozen dedicated support engineers 
monitoring our forums, StackOverflow, GitHub and support emails.Join Our Vibrant CommunityThe most significant developer community of any premium charting tool on GitHub, StackOverflow and Highcharts' Forums, is eager to offer additional assistance, platform-specific implementation advice and inspiration when you need it. Join the communityCheck out our documentationOur customers praise our documentation as easy to follow, extensive and well organized. Filled with helpful examples, our API reference will have you customizing your data visualizations in no time and make maintaining them a breeze. Check out the docsRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nHighcharts® Community Integrations Don’t reinvent the wheel. The Highcharts Community has
 developed numerous integrations to use in your next project.
 Technologies include PHP, Java, Django, .NET and more! Community IntegrationsHighcharter provided by Highcharter Jkunst.HighchartsSt A Highcharts Js API wrapper for Pharo Smalltalk. Wicked Charts a Java wrapper provided by Tom Hombergs.A Highcharts
 PHP wrapper by Gonçalo QueirósAn
 open-source integration for iOS Community maintainedHyJavaCharts a Java wrapper provided by Powerbuilt
 System.Vaadin Charts  the official Vaadin wrapper for Highcharts JSReact
 JSX
 Highcharts provided by Will Hawker.An
 open-source integration for Android Community maintainedAn
 open-source integration for .NET Community maintainedCommunity Add OnsPluginshighchartsBy torsteinhonsi vversion | 12.2.0, 2 days ago1202 dependents licensed under $httpsJavaScript charting frameworkhighcharts-react-officialBy karolkolodziej vversion | 3.2.1, 2 years ago373 dependents licensed under $MITOfficial minimal [Highcharts](https://www.highcharts.com/) wrapper for React.highcharts-angularBy karol.kolodziej vversion | 4.0.1, 9 months ago36 dependents licensed under $SEE LICENSE IN Highcharts component for Angular.See the full list on NPMCode ExamplesCreate a Vertical Sankey chart with HighchartsBy Mustapha Mekhatria added Tuesday October 31, 2023Step by step tutorial to create Highcharts vertical Sankey.SMA Volume by priceBy Mustapha Mekhatria added Thursday November 5, 2020  In general, moving averages visualize the average price of a financial chart over a specified period. For example, a Simple Moving Average (SMA) is an effective technical indicator. It processes data so that each period in the data set has equal importance and is weighted equally. Read more about the five useful technical indicators.Italy Regional Map TemplateBy Mustapha Mekhatria added Tuesday November 3, 2020  See the Pen Italy Regional Map Template by mustapha mekhatria (@mushigh) on CodePen. In the standard map collection the Italy’s regional map is missing. Here is a Italy’s regional map with the original SVG. See the Pen eYNpaxN by mustapha mekhatria (@mushigh) on CodePen. Check out more Highcharts Maps demos.See all code examples Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® Community Integrations Don’t reinvent the wheel. The Highcharts Community has
 developed numerous integrations to use in your next project.
 Technologies include PHP, Java, Django, .NET and more! Community IntegrationsHighcharter provided by Highcharter Jkunst.HighchartsSt A Highcharts Js API wrapper for Pharo Smalltalk. Wicked Charts a Java wrapper provided by Tom Hombergs.A Highcharts
 PHP wrapper by Gonçalo QueirósAn
 open-source integration for iOS Community maintainedHyJavaCharts a Java wrapper provided by Powerbuilt
 System.Vaadin Charts  the official Vaadin wrapper for Highcharts JSReact
 JSX
 Highcharts provided by Will Hawker.An
 open-source integration for Android Community maintainedAn
 open-source integration for .NET Community maintainedCommunity Add OnsPluginshighchartsBy torsteinhonsi vversion | 12.2.0, 2 days ago1202 dependents licensed under $httpsJavaScript charting frameworkhighcharts-react-officialBy karolkolodziej vversion | 3.2.1, 2 years ago373 dependents licensed under $MITOfficial minimal [Highcharts](https://www.highcharts.com/) wrapper for React.highcharts-angularBy karol.kolodziej vversion | 4.0.1, 9 months ago36 dependents licensed under $SEE LICENSE IN Highcharts component for Angular.See the full list on NPMCode ExamplesCreate a Vertical Sankey chart with HighchartsBy Mustapha Mekhatria added Tuesday October 31, 2023Step by step tutorial to create Highcharts vertical Sankey.SMA Volume by priceBy Mustapha Mekhatria added Thursday November 5, 2020  In general, moving averages visualize the average price of a financial chart over a specified period. For example, a Simple Moving Average (SMA) is an effective technical indicator. It processes data so that each period in the data set has equal importance and is weighted equally. Read more about the five useful technical indicators.Italy Regional Map TemplateBy Mustapha Mekhatria added Tuesday November 3, 2020  See the Pen Italy Regional Map Template by mustapha mekhatria (@mushigh) on CodePen. In the standard map collection the Italy’s regional map is missing. Here is a Italy’s regional map with the original SVG. See the Pen eYNpaxN by mustapha mekhatria (@mushigh) on CodePen. Check out more Highcharts Maps demos.See all code examples Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\nHighcharts® Community Integrations Don’t reinvent the wheel. The Highcharts Community has
 developed numerous integrations to use in your next project.
 Technologies include PHP, Java, Django, .NET and more! Community IntegrationsHighcharter provided by Highcharter Jkunst.HighchartsSt A Highcharts Js API wrapper for Pharo Smalltalk. Wicked Charts a Java wrapper provided by Tom Hombergs.A Highcharts
 PHP wrapper by Gonçalo QueirósAn
 open-source integration for iOS Community maintainedHyJavaCharts a Java wrapper provided by Powerbuilt
 System.Vaadin Charts  the official Vaadin wrapper for Highcharts JSReact
 JSX
 Highcharts provided by Will Hawker.An
 open-source integration for Android Community maintainedAn
 open-source integration for .NET Community maintainedCommunity Add OnsPluginshighchartsBy torsteinhonsi vversion | 12.2.0, 2 days ago1202 dependents licensed under $httpsJavaScript charting frameworkhighcharts-react-officialBy karolkolodziej vversion | 3.2.1, 2 years ago373 dependents licensed under $MITOfficial minimal [Highcharts](https://www.highcharts.com/) wrapper for React.highcharts-angularBy karol.kolodziej vversion | 4.0.1, 9 months ago36 dependents licensed under $SEE LICENSE IN Highcharts component for Angular.See the full list on NPMCode ExamplesCreate a Vertical Sankey chart with HighchartsBy Mustapha Mekhatria added Tuesday October 31, 2023Step by step tutorial to create Highcharts vertical Sankey.SMA Volume by priceBy Mustapha Mekhatria added Thursday November 5, 2020  In general, moving averages visualize the average price of a financial chart over a specified period. For example, a Simple Moving Average (SMA) is an effective technical indicator. It processes data so that each period in the data set has equal importance and is weighted equally. Read more about the five useful technical indicators.Italy Regional Map TemplateBy Mustapha Mekhatria added Tuesday November 3, 2020  See the Pen Italy Regional Map Template by mustapha mekhatria (@mushigh) on CodePen. In the standard map collection the Italy’s regional map is missing. Here is a Italy’s regional map with the original SVG. See the Pen eYNpaxN by mustapha mekhatria (@mushigh) on CodePen. Check out more Highcharts Maps demos.See all code examples Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitTutorialsIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid Lite3D graph: Useful visualization or misleading illusion?   8 minutes read | Post-tags: 3d graph,	 TutorialRobustify Highcharts Additional product Highcharts MapsCreate interactive map charts with drill-down and touch support.  Additional product Highcharts StockCreate stock or general timeline charts for any web and mobile project.  Additional product Highcharts GanttCreate interactive charts for allocating and displaying tasks, events, and
 resources along a timeline.  Additional product Highcharts DashboardsDevelopment library pre-loaded with time-saving features that will save you hours of development time on your dashboard projects.   Highcharts Advantage+Highcharts Advantage+ gives you access to the resources and expertise you need to make your Highcharts implementation fast and frustration free.  Add-on Export ServerAllow your users to download the chart as PDF, PNG, JPG or SVG vector
 images, and more.\n\n\n\nAdditional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact Sales Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact SalesConnect, Visualize, AnalyzeUse our pre-built data connector to securely integrate Morningstar data with Highcharts.Morningstar's APIAccess Morningstar data with little to no development time. Just configure our connector with your Morningstar's API credentials, and you're ready to go. No complex coding required.   Add the connection to your configurationNext, import your data to your Highcharts configuration. All it takes is a few lines of code. Now you’re ready to start visualizing your Morningstar financial data. Gain Insights FasterWith Morningstar data connected, you are ready to  leverage Highcharts Stock’s advanced financial data visualization features, including:Over 40 technical indicatorsIntelligent data groupingWebGL-powered Boost module for big dataIntuitive navigation for financeStock tools for statistical calculations and annotations  Get Started TodayKeep your data safe and your visualizations beautiful with HighchartsHighcharts is one of the most trusted names in data visualization. We’ve been developing high-quality data visualization solutions for 15 years, and deliver what we promise – top-notch software that’s guaranteed. Our commitment to security, quality and support makes us the safe choice for all your dataviz needs. Your Data, Your ControlSince Highcharts is a self-hosted solution, your data remains yours. We don’t access or store any of it, ensuring your data privacy, security and regulatory compliance are entirely under your control. Look Good EverywhereHighcharts data visualizations are easily customized via CSS. Tweak our predefined styles or build a theme from scratch. Plus, our out-of-the-box responsiveness means your visualizations will automatically adjust to different sized viewports and devices. Our Support, Your GuaranteeOur Partner Data License comes with support that includes access to all new releases, hot-fixes, email and chat support, plus a 17-hour guaranteed initial response time and your own dedicated Support Engineer. If you're short on resources and need us to build, we can help you through Custom Projects.  and Trusted Dataviz for Trusted Data Get Started TodayFrequently Asked Questions   What is a Highcharts data connector?  A Highcharts data connector is pre-built software that enables you to connect to and visualize data from an external source, such as Morningstar. The connector offloads the hard work of building a custom connection from scratch, as it automatically manages authentication, data field mapping and API integration, saving developers valuable time and effort.  Do I need a Morningstar account to connect to Morningstar data?  Yes, you will need a Morningstar account to access the Morningstar’s API. Contact our sales team for more information on how to access Morningstar data.  Is the Morningstar connector only sold through the Partner Data License?  Yes, the Morningstar connector is only sold through the Partner Data License. This is a subscription license which includes:The connector between Morningstar Direct Web Services and Highcharts StockThe usage of Highcharts Stock which includes 1 SaaS or Web AppUnlimited developer seatsAdvantage+, our top-tier support program that includes extra developer hours and personalized implementation advice\n\nAdditional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact Sales Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact SalesConnect, Visualize, AnalyzeUse our pre-built data connector to securely integrate Morningstar data with Highcharts.Morningstar's APIAccess Morningstar data with little to no development time. Just configure our connector with your Morningstar's API credentials, and you're ready to go. No complex coding required.   Add the connection to your configurationNext, import your data to your Highcharts configuration. All it takes is a few lines of code. Now you’re ready to start visualizing your Morningstar financial data. Gain Insights FasterWith Morningstar data connected, you are ready to  leverage Highcharts Stock’s advanced financial data visualization features, including:Over 40 technical indicatorsIntelligent data groupingWebGL-powered Boost module for big dataIntuitive navigation for financeStock tools for statistical calculations and annotations  Get Started TodayKeep your data safe and your visualizations beautiful with HighchartsHighcharts is one of the most trusted names in data visualization. We’ve been developing high-quality data visualization solutions for 15 years, and deliver what we promise – top-notch software that’s guaranteed. Our commitment to security, quality and support makes us the safe choice for all your dataviz needs. Your Data, Your ControlSince Highcharts is a self-hosted solution, your data remains yours. We don’t access or store any of it, ensuring your data privacy, security and regulatory compliance are entirely under your control. Look Good EverywhereHighcharts data visualizations are easily customized via CSS. Tweak our predefined styles or build a theme from scratch. Plus, our out-of-the-box responsiveness means your visualizations will automatically adjust to different sized viewports and devices. Our Support, Your GuaranteeOur Partner Data License comes with support that includes access to all new releases, hot-fixes, email and chat support, plus a 17-hour guaranteed initial response time and your own dedicated Support Engineer. If you're short on resources and need us to build, we can help you through Custom Projects.  and Trusted Dataviz for Trusted Data Get Started TodayFrequently Asked Questions   What is a Highcharts data connector?  A Highcharts data connector is pre-built software that enables you to connect to and visualize data from an external source, such as Morningstar. The connector offloads the hard work of building a custom connection from scratch, as it automatically manages authentication, data field mapping and API integration, saving developers valuable time and effort.  Do I need a Morningstar account to connect to Morningstar data?  Yes, you will need a Morningstar account to access the Morningstar’s API. Contact our sales team for more information on how to access Morningstar data.  Is the Morningstar connector only sold through the Partner Data License?  Yes, the Morningstar connector is only sold through the Partner Data License. This is a subscription license which includes:The connector between Morningstar Direct Web Services and Highcharts StockThe usage of Highcharts Stock which includes 1 SaaS or Web AppUnlimited developer seatsAdvantage+, our top-tier support program that includes extra developer hours and personalized implementation advice\n\nAdditional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact Sales Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Additional product Data ConnectorSupercharge your charts with high-quality data from MorningstarIntegrate Morningstar’s trusted data into your Highcharts data visualizations without development headaches or security concerns. Just connect and go. Contact SalesConnect, Visualize, AnalyzeUse our pre-built data connector to securely integrate Morningstar data with Highcharts.Morningstar's APIAccess Morningstar data with little to no development time. Just configure our connector with your Morningstar's API credentials, and you're ready to go. No complex coding required.   Add the connection to your configurationNext, import your data to your Highcharts configuration. All it takes is a few lines of code. Now you’re ready to start visualizing your Morningstar financial data. Gain Insights FasterWith Morningstar data connected, you are ready to  leverage Highcharts Stock’s advanced financial data visualization features, including:Over 40 technical indicatorsIntelligent data groupingWebGL-powered Boost module for big dataIntuitive navigation for financeStock tools for statistical calculations and annotations  Get Started TodayKeep your data safe and your visualizations beautiful with HighchartsHighcharts is one of the most trusted names in data visualization. We’ve been developing high-quality data visualization solutions for 15 years, and deliver what we promise – top-notch software that’s guaranteed. Our commitment to security, quality and support makes us the safe choice for all your dataviz needs. Your Data, Your ControlSince Highcharts is a self-hosted solution, your data remains yours. We don’t access or store any of it, ensuring your data privacy, security and regulatory compliance are entirely under your control. Look Good EverywhereHighcharts data visualizations are easily customized via CSS. Tweak our predefined styles or build a theme from scratch. Plus, our out-of-the-box responsiveness means your visualizations will automatically adjust to different sized viewports and devices. Our Support, Your GuaranteeOur Partner Data License comes with support that includes access to all new releases, hot-fixes, email and chat support, plus a 17-hour guaranteed initial response time and your own dedicated Support Engineer. If you're short on resources and need us to build, we can help you through Custom Projects.  and Trusted Dataviz for Trusted Data Get Started TodayFrequently Asked Questions   What is a Highcharts data connector?  A Highcharts data connector is pre-built software that enables you to connect to and visualize data from an external source, such as Morningstar. The connector offloads the hard work of building a custom connection from scratch, as it automatically manages authentication, data field mapping and API integration, saving developers valuable time and effort.  Do I need a Morningstar account to connect to Morningstar data?  Yes, you will need a Morningstar account to access the Morningstar’s API. Contact our sales team for more information on how to access Morningstar data.  Is the Morningstar connector only sold through the Partner Data License?  Yes, the Morningstar connector is only sold through the Partner Data License. This is a subscription license which includes:The connector between Morningstar Direct Web Services and Highcharts StockThe usage of Highcharts Stock which includes 1 SaaS or Web AppUnlimited developer seatsAdvantage+, our top-tier support program that includes extra developer hours and personalized implementation advice\n\n\n\n\n\n\n\n\n\n\n\nChangelogView changelog for Highcharts, Highcharts Stock, Highcharts Maps, Highcharts Gantt, Highcharts Dashboards. Highcharts Grid.
 Go to the Download page to get the latest version.Highcharts  Highcharts v12.2.0 (2025-04-07) # Added support for native color-mix. This means colors don't have to be parsed and analyzed in order to allow tweening and modification. Which means full support for CSS variables, named colors and all color definitions known to the browser. Read more in the docs.Added experimental flag, HTMLElement.useForeignObject. When true, labels with the useHTML flag are rendered inside a <foreignObject> in SVG, instead of the traditional parallel div structure.Added ESM bundles for dynamic imports. Use highcharts/esm/highcharts.js or load from our CDN.Added new options, tooltip.fixed and tooltip.position, as a simple declarative way of keeping the tooltip fixed.Added the nullInteraction option for more series types than before. Null points will now support data labels and tooltips.Added language modules for some selected languages, as well as a structure to continue building on.Added level headers in treemap as separate cells through the dataLabels.headers option. Followed up with improved layout control with the new treemap.groupPadding and treemap.nodeSizeBy options.  Bug fixes Fixed #21913, sunburst data labels got stuck in top left corner after traversing.Fixed #21972, layoutAlgorithm.splitSeries for individual packed bubble series did not work.Fixed #22233, tooltip was not prioritizing correctly when multiple scatterpoints hovered.Fixed #22235, decimal lon/lat values were not handled correctly in geoheatmaps with interpolation.Fixed #22489, column series click events failed after enabling then disabling scrollable plot area.Fixed #22664, labels were accidentally being hidden when they should not.Fixed #22709, optional chaining threw a syntax error in dumbbell module.Fixed #22845, a regression causing choppy tooltip animation on pie charts and some other chart types where followPointer was set to true.Fixed #22764, a regression causing axis labels with useHTML to wrap when not needed.Fixed #22707, YYYY-MM date format was not parsed in Safari and Firefox.Fixed test for overlapping scatterpoints was failing on master.Fixed #22533, boosted scatter cropped original data on zoom.Fixed #22609, axis label with soft hyphen was not wrapping text correctly.Fixed #22543, added default vertical offset for all navigation buttons.Fixed #22617, a regression in waterfall data label alignment.Fixed #22380, circles were misaligned in a polar chart when pane.startAngle was set to a non-zero value.Fixed #22456, line wrapping regression in split tooltips with useHTML.Fixed #22516, prevented inactive state for series with shared markerGroup when hovering a boosted series.Fixed #22438, no shared tooltip appeared when zoomed in boost.Fixed various issues with packed bubbles - (partly) frozen point, frozen halo, clicking plot selecting last clicked point.Fixed #22455, series' plot line rendered on the bottom chart edge was sometimes fully clipped.Fixed #22450, ES5 build failed in legacy browsers due to Unicode property escape used in regex.Fixed #22526, disabled context button added extra tabfocus.Fixed #21994, legend a11y proxy elements not tracking legend items correctly.Fixed #21928, setting plot options for pie chart with multiple data labels did not work.Fixed #22295, shared tooltip anchor position was not animated correctly between a single and multiple points.Fixed #22317, removed Batik-specific rgba replacement on export.Fixed #22334, overscroll values were incorrect with rangeSelector enabled.Fixed #22194, Boost not rendering column series with a single point that was outside plot area.Fixed #21886, redraws were fired for every level when drilling up.Fixed #21743, minor grid lines rendered outside the axis plot area.Fixed #22296, missing tick after drill-up when parent series had a single point.  Highcharts v12.1.2 (2024-12-21) #   Bug fixes Fixed #22423, a regression in v12.1.1 causing Highcharts to crash when loaded from a script tag in the head section.  Highcharts v12.1.1 (2024-12-20) #   Bug fixes Fixed #22393, the global Highcharts.dateTime function didn't pick the locale from the html.lang attribute, fell back to browser default.Fixed #7873, min and max settings in exporting.chartOptions axis options were not respected if the user had interacted with the axis.Fixed #22402, a regression in v12 causing wrong number formatting with lang.decimalPoint and lang.thousandsSep set to , and . respectively (European style).Fixed #22394, a regression in v12.1.0 causing bad alignment of text inside the reset zoom button.  Highcharts v12.1.0 (2024-12-17) # Added new treemap feature, the grouping of small leaf nodes, configured by the treemap.cluster option.  Bug fixes Fixed #22329, a regression causing wrong tooltip header with plus sign in date formats.Fixed #22335, treemap data label padding was not respected.Fixed #22357, multiline text was not centered within data labels.Fixed #22316, some tooltip date formats were not correctly replaced.Fixed #22277, setting the time.timezone option explicitly to undefined didn't work as described.Fixed #21405, stickyTracking was broken for BubbleSeries.Fixed #21815, scatter series with Boost showed incorrect values in tooltip when zooming.  Highcharts v12.0.2 (2024-12-04) #   Bug fixes Fixed #22124, numeric font-size for labels didn't work as announced.Fixed #22258, v12 modules didn't work with highstock, highmaps and highcharts-gantt NPM bundles.Fixed #22052, drilldown breadcrumb showed the wrong label when scrollbar was enabled.Fixed #22088, tooltip could spill over at certain widths.Fixed #21897, missing points in scatter series with boost.Fixed #22169, only the first zone got shadow when shadow was true.  Highcharts v12.0.1 (2024-11-28) # Fixed #22243, compiled files were not available on npm.  Highcharts v12.0.0 (2024-11-27) # Refactored the Series class to organize its data in a DataTable instead of parallel arrays. Removed the internal Series properties xData, yData, processedXData and processedYData, as well as some additional series-specific data arrays, in favor of Series.dataTable.Added support for data.x values as date strings. These can now be defined for example as '2024-10-03' as a more human readable alternative to timestamps. Also allowed date string in other options referring to x values, like xAxis.min, xAxis.max, series.pointStart, plotLines.value, Gantt series start and end, Axis.setExtremes() etc.Refactored all internal time zone handling with functions powered by Intl.DateTimeFormat.Added new option, lang.locale, to determine in what language dates are rendered.Added support for locale-aware date formatting through the Intl.DateTimeFormat browser API. Changed all default datetime format strings to locale-aware formats.Added ucfirst template helper function to allow upper case first in strings.Added support for string parameters in template helper functions.Added support for textOverflow: 'ellipsis' with texts and labels spanning multiple lines, as well as the lineClamp CSS property. This allows better control over the layout of axis labels and data labels.Changed the default chart font-family to better match system fonts and improve legibility.Changed the default build system to webpack, allowing for tree shaking in the build process and smaller builds.Improved default alignment of title, subtitle and the context menu button. Added new option, title.minScale.Added option legendColor to set legend symbol color as distinct from series color, see #21776.Added tweening support for 4 and 8 digit hex colors.Use Point instances as context for tooltip and data label formatters and formats.Added support for individual whisker length for box plots and error bars. See #21648.  Upgrade notes When importing Highcharts as a node module, additional modules no longer require initialization. Previously modules would be first imported, then initialized:// Imports for Highcharts v11
import * as Highcharts from 'highcharts';
import addAccessibility from 'highcharts/modules/accessibility';

addAccessibility(Highcharts); // <== This no longer works!
Since v12, the module will not return a factory function, so above code will cause an error. Instead, import it like this:// Imports for Highcharts v12
import * as Highcharts from 'highcharts';
import 'highcharts/modules/accessibility';
See the elaborate article in the docs.All date and time strings are now by default rendered in the web page's default language as set in the html.lang attribute, or falls back to the browser default. Setting lang.locale to en-GB will restore the labels approximately as they were prior to v12. For exact backwards compatibility, set all the time format options (xAxis.dateTimeLabelFormats, tooltip.dateTimeLabelFormats etc) back to their v11 defaults in addition.The time.getTimezoneOffset function callback no longer works. Instead, use the timezone option.All time-related options in the global group were removed. Use the time options instead.The data handling of the Series class has been rewritten to use the DataTable class directly. As a consequence, the parallel arrays storing the series data are removed, and replaced by Series.getColumn().Series.xData is replaced by Series.getColumn('x')Series.yData is replaced by Series.getColumn('y')Series.processedXData is replaced by Series.getColumn('x', true)Series.processedYData is replaced by Series.getColumn('y', true)The "Download PDF" menu item was removed from the default exporting menu, in preparation for a future update where exporting is done on the client side by default. The future update will require PDF download to either run via the export server like before, or to load a third party script. To re-enable the PDF download in the menu, add downloadPDF in the contextButton.menuItems.The HighchartModuleLoaded window event is no longer supported as we moved to webpack builds with tree shaking capabilites. Instead, extensions must rely on events and wrapped methods.The title.widthAdjust option is removed. Instead, use contextButton.buttonSpacing to make space for non-default context button.Titles and subtitles now have adaptive alignment. To revert to the pre-v12 defaults, set title.align and subtitle.align to center, and title.minScale to 1.The Point instances are now used as context for tooltip and data label formatters and format strings, instead of an abstract context object. In most cases this will cause no changes as the properties of the context object are now moved to the Point itself, but some changes may occur. Specifically the {point.x} key for points on a category axes will no longer return the category name. Instead, use {category}.  Bug fixes Fixed #21793, templating did not correctly parse sub expressions inside nested if conditions.Fixed #22188, graphs were clipped at the left side when zooming on a series containing zones, and the x-axis was of type category.Fixed #20550, centerInCategory did not work with multiple stacks.Changed default exporting.url to a more stable server, dedicated to SVG export only.Fixed #22187, word wrap failed for SVG when a word with markup fell at the breaking point.Fixed #22100, pie data label was cut off in some cases when rendered at the bottom of the pie. Altered positioning logic by letting labels gravitate towards the sides when there is space available, which also leaves room for the pie to render larger in limited space.Fixed #19335, accessibility focus border was incorrectly positioned in some edge cases.Fixed #21863, a regression causing the Boost module to fail with treemap series.Fixed #21890, scrollablePlotArea was not supporting parallelCoordinates.Fixed #21684, tooltip with outside did not receive css themes assigned to container.Fixed #21924, custom sizes in marker states did not work.Fixed #21098, corrections for ie11 compatibility fix.Fixed #21136, pointer events were called on points outside of plot area with scrollablePlotArea enabled.Fixed #21267, a regression causing elements to disappear when zooming on an X-range chart.Fixed #21804, columns were crisped to full pixel width even when the crisp option was explicitly false.Fixed #16931, errors in Chrome when modifying chart before printing the page.Fixed #21745, click event was fired on drag for multiple charts.Fixed #21530, tick values were padded onto user-defined category axes.Fixed #18461, changes to options3d alpha and beta were not applied to pie body.Fixed #21534, mouseover point event broke drilldown.Fixed #20470, allow values from nested properties in exported data.  Highcharts v11.4.8 (2024-08-29) #   Bug fixes Fixed #21165, series didn't render properly when the chart height was very large.Fixed #21106, series clipped on boost disabled and increased the chart size.Fixed #21734, minor ticks were wrongly distributed with multiple axes or when tickAmount was set.Fixed #21521, plot band labels and plot line labels would overlap if positioned too close. Added inside and allowOverlap options to the Axis.plotBands.label options.Fixed #20499, data labels failed to apply width in styled mode.Fixed #21205, offline PDF exporting was broken by attempted erroneous child node removal when the chart contained text paths.Fixed #21241, accessibility could not be dynamically enabled or disabled.Fixed #21188 and #21510, hidden divs with special CSS styles increased chart height by firing ResizeObserver.Fixed #21650, the data module was not successfully updating the x-axis in some cases.Fixed #21255, tooltip with outside rendered outside viewport, making document.documentElement expand.Fixed #21605, legend text was not vertically aligned with the symbol.  Highcharts v11.4.7 (2024-08-14) #   Bug fixes Fixed #21554, tab navigation was trapped in a loop after printing the chart.Fixed #20456, boosted heatmaps were not rendering in some cases.Fixed #21501, #21547 and #21569, various tooltip and interaction issues caused by a temporary pointerEvents fix for older Chromium.Fixed #21277, version and other metadata was not being replaced after building esm-modules.Fixed #21429, the rounded solid gauge series was misaligned when close to 100%.Fixed #21281, hovering line with split tooltip, then scatter, caused tooltip animation to start in top-left.Fixed #17854 , fillOpacity was too strong in boosted series.Fixed #9748, the mouseup event was not respected after setting the event.Fixed #21315 inverted bubble point halos were not positioned correctly.  Highcharts v11.4.6 (2024-07-08) #   Bug fixes Fixed #21470, bad require tagging causing bad module references.  Highcharts v11.4.5 (2024-07-04) #   Bug fixes Fixed #21446, a regression causing broken imports of modules due to bad relative paths.Fixed #21445, generated TypeScript declarations for deprecated option series.events.legendItemClick.  Highcharts v11.4.4 (2024-07-02) # Refactored the series.turboThreshold option to be more forgiving. Instead of failing with a warning message, the Series class now silently skips the fast looping of raw numbers and processes the object configuration instead, at a slight performance cost.Introduced new event and option legend.events.itemClick, deprecated events.legendItemClick. See #3957.Added new option treemap.traverseToLeaf which allows to drill into last possible leaf of Treemap series.  Upgrade notes Text path support is no longer part of the highcharts.js main bundle, but requires loading the modules/textpath.js bundle. It is however built into those series that use text paths by default.  Bug fixes Temporarily fixed #21144, workaround for a Chromium bug while touching and scrolling chart.Fixed #21098, various minor fixes for IE11 compatibility.Fixed #21302, added the description to all arguments in the Tooltip constructor.Fixed #20525, in boosted charts, markers were not being hidden when zoomed in series was hidden.Fixed #21174, stack labels were wrongly positioned for multiple x-axes in inverted charts.Fixed #21341, updating the height of a SVGLabel didn't occur immediately.Fixed #19224, treegraph data labels did not hide when allowOverlap was false. Implemented overlap detection for labels with text path.Fixed #21177, setting data to a hidden packed bubble series would throw error.Fixed #21124, special character broke string label templating format.Fixed regression after fix #20435, updating of existing point event didn't remove the old event.Fixed #20969, tooltip did not dissappear when hovering from one chart to another.Fixed #21245, points were wrongly positioned for multiple boxplot series.Fixed #20494, chart did not switch back to default config upon exiting responsive conditions.Fixed #21176, in boosted charts, the halo was wrongly animated for multiple series with multiple axes.Fixed #19944, error message "getAttribute is not a function" appeared in certain edge cases in Firefox.Fixed #16925, stacked area series with null data produced bad animation.Fixed #11794, max rendered series.lineWidth for boost was 1.  Highcharts v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts v11.4.2 (2024-05-22) # Fixed #21109, tooltip animation was not smooth. Added the option to set tooltip.animation as an animation object, not just a boolean as previously.Added new options pane.background.borderRadius, and plotBands.borderRadius for gauges.  Bug fixes Fixed #20451, legend.symbolWidth and legend.symbolHeight didn't change color axis dimensions if colorAxis.width or colorAxis.height were not set.Fixed #20876, redraw and drillupall events were called too many times during chart drill up.Fixed #5334, pixel alignment issues between grid lines, column series, error bars and scatter points.Fixed #20585, gap in the border at the bottom of bubbles at some sizes.Fixed #20729, pressing "enter" on a tabbed point resulted in different event than clicking it with a mouse.Fixed chart height docs, updated 500px-sample title, and added new demo showing height inherited from container.Fixed #18776, the series colors were not found when boosting multiple series in a single canvas in styled mode.Fixed #21125, a regression causing wrong positioning of bubbles in an inverted bubble chart.Fixed #20564, minus sign was displayed for the number zero if it was rounded from a negative value.Fixed #20816, time zone wasn't respected in Templating in format strings.Fixed #20804, setOptions didn't change radial axis defaults.Fixed #20146, dragging didn't work for the errorbar series.Fixed #20988, exporting chart, then dragging an annotation and exporting again used to cause wrong annotation position in the subsequently exported charts.Improved the default padding of axis labels, and fixed their collision calculations.Fixed #20998, data labels overflowed the plot area when the axis position was different from default.Fixed #20405, a regression in network graph. When dragging a node, others didn't follow.Fixed #20560, destroyed points in the area range series were wrongly used during mouse hover.Fixed #20656, series with manipulated points were missing a11y description on initial load.Fixed #20965, unwanted animation of right-aligned label when only the text changed.Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.1 (2024-04-04) #   Bug fixes Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.0 (2024-03-05) # Added new option sankey.nodeDistance and the possibility of setting sankey.nodeWidth to auto. The same option pair is also supported by organization chart and treegraph series.Enhanced the pinch zoom behavior to redraw the axes and series continuously. Previously it created a preview by scaling the graphs, then did a full review at the end. Also a deeper refactor and unification of the whole zoom, pan and mousewheel logic.Added new option organization.hangingSide which allows nodes to hang from the right side in inverted organization charts. See #17240.  Bug fixes Fixed #20334, chart width exceeded container width on Windows when the chart itself caused page scrollbars.Fixed #20572, destroying a chart after point hover sometimes produced an error.Fixed #15921 by applying fillColor to series from highContrastTheme.colors if set.Fixed #20166, ticks and gridlines were visible outside the axis in some corner cases.Fixed code scan issues 56, incomplete string escaping or encoding in SVGRenderer, and 72, incomplete multi-character sanitization in SVGRenderer.Fixed code scan issue 73, incomplete multi-character sanitization in SVGElement node title.Fixed code scan issue 90, permissive regex in mapcharts.js.Fixed code scan issue 111, potential prototype pollution in Utilities.ts.Fixed code scan issue 112, potential prototype pollution in NavigationBinding.ts.Fixed #20329, detached elements and events in the Accessibility module produced a memory leak.Fixed #20394, series.color only initially impacted the color of x-range points.Fixed #20435, point events update didn't work.Fixed #20516, this was not bound to plot line or plot band object in event callbacks.Fixed #20429, toggling bellcurve visibility threw error.Fixed #20440 and #20569, multiple series zones broke graph.Fixed regression since v11.3, column range series had area-style legend marker.Fixed #20433, boosted scatter chart did not work without axis min/max-options.Fixed #20307 and #20301, alignment and overlap detection for rotated data labels didn't work correctly.Fixed #19730, centerInCategory on inverted column chart had incorrect series order.Fixed #20264, the packed bubble series was not rendered correctly in an inverted chart.  Highcharts v11.3.0 (2024-01-10) # Implemented native handling of the time.timezone option, making the dependency on moment.js redundant.Added new options colorAxis.width and colorAxis.height, allowing absolute or relative size. See #17870.Added new option chart.axisLayoutRuns. It allows opting in for more predictable axis tick and label layout, at the cost of performance. See #19794.Added new default legendSymbol for area series and its derivatives.  Upgrade notes The exporting.formAttributes no longer works because the internal post function was replaced by the fetch API. The formAttributes option can for some purposes be replaced with exporting.fetchOptions. See the fetch article on MDN for more information about possible options.  Bug fixes Fixed #19169, the focusBorder was not removed from SVGElement after the element had been unfocused.Fixed #20319, funnel point path not rendered properly when the point's top coordinates were within top boundaries of the funnel neck.Fixed #20291, y-axis crosshair was missing for 3d column.Fixed #20340, histogram bins x2 value was wrongly calculated.Fixed #20191, exporting a chart using the export module caused beforeunload event to fire.Fixed #20142, pie selected point was semi-transparent on legend hover in styled mode.Fixed #18744, a point covered by an area series should be fully clickable if the tooltip shows.Fixed #20129, the lack of root and window in the NX environment was causing an error on load.Fixed #20097, script errors and invisible series in error bar with certain extremes.Fixed #19857, short x-axis labels disappeared in some edge cases when labels.autoRotation was set.Fixed #18804, zooming in below boostThreshold didn't disable boost on scatter series.Fixed #20120, data labels in packed bubble series were misaligned after updating the series position.Fixed #16920, formalized and fixed the data.columnTypes option.Fixed #17545, misplaced funnel and pyramid data labels after legend item click when dataLabels.inside set to false.Fixed #19497, some points disappeared when changing extremes of the category axes in boost.Fixed #20098, multiple data labels were not rendered when enabled in plotOptions.Fixed #19895, removing a series while rendering in boost mode could cause a TypeError.Fixed #20002, stroke wasn't applied to annotations during offline PDF export.Fixed #19976, columns threw off center when using mouse wheel zoom.Fixed #19621, errors instead of expected behavior when using arrow-keys to navigate first and last items in legend.Fixed #19130, negativeColor was applied to positive graphs for the part of the line that extended below the threshold.Fixed #19604, ticks were sometimes differently calculated after a series update.Fixed #20007, contrast color setting for data labels did not respect their background colors.Fixed #19946, nodes in the organization chart weren’t centered while using node width or height options.Fixed #19917, setting options in a series without series.data would add default aria-label.  Highcharts v11.2.0 (2023-10-30) # Upgraded the build pipeline to benefit from new language features. Bundles are now compiled to ES2020 by the TypeScript compiler (*.src.js files), and minified by swc (*.js files).Added support for multiple data labels on pie slices.Added new option, sankey.nodeAlignment for the Sankey series to specify which side of the chart nodes should align.Added new option, sankey.linkColorMode.Added feature to allow different symbols for upper/lower markers in area range and dumbbell charts. See #14024.Set the default series.lineWidth of line graphs to 2px for better accessibility.  Bug fixes Fixed #19552, treegraph was losing node parent during export.Fixed #19885, axis.breaks didn't work with zooming.Fixed #13240, using default data labels alignment for bubble series.Fixed #19826, Lollipop grouping didn't work correctly.Fixed #19934, CSV export was broken in Safari.Fixed #19480, added missing TypeScript definitions for PlotLineOrBand properties.Fixed #17820, clip rect did not take into account boosted navigator.Fixed #17014, boostThreshold with null point threw an error.Fixed #19762, offline export PDF documents didn't scale.Fixed #19671, treegraph was throwing an error when setting legendSymbol to lineMarker.Fixed #14108, start and end dates in exported CSV data for X-range series.Fixed #19744, series' clip option was not working in polar charts.Fixed #19725, drilling between cartesian and non-cartesian series didn’t work properly.Fixed #19692, mouse wheel zoom was enabled even when general zoom was not.Fixed #19253, Offline Export did not work for boosted series.Fixed #18062, pinch to zoom didn't work on Android Mobile devices after any click on the chart.Fixed #19314, tooltip chevron was cut off when outside was enabled.Fixed #19616, breadcrumbs disappeared when invoking chart.update in sunburst and treemap.Fixed #19362, x-range series tooltip lost its correct default date and time formatting.Fixed #19148, NaN x value disabled area chart graphic elements.Fixed #19457, multiple dataLabels enabled/disabled threw render (console) error.Fixed #19524, treegraph links weren't disappearing after calling setData.Fixed #19343, tooltip positioning on xrange points lying on shifted axes.Fixed #19368, TreeGraph chart displayed extra node expander for hidden child when levels collapsed. Also fixed collapseButton visibility.Fixed #19341, null points could be hovered in the boost module.Fixed issue with missing points in boosted heatmap with interpolation set to true.Fixed #18988 and #17594, vertical and horizontal offsets for inverted Sankey and Organization charts didn't work correctly.Fixed #19516, read-only CSS properties weren't excluded during the export of the chart.Fixed #19217, mobile pinch on inverted charts flipped the chart.Fixed #19203, plotOptions.series.pointStart couldn't be updated more than once.Fixed #18815, boostThreshold set for one series boosted all series.Fixed #19374, disabled keyboardNavigation didn't remove the exit anchor.Fixed #19465, wrong property in numberFormatter API demo.Fixed #19412, chart.zooming.resetZoom position settings were overwritten by the deprecated parameter.Fixed #19110, chart's height, and minLinkWidth misaligned sankey links.Fixed #19178, some yAxis options were disappearing after mouse wheel zoom.Fixed #19200, styles were not applied to the annotation label when useHTML was enabled.Fixed #19202, excluded events.legendItemClick from item series API.Fixed #19179, changing the crop property on annotations through annotationOptions in the chart config did not work.Fixed #15441, auto-scroll did not follow tooltip when navigating with keyboard while zoomed in.Fixed #17170, data labels with outline or shadow were misplaced in PDF files exported using the offline exporting module.Fixed #19002, with a11y enabled < sign was stripped, causing issues with screen readers.Fixed #19027, a regression in v11 causing the chart to redraw twice on updates that triggered a resize of the container.Fixed #19078, proximate legend did not work after updating the legend.enabled property.Fixed #19093, SVG <filter> issue with shadow enabled on line series when points had the same x or y value.Fixed #19134, color and symbol changed constantly for the same series after every drill-up.Fixed #19127, centerInCategory was not working for column pyramid.Fixed #19035, tooltip tap or click stopped working after pinch zoom in iOS.Fixed #19143, a regression causing incorrect series name from CSV for packed bubble series.  Highcharts v11.1.0 (2023-06-05) # Added support for mouse wheel zooming through chart.zooming.mouseWheel. This feature is embedded in the Highcharts Stock bundle, but requires an additional module file for the Highcharts bundle.Added the heatmap.interpolation option for creating smooth heatmaps.Added new function, Chart.getOptions(), to get the current active configuration options for the chart.Added the treegraph.fillSpace option for treegraphs to fill the whole plot area even when some points are collapsed.Added borderRadius option support for funnel and pyramid series. See #18839.  Bug fixes Fixed #18869, redundant chart redraws on changing title, subtitle or caption font size, or top level chart font size.Fixed #19017, failure in parsing negative numbers with spaces in the data module.Fixed #19053, a regression since 10.3 causing item series update not to work correctly.Fixed #19051, axis crossing was not always correct.Fixed #18985, updating enableMouseTracking from true to false didn't work.Fixed #17589, update of multiple data labels didn't work in specific conditions.Fixed #17791, pointRange wasn't calculated for multiple series with single points.Fixed #19028, border radius was wrongly applied for negative column points when the zoneAxis option was x.Fixed #12063, packed bubble parent nodes had a bad position after width update.Fixed #18891, invisible data labels in treegraph series reacted to hover.Fixed #18960, a regression in v11, wrong placement for data labels in dumbbell series.Fixed #18110, yAxis.maxPadding was ignored when yAxis.softMin was set.Fixed #18956, a regression causing small sankey nodes rendering as circles.Fixed #18876, updating the tooltip didn't work when wasn't declared in the chart configuration.  Highcharts v11.0.1 (2023-05-08) # Added new option, xAxis.crossing and yAxis.crossing, making it easier to create axis layout for mathematical plots.Added new option, series.legendSymbol. See #18753.  Bug fixes Fixed #18884, sunburst circular labels did not work when the difference in value was small.Fixed #18928, a regression in v11 causing the tooltip to not display in subsequent charts when the first chart in the web page was hidden.Fixed #18821, hidden overlapped data labels with useHTML on were still active for the mouseover event.Fixed sonification issue where resuming after pause ignored the original onEnd argument.Fixed too low contrast for credits in High Contrast theme.Fixed #14602, arearange series.label.onArea was not implemented.Fixed #18856, the last point wasn't displayed while hovering in the boost module.  Highcharts v11.0.0 (2023-04-25) # Design facelift with clearer, more vivid palette, added contrast for text labels and many minor visual changes.Added new series type, treegraph. Read more in the docs.Added new series type, pictorial.Removed support for IE 8 and older.Changed the default builds to ECMAScript version ES2016.Replaced SASS files for styledMode with updated CSS files. Highcharts theming is now easier by supporting CSS variables as well as prefers-color-scheme. See style by CSS.Sonification module v2 with many new features for audio charts, now part of the official API.Changed default rotationMode to circular for sunburst data labels.Added minorTicksPerMajor option for axes, see #13338.Added the point.percentage property for gauge charts, see #18433.Added ResizeObserver to the chart so it could adjust reflow on container size change, closes #17924.  Upgrade notes To revert to the old design, use the theme defined in the v10 theme sample.Font sizes of the chart are now using rem by default. This may cause too small or too big fonts if your web page is using non-default root element font size. To avoid that, set chart.style.fontSize to 16px or any other values you see fit.The top-level labels option has been deprecated for a long time and is now removed. Use Annotations instead.Time-related settings on the global options structure are removed. Use the time options instead.The new version of the sonification module is not backwards compatible with the old, experimental module.The default builds were changed to ECMAScript version ES2016. See the system requirements on how to support IE11 and other legacy browsers.If you're using chart.styledMode, and your end users have prefers-color-scheme set to dark in their browsers, they may now be presented with dark-themed charts. The exception is if your CSS overrides the default coloring.Changed default rotationMode to circular for sunburst data labels.  Bug fixes Fixed #18790, custom symbols were incorrectly positioned in some cases.Fixed #18103, Y zoom while panning on top of the plot when chart inverted was not working.Fixed #18066, after updating the series data to one point with category xAxis there were unwanted labels.Fixed #17720, the tooltip with enabled outside and split properties was badly positioned for some series.Fixed #18693, tooltip.stickOnContact threw errors on hover between one series with followPointer set to true and the second series followPointer set to false.Fixed #18741, incorrect guide box behaviour while dragging stacked bars.Fixed #14080, bubble legend didn't work correctly if the legendItemClick event for one series was prevented.Fixed #18635, bad tooltip position in an inverted chart inside a scrollable container when tooltip.outside was true.Fixed #17614, timeline styled mode default colors.Fixed #18617, stack labels in inverted charts were mispositioned in the y axis.Fixed #18636, waterfall lines missing when there was a null point.Fixed #17168, the Sunburst series didn’t work properly when the chart was inverted.Fixed #17257, item chart points color wasn't updating.Fixed #17280, bubbles with z: 0 caused points to disappear.Fixed #16516, legend symbol height didn't accept 0 as a value.Fixed #18501, vertical alignment of stack labels didn't work with logarithmic axes.Fixed #18502, pointPadding for heatmap series wasn't working with reversed axes.Fixed #18444, a polar chart with type "bar" and data labels caused JavaScript error.Fixed #17912, column range points were not aligned with column points.Fixed #18443, the className property in guideBox didn't work for drag & drop.Fixed #10005, wrong series name and legend item by using data.seriesMapping property.Fixed #18422, stacked polar column chart with zero value rendered a wedge across the whole y axis.Fixed #16675, adding annotation from a custom button was not possible if the button had a custom SVG symbol.Fixed #18305, updating series marker size was not working if the initial size was not set.  Highcharts v10.3.3 (2023-01-20) # Added /es5 path for legacy script files on code.highcharts.com and in the npm package, see #18070.Added new option, exporting.allowTableSorting, to allow turning off sorting of the data table. See #18007.  Upgrade notes In Highcharts version 11, released at the earliest March 1 2023, the main script files at code.highcharts.com and npm will be compiled for evergreen browsers. This includes files like highcharts.js, modules/exporting.js, accessibility.js etc. Should you need to continue supporting browsers more than three years old, like IE11, we will provide legacy script files in the /es5 folder. These files are now available, and we recommend you do the switch before the release of version 11. See a live example, or read the details at #18070.Lollipop series data values should now be given as y, not as low. See live demo.  Bug fixes Inheritance refactor of Lollipop series, #14103.Fixed #17888, plot line labels with align: 'right' and textAlign: 'left' weren't displayed. Added clip option for labels to allow displaying outside the plot area.Refactored how the position of stack labels is calculated. Closed #16764, #12133, #15129 and #17116.Fixed #17998, setting linecap wasn't reflected in legend items.Fixed #14114, color axis marker color did not get applied to most series in styled mode.Fixed #16274, custom marker symbol size was not being updated.Fixed #18212, long treemap data labels with useHTML set to true were wrongly positioned.Fixes #18147, some data labels weren't rendered correctly in polar charts.Fixed issue with series label overlapping data labels.Fixed #16944, wrong tooltip position when using the positioner callback and outside: true.Fixed #18168, legend item was mispositioned if the related series was located at the top of the chart and proximate layout was enabled.Fixed #17948, the tooltip position was bad when yAxis.reversedStacks was set to false.Fixed #17314, chart.alignThresholds and stacking were not working correctly together.Fixed #18116, the central data label in sunburst series was too short.Fixed #18080, hovering over area range points after zoom reset was throwing errors.Fixed #18145, boost module couldn't render series with colour set to grey.Fixed #18127, a regression causing an unintended border on data labels when setting backgroundColor and borderColor but no explicit borderWidth.Fixed #17856, line color in hover state did not work as expected in heatmap.Fixed #17933, x axis labels had incorrect styling after drilling down.Fixed #17963, breadcrumbs' position and display were incorrect when scrollablePlotArea was enabled.Fixed #17970, wrong color on heatmap point when updating from null to a valid number.  Highcharts v10.3.2 (2022-11-28) # Refactored and simplified series group inversion logic. It is now simpler and more lightweight, and allows animating the transition between a non-inverted and inverted chart.  Bug fixes Fixed #17815, the tooltip didn't receive styling from series.options.className in styledMode.Fixed #17957, data labels disappeared on point hover when marker.enabled was set to false.Fixed #17991, adding an invisible series caused error upon attempted exiting of fullscreen, when pattern-fill was set.Fixed regressions with missing tooltip on organization chart and sankey chart nodes after v10.3.0.Fixed #17753, removed not allowed < symbol from attributes.Fixed #17902, in stacked waterfalls, the x value was not available for the context of stackLabels.formatter.Fixed #12133, stack labels alignment was wrong when scrollablePlotArea was enabled.Fixed #17878, column series cursor was incorrect after plotOptions update.Fixed #12416, tooltip did not update when scrolling scrollable plot area.Fixed #17952, added TypeScript support to package files in es-module/masters.Removed stroke/stroke-width workaround for older browser bug.  Highcharts v10.3.1 (2022-10-31) # Files of v10.3.0 were missing from npm.  Highcharts v10.3.0 (2022-10-31) # Added new feature, zooming on polar charts. See #16992.Added new feature, series.label.useHTML to support HTML formatting in series labels. See #17282.Made the legend items of venn diagrams list the names of points instead of the names of series, see #17113.Changed the default values for dependency wheel data label vertical positioning.  Bug fixes Fixed #17839, spacebar would not toggle items in the legend when using the accessibility module.Fixed #17538, export failed in Firefox using styled mode and CSS variables.Fixed #17315, item series custom marker was stretched after redrawing.Fixed #14226, auto rotation of tick labels didn't work when step set to 1.Fixed #17685, the tooltip sometimes got stuck when combining the useHTML and stickOnContact options.Fixed #17177, updating tooltip.followTouchMove didn't work.Fixed #17785, a regression causing drag and drop of bubbles between packed bubble groups to fail.Fixed #17630, making it possible to display percentage values when hovering over a boosted stacked point.Fixed #17288, pie chart shadows were not applied on update.Fixed #17639, exporting feature was removing duplicated points.Fixed #17677, a regression causing text and outline out of alignment for sunburst data labels.Fixed #17610, centerInCategory did not consider columns with the same x-value when centering them.  Highcharts v10.2.1 (2022-08-29) # Refactored zoom options, introduced new object structure as chart.zoom.Added Highcharts.Series.types and Series.registerType(type, class) for custom series, see #17551.  Bug fixes Fixed #17413, data labels contrast color omitted the chart background.Fixed #17547; if chart.zoomType option is set, boosted rendering will not be forced as long as threshold is not reached.Fixed #17627, single quoted attributes were not recognized and caused color style not to apply in tooltips.Fixed #15752, arearange didn’t work in parallel coordinates.Fixed #17442, color axis data classes were not keyboard navigable.Fixed #17438, updating points with the category axis gave the wrong x position.Fixed #17486, bubbleZExtremes was not removed when the bubble series was removed.Fixed #17481, zones clip was incorrectly calculated and the line was partially missing when scrollablePlotArea was enabled.Fixed #17484, changed the link opacity on hover in organization series.Fixed #17472, shared tooltip did not work in polar charts.Fixed #17359, stickyTracking was not respected correctly for polar charts.Fixed #17401, console error from accessibility module when using numeric point id.  Highcharts v10.2.0 (2022-07-05) # Added option to sort the chart data table by clicking the column headers. See #16972.Added RTL support for breadcrumbs, see #17340.Added new feature, series.onPoint, allowing to display some series types (e.g. pie) over a point with a given id. See #12526.  Bug fixes Fixed #17273, data labels did not always have enough contrast. Ensured maximum contrast according to W3C's relative luminance.Fixed #12206, xAxis.labels.y did not adapt to multiline labels when xAxis.opposite was true.Fixed #17281, an error in console when bubble with custom marker exceeded the zThreshold.Fixed #17285, made the opacity property work for different states in the sankey series.Fixed #17167, legend title didn't hide when chart data was empty.Fixed #17336, hover state was only applied once to buttons.Fixed #11816, in gauge series, added dial path into API documentation.Fixed #17352, the tooltip was not visible after updating scrollablePlotArea.Fixed #17381, generic class names in data table conflicted with commonly used classes in CSS.Fixed #17186, CSV rows were missing delimiters when data was missing at the end of a row.Fixed #17236, timeout for accessibility module warning caused test issues.  Highcharts v10.1.0 (2022-04-29) # Added allowMutatingData chart property to prevent data mutation while updating series or point. See #4259.Added new option, accessibility.point.describeNull.Added new fullscreen events, fullscreenOpen and fullscreenClose, callback functions to modify chart options during toggle fullscreen mode. See #16968.Added warning by default when the accessibility.js module is not loaded.Added new option, accessibility.series.descriptionFormat.Improved the theme colors for high contrast light and high contrast dark to show more hue variance.Reduced verbosity of accessibility information by default.Changed the default value of SVGElement.show's inherit argument to true.Added option to remember keyboard focus for points: accessibility.keyboardNavigation.seriesNavigation.rememberPointFocus.Added new option pie.thickness describing thickness ring of pie. This option takes precedence over pie.innerSize. See #6647.  Bug fixes Fixed #8324, an error was thrown when calling drillUp() after chart.applyDrilldown().Fixed #17188, an incorrect breadcrumbs list was generated when drilling down the axis category.Improved default behavior of accessibility module with axis descriptions as well as landmark roles.Fixed #15178, warning of invalid attribute for Reset Zoom button.Fixed #17146, a regression in v10 with parsing of HTML with inline style rules containing a colon.Fixed #14320, the table was not re-rendered after a data update.Part of #15863, the scrollbar is no longer initially rendered with y: -9999.Fixed #9687, vertical data label suppressed when close to the right edge of the plot area.Fixed #17100, excessive padding in some cases when tickAmount was set.Fixed #16921, regression causing the wrong size of a hovered heatmap cell after zooming in.  Highcharts v10.0.0 (2022-03-07) # Adde new series type, arc diagram.Added breadcrumbs functionality for drilldown charts as well as hierarchical series like treemaps and sunburst. This replaces the drill-up and traverse-up buttons.Added new feature chart.alignThresholds for aligning the thresholds in charts with multiple axes.Added new options hangingIndentTranslation and minNodeLength for Organization chart, for improving the layout of deep structures. See #13915.Added new option Highcharts.AST.bypassHTMLFiltering for disabling AST filtering.Added option, boost.pixelRatio, providing Retina and device pixel ratio support to the Boost module.Added areaspline series to the supported series in the Boost module, see #8288.  Upgrade notes In an organization chart, children of a parent with hanging layout will now inherit this layout. To prevent this, set layout = "normal" for these nodes.The drilldown.drillUpButton options set is deprecated and replaced by drilldown.breadcrumbs. Some but not all settings are backwards compatible. See our demo of mimicking the legacy button style with breadcrumbs. The same is true for treemap.traverseUpButton.The offline exporting module now requires version 2 of jsPDF and version 2 of svg2pdf when exporting to PDF. Our own CDN, downloads and packages are updated, but if you're loading old releases from elsewhere, it will fail.  Bug fixes Fixed #15133, data labels were missing the fade-in effect upon drilling down.Fixed #16470, setting custom drag handle cursor in options.Fixed #16873, Windows High Contrast Mode not detected in non-Microsoft browsers.Migrated global win to window. This will mask the global window object in every Highcharts bundle, so that always Highcharts.win === window.Fixed #16788, accessibility issue with some columns not being focusable because of wrong point.isInside flag.Fixed #16431, data points were trimmed due to axis floating-point rounding.Fixed #6884, console errors related to style attributes because of Content Security Policy.Fixed #16979, only one point per x value was shown when stacking set to percent.Fixed #16974, esc keypress keyboard focus issue with multiple charts on the same page.Fixed #16818, issue with keyboard navigation and legend.labelFormatter.Fixed #14175, enabling and disabling dataLabels.rotation misplaced data label's position.Fixed #16474, added missing click event callback on sides of the 3D pie slices.Fixed #16893, series.findNearestPointBy set to xy was not working well with Boost.Fixed #16791, exporting a chart in styled mode on Safari v15 produced a black image.Fixed #11712, in node-based series types like dependency wheel and network graph, calling node.update() in the afterAnimate event would throw errors.Fixed #16339, keyboard focus management issues with fullscreen change.Fixed #16884, smarter defaults for accessible point descriptions.Fixed #16045, tooltip with opacity was not fully hidden when hovering over a reset zoom button.Fixed #6417, added support for non-ASCII characters (Chinese, Russian etc) in exported PDF via the new exporting.pdfFont property.Fixed issues with data.enablePolling and Google Sheets.Fixed issue with data module updates when dataGrouping options were present.Fixed #16820, adding drilldown series on point mouseover threw an error.Fixed #16169, stack order was affected when centerInCategory enabled and reversedStacks set to false.Fixed #16479, resetZoomButton was not visible after drilling up to a level with zoom.Fixed #16568, setting data options with Highcharts.setOptions did not work.Fixed #16135, after drill-up, the series did not go back to its original state.Fixed #16589, SVG export broken when accessibility module was included.Fixed issue on mobile where a point would be highlighted visually after drilldown with a11y module loaded.Fixed keyboard nav issues #16633, #16634, #16625.Fixed legend keyboard navigation issues #16520, #16545, #16467.Fixed #16497, legend keyboard navigation caused page scroll with container scaling.Fixed #10525, setting tickPositions to undefined didn't clear options.Fixed #16697, legend item style changed when using the keyboard to focus it.Fixed #16596, the first column point of categorized x-axis wasn't draggable.  Highcharts v9.3.3 (2022-02-01) #   Bug fixes Fixed #16339, keyboard focus management issues with fullscreen change.  Highcharts v9.3.2 (2021-11-29) # Added support for Trusted Types, a browser standard for preventing cross-site scripting vulnerabilities.  Bug fixes Fixed #16398, spacing was incorrect for legend items without a name.Fixed issue with data module updates with firstRowAsNames enabled.Fixed #16665, a regression causing updating of dataLabels.useHTML not to take effect.Fixed #16562, Windows high contrast mode keyboard navigation issues.  Highcharts v9.3.1 (2021-11-05) # No changes for the basic Highcharts package.  Highcharts v9.3.0 (2021-10-21) # Added new offset options for nodes in Sankey and Organization chart, nodes.offsetHorizontal and nodes.offsetVertical. See #15225.Added new option, annotations.crop, allowing to hide annotations outside the plot area. See #15399.Allow removing accessibility information sections by setting section formats to null.Support series.accessibility.point options matching the top level accessibility.point options.Support pageUp/pageDown in legend keyboard navigation for scrolling between legend pages.Improvements to series keyboard navigation, now supporting End/Home/PgUp/PgDown keys.  Bug fixes Fixed #12169, allowing Blob offline export in Firefox.Fixed #16150, pyramid shape was incorrect for inverted charts when yAxis.width set.Fixed #16275, ticks on the axis weren't displayed when their value was too high.Fixed #16165, border radius disappeared after hovering a point in heatmap.Fixed #13780, tooltip was mispositioned when yAxis was reversed.Fixed #12828, click event on point wasn't working on IE with color axis.Fixed issue #15876, DOM order not following keyboardNavigation.order.Fixed #11756, adding image without optional parameters threw an error.Fixed #15480 and #16052, disabled point markers sometimes appeared on redraw with accessibility module loaded.Fixed #13683, the last row of items in a paginated legend was not fully visible in edge cases.Fixed #16004, a regression causing shared tooltip not to show for some axes with multiple differently positioned axes.Fixed #16245, automatic minRange did not consider floor/ceiling.Fixed #12961, the chart crashed when axis.tickInterval was negative.Fixed #15117, pointStart and pointInterval did not work with turboed 2d array data.Fixed #16143, offline exporting hidden boosted series threw error 28.Fixed #16176, funnel data labels with rotation set showed console error.  Highcharts v9.2.2 (2021-08-24) # Added internal support for Google Sheets API v4, fixing stability problems with loading data from spreadsheets.  Upgrade notes Existing setups with Google Sheets stopped working in August 2021 as Google phased out version 3 of their Google Sheets API. Highcharts has now been upgraded to version 4 of the API, but this will not work unless an API key is given in the data.googleAPIKey option. See the comprehensive tutorial from Hands-On Data Visualization on how to obtain the key. Additionally, data.googleSpreadsheetWorksheet is deprecated and replaced by data.googleSpreadsheetRange, which allows for more detailed instructions on what data to load.  Bug fixes Fixed #16231, a regresssion in v9.2 causing exporting not to work with styledMode enabled.  Highcharts v9.2.1 (2021-08-19) #   Bug fixes Fixed additional case for #15235, nested whitespace got removed in HTML.  Highcharts v9.2.0 (2021-08-18) # Improved ES module architecture with support for tree shaking of the most commonly used modules. See #8667.Added new feature, series.relativeXValue, allowing point X values to be relative to the series.pointStart and subject to series.pointInterval and series.pointIntervalUnit.  Bug fixes Fixed #15938, charts still crashed in some legacy browsers where Intl was missing.Fixed #15235, whitespace between HTML elements got removed.Fixed #15986, accessibility exit anchor disappeared on Chart.update.Fixed #15229, accessibility region labels were sometimes duplicated.Fixed #16119, touch scrolling was blocked after zooming when single-finger panning was not enabled.Fixed #16146, negative values broke sunburst chart.Fixed #16153, fontFamily reset when updating chart.style.Fixed #16126, printing chart in full screen with accessibility loaded threw.Fixed #16112, axis options set by setOptions were not picked up by polar chart when chart axis options were set as an array.Fixed #16104, chart warned about unsorted data when updating category names.Fixed #14143, #14434, #13310, tooltip with stickOnContact and useHTML or outside enabled did not work properly.Fixed #16080, #13705, sankey chart with self-referential points broke on redraw.Fixed #16084, #13671, updating timeline chart did not work properly in some cases.Fixed #15334, some waterfall data labels did not show for points below threshold.Fixed #16062, lines after the first line break in text with useHTML set to true were misaligned in exported charts when exporting.allowHTML was set to false.Fixed #16053, color axis disappeared after toggling legend.Fixed #16044, draggable point guide box was not big enough when the point was partially outside the end of the axis.Fixed #16042, 1px gaps showed between some xrange points when there was no gaps in the data.Fixed #1441, datetime axis ticks did not get date/time formatting applied when tickPositions were set.Fixed #15777, plot line labels were not clipped.Fixed #13840, 3d column chart with scrollbar showed points outside plot in upper left corner.Fixed #15983, event did not get removed when updating it to undefined.Fixed #15973, word cloud focus border position for rotated points was wrong in Firefox.Fixed #12015, linked series did not get inactive state applied when hovering legend item.Fixed #15946, unchanged markers set in options did not animate when updating data through update.Fixed #15449, HTML in exporting menu item text did not work.Fixed #15922, heatmap data labels with useHTML enabled and default formatter did not work, per-point borderColor and borderWidth did not work.Fixed #15902, legend proxy buttons did not update when updating series.Fixed 3d bug, z-axis updated twice on Chart.update.Fixed #15862, Chart.update with oneToOne attempting to remove pane threw.Fixed #9047, boosted series with null points showed warnings in some browsers.Fixed #5430, marker shown on hover with disabled markers missed CSS class.Fixed #15909, pie point with visible set to false and useHTML data labels threw.  Highcharts v9.1.2 (2021-06-16) # Exposed Point.doDrilldown and Axis.drilldownCategory as official API methods.  Bug fixes Fixed #15841, a regression causing charts to crash some browsers where Intl was missing.Fixed #15869, boosted rendering sometimes crashed with multiple different chart types.Fixed #15845, selection marker showed without mousedown after export.Fixed #15843, shared tooltip with stickOnContact enabled did not always update position.Made default pattern-fills more subtle and usable. Changed accessible-pie demo for better pattern handling.  Highcharts v9.1.1 (2021-06-04) # Added new option for bullet chart, targetOptions.borderRadius. See #15649.Improved legend accessibility by placing legend buttons in a list.  Bug fixes Fixed #15401, console warning when loading funnel 3D module, tableValues invalid attribute.Fixed #15757, heatmap.borderRadius did not work.Fixed #14780, offline exporting charts with HTML content to PNG or JPEG fell back to the export server even in browsers that supported it.Fixed issue with extraneous table caption HTML encoding in the export data module.Fixed #15701, tooltip text alignment broke when setting font size.Fixed #15811, setting title.verticalAlign to middle did not vertically center the title completely.Fixed #15667, scatter line showed on hover after updating lineWidth to 0.Fixed #15639, error when calling removePlotBand after destroying Axis.Fixed #9612, panning after zooming sometimes broke with pointPlacement set to on or between.Fixed handling of local time with Safari 14.1.Fixed #15771, drilldown failed when points were cropped from the start of the series.Fixed #14403, tooltip covered interactive elements like the legend, buttons or annotations. Added a CSS class, highcharts-no-tooltip that can be applied to elements to prevent the data tooltip covering them.Fixed #15746, heatmap select state color did not work correctly.Fixed #15708, heatmap null points missed highcharts-null-point class.Fixed #15698, Highcharts instance was accessed incorrectly on error.Fixed #15325, panning multiple axes did not work.Fixed #15685, boosted scatter chart with empty first series rendered ghost points.Fixed a scrollablePlotArea regression, tooltip did not show sometimes.Fixed #15646, zones with no color set were invisible in boosted chart.Fixed #15640, legend items lost disabled state on keyboard navigation.Fixed #15654, shadow offset did not get applied on inverted charts.Fixed #15636, draggable point guide box was not big enough when the point was not fully inside.Fixed #15607, random stack labels with the value 0 showed when zooming in.Fixed #15521, inactive state remained on points after exiting chart with keyboard navigation.  Highcharts v9.1.0 (2021-05-04) # Added text to axis label context, making it possible to insert the default formatting inside labels.format.Added additional item object context for lang.accessibility.legend.legendItem.  Bug fixes Fixed #14966, selected null points generated NaN values in the SVG.Fixed #9549, column drag handle was not visible with reversed Y axis.Fixed #15291, inconsistent addition of symbols definitions in the SVG renderer.Fixed #15528, labels.allowOverlap set to false stopped working for axis tick labels after update.Fixed #11493, #13095, tooltip showed outside axis and plot bounds.Fixed #15520, space key fired legend item click twice in Firefox.Fixed #15523, negativeColor did not work for lollipop series.Fixed #15525, clicking data label did not drill down line and area series.Fixed #15560, dumbbell connectors remained visible after changing series type when markers were not rendered.Fixed #15555, removing dependency wheel points during animation threw.Fixed #15547, bullet target disappeared when combined with rounded-corners plugin.Fixed #15537, some data updates while dragging point threw.Fixed #13943, split tooltip was rendered to wrong side on smaller charts.Fixed #15534, updating area series containing null data to no data threw.Fixed #15509, <u> tag not working with useHTML.Fixed a regression, area series with empty data caused SVG error.Fixed #15488, square shape did not support rounded corners.Fixed #15489, polar spline series with null data did not render path.Fixed #15416, #15413, heatmap keyboard navigation not working after mouse interaction, and backwards navigation not working as expected.Fixed #15343, regression with treemap and sunburst keyboard navigation.Fixed #15447, wordcloud keyboard navigation, and added support for making the chart container a separate tab-stop.Fixed #15463, legend symbolWidth did not correctly default to symbolHeight.Fixed #11336, no tooltip showed when hovering very small chart.Fixed #15436, previous legend items remained visible after dynamically adding color axis.Fixed #15434, plot band was not completely hidden when hiding series.Fixed #15438, polar chart with null data and accessibility module loaded threw.Fixed #15420, series with zones or negativeColor enabled leaked memory on update.Fixed #15412, some charts showed non-passive scroll-blocking warnings.Fixed #10464, halo position was wrong when using boost with multiple axes.Fixed #15392, boosted chart with empty data showed turbo warning.Fixed #15382, updating polar column to zero value did not work.Fixed #15377, inactive state with 0 opacity applied due to inactiveOtherSeries being true did not work for data labels and connectors.Fixed #15359, wrong BubbleLegend color in styledMode.Fixed #14882, stacked area and connectNulls sometimes did not work correctly together.Fixed #14906, split tooltip flickered with followPointer enabled.Fixed #15160, inactive state was not always cleared on touch devices when clicking outside the chart.Fixed #15188, added error display fallback to the most recently added chart for debugger module.Fixed event handler leaks in fullscreen module, flags series and scrollablePlotArea.Fixed #15018, tooltip split, outside and useHTML did not work together.Fixed #13449, updating dataLabels.allowOverlap did not work.Fixed reset zoom and drillup button alignment after plot size changes, button alignment did not update when the plot size changed due to hiding or showing elements such as legend or title.Fixed #15179, crisping did not work correctly for subpixel radius markers.Fixed #15260, networkgraph point className option did not work.Fixed #15162, in styled mode, the font-size of the subtitle was not used like defined in Sass file.Fixed #15234, #15213, #13492, #2022, axis options passed in when creating chart got mutated.Fixed #15217, bar chart tooltip position was wrong with centerInCategory enabled.Fixed #13646, the color option did not take effect in empty pie series.Fixed #13572, area series fill was not closed, making it hard to add a stroke for the area itself.Fixed #11687, drillUpButton did not have a fixed position when using scrollablePlotArea.Fixed #15134, updating networkgraph series color did not work.Fixed #14980, toggling stacking with centerInCategory enabled did not work.Fixed #15145, some data labels did not show in percent stacked bar or column charts when points were partially outside axis extremes.Fixed #9998, exporting menu was clipped below the chart.Fixed #10159, updating treemap data while traversed down threw.Fixed #11293, boosted chart rendered duplicate series when combined with responsive options.Fixed #15069, panning default type was missing.Fixed #14439, simulation of packedBubble stopping too early.Fixed #14448, #11614, drillup button disappeared when combined with a vertical scrollablePlotArea on inverted charts.  Highcharts v9.0.1 (2021-02-16) # Exposed Highcharts.AST and provided samples of overriding the HTML allow lists.Auto compute heading level for the pre-chart accessibility description.Added success callback for exportChartLocal, see #11403.  Bug fixes Fixed #12422 and #9124, un-boosted graphics remained visible after resetting zoom on boosted charts when using zones.Fixed #12517, resetZoomButton did not show when using scrollablePlotArea.Fixed #15045, centerInCategory did not work with columnrange series.Fixed #11909, updating boost options did not work.Fixed #12031, tooltip distance did not scale correctly with outside set to false.Fixed #12047, some columns were not completely vertical when using boost with useGPUTranslations set to false.Fixed #12061, stroke-width animation did not work when using zones.Fixed #13222, chart size was wrong after exiting fullscreen.Fixed #15022, vertical panning was limited to the first series extremes after zooming in.Fixed #15037, a regression causing failure with text parsing in PhantomJS.Fixed #8862, #12112, y-axis did not stay fixed after update when using scrollablePlotArea.Fixed #15009, setting className on points in venn series did not work.Fixed #12548, 3d scatter chart rendered no points when the first point had z set to null.Fixed #14973, pattern fill failed to render when <base> tag was present and window.location was manipulated via history.pushState.Fixed #14395, updating colorAxis legend layout did not work with non-cartesian series.Fixed #14954, offline export with styledMode enabled sometimes failed in IE.Fixed #14110, hovering labels with useHTML set to true threw in IE.  Highcharts v9.0.0 (2021-02-02) # Improved security by filtering all HTML configuration strings and abstract syntax trees through allow lists before inserting into the DOM.Added support for area series in 3D charts.Added new feature chart.zoomBySingleTouch to provide optional mouse-like selection zooming for touch devices. See #14775.Added accessibility support for legend title #(14872) and provided more intuitive legend item labels for assistive technology (#14837).  Upgrade notes Due to improved security, some tags or attributes may be removed from HTML configuration options like labels or tooltip formats and formatters. Read more in the docs on how to allow them.  Bug fixes Fixed #14138, tooltip was displayed outside plotArea for columns when they were exceeding yAxis extremes.Fixed #13490, point hovering effects such as tooltip stopped working after disabling chart.polar with update.Fixed #10322, limit local timezone to timestamps without timezone.Fixed #14910, centerInCategory broke after zooming twice.Fixed #8095, reset zoom button was not visible after drilldown.Fixed #14893, removed misleading default value in the labels.format docs.Fixed #11494, setting z-index on tooltip with outside set to true through chart options was not possible.Fixed #14351, solidgauge pane flickered on update.Fixed #14771, incorrect tooltip position on inverted chart with adjusted axis width.Fixed #14053, plot bands added before update with redraw set to false were not added when dynamically adding plot bands between the update and a redraw.Fixed #14148, waterfall chart with reversed yAxis rendered wrong stacking connectors.Fixed #14209, histogram after setData with empty array wasn't updated.Fixed #14876, minPointLength columns did not show for series with only zero values when combined with series with only negative values.Fixed #14834, colorAxis ignored reversed option set in chart config on update.Fixed #14793, Z axis broke on update.Fixed #14833, column series axis breaks did not render correctly.Fixed #14283, problems with dynamically updating the color axis visible property.Fixed #14858, left and right-aligned callout labels with the anchor above or below sometimes missed anchor lines when there was no room for a chevron.Fixed #13220, #12788, #12489, #11975, wrong pointer position after changing size or scale on a parent element. Chart.reflow now needs to be called after scale changes and Chart.updateContainerScaling has been removed.Fixed #14305, original chart options got mutated on update.Fixed #14830, exporting waterfall chart with stack labels and hidden series threw.Fixed #8635, zooming variwide chart did not work.Fixed #8742, some stackLabels did not render with dataLabels enabled.Fixed #8795, hovering the chart after zooming in and using setData with redraw set to false threw.Fixed #14549, incorrect clip-path for added axis.Fixed #13283, an issue with the data module's CSV parser. Hex colors (and any other strings following a hash) were treated as a comment and ignored.Fixed #14769, axis label formatter was called with NaN values when the axis was short and series consisted of only null values.Fixed #13996, #13488, pointer position was wrong after chart element was scrolled inside another element.Fixed #14773, styledMode pie series not updating color correctly second time.Fixed a11y issue with absolute positioning, touches #14090.Fixed the initialization of Time.variableTimezone, it caused Time to sometimes return the wrong time when useUTC was set to false.Fixed #14623, Point.colorIndex did not pick up Series.colorIndex updates.Fixed #14584, setting dataLabels.allowOverlap to false did not work properly for sankey series.Fixed #14624, panning.type enabled panning while panning.enabled = false.Fixed #14649, dynamically updating visual attributes on points in flag series did not work.Fixed #14637, setting pointPlacement to between placed line series points on ticks instead of between them.Fixed #14315, setting X axis extremes outside the chart series' data range threw.Fixed #14246, pie point stayed hidden after first legend item click when ignoreHiddenPoint was set to false.Fixed #14236, stacked area chart did not render correctly with the broken-axis module loaded and a gapSize greater than 0.Fixed #13948, exported PDFs containing linear gradients with multiple 0 offset stops had errors.Fixed #13961, datetime axis had missing ticks when Chart.time had half-hour timezone or timezoneOffset set.Fixed #13804, 3d pie animation in inactive tab threw.Fixed #13716, annotations added in responsive rules did not work.Fixed #14746, column chart with null data, datetime axis and useUTC set to false threw.Fixed #14765, Highcharts.patterns global was missing.Fixed #14444, boosted inverted chart had wrong clip-path.Fixed #14244, tooltip in column-based series with multiple xAxis had wrong position.Fixed #14362, no animation when a series was added dynamically.Fixed #14426, it was not possible to pan vertically to 0 after zooming.Fixed #14458, drilling down 3d chart points with the same name threw.Fixed #14425, last histogram bin sometimes had inaccurate x2.Fixed #14417, charts displayed parts of the data when min or max exceeded extreme values.Fixed #14397, networkgraph simulation restarted on series.update().Fixed #14078, all points rendered in all series with boost.usePreallocated on.Fixed #14428, enabling drilldown through Point.update() did not work.Fixed #14214, parliament chart (item series type) threw error on negative values. Negative values should be ignored like in the pie series.Fixed #14433, dependency wheel data labels had wrong position for items covering more than 180 degrees of the wheel.Fixed #14260, series graph color was affected by marker.fillColor in Boost.Fixed #14289, histogram series entered an infinite loop when passed certain data values.Fixed #14379, when scrollablePlotArea was enabled, gauge axis was not scrolling along.Fixed #14440, ColumnRangeSeries missed adjustForMissingColumns.Fixed #13277, event listener leakage in several series and export module.Fixed regressions with chart.update and chart.setSize, causing side effects like stacks not updating and series not.Fixed #14023, for small numbers and decimals argument set to zero, the numberFormater returned wrong values.Fixed #13957, added error handler while mixed series data in boost.Fixed #14883, prototype pollution was possible through the merge function.  Highcharts v8.2.2 (2020-10-22) #   Bug fixes Fixed #13811, Point.partialFill didn't override Series.partialFill.Fixed #14356, offline PDF export failed for larger datasets.Fixed #14352, wrong button text displayed when chart initialized with a table.Fixed #14349, first point being null broke the accessibility screen reader.Fixed #14366, error in boost module on older Windows installations.Fixed #14050, error when passing empty dataLabels array columnrange and related series.Fixed #14298, Chrome complained about touch events not being cancelable when calling preventDefault.Fixed #14310, addPlotBandOrLine didn't check if the axis was visible before rendering.Fixed #14278, first point was highlighted on long touch when the accessibility module was loaded.Fixed #13956, annotations had the wrong position for resized Y axis.Fixed #14230, chart.update failed to update time options in some cases.  Highcharts v8.2.0 (2020-08-20) # Internally reorganized source file structure and naming.Added defer as animation parameter, see #12901. This allows for granular deferring of series animation, labels etc.Added toggle feature for the data table in the export-data module. See #13690.Added support for configuring sonification options in the chart configuration, as well as support for disabling individual series, configuring master volume, and inverted polarity mapping. Note that chart configuration options are still considered experimental and may change.Added new option, time.moment, allowing the moment.js library to be used without being available in the window context.  Upgrade notes The file structure of ES modules has changed. This has no consequences when using master files as advised (like http://code.highcharts.com/es-modules/masters/highcharts.src.js), but may break when loading module files directly.  Bug fixes Fixed #13694, threshold wasn't respected when low was defined.Fixed #13553, exception on negative X values on logarithmic axis.Fixed #13737, a regression causing chart zoom to conflict with the browser's drag-and-drop behaviour.Fixed #13710, a regression causing errors on empty pie series.Fixed #13726, img and br tags in data labels not being proper XHTML on SVG export.Fixed #13538, softThreshold not working as expected when a threshold was set.Fixed #10555, scrollablePlotArea not rendering correctly on FireFox.Fixed #12959, #13937, drilldown did not work on treemap and sunburst series after update.Fixed #13789, incorrect arearange path on polar chart when the connectEnds option was set to false.[object Object].Fixed #13736, draggable annotations did not work on touch devices.Fixed #13707, view table link should be a button.Fixed #13864, better accessible legend item labels.Fixed #13729, focus issues with shift+tab.Fixed #13971, missing Series imports preventing some builds from the Download Builder to work.Fixed #13532, a regression in 8.1.0 causing annotations of type "label", "circle" and "rectangle" not to be editable.Fixed #13762, missing xAxis labels on a polar chart when the useHTML option was set to true.Fixed #13846, data labels were initially hidden in some pie chart instances due to overlapping detection.Fixed #12868, drag zoom was not working on multiple charts after scrolling.Fixed #13785, wrong CSV output for data without defined y value.Fixed #13771, polar chart tooltip was hidden when point value was equal to max.Fixed #13570, updating chart and networkgraph series simultaneously threw errors.Increased precision of sonification duration.  Highcharts v8.1.2 (2020-06-16) #   Bug fixes Fixed #13708, a regression breaking Highcharts.keys.Fixed #13680, chart.addSeries failed after calling chart.setSize on a chart with no data.Fixed #13698, a11y not working properly with user tabindex.Fixed #13674, a regression in v8.1.1 causing pie drilldown animation not to work.Fixed #13576, a regression causing drag and drop to fail for some values in the boxplot series.Fixed #13681, reference to global Highcharts scope in module mode made some modules crash when loaded as ES modules.Fixed #13608, a regression causing parallel axes to lose their positions after update.Fixed #13629, the innerSize of a pie series was set to 0 when there was also an additional gauge series.Fixed #13327, pattern fill was incorrect after chart export in Safari.Fixed #13641, legend click on mobile sometimes failed with accessibility module enabled.  Highcharts v8.1.1 (2020-06-09) # Added new option, plotOptions.column.centerInCategory. It centers columns within each category group, but avoiding gaps for null or missing points.Added deprecation error handling.Added support for selecting and dragging parentNode in the packed bubble series. See #11782.  Bug fixes Fixed #13559, no JavaScript execution should be allowed from chart configuration strings, except from callbacks like event handlers and formatters. This prevents JavaScript from being injected from forms and other inputs relaying directly to text properties in the chart config.Fixed #13541, chart.update with oneToOne failed when removing and adding series, if all series had explicit id's.Fixed issue with JS errors and malfunction on drill-up button on touch devices when the accessibility module was loaded.Fixed #12804, in sunburst charts, the drill-up button was visible after drilling up to the top level.Fixed #13554, a11y not supporting proximate legend layout.Fixed #13534, dragging points caused an error on iOS.Fixed #13369, edge case where ticks were different after changing series visibility.Fixed #13293, added the X value in exported data table if the point had defined name and xAxis was not a category type.Fixed #13590, CSS classes not being removed correctly, causing unwanted behaviour in pie chart hovering and unhovering.Fixed #13309, PDF exports always having landscape orientation when using the offline-exporting module.Fixed #13574, packed bubble size changed when other series were added.Fixed #13372, drilldown in horizontal item series was not allowed.Fixed #13420, adding annotation was not working on iOS devices.Fixed #13202, the lollipop series didn't work with all data formats.Fixed #13371, unable to display data labels in item series without setting series size.Fixed #12077, histogram long decimals crashed browsers.Fixed #13342, tooltip tracking was broken after height update.Fixed #13379, item series with no data threw an error.Fixed #12569, point hover state was lost when axis updated.Fixed #11501, 3D pie was not correctly exported to PDF with offline export.Fixed #13071, unnecessary network request in IE11.Fixed #13489, Chart.print() was not working correctly with highcharts-more.js (specifically network graphs) included.Fixed #13482, unable to disable markers in styled mode with a11y.Fixed #13463, closing export menu using ESC key should not move focus.Fixed #11750, series.opacity option was not respected when creating or updating series.Fixed #13308, empty space appeared on top and bottom of sankey chart when using the minLinkWidth option.Fixed #13375, events were not added to dynamically created plot bands and lines.Fixed #13421, animation was fired when zooming boosted series.Fixed #13353, item series - when rendered in a full circle, points overlapped.  Highcharts v8.1.0 (2020-05-05) # Added vertical panning to Highcharts. The chart.panning.type now accepts y directions.Added box options for yAxis.stackLabels: backgroundColor, borderWidth, borderRadius and borderColor. See #13330.Added new series label options, series.label.format and series.label.formatter.Added individual dash style settings for various parts of box plots. See #13065.Added language options for export-data table text, see #13166.Added ability to set markers of heatmap points to a custom shapes defined within SVGRenderer.prototype.symbols object, see #12508.  Upgrade notes The Axis class was refactored as part of the TypeScript migration. Axis extensions like log axis, broken axis, parallel axis, datetime axis and ordinal axis are now handled as compositions. Instead of adding multiple properties to the main axis instance, they now add a single object that holds all properties. This does not affect the options API, but it may affect implementations that are based on some of our samples that used the original properties. Our samples have been updated to use the new structure.For added type safety, we are now defining SVG path definition as two-dimensional arrays, or in TypeScript sense an array of tuples. So ['M', 0, 0, 'L', 100, 100] in the new implementation should be written [['M', 0, 0], ['L', 100, 100]]. We built in a converter for old paths, but there may be cases, like for example directly accessing SVGRenderer.crispLine, where it breaks.  Bug fixes Fixed issue with missing accessibility options in the API.Fixed #12767, exported data table had wrong points categories.Fixed #13305, focus border not updated with scrolling points.Fixed #11500, stack labels had a wrong position after moving X axis or Y axis.Fixed #13332, 3D column not working on IE browsers. Fixed fillSetter in cuboid methods.Fixed #13310, HTML tooltip did not stick on pointer contact when activated.Fixed #13136, couldn't set yAxis.tickAmount when the chart size was small.Fixed #13098, wordcloud animation options didn't work.Fixed #12656, drilldown points were wrong after click on axis label.Fixed #13204, multiple yAxis labels were not centered over the gridlines when rotation was set and alignTicks was enabled.Fixed #8280, 3D column zIndex was wrongly calculated on wide screens.Fixed #13101, pie with negative values threw error on drilldown.Fixed #13226, tooltip prevented interaction on other chart elements.Fixed #13169, a regression causing packed bubble's initial simulation not to work smoothly.Fixed #12163, width of button was not updated when the font weight changed. Also fixed #12165, errors on setting the button width to null.Fixed #13161, stacking was erroneously applied on xrange.Fixed #5999, point.color was not respected for boosted series.Fixed #13134, lollipop misaligned on errorbar series.Fixed #12979, console errors when updating an axis at the same time as updating a related annotation.Fixed #11928, 3D pie was misplaced after calling Series.update.Fixed #13110, chart.sonify was no longer working after v8.0.1.Fixed #13069, histogram produced the wrong number of bins when baseSeries was filled by points with negative values.Fixed #12027, print was not working correctly in packed bubble charts.Fixed #12991, scrollablePlotArea.minHeight was not responsive when changing window height.Fixed #13100, in organization charts, node data labels disappeared in some cases.Fixed #12883, legend pagination was not working correctly when the accessibility module was included.Fixed #13001, scrollablePlotArea not inheriting chart style. Also applied chart styles to tooltip container when tooltip.outside is true.Fixed #13070, annotation was not draggable when HTML label was used.Fixed #13077, the point.isInsidePlot method didn't handle polar charts.Fixed #11635, scrolling didn't trigger hiding of the tooltip when the cursor left the chart's container.Fixed #12091, could not update series shadows without disabling them first.Fixed #12994, tooltip.hideDelay of 0 was causing unexpected tooltip behavior.Fixed #11397, incorrect position of the focus border on text elements.Fixed issue with crosshair wrong position with shared tooltip, see #13002.  Highcharts v8.0.4 (2020-03-10) # Added new option, tooltip.stickOnContact, to allow the tooltip to stick when
 hovering it with the mouse or when touched.  Bug fixes Fixed #13042, getTimezoneOffset callback passed inconsistent value type.Fixed #13018, the vertical axis line and labels were incorrectly positioned when the pane.startAngle, xAxis.angle (inverted chart) or yAxis.angle (non-inverted chart) were set.Fixed #9682, touching legend prevented page scroll.Fixed #12870, hover point is not displayed when boost module is enabled.  Highcharts v8.0.3 (2020-03-05) #   Bug fixes Fixed #13053, a regression that removed the compatibility feature of calling Highcharts.Color without the new keyword.Fixed issue with wrong clipping during series animation when the chart was subject to responsive rules.  Highcharts v8.0.2 (2020-03-03) #   Bug fixes Fixed #13056, the highcharts-3d.js file was not compiled and distributed to code.highcharts.com and npm.  Highcharts v8.0.1 (2020-03-02) # Added new option for polar charts, pane.innerSize.Removed the experimental "Open in Highcharts Cloud" menu item of the export-data module.Added pie series dataLabel x and y position per point, see #12985.Added new option annotations.labelOptions.accessibility.description.Added accessibility functionality for annotations. Also added new option accessibility.point.valueDescriptionFormat.Added support for useHTML property to rotated data labels.Changed the default inactive.opacity for venn diagrams to ease perception, see #10663.Added new option pattern.patternTransform that allows SVG patternTransform functions on a pattern.Fullscreen module added. Allows using the chart.toggleFullscreen() method.Automatically dismiss popup content, such as tooltips, when user presses ESC key.Changed the behavior of keyboard navigation. It no longer opens export menu automatically, but sets focus to the button.Improvements to sonification.Introduced the new options plotOptions.series.custom, series.custom, and series.data.custom to store additional data for custom formatters and custom event callbacks.  Upgrade notes The Highcharts.Color constructor will not work without the new keyword. Use either new Highcharts.Color or the Highcharts.color factory.  Bug fixes Fixed wrong x-range drag handles issue with multiple series, see #12878.Fixed #12934, responsive rules didn't work for drill-up button initially.Fixed #12949, using multiple drilldown with data sorting threw an error.Fixed tooltip position on sankey diagram links and nodes when tooltip.followPointer was false.Fixed #12926, dumbbell marker was incorrectly colored after mouse out when series.marker.fillColor was defined.Fixed #11917, errors and failed rendering of sankey chart if the number of nodes was too great. Fixed by reducing the nodePadding below its setting to allocate space for all nodes.Added new option, annotations.shapes.src, see #12890.Fixed issues with tooltips and scrollable plot area. See #12416 and #12498.Fixed #11993, wordcloud looked incorrect after running setData().Fixed #12566, in the data module, empty points should be parsed to null instead of undefined.Fixed #12812, high contrast mode not detected in new Edge.Fixed #12666, node render to null increase the sum by set weight.Fixed #12514, data label position for column pyramid with 0 value.Fixed issue with wrong axis options after drilldown to treemap series, see #12326.Fixed #10162, RTL text was covered when using a text outline.Fixed issue with updating legend's font-size, see #12705.Fixed issue with pie series update to 3d, see #12714.Fixed #11148, a point should not be trackable when is out of his pane. Also, isInsidePlot() works for panes now.Fixed #12718, markers invisible on chart update from null points with a11y module.Fixed #12690, a11y module caused render issues for 3D funnel.Fixed issue with not visible column data label when a point has a small value, see #12688.Fixed #12711, missing border and background for split tooltip's header in styled mode.Fixed #12513, deselecting previously selected nodes did not work for networkgraph series.Fixed #12156, added series.inactive.enabled option to disable inactive state.Fixed #12453, node with 0 value was rendered on the Sankey and dependency wheel.Fixed #12424, enabling network graph series in legend used to throw errors.Fixed #12515, updating depth in 3D pie chart did not work.Fixed #4369, 3D columns had wrong zIndex with long charts.Fixed issue with disabled animation for empty pie, see #12619.Fixed issue with tooltip wrong position on a bar chart when xAxis top or height set, see #12589.Fixed #12648, datetime axis ticks were wrong in Indian time zone when close to the DST crossover.Fixed #12627, legend items in pie chart overlapped on drilldown.Fixed #5508, data labels were wrongly positioned on inverted 3D charts.Fixed #12484, drag markers for columns were not showing when highcharts-3d and draggable-points were loaded.  Highcharts v8.0.0 (2019-12-10) # Added new series type, radial bar chart. Under the hood, this is a column series in an inverted and polar chart.Added data sorting with animations on update.Added marker clusters  for scatter and map point series.Added new option accessibility.linkedDescription.Added new accessibility options with more flexibility for customizing the hidden screen reader regions. See #12095.Added flame chart demo.  Bug fixes Fixed #12053 and #12152, pattern fill issues. Introduced color.patternIndex option.Fixed #7255, trying to printing chart again, after cancelling in Safari, elements other than chart were not hidden.Fixed #12488, selection zoomed to wrong area in the Treemap series.Fixed issue with wrong extremes for bubble series when xAxis.max set, see #12543.Fixed #12549, disabling keyboard nav still added container tabindex.Fixed #12438, a regression causing the reset zoom button not to work with the a11y module on mobile.Fixed #12462, filename with forward slash (/) not being replaced with safe character when exported. Now replaced with -.Fixed issue with data labels visible despite point placed outside the plot area, see #12370.Fixed #12343, noData message was not visible with gauge series. Added 1 as default zIndex to render the message in front.Fixed #12500, updating dataLabel color from contrast to a different one was not working.Fixed #12459, annotation's control points were not draggable.Fixed #12425, updating sunburst series used to disable traversing.Fixed compatibility issues with menu navigation for screen readers.Fixed #12161, legend textDecoration hidden style not working on IE11 with accessibility module enabled.Improved handling of null point accessibility.Fixed #12090, a11y module broke legend navigation.Fixed minor bugs with keyboard navigation.Fixed #12434 and #12097, regression in venn series label positioning causing JavaScript error.Fixed #12445, updating borderColor and borderWidth didn't work for solid gauge series.Fixed #12421, high contrast mode used to throw errors when the colorAxis module was not loaded.Fixed #12390, not overlapping dataLabels after zoom in and zoom out were hidden.Fixed #12262, Sunburst did not use 100% of the plot area.Fixed #12374, sankey nodes were rearranged after redraw where the nodes.level option was used.Fixed #12295, null was used as event listener in drilldown module, which caused a JavaScript error when called.Fixed #12335, memory leaks in polar series after updating data set.Fixed #12333, setting data in treemap series with points with the same ID's did not render new points.Fixed #12289, sonification timeline issues with multiple charts.Fixed #11617, support tooltip.split with chart.scrollablePlotArea.Fixed #12267, error in waterfall chart when the series was invisible and the first value was below 0.Fixed #12248, the Y axis' range was disturbed on stacked (overlapping) waterfall chart.Fixed #11758, stackLabels in styled mode used to throw errors.  Highcharts v7.2.2 (2020-08-24) #   Bug fixes Backported the fix for #13559, JS execution allowed from chart config, to v7.  Highcharts v7.2.1 (2019-10-31) # Added feature to draw plot lines on radial axes from the inner to the outer radius of the main pane.Added support for combining tooltip.split and tooltip.outside.  Bug fixes Fixed #12222, empty pie series showing lineWidth after hover.Fixed #12223, animating halo for a slice in pie series used to throw errors.Fixed #12243, fill property on pattern fills was applied to the wrong element. Introduced new option, pattern.backgroundColor.Fixed #11644, extremes in color axis were incorrect when using tilemap series with very small values.Fixed #11738, updating treemap series with the same amount of points caused cells to disappear.Fixed #11650, added missing highcharts-tooltip-header classname to the tooltip's header.Fixed #12073, dragging an annotation used to change points' values too.Fixed #7559, error when updating a waterfall with first data value as sum or intermediate sum.Fixed #11776, data labels were not visible in 3D Column series.Fixed #12055, overlapping legend items when combining layout: 'proximate' and useHTML: true.Fixed #12064, redundant spaces separating class names in SVG class attributes.Fixed #12033, error when toggling stacking on area series with nulls.Improved screen reader compatibility for chart export menu.Fixed #11727, logarithmic yAxis with just one label sometimes was rendered with numerical errors.Fixed #11956, pointPlacement did not work for columns with just one category.Fixed #11955, incorrect point positions on inverted chart, when series.pointPlacement was set to between.Fixed #11966, using chart.setTitle() on a chart with scrollablePlotArea misplaced the title.Fixed #11510, points with a relatively very small z value were not displayed in a variwide chart.Fixed #11970, annotation's drag event was not fired.Fixed #11753, invalid label placement broke venn diagrams in certain scenarios.Fixed #11100, 3D columns were not animated on data update.Fixed #11476, inverted variwide chart with disabled X axis labels threw an error.Fixed #11801, dragging annotations did not prevent zooming in.Fixed #11897, combination of pie series and polar chart with panes threw an error.Fixed #11405, plotLines were rendered outside the bottom and left chart edge if the value was the same as the axis extreme.Fixed #11690, removed use of undefined global variable that broke support for ES modules.Fixed #11812, point colors were not changed if colorAxis was added in update.  Highcharts v7.2.0 (2019-09-03) # Added new top-level option, caption. The caption has similar structure to title and subtitle. It renders a chart description below the chart contents, supports reponsiveness and is part of exported charts.Added support for multiple color axes for almost all series.Added high-contrast-light and high-contrast-dark themes with 3:1 contrast against background.  Bug fixes Fixed #11792, error and invalid attributes in organization chart with one point.Fixed #11783, tooltip border and background disappeared when combining tooltip.outside and chart.styledMode.Fixed #7911, axis.reversed should not take effect on a linked axis if the parent axis had a different setting.Fixed #10962, stack labels were misaligned in variwide series.Fixed #11702, error in organization chart with certain relations, plus color was not always applied to nodes.Fixed #11717, loading network graph as ES6 module threw errors.Fixed #11609, prevented reflow of destroyed charts in IE and Edge.Fixed #11546, in packed bubble series parentNodes were missing after chart and series update.Fixed #11199, a regression causing wrong grid line placement in a single-item category axis.Fixed #11469, Series.remove() function didn't work properly with networkgraph and packedbubble series.  Highcharts v7.1.3 (2019-08-14) # Added new minLinkWidth option to sankey series.Added support for label.formatter callback for plot lines and plot bands.Made chart credits accessible to screen readers.Added support for number type in annotation.id, see #10648.Added crop and overflow options for stack labels.Added sensible defaults to plot lines and bands. A plot band can now be initialized with only a value, and a plot band with either from, to, or both.Added new option accessibility.pointNavigationThreshold.Improved keyboard navigation for inverted charts, including bar charts.Added support for Windows High Contrast Mode. A set of styling options are automatically set using chart/series/point update when WHCM is detected. The options automatically match the OS theme, but can be overridden with the new accessibility.highContrastTheme option.Added tooltip.className option for additional custom CSS class.Added support for layout around subtitles with verticalPosition bottom.  Upgrade notes Exact positioning of titles and subtitles with verticalPosition other than top may have changed since last version due to better layout handling.  Bug fixes Fixed #11632, using plotOptions.series.marker.radius for all nodes in a network graph did not prevent them from being cut off.Fixed #7650, hide hover points outside plot area. Fixed #11493, limit split tooltip to yAxis range.Fixed #11513, arearange failed to render when the data started with NaN.Fixed #7650 and #11493, points outside plot area were included as hover points, and were displayed in shared and split tooltip.Fixed #11505, gauge crashed when stacking options were present.Fixed #4024, stacking columns on different xAxis translated columns as in stacking on the same xAxis.Fixed #11329, tooltip transform/scaling issues.Fixed #11386, CSS filters were missing when chart.styledMode was enabled.Fixed #11388, error when applying empty data array to histogram series.Fixed #11389, inactive styles for dependency wheel series in styled mode were missing.Fixed #10542, showing and hiding series now also shows and hides them from assistive technology.Fixed #8608, bubble markers were hidden when Z value was missing.Fixed #11156, draggable did not work with group points and boost module.Fixed #11340, issue with exporting large amounts of data to CSV and XLS.Fixed #10561, issue with legend click on IE11 with a11y module.Fixed #11246, setting crosshair stroke-width in styled mode.Fixed #8735, gapSize did not work in boost mode.Fixed #10285, drag and drop module did not work with logarithmic axes.Fixed #10564, issue with tabbing to legend without chart height set.Fixed #11301, hovering legend item for a hidden series caused other series to get inactive state.Fixed #11169, undefined value was rendered in the loading label.Fixed #11244, series.update({ data }) did not preserve old options if data was passed as an array of objects.Fixed #10896, class name of series label was missing in styled mode.Fixed #11239, updating points in heatmap did not animate fill color.Fixed #11229, negative width and height were applied to heatmap shapes.Fixed #11212, selected state for a node in network graph was applied to all connected nodes.Fixed #11211, calling node.update() in networkgraph series caused errors in console.Fixed #10960, improved touch support on Windows devices.Fixed #11176, removing all nodes and links in a network graph would throw errors with circular data.Fixed #11095, updating data.switchRowsAndColumns worked only the first time.Fixed #11193, downloading the chart as image used to duplicate table created by exporting.showTable option.Fixed #11101, a regression causing crash on responsive chart when reverting to default options.Fixed #9377, added product tags in ES-modules.Fixed #11140, setting series.dataLabels.inside to true forced pie dataLabels to render as in contrast.Fixed #6657, inappropriate contrast color for first and last dataLabel in column/bar series.Fixed #11124, click on a node in networkgraph caused all nodes to reposition.Fixed #10597, issue with series type update after drilldown.Fixed #10861, a regression causing event handlers to pile up when running Chart.update or Series.update with new events options.Fixed #10518, rotation.orientations = 1 in wordcloud series resulted in rotation NaN, which made the SVG rendering of the word crash.Fixed #10498, a regression causing wrong chart width if a parent had transform style.Fixed #11015, removing an annotation did not deselect it, causing errors.Fixed #10522, series.colors was ignored in sunburst.Fixed #10941, null points with the same x-value in stacking were causing wrong offset for other points.Fixed #10984, networkgraph series did not render when loading data from CSV.Fixed #10993, in timeline series, points were visible outside the axis extremes.Fixed #10987, pareto series didn't refresh after updating baseSeries data with less than two points.Fixed issues #10510 and #10594 with pattern fills.Fixed #10930, sometimes data labels were not visible after zooming.Fixed #10961, annotations used to block mouseDown event.Fixed #10717, xAxis.reversed should reverse partialFill on xrange.Fixed #10671, a regression causing crash with responsive chart.spacing settings.Fixed #10699, inactive state was configured wrongly in venn series, causing bad opacity.Fixed #10952, plot background did not scale to scrollable plot area.Fixed #10791, disabled halo feature in Venn series. The docs said it was supported, though it didn't work well.Fixed #10909, subpixel precision caused unwanted space between the area series' area and baseline grid lines.Fixed #10943, TypeScript support for full-screen module (and other modules).Fixed #9099, getSelectedPoints did not include the currently selected or unselected point when called from inside series.point.events.select.Fixed #10874: tooltip wasn't formatted correctly for updated null points.Fixed #10670, heatmap points with zones and colorAxis did not restore colors after hover.Fixed #10323, on timeline series, data label's connector was hidden after setting extremes.Fixed #10524, wordcloud text with multiple words had different alignment than text with a single word.Fixed #10870, regression with Series.update updating marker symbol.Fixed issue with the data module failing on CORS resources.Fixed #10865, image markers in networkgraph used to throw errors in console.Fixed #10708, removed use of Array.prototype.findIndex which would cause Sankey series to break in IE.Fixed #10247, improved data label positions in venn series.  Highcharts v7.1.2 (2019-06-03) # Added new feature, vertically scrollable plot area. This adds native scrolling features vertically, and is enabled using the chart.scrollablePlotArea.minHeight setting.Deprecated the labels option in favor of annotations, see #10429.Added stack labels feature to waterfall series (#3165).Added auto alignment for solid gauges with two labels, see #10635.Improved performance for exporting packedbubble series.Added series.nodes[index].remove() method to networkgraph series to remove a node with all connected links. See #10565.Added support for percentage value in yAxis.labels.distance option for gauge series. See #10587.  Bug fixes Fixed #9269, problems with grid axis update. Modified the columns logic in GridAxis to only add one column (the master) to the public axes array, and the remaining to an internal columns array.Fixed issue with wrong clipping of inverted scrollable plot area (see #10786).Fixed #8607, tooltip was masked at the edges of the chart when chart.scrollablePlotArea was active. Changed the tooltip.outside option to default to true when using scrollable plot area.Fixed #10741, overlapping networkgraph points were dissappearing.Fixed #8417, stacked columns were overlapping after update to 3D.Fixed #9396, could not disable series label animation. Animation is now set to 20% of series.options.animation duration initially, and equal to chart.options.animation on updates.Fixed issue with sorting of events when addEvent was called with parameter options.order value of undefined.Fixed #3881, plotOptions.series trumped plotOptions[type] in chart instance options.Fixed #10669, sunburst didn´t show error when duplicate point id's were used.Fixed #8897, 3D columns were not visible when first series was initially hidden.Fixed #10491, responsive rules were ignored when `colorAxis` updated.Fixed #10737, exporting sunburst's data to CSV did not include points with the same name.Fixed #10713, initializing annotations in responsive rules didn't work.Fixed #9198, zones and negative color were not applied after series.setData.Fixed #10712, solid gauge data labels rendered below center by default. They are now vertically centered. Changed dataLabels.y default to 0.Fixed #10715, column collapsed after drilldown when the X axis labels became longer.Fixed issue with accessibility features not working for series without markers.Fixed #10696, sometimes series animation was missing when updating points via Series.setData().Fixed #10361, a regression causing clipping of the export menu below the chart.Fixed #10646, plotOptions.column.minPointLength drew zero points as negative.Fixed #10062, packed bubble series ignored lang.thousandsSep.Fixed #10630, null point was drawn in solid gauge.Fixed issue where accessible proxy buttons were wrongly positioned in some browsers.Fixed #10625, setData() in networkgraph series caused simulation to run from the initial state.Fixed #10637, the accessibility module increased the chart size.Fixed #10624, updating sankey while hovering a link caused errors.Fixed #10633, panning on mobile devices did not work when xAxis.max or xAxis.min options were set.Fixed #10628, adding annotations in chart's callback threw errors.Fixed #10572, dataRefreshRate didn't work properly for Google Spreadsheets.Fixed #10574, connectNulls could not be disabled in area with percent stacking.Fixed #10536, setting time on a chart instance altered global time.Fixed #10571, split tooltip didn't change stroke color while hovering when points in a single series had different colors.Fixed #10569, regression that caused missing series line after removing zones.Fixed #10516, extreme large zoom in Chrome did not render yAxis labels after zooming out.Fixed #10482, enhancement demo to adding points and lines.Fixed #10540, pie series did not animate slices when toggling legend items.Fixed #10545, networkgraph.dataLabels.linkTextPath did not remove artifical border around label.  Highcharts v7.1.1 (2019-04-09) # Added new option, chart.scrollablePlotArea.opacity, to control opacity of the scrollable mask. See #10416.  Upgrade notes Changed default states.inactive.opacity for map and mapline series to prevent dimming map shapes.  Bug fixes Fixed #10432, missing category name in tooltip when using boost module.Fixed #10466, reset zoom button moved offscreen when using scrollablePlotArea.Fixed #10471, pareto series wasn't rendering when baseSeries was set to first series by 0 number.Fixed #10496, data labels animated when series animation was turned off.Fixed #10504, after deselecting a column, inactive state was used instead of normal state.Fixed #10506, named colors did not work in boost mode.Fixed #4608, boost module highlighted wrong point on hover when chart was inverted. Added support for reversed axes in boost.Fixed #5268, series.threshold = null was ignored in boost mode.Fixed #6963, boost with enabled useGPUTranslations rendered incrorrectly when yAxis was logarithmic type.Fixed #9795, updating chart.spacing didn't reflow all elements.Fixed issue with range selector and time zones, test results were different depending on time zone.Fixed performance issue with sankey chart.  Highcharts v7.1.0 (2019-04-01) # Added Organization Chart series type.Added Item Chart series type for visualizing item counts and parliaments.Added Dependency Wheel series type.Added Timeline series type.Added 3D Pyramid and 3D Funnel series types.Accessibility - improved experience for screen reader users, support for dynamic data and drilldown, as well as support for voice input software.Added inactive states to series and points, allowing other series to be dimmed when the user is hovering the data or legend. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.Added levels to sankey series.Added annotation.events: add, afterUpdate and remove.Added full screen capabilities to exporting module.Added option series.treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.Added options plotOptions.sankey.borderWidth and sankey.borderColor for sankey nodes.Added force directed algorithm for improved packing of packed bubble charts.Added support for nested packed bubbles.Added Verlet integration for network graphs. Generally improved network graph algorithms.Added data labels to links in network graphs.  Upgrade notes Changed default X axis tickWidth option. Now tick marks are not rendered by default on category axes. Set the tickWidth to 1 to bring back the old behaviour.Renamed plotOptions.treemap.drillUpButton to traverseUpButton.The new inactive state makes other items dim when hovering a series. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.  Bug fixes Fixed #10009, wrong tooltip size with useHTML and varying text lengths.Fixed #10010, series.update destroyed points and lost their event handlers.Fixed #10031, long dataLabels for pie with useHTML: true, were generated with width less than 0.Fixed #10052, chart printing failed with error on IE11.Fixed #10055, exporting custom annotation did not work for other types than SVG.Fixed #10063, proximate legend layout did not account for axis top setting.Fixed #10081, chart with parallelCoordinates was not resizing properly after update.Fixed #10082, points below Y axis min in polar charts were drawn incorrectly.Fixed #10101, bubble legend was duplicated with map module.Fixed #10106, issue with the showEmpty feature.Fixed #10107, legend navigation required overly precise clicks/touches.Fixed #10115, vector and wind barb series didn't handle the clip option.Fixed #10127, treemap removed old classNames on update.Fixed #10131, error in draggable points after updating series.Fixed #10160, stacking null points from the same series threw unhandled exception.Fixed #10163, series.setData() did not remove old nodes for a networkgraph.Fixed #10167, a regression causing unwanted padding on top of legends in some cases.Fixed #10187, setData didn't update data when old data had null values and the same length.Fixed #10213, relative chart height didn't apply in responsive chart.Fixed #10220, visible parts on charts inside an element with visibility: hidden.Fixed #10225, histogram produced additional bin on the end.Fixed #10232, solid gauge series had wrong legend symbol.Fixed #10243, offline export failed with boost and hidden series.Fixed #10246, boost culling issue.Fixed #10265, class names were applied multiple times to elements, causing selected pies not to unselect after redraw.Fixed #10273, changing live data settings dynamically didn't take effect.Fixed #10282, overlap larger than smallest circle in venn diagrams.Fixed #10283, click events were not applied on scatter points with base tag present in Firefox.Fixed #10286, responsive setting of showInLegend failed.Fixed #10302, plot line events did not fire if the lines were initially outside visible range.Fixed #10312, keyboard navigation with no data.Fixed #10342, HTML split tooltip did not fade after series update if formatter returned a string.Fixed #10347, annotation-bindings were not compatible with IE11.Fixed #10352, replaced Math.sign() in networkgraph source code for IE compatibility.Fixed #10417, simulation for packed bubble series did not stop when exporting chart.Fixed #6234, some presentational options were not settable in zones in column series.Fixed #6404, plot band labels were not aligned correctly in gauge chart.Fixed #6894, yAxis.softMax didn't take effect on the other side of the zero plane.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7895, renamed and documented option in export-data module responsible for series data visibility in exported chart data - includeInDataExport.Fixed #8766, chart crashed when misconfiguring plotOptions.Fixed #8864, connectorColor didn't work for individual points.Fixed #9087, malformed exported SVG when SVG elements were added inside useHTML labels.Fixed #9128, #10025, histogram series had incorrect amount of free space between points.Fixed #9233, data labels and tooltip formatting was not supported for null points in heatmap.Fixed #9880, hover animation on xrange points was incorrect.Fixed #9917, chart.update with initial pane options did not change the pane.Fixed #9962, line series was not rendered in the boost mode, when all points were outside the extremes.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed #10161, wrong extremes in single category axis.  Highcharts v7.0.3 (2019-02-06) # Added option treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.  Upgrade notes Renamed plotOptions.treemap.allowDrillToNode to allowTraversingTree to avoid confusion with the drilldown module that has a different behaviour.  Bug fixes Fixed #10006, wrong intersection position in venn.Fixed #10038, series labels didn't fit on area series when rendered on data extreme.Fixed #3417, label text-anchor with empty align attribute was set to undefined.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7872, pass proper parameters to animation step when animation is skipped. Resolved issue with wrong column chart placement when rendered in a hidden tab.Fixed #9823, disabled draggable triggered drop event.Fixed #9838, dissappearing traverseUpButton.Fixed #9930, warnings of deprecated e.returnValue in Chrome console.Fixed #9944, incorrect Y axis extremes after zooming X axis with a column series.Fixed #9964, title top margin applied when text was empty.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed ARIA for show/hide legend items.Fixed draggable points capturing click events.Fixed endless recursion in sankey charts on circular data. See #8218.Fixed issue with series event handlers not surviving series.update. Partial fix for #10010.  Highcharts v7.0.2 (2019-01-17) # Added jitter feature to scatter plots.Added feature to set legend.width as a percentage, and restrain the default width to 50% for legends at the sides of the chart.Added overlap stacking to waterfall charts.  Bug fixes Fixed #6817, point click event didn't fire on the first touch.Fixed #7253, long legend titles were not wrapped, pushing the legend out of the chart.Fixed #7860, pointPlacement was not implemented for heatmap.Fixed #8160, treemap data labels overflowed on long words.Fixed #9617, chart update in responsive mode caused some of the responisve options noneffective.Fixed #9685, maximum call stack exceeded in venn diagrams in certain cases.Fixed #9694, tooltip was clipped when using the outside option and different series types.Fixed #9709, missing values when exporting data in venn.Fixed #9718 and #9768, incorrect overlap calculations in venn diagrams in some cases.Fixed #9728, incorrect handling of negative Z values in bubble chart styled mode.Fixed #9747, a regression causing upper area range data labels to get stuck after redrawing.Fixed #9749, memory building up and animation deferred on hidden pages.Fixed #9758, no-data module was ignoring boost points.Fixed #9761, X axis labels overlapped on polar chart with dense categories.Fixed #9762, series was referencing public object for userOptions and some updates were working in an unexpected way.Fixed #9779, rendering bug in svg2pdf.js caused filled rectangles in offline-exported PDF.Fixed #9794, wordcloud series didn't support state options.Fixed #9798, added ability to change options for particular link and improved nodes docs for networkgraph series.Fixed #9801, networkgraph was not compatible with no-data module.Fixed #9803, networkgraph throwing maximum call stack error with cyclical links.Fixed #9815, performance problem with series labels.Fixed #9818, bad rendering of sankey chart with unordered data.Fixed #9835, axis disappeared on rotating labels 180 degrees.Fixed #9841, a regression causing the Y axis to shrink in certain cases when setting xAxis.tickAmount.Fixed #9841, tickAmount axis option wasn't properly supporting false values for startOnTick and endOnTick.Fixed #9849, improved line height handling with non-pixel font-size units.Fixed #9861, error when updating the X value of data points that had an ID.Fixed #9869, tooltip on xrange series type was having misplaced point anchor due to some xAxis options. Closes #9727.Fixed #9871, a regression causing the chart width to be miscalculated when the container had a transform.Fixed an issue in series-label placement logic, labels gravitated to the right.  Highcharts v7.0.1 (2018-12-19) #   Bug fixes Fixed #4119, autogenerated series names were incorrect when index was used.Fixed #9572, chart with shared tooltip and boost module crashed when updating data and tooltip.Fixed #9636, boosted heatmap combination charts did not work.Fixed #9654, a regression causing charts to fail in old IE.Fixed #9678, a regression causing errors in bubble chart with all negative values.Fixed #9680, a regression causing chart generation to crash with wrong type on series config.Fixed #9690, a regression causing chart.scrollablePlotArea to fail in desktop browsers in v7.0.0.Fixed #9711, options argument was mutated after calling chart.update.  Highcharts v7.0.0 (2018-12-11) # Added sonification to the accessibility features.Added TypeScript support (Beta).Added bubble legends, legend items describing the scale of the bubbles.Added feature to match points by id when running setData.Added new series type force directed graph or network graph.Added new series type packed bubble.Added new series type 3D cylinder.Added new series type venn diagram.Added new series type column pyramid chart.Added editor features for annotations, allowing annotations to be added, updated and removed through a GUI.Added debug module for making chart errors visible in the chart.Default exported chart name is now based on the chart title.Added option chart.styledMode to replace the previous separate build of styled mode files.Added options to align pie chart data labels to the edges of the chart.  Upgrade notes If you use styled mode, the setup has changed. Instead of loading files from the code.highcharts.com/js folder, use the base JavaScript files, but set the chart.styledMode option to true.Polyfills are now needed for support in IE 6-8. Before including the highcharts.js file, load modules/oldie-polyfills.js in a conditional comment. Alternatively you can use your own polyfills or a third party library. See System Requirements.If the chart.height setting is higher than the CSS height of the container, the chart will now be clipped. This is a consequence of adapting the chart to table cells and flex layouts.  Bug fixes Corrected chart width for sub-pixel container width. Prevented overflow in flex-grids and table cells.Fixed #2617, wrong number of pages in legend with legend.maxHeight in some cases.Fixed #5293, pointBreak event for broken-axis module was not working for columnrange series type in case highcharts-more was loaded before broken-axis module.Fixed #5857, drilling down column charts to more than the cropThreshold caused lost categories on the X axis.Fixed #8105, split tooltip header couldn't be removed by options.Fixed #8680, responsive rules were not applied on annotations.Fixed #8818, shared tooltips in boost with column series.Fixed #9046, force boost check now takes plotOptions.series.visible into account.Fixed #9121, overlapping text labels with useHTML and styled mode.Fixed #9150, heatmap points were misplaced when using boost module without WebGL.Fixed #9156, export data download failed on iOS.Fixed #9197, no series animation on calling Chart.update with repeated options.Fixed #9200, errors in the console with small height and zones or negative colors.Fixed #9211, inverted heatmap in boost mode had wrong size when WebGL was disabled.Fixed #9226, Wrong number of series with indexex after update.Fixed #9247, console error on empty data labels in area range.Fixed #9248, on series hide/show yAxis extremes were not updated.Fixed #9252, added missing annotations.id documentation.Fixed #9258, remove use of id in default treemap data labels.Fixed #9270, series were removed from configuration options when invoking stock, map or gantt charts.Fixed #9278, drag and drop failing on mobile.Fixed #9289, avoid animating drilldown in wordcloud.Fixed #9291, correctly rounded default dataLablels for xrange series type.Fixed #9298, zooming problems with drag and drop.Fixed #9300, JS error when updating sankey series before it had been redrawn.Fixed #9301, regression in tooltip.headerFormat for xrange series.Fixed #9375, invalid attribute on SVG elements in solid gauge series.Fixed #9400, tooltip box border issues when defining font size inline.Fixed #9410, when using step in boost, the first point was wrong.Fixed #9481, annotations attached to hidden points were visible.Fixed #9485, selected state was not preserved after drilling down and up.Fixed #9487, category axis didn't update when more data than the cropThreshold. Closed #6926.Fixed #9504, some links rendered broken on inverted Sankey diagram.Fixed #9525, wrong number of points after update zoomed chart.Fixed #9533, printing chart via the export menu failed when scrollablePlotArea was active.Fixed #9537, ellipsis not applied to X axis labels when useHTML was true.Fixed #9562, wrong categories and data to axis mapping with uniqueNames and drilldown.Fixed #9565, dot delimiter on dates in CSV caused the format deduction to fail.Fixed #9618, setExtremes should trump axis.ceiling.Fixed #9623, 3D pie chart didn't hide when rendering inside a div with visibility: hide.Fixed #9166, off-screen markers clamped to plot width in boost.Fixed #9206, draggable points did not work with dynamic series.Fixed issue with a11y module sometimes throwing exception on init.  Highcharts v6.2.0 (2018-10-17) # Added support for multiple data labels on each single point.Added draggable points plugin as module.Added support for pointPlacement in X range charts, affecting the category Y axis. Closed #7419.  Bug fixes Fixed #2366, improved polar chart yAxis plotLines resize and animation.Fixed #4281, added information about point in tooltip's headerFormat.Fixed #6169. cropShoulder was inherited by column series, which set it to 0. Fixed by overriding to 1.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #9049, issue with lines to culled points in boost.Fixed #9052, conflict between settings boost.enabled and seriesThreshold.Fixed #9058, error when running chart tests in jsdom.Fixed #9088, updating a point in a pie chart threw errors when another slice was hovered.Fixed #9091, showCheckbox didn't work with layout proximate.Fixed #9097, chart.update error when removing axes and series.Fixed #9119, dataLabels sometimes overlapped stackLabels.Fixed animation of grid lines when changing axis extremes. Follow tick marks.  Highcharts v6.1.4 (2018-09-25) # Better polyfill for forEach in oldIE. See #8865.  Bug fixes Fixed #2165, legend.labelFormatter was not called when series' visiblity changed.Fixed #3495, export menu click was wrongly triggering chart's click event.Fixed #3739, changed rounding method to Math.foor for milliseconds dateFormat to match other date and time formats.Fixed #5009, performance problem with long text strings and word-wrap.Fixed #6405, Highcharts crashed when using category axis, small labels.step option and a large data range. Re-introduced error 19.Fixed #7484, followTouchMove didn't work properly on column series on mobile.Fixed #7815, data labels were visible even when points were hidden.Fixed #8652, replace max/min safe integer with max/min value in wordcloud to support IE11.Fixed #8865, wrong links in sankey chart if the columns didn't start from 0.Fixed #8874 and #8346, Highcharts.indexOfPolyfill wasn't supporting all required arguments.Fixed #8901, bubble chart calculated wrong extremes when either xAxis.min or xAxis.max was set.Fixed #8933, minPointLength squished all ranges to minimum length when xAxis was reversed.Fixed #8960, animation didn't run on Series.update() with new data.Fixed #8972, improved a way of assigning data to specific bins in histograms.Fixed #8994, a regression causing cropped legend items to become long after hover when useHTML was true. Regression since #8809.Fixed #8995, added support for duplicated x values for Series.setData.Fixed issue with tooltip header placement when scrollable plot area was activated.  Highcharts v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts v6.1.2 (2018-09-03) # Support for loading Highcharts as an AMD module.Added parameter to xAxis.labels.formatter in addition to scope, allowing arrow functions as formatters. Closes #8580.Adjusted the threshold for when a contrasted data label turns white or black.  Bug fixes Fixed #3589, inconsistent data label position in the waterfall series.Fixed #7097, rendering problem when animating 3D pie charts while hovering.Fixed #7484, update tooltip position when dragging and followTouchMove is enabled.Fixed #7649, error on 3d pie drilldown and drill up.Fixed #8024, empty gap in connector line in place of a null value.Fixed #8284, multiple markers did not follow points' positions when adding new points.Fixed #8355, error on running Series.setData on boosted series with the updatePoints parameter.Fixed #8506, refactored mapping data to appropriate bins in histograms. Closes #8646.Fixed #8529, not defining series in options for a 3D chart threw an error.Fixed #8532, hover color was ignored in sankey diagrams.Fixed #8561, legend keyboard navigation with useHTML.Fixed #8621, conditions extended in getSlotWidth wrap function.Fixed #8627, demo for legend navigation was not working correctly on Windows.Fixed #8633, implemented support for standard marker symbols in boost.Fixed #8638, legend with proximate layout was misplaced when all points were nulls.Fixed #8641, error on updating 3D chart when created empty.Fixed #8659, treemap child nodes were not clickable due to wrong animation of fill attribute to none.Fixed #8662, series names were random when seriesMapping object property had values more than 10.Fixed #8666, error in styled mode when trying to read a dataLabel style property.Fixed #8682, old sankey nodes were not destroyed when updating the series data.Fixed #8690, plotOptions.vector.rotationOrigin not working properly.Fixed #8699, flags were missing in current time frame.Fixed #8704, the useHTML option did not take effect on rotated data labels, specifically on the sunburst series.Fixed #8708, print chart sometimes showed empty chart in Chrome when Boost was enabled.Fixed #8713, setting cropThreshold on a windbarb series broke the chart.Fixed #8731, boosted area displayed beyond pane when threshold was outside pane.Fixed #8742, glitch in stack label overlapping detection.Fixed #8768, missing ticks at the end of datetime axes if local system was in a half-hour time zone.Fixed #8773, background color of scrollable plot are was not extended, caused page background to bleed through.Fixed #8777, IE7 didn't display pie chart due to badly named some function.Fixed #8789, a regression causing the axis labels to take up too much space in some cases when using HTML.Fixed #8791, solid gauge didn't respect updating colorIndex on points.Fixed #8795, console errors when zoomed in and using Series.setData with redraw set to false.Fixed #8797, scrolling not available when scrollablePlotArea was combined with responsive options.Fixed #8809, a regression causing misplaced HTML axis labels after drilling down and up.Fixed #8818, shared tooltip in boost mode didn't always pick up all points.Fixed #8820, chart.scrollablePlotArea option didn't play well with title.useHTML and other useHTML cases.Fixed #8824, make sure checkboxes stay fixed with chart.scrollablePlotArea enabled.Fixed #8830, orphaned data labels on points outside Y axis range on xrange series.Fixed #8834, exceptions on rendering stack labels on out-of-scale axis.Fixed #6794, 'cursor: pointer' wasn't working for data labels with 'useHTML: true'.  Highcharts v6.1.1 (2018-06-27) # Added new feature, proximate legend layout, to allow placing legend items close to the data series.Added new option, tooltip.outside, to allow the tooltip to render outside the confinement of the chart area. Closes #5784.Added clearer error reporting to offline exporting. Closes #8226.Added default for data.weight in Word Cloud.Added feature, event ordering for controlling what handler runs first when multiple modules are used.Added new default behaviour for sunburst data labels, rotationMode: 'auto'. Now the best fit will be calculated. See #8502.Added support for polar parallel coordinate charts (star plots).Added symbol for month number without leading zero. Closes #8150.  Bug fixes Fixed #4377, exporting context menu did not hide on button click.Fixed #8021, missing points after zoom in scatter 3d.Fixed #8031, columns overlapped xAxis.Fixed #8042, axis labels had the same slot width on 3d charts.Fixed #8140, series legend items didn't show up when colorAxis.showInlegend was false.Fixed #8159, useHTML caused that treemap data label was misplaced.Fixed #8163, added xAxis.reversedStacks option to control stacks order within a columns group.Fixed #8173, crosshair did not work properly with variwide.Fixed #8173, missing unit test.Fixed #8181, wordcloud missed large words.Fixed #8187, stackLabels in bar chart were misaligned.Fixed #8210, a regression causing axis labels to not expand after having ellipsis.Fixed #8214, missing space character before tracker class definition.Fixed #8234, a regression causing overlapping X axis labels on drilldown.Fixed #8241, use secure URLs in themes.Fixed #8243, the way of calculating axis slotWidth changed.Fixed #8245, regression causing data.parsed callback not being called on loading Google Spreadsheets.Fixed #8273, offline export bug due to nested function wrap.Fixed #8276, wrong z-index for halo in styled mode.Fixed #8277, missing top neck of reversed funnel.Fixed #8330, overlapping pie data labels due to a bug in the label distribution algorithm.Fixed #8358, export icon was not disabled using responsive rule.Fixed #8365, indicator calculated wrong values for long and short sma.Fixed #8377, chart disappeared after resizing a hidden chart inside a padded div.Fixed #8392, plotbands update zIndex issue.Fixed #8393, annotations are not exported when added dynamically.Fixed #8402, boost not rendering well with bubble chart and missing z values.Fixed #8406, colorAxis did not get new series extremes after chart update.Fixed #8407, scatter series added to a 3D chart via chart.addSeries was not converted to a scatter3d series.Fixed #8415, className option did not work on plot lines.Fixed #8428, pie chart slice did not show after visibility changes.Fixed #8438, combination charts from CSV didn't lay out properly without seriesMapping.Fixed #8444, axis title rendered a title tag when wrapped across two or more lines.Fixed #8456, improved 3d projection matrix property.Fixed #8467, regression causing long axis labels being clipped when using HTML in combination with whiteSpace: nowrap.Fixed #8477, plot line labels didn't work in browsers that support Array.prototype.flat.Fixed #8478, a regression causing duplicated legend items when using color axis and dynamically adding series.Fixed #8481, chart update with type: bar didn't work.Fixed #8494, incorrect assignment in data export for multiple pie charts.Fixed #8515, padding was not applied to data labels in sunburst series.Fixed #8531, random data labels in sunburst chart were hidden.Fixed #8181, regression with drilling up by clicking root node in Sunburst.Fixed build scripts which returned to early, instead of waiting for promise to resolve.Fixed disabling animation in pattern fills.Fixed export menu rendering below axis when scrollablePlotArea was used. See #8316.Fixed issue where image patterns could not have translucent opacity with default animation.Fixed issue with scrollablePlotArea being applied on exported charts. See #8316.Fixed issue with image patterns in IE not always being shown if images were cached.Fixed issue with initialValue was always supplied to reduce.Fixed scrollablePlotArea, the scroll jumped back to original scrollPositionX after toggling series. See #8316.Fixed stuck series labels.  Highcharts v6.1.0 (2018-04-13) # Added feature for loading data directly from a CSV URL or JSON resource, and keeping it dynamically updated through the data.enablePolling option.Added examples of themes with styled mode: dark-unica, sand-signika, grid-light.Added feature to animate the series when updating data through Series.setData, Series.update or Chart.update. The new logic looks for matching X values and can be disabled through setData's updatePoints option.Added Open in Cloud functionality in the export-data module.Added pattern fill module.Added new feature, chart.scrollablePlotArea, to provide smooth scrolling of data on small devices.Added animation parameter to Chart.update.Added default max-width for pie data labels to avoid long labels squeezing the pie itself.Added new option, data.beforeParse, to allow modifying the CSV when using the data.csvURL option.Added new option, legend.alignColumns, providing better default layout for multiline horizontal legends.Added support for Infinity and -Infinity values for plotOptions.area.threshold, to make the area extend towards either Y axis extreme. Closes #8139.Added support for nested series.keys.Added options minFontSize and maxFontSize to Wordcloud.  Bug fixes Fixed #7792 #7791, inverted charts not clipping correctly in Boost.Added max distance to the label distribution function, so pie data labels and flags are not drawn too far away from the anchor point.Fixed #4881, data labels with useHTML caused recursion error in Firefox on Windows.Fixed #7026, export-data did not work when the boost module was active.Fixed #7103, dataLabels not cropped outside extremes.Fixed #7186, added new build script to dist task. Build and includes es-modules in distribution.Fixed #7362, dataLabels were overlapping when rotation was set.Fixed #7383, SVG title tag not configurable.Fixed #7491, missing words in Wordcloud because of too small playing field.Fixed #7604, axes ticks were wrongly aligned when startOnTick or endOnTick were set to alse.Fixed #7639, wrong extremes after repeated zoom in scatter charts.Fixed #7798, stack labels weren't correctly positioned with multiple yAxis.Fixed #7850, legacy IE wasn't getting classes of DOM elements correctly.Fixed #7857, panning was not working when xAxis was reversed.Fixed #7862, connector lines were not visible in waterfall series when negativeColor was used.Fixed #7874, wrong legend item positions when using HTML after setting chart size.Fixed #7894, legend.verticalAlign top failed with no chart title.Fixed #7896, streamgraph rendering and tooltip issues with single series.Fixed #7898, drillup button with long text was not correctly aligned after multi-level drilldown.Fixed #7906, error in gauge chart if no yAxis.labels config was provided in styled mode.Fixed #7931, error in series-label module when animating while chart was destroyed.Fixed #7933, setting startPoint dynamically failed when data set was empty initially.Fixed #7942, yAxis ticks and title had wrong positions after toggling series visibility.Fixed #7957, custom buttons in exporting didn't rescale image symbols.Fixed #7965, could not toggle the chart.reflow option dynamically with chart.update().Fixed #7968, a regression causing ellipsis setting xAxis.labels.style not to work.Fixed #7975, long pie chart data labels were not correctly truncated, and could not be disabled.Fixed #7986, invalid exported CSS when using comma item delimiter and best-guess decimal point in European locales.Fixed #7991, treemap had wrong root on export.Fixed #7996, polar chart with particular values was rendered wrong.Fixed #8008, drilldown data points set as arrays with keys failed.Fixed #8014, Chart.setTitle didn't result in legend position updating.Fixed #8060, markers flickering after setData() when redraw was deferred.Fixed #8073, animation of graph with center step was distorted.Fixed #8075, adding and removing axes dynamically caused redraw error.Fixed #8083, wrong crosshair width and position for variwide chart.Fixed #8092, plotOptions.bubble.sizeByAbsoluteValue did not render bubbles when z-values were very close.Fixed #8100, arearange markers did not correctly support negativeColor and zones.Fixed #8101, wrong decimal separator in tooltip with multiple values.Fixed #8104, selected state attributes for a point were not applied in xrange series.Fixed #8106, context was not preserved inside lin2log and log2lin axis functions.Fixed #8119, point class name was not applied to the halo and connector.Fixed #8129, yAxis with tickPixelInterval=1 rendered tick close to zero instead of zero.Fixed Series.update to support soft series name without recreating series.Fixed data module failing to initialize chart when the data config was empty.Fixed errors in plugins when destroying a chart from its own callback.Fixed issue with legend navigation sometimes not focusing for single legend item charts.Fixed issues with resizing points with autocalculated pattern dimensions.  Highcharts v6.0.7 (2018-02-16) # Added internationalization support for the accessibility module. See lang.accessibility.  Bug fixes Fixed #150, grid lines did not always align to plot border and to other axis' grid lines.Fixed #1813, graphs and areas were not clipped when exceeding perimeter in polar charts.Fixed #7191, level options was applied to wrong level in treemap when levelIsConstant is false.Fixed #7729, highcharts-more.js couldn't be included multiple times without errors.Fixed #7787, a regression causing incorrect title alignment when useHTML was enabled in v6.0.5.Fixed #7800, error on hovering points in IE11 + compatibility mode.Fixed #7806, API reference had a wrong extend for bullet's targetOptions.Fixed #7812, a regression causing wrong initial position of text with useHTML.Fixed #7814, multiline axis title didn't reflow to chart resize.Fixed #7817, regression with categories in drilldown. Point names were not properly purged from Axis.names array.Fixed #7825, histogram threw error if the base series had equaled values.Fixed #7826, annotations were hidden if the points had disabled markers.Fixed #7850, legacy IE event for onContainerMouseDown wasn't provided properly.Fixed #7854, accessibility of datetime charts.  Highcharts v6.0.6 (2018-02-05) #   Bug fixes Fixed #7700, SVG offline export in styled mode in IE11 added length to styles.Fixed failing test on FireFox, getBBox() shouldn't be used on clipRect elements.Fixed issue with markers always being visible when using GPU translations in boost.Fixed syntax error causing missing sunburst.js file in distributions, see #7775.Fixed #7730, connectNulls in Boost failed with zooming.Fixed #7716, point padding caused extra points where there should be none. See.  Highcharts v6.0.5 (2018-01-31) # Added states.normal to allow disabling animation after point or series hover.Added chart-level time options.Added new sankey options, node.column and node.offset.Added option, series.marker.enabledThreshold, for setting the break point between enabling and disabling markers.Added support for connectNulls in the Boost module. See #7395 and #7631.  Bug fixes Fixed #4647, custom buttons from exporting can be created without tooltip.Fixed #4699, lines pass through data points in inverted waterfall.Fixed #6712, xAxis.scrollbar was not listed in the API docs.Fixed #6985, arearange didn't remove old markers on zoom.Fixed #7179, HTML entities were not escaped in title elements.Fixed #7273, disabled markers caused wrong offset on a point hover with image as symbol.Fixed #7281, streamgraph gave wrong Y axis extremes when yAxis.reversedStacks was false.Fixed #7388. added option sunburst.levelSize and sunburst.levels.levelSize to customize ring sizes.Fixed #7467, rangeSelector.selected didn't work on a year buttons with offsetMin.Fixed #7499, errors and bad redrawing on adding and removing series with Boost module.Fixed #7507, windbarbs immediately on the edge of a zoomed chart were mispositioned.Fixed #7515, null X values in all data points of one series caused all other series to hide.Fixed #7517, sunburst used wrong value to calculate size of root node.Fixed #7523, error on drilldown in styled mode.Fixed #7529, regression with label positioning and useHTML in Edge and IE.Fixed #7534, point.isInside was set to true in a cropped point - added extra check for a point's graphic prop.Fixed #7538, offline PDF export did not handle fonts with multiple charts.Fixed #7555, huge peak values caused smaller values not to render when zooming in on stacked area chart.Fixed #7557, arearange series in boost mode threw errors when zooming out from SVG mode.Fixed #7597, added property outerArcLength to sunburst as an alternative filter to innerArcLength.Fixed #7600, Chart.update with drilldown didn't work.Fixed #7602, error on calling chart.drillUp when chart was not drilled into.Fixed #7607, box plot whiskers and median appeared on hover if their width was set to 0.Fixed #7611, null pointer exception on destroying the chart from selection event.Fixed #7617, xrange series had mispositioned partialFill after zooming in.Fixed #7621, hourly datetime label was skipped instead of repeated when crossing DST change.Fixed #7633, style CSP error when using legend.useHTML.Fixed #7634, errors when using the Boost module in combination with non-boostable series types.Fixed #7646, tooltip didn't work on flags in boosted chart.Fixed #7656, major performance hits when using axis labels with useHTML = true.Fixed #7663, data labels in variablePie were wrongly positioned.Fixed #7667, waterfall caused errors when stacking null points.Fixed #7669, annotations not working in styled mode.Fixed #7677, after removing an annotation the chart threw errors.Fixed #7681, point halo stayed after pie resizing.Fixed #7696, improved documentation for tooltip.split and tooltip.shared options.Fixed #7709, a regression causing plot bands not to render if from or to was Infinity.Fixed #7725, slow performance when using xAxis.uniqueNames and lots of categories.Fixed #7726, synced charts failed with disabled xAxis.crosshairs.snap.  Highcharts v6.0.4 (2017-12-15) # Added feature, xAxis.labels.reserveSpace option only worked when setting it to false, could not be set to true to force reserved space. See #5286.Added new option on flag series, allowOverlapX, to be able to toggle the new feature of overlap avoidance. See #4674.Made keyboard navigation for points work more intuitively, highlights last/first point depending on direction, and wraps around at end.Added option data.sliced and slicedOffset in Sunburst.  Upgrade notes Highcharts now makes room for the legend in the layout if it has verticalAlign: 'top' with a horizontal legend. In existing charts using this layout, the layout of the legend and the plot area may be affected.Fixed #1019, right mouse button dragging should not #1344 trigger zoom**.  Bug fixes Moved accessibility of tables to export-data module. Fixes #7400 and #7486.Fixed #1019, right mouse button dragging should not trigger zoom.Fixed #3965, tickAmount was adding ticks only with bigger value than max for single value axis.Fixed #4939, null points in box plot caused the Y axis extremes to fail and all valid points were lost.Fixed #4958, the pointIntervalUnit option didn't handle the DST crossover correctly when set to 'days'.Fixed #6096, reset zoom button covered the tooltip.Fixed #7042, very small values were not respecting the decimals setting in numberFormat function.Fixed #7226, zooming was not possible when softMin and softMax were set.Fixed #7248, labels in polar charts were clipped when overflowing the chart edges.Fixed #7287, some nested HTML elements in SVG were updating wrong groups.Fixed #7314, Updated wordcloud to use font family sans-serif by default.Fixed #7363, a regression in animation logic causing sunburst data labels not to show after drilling.Fixed #7381, vector series points were visible outside current plot area.Fixed #7384, data label was not visible after drilling up in pie and column charts in Chrome.Fixed #7394, Infinity value broke heatmaps and potentially other charts. See also #3571.Fixed #7397, updating chart type changed rendered series Z index.Fixed #7404, data export from pie chart failed if the point name was an empty string.Fixed #7405, small numbers in exponential notation were wrongly interpreting decimals.Fixed #7406, heatmap was faded when hovering legend in styled mode.Fixed #7411, chart axis disappeared with hidden series in navigator.Fixed #7413, setting drilldown.animation.duration to 0 caused orphaned column shapes after drilling up.Fixed #7414, data label text color was wrong with rotated labels in styled mode.Fixed #7415, keyboard navigation not working with legend paging.Fixed #7418, event handling in iOS led to all series being faded out in styled mode after tapping close to legend items.Fixed #7420, a regression causing stacked column graphs to fail when threshold was null.Fixed #7421, added keyboardNavigation.mode option with serializing functionality.Fixed #7423, bad default behavior for accessibility skipNullPoints and pointDescriptionThreshold.Fixed #7428, legend overlapped title and subtitle when vertically aligned to top.Fixed #7432, ticks not correctly placed on midnight in some cases when the first tick was close to DST crossover.Fixed #7437, a regression causing 3d pie slices not to move on second update using Chart.setSize().Fixed #7439, errors on drilling down in styled mode treemap.Fixed #7448, CSV export problem with auto-detecting decimal points and item delimiters. Item delimiters now default to ; if the detected browser locale has , for decimal points.Fixed #7451, a regression causing panning out of data bounds on category axes.Fixed #7457, function was not accepted as binsNumber for histogram series.Fixed #7463, extra tick was inserted on zoom when using the xAxis.tickPositions option.Fixed #7475, a regression causing xAxis.label.overflow: false not to work.Fixed #7477, 3D line series moved as series visibility was toggled.Fixed #7478, plot border didn't redraw when animation was active.Fixed #7481, error in stacked chart with predefined axis bounds using boost.Fixed #7485, Mozilla Addons Linter found a bad word in the source code.Fixed #7489, sankey chart was not compatible with no-data module.Fixed #7493, stacked area chart didn't respect connectNulls: false after updating point to null.Fixed #7494, chart height increased on window resize in styled mode.Fixed #7495, small gaps were visible between the halo and the pie slices in pie charts due to SVG anti aliasing.Fixed #7507, visible and misplaced wind barbs when outside plot area.Fixed wrong context in animation complete callback when skipping animation due to equal attributes. See #7146.  Highcharts v6.0.3 (2017-11-14) # Added new option, dataLabels.filter, for a declarative way of filtering data labels without using the formatter.  Bug fixes Fixed #1841, bad animation when adding points in area ranges.Fixed #4994, improved documentation on loading Highcharts in ES6.Fixed #6183, small tick interval caused ticks to be merged to one.Fixed #6895, zoomed heat map wastn't clipped properly in boost mode.Fixed #6907, no focus indicator on some browsers.Fixed #7300, font-size in wordcloud was not set as pixels, causing Firefox to render all words equal size.Fixed #7311, minPointLength wasn't correct for some cases.Fixed #7315, marker was listed as a column series option.Fixed #7315, removed wrong docs for series.column.marker and for shadow in hover and select states in column.states.Fixed #7316, null text with useHTML was throwing an error on getBBox().Fixed #7320, a regression causing responsive options for axes and series not being unset.Fixed #7326, setData with equal data length caused badly drawn stacked area series with null points.Fixed #7332, X-range data labels were not hidden for off-screen elements.Fixed #7339, removed doubled axis ticks in case of too dense ticks.Fixed #7342, improved documentation for xAxis.Fixed #7351, dynamically added checkboxes didn't respect scrolling after update.Fixed #7357, a chart without a title threw an error when trying to export data.Fixed #7369, scatter chart with series containing points with null and negative X didn't render.Fixed #7371, sunburst chart failed in styled mode.Fixed #7377, approximation averages wasn't returning undefined values as it should.Fixed issue with date parsing error appearing when not necessary.Fixed issue with markup passing unfiltered into aria-label attributes, causing invalid SVG.Fixed jsdoc plugin. Load highcharts assembler from npm.Fixed keyboard navigation for maps and heatmaps.Fixed navigator update issue. See #5846.  Highcharts v6.0.2 (2017-10-20) # Added nodeFormatter property to data labels and tooltips in the sankey diagram. Closes #7284.Added center algorithm, square and rectangular spirals to Wordcloud. See #7241.  Bug fixes Fixed #7272, regression with columnStart in data module.Fixed #6103, reset zoom button not playing well with drill up button.Fixed #7224, legend item text not positioned properly when useHTML is enabled. Closes #7254.Fixed #7238, useHTML didn't have an effect with split tooltip.Fixed #7243, updating pie series point color didn't update connector color.Fixed #7260, a regression causing the legend box not being resized when dynamically adding and removing series.Fixed #7264, wordcloud did not support the no-data-to-display module.Fixed #7265, a regression with causing data.endRow to be offset by one.Fixed #7280, a regression causing mispositioned HTML data labels on pie charts.  Highcharts v6.0.1 (2017-10-05) #   Bug fixes Fixed #7223, regression in v6 causing stock charts and certain features to crash in IE.Fixed #7228, regression in v6 causing columns with only negative values not to render.  Highcharts v6.0.0 (2017-10-04) # Added Annotations module for annotating a chart with labels or shapes.Added the Boost module for WebGL rendering of millions of points.Added the Series labels module for organic positioning of labels next to the data.Decoupled old IE code into a separate module.Added new series type, bell curve.Added new series type, bullet chart.Added new series type, histogram.Added new chart layout, parallel coordinates chart.Added new series type, pareto chart.Added new series type, sankey chart.Added new series type, 3D scatter chart.Added new series type, stream graph.Added new series type, sunburst.Added new series type, variable pie.Added new series type, variwide.Added new series type, vector plot.Added new series type, wind barbs.Added new series type, word cloud.Added new series type, X range.Improved CSV parser of the data module.  Bug fixes Fixed #5909, plotband border on top was missing.Fixed #6005, selected pie slice had wrong color in styled mode.Fixed #6261, a regression causing charts to draw at small heights if container size was small.Fixed #6268, Chart.update() did not update parameters of the data module.Fixed #6302, chart was not rendered when xAxis.max and rangeselector.selected were defined.Fixed #6648, the redraw parameter in Series.setVisible was not respected when Boost module was loaded.Fixed #6679, a regression causing drilldown not to fire the second time in certain cases.Fixed #6957, when tooltip.useHTML was true on a map and other series types, the shape would flicker and tooltip hide in IE and Edge.Fixed #6992, error in data label positioning with really small pies.Fixed #7012, series group was wrongly translated when 3d columns were added to graph.Fixed #7021, cleared duplicated marker reference.Fixed #7024, regression causing charts not to show when preliminary rendering within a child of a detached node.Fixed #7025, treemap with color axis didn't work in styled mode.Fixed #7030, added highcharts.scss to distribution.Fixed #7031, could not set up Highcharts with a custom window object.Fixed #7034, color tweening from a named (unrecognized) color to a hex color failed.Fixed #7046, a zero value point using minPointLength was always shown as a positive value point.Fixed #7061, line was missing after zooming between points.Fixed #7080, JS error on adding rotated data labels with shadow applied.Fixed #7084, high or non-ASCII characters in CSV file were not exported correctly in IE.Fixed #7088, series didn't hide dynamically in Boost mode.Fixed #7090, offline generated PDF showed hidden series.Fixed #7112, pie chart data labels were visible for negative values.Fixed #7113, updating a pie chart to all negative values didn't clear the slices.Fixed #7115, version format not validated by yarn.Fixed #7117, plot line label had wrong position in polar charts with circular grid lines.Fixed #7126, less than sign followed by a space was interpreted as markup.Fixed #7127, exception in Pointer when updating a series from its own mouseOver event handler.Fixed #7128, data export with combined scatter and column series inserted too many rows.Fixed #7160, treemap should not display halo on hover.Fixed #7175, NaN in text position of plot band label after toggling series visibility.Fixed #7180, disabling tooltip caused event flooding.Fixed #7188, null points creates issues for shared tooltip, when there is more than one point with same x value.Fixed #7193, fixed #7159, hoverPoints in boost mode was not usable for Tooltip.Fixed #7028, axis label width style wasn't respected if there was enough space to render wider labels.  Highcharts v5.0.14 (2017-07-28) #   Bug fixes Fixed #7014, a regression causing JS error when writing a new chart to a node that was originally detached.Fixed JS error on inverted, bosted charts.  Highcharts v5.0.13 (2017-07-27) # Added pos, axis position, to axis label formats. Closes #6859.Added accessibility.keyboardNavigation.tabThroughPoints option, ref #6886.Added legend.keyboardNavigation.enabled option, ref #6838.Added color animation on state change for non-marker based series like columns and tree maps.Added feature to line-wrap long axis titles by default. Fixed #6893, causing multiline axis titles to overlap axis labels.Added new option, exporting.menuItemDefinitions, and allow string keys to be used in the menuItems instead of redefining full objects.Added new option, yAxis.stackLabels.allowOverlap, to prevent stack labels from overlapping. Closes #6876.Added new parameter oneToOne to the chart.update function. This allows for easier integration of Highcharts into dashboard solutions and wrapper APIs.Added markers to arearange and areapsplinerange series. Closed #6736.Removed error message 27 because of conflict when using highcharts-more with maps module. See #6686.  Bug fixes Fixes #6981, wrong layout on inverted heatmaps.Fixed #3946, stackLabels were not working in 3D column chart.Fixed #4853, legend's border wasn't respecting checkboxes.Fixed #5783, the chart width and text bounding boxes were not picked up when the chart was rendered to an element that was detached from the DOM.Fixed #6115, returning an array from tooltip formatter with false value didn't hide split tooltip item.Fixed #6342, class names were not updated on HTML elements.Fixed #6418, HTML data labels and refreshing and deleting caused JavaScript exceptions.Fixed #6616, the border was drawn in a full circle pie slice.Fixed #6695, cursor pointer was missing on drilldown line charts.Fixed #6708, 0 value bars were incorrectly drawn in 3D chart.Fixed #6740, tooltip not hidden when tabbing out of chart.Fixed #6746, events for legacy IE (6-8) didn't have unique keys.Fixed #6747, crosshairs in column charts caused flickering on mouse move in IE and Edge.Fixed #6752, activeDataLabelStyle used to override dataLabel's styles set on a point.Fixed #6760, tooltip.enabled: false did not respond to responsive configuration.Fixed #6761, scatter series data was not correctly exported in the export-data module.Fixed #6763, treemap was missing directTouch property, causing color axis marker to disappear.Fixed #6764, fixed #6791, fixed #6808, addition #6687. Series with noSharedTooltip was unaccessible when tooltip was shared.Fixed #6769, hidden series legend had invalid stroke-width attribute.Fixed #6773, updating xAxis.range didn't change extremes.Fixed #6774, exponential numbers were not correctly handled by number formatter.Fixed #6776, color animation was not working correctly for flags and 3D columns.Fixed #6778, new ellipsis functionality did not account for rotation.Fixed #6781, dataLabels were misaligned on inverted chart when configured xAxis.height.Fixed #6784, 3D draggable scatter demo didn't work on touch devices.Fixed #6792, updating point.marker.symbol to null didn't restore default point's marker.Fixed #6803, charts inside display:none divs became visible in Edge and IE.Fixed #6804, not able to touch-scroll the page on chart with zoom.Fixed #6831, tooltip border color was ignored by split option.Fixed #6835, columnrange disappeared when zooming too far in.Fixed #6838, consider hidden series in keyboard navigation.Fixed #6841, the dataLabels.crop option had no effect on pie charts.Fixed #6860, crosshairs on multiple axis was drawn on wrong position.Fixed #6879, shadow was not applied for split toolip.Fixed #6888, legend.update caused color axis to disappear in heat maps.Fixed #6897, prevented axis extremes change in case of a single point if multiple ticks are set.Fixed #6898, 3d pie chart had wrong color for sides in styled mode.Fixed #6900, column border radius was not respected in styled mode.Fixed #6912, responsive rules affecting series killed animation and data labels.Fixed #6956, improved colors and treemap for IE8.Fixed #6968, chart height didn't reflow when chart.width was set.Fixed #6970, flags were not filled in styled mode.Fixed #6971, rounding errors caused flickering of solid gauge backgrounds in semi circles.Fixed #6988, dataClass.color should be ignored in styled mode.  Highcharts v5.0.12 (2017-05-24) # Added core support for color animation.Added error message on trying to define the same series type twice. Fixes #6686.Let Series.update fall back to the optimized Series.setData if only the data is updated.  Bug fixes Fixed #223, pie chart data labels were not truncated to chart area when pie size was explicitly set.Fixed #3160, let the xAxis.offset option modify the clip area to avoid clipping line graphs.Fixed #4588, loading and "no data" labels overlapped.Fixed #4921, ignoreHiddenSeries caused wrong column position and width after hiding and showing all series.Fixed #6307, offline export issues with styled mode in IE and Edge.Fixed #6517, regression with shared tooltip and columns. Tooltip not following mouse move.Fixed #6659, long series name in legend broke the geometry of the chart. Added textOverflow and max width to default itemStyle.Fixed #6659, long series names made tooltip overflow the chart.Fixed #6664, no-data label remained in heat maps after adding points.Fixed #6670, visible: false didn't work correctly on funnel chart points.Fixed #6687, wrong hover points with columns and shared tooltip.Fixed #6700, axis label font size wrongly detected in styled mode.Fixed #6704, series names were not grouped for two series after drilldown.Fixed #6705, bubble chart click events and point select was broken.Fixed #6706, crash with heatmap and boost-canvas.Fixed #6721, area range fill was broken with null values and connectNulls: true.Fixed #6731, category axis allowed zooming outside range.Fixed AT announcing clickable for some a11y demos.Fixed Firefox issue with styled export, ref #6307.Fixed bug with inserting multiple data tables in export-data.Fixed issue where chart container height was not respected when initially hidden. See #6693.Fixed issue with data labels not appearing on exported charts in styled mode.Fixed issue with missing gridLines in 3D.Fixed issue with mouseOver event in column chart with shared tooltip.  Highcharts v5.0.11 (2017-05-04) # Added export-data as an experimental module in the main repo.  Bug fixes Fixed #1174, added dataLabels distance option for single pie point.Fixed #4743, updating 3D columns with z stacking failed.Fixed #5045, line series should be broken on axis breaks. Moved gapSize logic to the broken-axis module.Fixed #5297, 3D columns were overlapping.Fixed #5424, crosshairs overlapping when there is multiple axis with equal positions.Fixed #5863, panning didn't allow panning back to the extreme data values.Fixed #5911, inverted waterfall was rendered incorrectly.Fixed #6046, copy classes by reference in stead of a hard copy in merge.Fixed #6218, some tooltip options were not updated through chart.update().Fixed #6296, regression causing bubbles not to be clipped.Fixed #6350, solid gauge series did not have CSS point class.Fixed #6420, when multiple axes, show only one snapping crosshair at the same time.Fixed #6440, callout anchor was mispositioned in an inverted chart.Fixed #6441, callout animated to wrong position on point update.Fixed #6488, destroying colorAxis caused error and left legend.Fixed #6527, point.color of negative column was less important than series.negativeColor.Fixed #6549, Y-values of 0 caused the point to be skipped in boost mode.Fixed #6550, a regression causing sprites in meteogram sample not being clipped after animation, resulting in weather symbols all over.Fixed #6563, a regression causing flat integer data to draw on the X axis when allowDecimals was false.Fixed #6566, zAxis wasn't updated through chart.update().Fixed #6569, chart.exportChart() left undefined item in the Highcharts.charts array.Fixed #6574, subtitle was rendered outside the chart when setting subtitle.verticalAlign to 'bottom'.Fixed #6580, blending in boost caused barely visible markers in scatter charts.Fixed #6585, zero-value column's dataLabel was misplaced when using logarithmic yAxis.Fixed #6586, directTouch did not work with shared tooltip.Fixed #6589, pie chart didn't accept undefined values.Fixed #6597, PointerEvent was used unnecessarily, causing bad behaviour on Android.Fixed #6606, no legend keyboard navigation when heatmap module loaded.Fixed #6608, small maxHeight didn't hide all legend items.Fixed #6609, entities in the legend title were not translated.Fixed #6617, rendering a chart in a hidden container with box-sizing. Rewrote the functionality to avoid rendering in a hidden div, so that instead of cloning the div we make the current div temporary visible.Fixed #6627, marker symbol wasn't checked properly.Fixed #6636, a regression causing missing ticks with negative timezone offset.Fixed #6637, null point broke chart.Fixed #6639, accessibility issues with new export-csv versions.Fixed #6641, pane axis caused the error in defualt charts.Fixed #6646, item title was not wrapped in styled item.Fixed #6650, boost module failed with styled mode and heatmap.Fixed #6653, exporting error with IE8.Fixed #6660, changing colorIndex did not update all series styles.Fixed issue in tooltip-outside-box study with narrow windows. Touch #6658.Fixed merge problems with #6576.  Highcharts v5.0.10 (2017-03-31) # Added !default statement to SASS variables for easier configuration. Closes #6436.Added new option, plotOptions.column.crisp, to allow disabling crisp columns and subsequent rendering issues with densely packed items. Closes #5755Added new option, findNearestPointBy to declare how the tooltip searches for points. #6231.Refactored the Pane object to keep track of its own backgrounds, more decoupled from Axis.  Bug fixes Fixed #3481, title and subtitle were not resizing chart correctly when using useHTML on true.Fixed #3936, colorAxis was not updated through chart.update.Fixed #4964, missing plotband when small range.Fixed #6007, exporting after chart.update() threw errors.Fixed #6144, empty categories caused wrong render of tooltip.Fixed #6191, dead clip path references.Fixed #6203, yAxis extremes were wrong calculated for visible scatter points.Fixed #6258, text labels with ellipsis had inconsistent behavior.Fixed #6279, error when hiding series of line polar using data module.Fixed #6359, softMin/softMax didn't work in combination with floor/ceiling.Fixed #6430, areasplinerange polar curve path was wrongly rendered.Fixed #6431, addition to #6476, stickyTracking should default to true when there is a shared tooltip.Fixed #6433, updating Axis with plotBands rendered redundant nodes.Fixed #6437, 3D pie chart disappeared when drilling down after resize.Fixed #6444, exporting the second time failed with axis extremes.Fixed #6449, series with noSharedTooltip was inaccessible with shared tooltip.Fixed #6452, chart.update was not redrawing axes when setting alignTicks to false.Fixed #6456, tooltip didn't show on hovering outside candlestick and OHLC series.Fixed #6458, named color deduction was case sensitive.Fixed #6459, colors of boxplot series points would not update.Fixed #6463, missing closing sign in RegEx caused wrong handling of pseudo attributes.Fixed #6465, first data label in polar charts was not visible.Fixed #6469, series got lost when mixing category data in a dual axis chart.Fixed #6470, exporting failed in IE8 when data labels were enabled.Fixed #6473, wrong text wrapping with textOutline: none.Fixed #6474, custom CSS property was injected into the DOM. Added to blacklist.Fixed #6474, text outlines were not properly cleaned up on resizing.Fixed #6476, shared tooltip with disabled stickyTracking did not work.Fixed #6477, regression on crosshairs with snap in a bubble chart.Fixed #6479, responsive rules didn't apply to panes.Fixed #6481, offline export of pie charts to PDF not working in Firefox and Safari.Fixed #6487, contrast color was not applied for a justified label on a column.Fixed #6497, horizontal legend layout didn't respect spacing setting.Fixed #6499, offline export fails with allowHTML despite no HTML in chart.Fixed #6502, missing chart series and axis in combined logarithmic chart.Fixed #6518, wrong marker positions when hovering after redrawing in boost module.Fixed #6519, empty space caused overlapping in legend.Fixed #6521, missing label for narrow plot band.Fixed #6089, chart.update not taking effect on panes. Also closes #6438.  Highcharts v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts v5.0.8 (2017-03-08) # Added a refactored Boost module based on WebGL. Details and API to be announced.Added animation on graph mouse over and mouse out.Added hooks so that users can define their own log axis conversion functions, and can advertise that the log axis should allow negative values.Added new option, solidgauge.rounded.Added support for relative chart.height as a percentage of the width. This allows for fixed aspect ratio.  Bug fixes Fixed #223, pie chart data labels overflowed after pie reached minimum size.Fixed #2322, updating series type caused remnants of the original series type after multiple updates.Fixed #4916, data values were lost in export after updating a point from a numeric or array configuration to an object configuration.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #6087, minPointLength shifted next points rendering.Fixed #6173, another case of unwanted inline CSS in style mode.Fixed #6187, navigator jumped back after dragging on touch devices.Fixed #6254, Point.update did not apply new class names.Fixed #6264, enabling individual bubble markers did not work.Fixed #6272, inverted stack area chart was badly drawn when containing nulls.Fixed #6274, allowDecimals: false was ignored with flat data.Fixed #6278, missing ticks before DST crossover in some cases.Fixed #6282, text-align did not take effect on data labels with useHTML.Fixed #6291, multiple responsive rules were applied an unapplied in wrong order when resizing.Fixed #6301, legend width option caused wrong alignment when aligned right.Fixed #6305, accessible keyboard navigation in polar charts not working correctly.Fixed #6314, treemap series failed with error in styled mode.Fixed #6321, bubbles were hidden when close and marker.enabled set to null.Fixed #6322, legend navigation arrows did not update correctly on responsiveness.Fixed #6328, issue with disabled tooltip in accessibility module.Fixed #6330, minor ticks affecting the computed extremes of Y axes in some cases.Fixed #6330, minor ticks were not applied outside major ticks on a logarithmic axis.Fixed #6347, error on applying responsive rules where series or axis length was greater than the existing chart.Fixed #6356, legend.maxHeight not respected after chart update.Fixed #6361, accessibility failing for IE8 and older.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #6384, Point.update didn't work with slice: false.Fixed #6387, graph and area rendered differently on area splines next to null points.Fixed #6399, treemap legend item had incorrect color after point was hidden.Fixed #6401, point.states didn't work for maps.Fixed #6402, treemap ignoreHiddenPoint is now true by default.  Highcharts v5.0.7 (2017-01-17) # Added Legend keyboard navigation to accessibility module.Added chart render and predraw events needed by the new Boost module.Added new option, global.timezone, as a convenient shortcut to timezones defined with moment.js.Added optional redraw to drillToNode, related to #6180.Added support for marker.symbol setting on bubble charts.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Changed the Highcharts.error function to handle strings.  Bug fixes Fixed compliance with Checkmarx security checker.Fixed #6108, issue with big data in offline exporting.Fixed #5672, X values in tooltip in Boost module was wrong.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5757, empty chart throws error with accessibility module.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5835, exported SVG didn't validate, width and height attributes were set on group elements.Fixed #5837, could not style null points with CSS.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles were hidden in small charts when maxSize was percentage.Fixed #5884, optimizing addSeries.Fixed #6085, floating point errors on Y axis labels.Fixed #6088, rounding issue in tooltips.Fixed #6107, error with negative width in xrange study.Fixed #6112, issue and regression with swapping series indexes.Fixed #6113, long legend items were unresponsive due to heavy HTML parsing in SVG. Implemented caching.Fixed #6127, pie chart data label overlapped after drill up.Fixed #6128, tooltip caret was not drawn after updating from shared to non-shared.Fixed #6130, Chart.update didn't trigger responsive rules to be re-evaluated.Fixed #6138, reset colorCounter and symbolCounter when all series are removed.Fixed #6147, error in Chart.get when called between redraws.Fixed #6157, offline exporting was not working for Edge.Fixed #6158, duplicate ID of navigator series.Fixed #6171, drawDataLabels did not use updated options when data label already existed.Fixed #6173, no inline CSS should be allowed in styled mode.Fixed #6180, treemap crashed when the root node did not exist.Fixed #6184, polar arearange was misshaped when connectEnds was not set.Fixed #6196, dead clip path references.Fixed #6200, modified treemap setPointValues to only add crisping correction when needed.Fixed #6202, legend icons overflowed legend with large radius.Fixed #6207, when point X was given, point names did not show on category axis after hiding and showing series.Fixed #6208, error on responsive rules for plotOptions.series and series.xAxis.Fixed #6213, wrong text bounding box reported in Chrome for Windows, resulting in asymmetric label padding.Fixed #6217, container sizes below 20px height needed explicit chart height to be set.Fixed issue in offline exporting where libURL option was not picked up.Fixed issue with duplicate highcharts-negative class. Ref #6114.  Highcharts v5.0.6 (2016-12-07) # Added a common hook, Highcharts.error, for user defined error handling.  Bug fixes Fixed #4175, missed ticks when xAxis.reversed was used.Fixed #4507, 3D scatter points were not rendered if z-value was not set.Fixed #5950, broken axis module caused errors when rendering funnel series.Fixed #6003, regression with pie chart selection border width.Fixed #6016, zones weren't applied for point elements in styled mode.Fixed #6018, 3D column not rendered in styled mode.Fixed #6020, stacked waterfall didn't render any points.Fixed #6021, chart.alignTicks on logarithmic axis should not be applied.Fixed #6045, multiple charts exporting demos failed with other width/height settings.Fixed #6054, regression which disabled selecting bubble points.Fixed #6055, halo sometimes animated to another point when hiding.Fixed #6062, minPointLength was applied for null points in a waterfall series.Fixed #6065, text outline was off with multiline text.Fixed #6067, bubble halo stayed forever per series.Fixed #6068, JS error on destroying chart from its own callback.Fixed #6077, legend title disappeared after legend update.Fixed #6080, stray data labels for empty points in column and bar series.Fixed #6094, a regression causing allowPointSelect not to work with 3D pies.Fixed JS errors on path animations in pies. Related to #6051.Fixed border issue on hovered points in map and heatmap. Related to #6064.Fixed issue with split tooltip anchors and panes.  Highcharts v5.0.5 (2016-11-29) #   Bug fixes Fixed #5997, panning not working with reversed axes. Also closes #3278.Fixed #3398, click event for dataLabels when useHTML was set to true didn't work.Fixed #4338, incorrect minPointLength for negative values in waterfall series.Fixed #5860, bubble series in styled mode caused errors.Fixed #5892, errors in console on animating in splines as they are added.Fixed #5947, HTML dataLabels didn't show tooltip on mouseover.Fixed #6014, issue with zooming out of bounds.Fixed #6033, threshold ignored when chart.reflow was used.Fixed issue with build settings of Highcharts themes, and added a minimum of test.Fixed regression related to animation, where the complete step was not executed. This specifically affected drilldown, solid gauge and color axis updates. Closes #6017, 6032, #6023.Fixed wrong product name in license headers.  Highcharts v5.0.4 (2016-11-22) # Refactored animation and attr logic to always stop the single property being set. This prevents an animation from continuing after the same property has been set either through .attr or .animate.  Bug fixes Fixed #5788, artifacts when animating splines before previous animation was done.Fixed #5982, additional series options were not set in exporting.Fixed #5985, issue with allowHTML in offline exporting.Fixed #5989, tooltip did not hide on touch.Fixed #6008, regression causing rotated data labels to break chart in Firefox.  Highcharts v5.0.3 (2016-11-18) # Added new option, lang.numericSymbolMagnitude, to support numeric symbol shortening in Japanese, Korean and certain Chinese locales.Added new option, threshold, for solid gauge series.Added new CSS custom property, textOutline, and at the same time removed the textShadow shim. Closes #5849.Better implementation of the chart.pinchType option. Allow pinchType and zoomType to be set independently. When tooltip.followTouchMove is true, pinchType only applies to two-finger touches. Closes #5840.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Implemented bubbles in the Boost module.Improved alignment of ticks on multiple axes by allowing ticks to be placed at less strict intervals.Refactored split tooltip connectors to use common callback shape instead.  Bug fixes Fixed #3802, yAxis.opposite ignored when setOptions was used.Fixed #3949, added zIndex calculation for scatter in 3D chart.Fixed #5838, split tooltip ignored style options.Fixed #5859, tooltip display problems in styled mode.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5889, pointPlacement did not respect individual series pointRange.Fixed #5895, Axis.update failed with solid gauge Y axis.Fixed #5897, Series.pointAttribs ignored some lineWidth options.Fixed #5899, HTML label bounding box was cached when a width was set in inner HTML.Fixed #5903, a regression causing the halo to cover bubbles so the bubbles weren't clickable.Fixed #5909, plotBand border was only drawn on three out of four sides of the rectangle.Fixed #5912, legend clipping was not removed after resizing to larger size.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #5919, default exporting.libURL used insecure HTTP.Fixed #5921, horizontal legend has height limit even when floating.Fixed #5922, Tooltip.refresh crashed when formatter returned undefined.Fixed #5926, more unique id's for clipping and other internal defs. Prevents conflicts when SVGs from different sources are pasted in the same page.Fixed #5928, first tick disappeared when redrawing chart with type category and uniqueNames = false.Fixed #5931 and #5957, refactured updateButtonStates to fix issues with states of Rangeselector buttons.Fixed #5932, line height was wrong in tooltip with nested em units.Fixed #5934, series.className was missing a trailing space in the legend item.Fixed #5935, a regression when axis was crossing DST in a timezone west of UTC.Fixed #5938, dynamic inversion didn't work without setting certain other properties at the same time.Fixed #5940, disabling the legend via Legend.update did not reclaim legend space.Fixed #5944, offline exporting and styled mode resulted in unstyled, black chart.Fixed #5951, responsive.rules.condition.callback did not work according to documentation.Fixed #5959, hidden series affecting axis closest point calculation.Fixed #5960, incorrect series order after removing and adding series.Fixed #5968, xAxis labels did not have ellipsis when rotation was set to 0, in Firefox and Edge.Partially fixed #5047. Workaround with was given static width and height.  Highcharts v5.0.2 (2016-10-26) # Fixed two regressions.  Bug fixes Fixed #5887, a regression causing bubbles to move on hover.Fixed regression in v5.0.1 where the halo would be mispositioned in inverted charts.  Highcharts v5.0.1 (2016-10-26) # Added new options, axis.softMin and axis.softMax. Closes #5824.Added Legend keyboard navigation to the accessibility module.Added animation on hovering point markers.Added offline PDF export support.  Bug fixes Refactored tooltip delay the generation of the empty label container. This prevents the empty label from being present in exported SVG.Fixed #1880, individual column borderColor.Fixed #4951, issue with placing tick marks on round times when using getTimezoneOffset.Fixed #5427, JS error on async destroy when triggered from custom exporting menu.Fixed #5483 without breaking #5823.Fixed #5538, pie series was not redrawn after modifying title and other elements.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5736, zooming in multiple X axes with crosshairs and snap false caused JS error.Fixed #5745, a regression causing chart.style not to apply to the container.Fixed #5750, null points on categorized axis caused blank chart when drilldown module was present.Fixed #5757, empty chart throws error with accessibility module.Fixed #5764, drilldown not working with Highstock.Fixed #5765, a regression causing 3D pie slices not to update on show/hide when animation was set.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5768, regression since v4.2.7 causing setData with xAxis.type = category to break categories.Fixed #5770, regression causing individual box plot fill not to apply.Fixed #5773, a regression causing axis events not to be called after axis update.Fixed #5777, selected class name remained after unselecting a point by selecting another.Fixed #5779, zoom-out button not working on first touch on touch devices.Fixed #5787, a regression causing the chart.reflow option to never take effect.Fixed #5790, zoom button appeared on swiping already zoomed-out line chart.Fixed #5794, header on tooltip.split was cut off near the ends of the axis.Fixed #5801, artefacts when updating series with tooltip.split.Fixed #5817, a regression causing point-specific marker radius not to be applied. Refactored point sizing logic for initial render, updates and states.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5822, a regression causing drilldown to fail the second time when allowPointDrilldown was false.Fixed #5832, shared tooltip failed with points of the same X value but different pointPlacement.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5837, could not style null points with CSS.Fixed #5839, errors on touch-dragging on mobile devices after dynamically adding a series with visible false.Fixed #5842, image marker symbols were misplaced and missing from exported charts.Fixed #5850, hideLoading didn't work right after calling showLoading in styled mode.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed duplicate setting of halo path since HC5. Added animation to hiding halo.Fixed eternal loop when setting a new chart.height in a responsive rule.  Highcharts v5.0.0 (2016-09-29) # Added styled mode for optional separation of SVG and CSS.Added responsive option set.Added accessibility option set.Added new function, Chart.update in order to update the chart options after render time.Added new function, Chart.addCredits.Added new function, Chart.title.update.Added new function, Chart.credits.update.Added new function, Legend.update.Added new option, Renderer.definition.Added new option, exporting.error for catching errors in offline exporting.Added new option, exporting.libURL for use with offline exporting.Added new option, pane.background.className.Added new option, xAxis.className.Added new option, xAxis.crosshair.className.Added new option, plotOptions.series.dataLabels.className.Added new option, plotOptions.series.className for styling individual series.Added new option, xAxis.plotBands.className.Added new option, xAxis.plotLines.className.Added new option, plotOptions.series.zones.className.Added new option, chart.colorCount for use in styled mode.Added new option, defs for defining reusable elements in styled mode.Added new option, tooltip.padding.Added new option, series.data.colorIndex for coloring points in styled mode.Added new option, tooltip.split.Added new option, chart.description for use with the accessibility module.Added new option, chart.typeDescription for use with the accessibility module.Added new option, xAxis.description for use with the accessibility module.Added new option, plotOptions.series.description for use with the accessibility module.Refactored build system to use ES6 imports and node-based build script.Changed all default colors (except series data colors) to a simplified color scheme based on just a few shared colors.  Highcharts v4.2.7 (2016-09-21) # Added new feature, yAxis.angle, allowing positioning the axis line and labels in polar chart Y axes. This makes it practical to use multiple axes in polar charts.Added option, xAxis.nameToX, allowing points to have the same name but different axis positions on an axis of type category.  Bug fixes Fixed #1011, ignoreHiddenSeries with ordinal axis caused artefacts on a chart.Fixed #1041, gaps in the area fill of stacked areasplines.Fixed #3169, error on drilldown from a null point.Fixed #3341, exceeded stack size on mutually linked series.Fixed #3571, NaN in the beginning of data broke series.Fixed #4778, wrong rendering waterfall series, when yAxis.max was set.Fixed #5186, gaps in the fill of areasplinerange.Fixed #5383, mouse position detection with pointPlacement.Fixed #5528, a regression causing polar arearanges to fail.Fixed #5533, stickyTracking when set to false caused highlighting wrong point.Fixed #5552, linejoins in boost module lines.Fixed #5556, JS error on polygon with empty data.Fixed #5563, JS error in treemap with zero values.Fixed #5568, pointIntervalUnit broke when using more data points than turboThreshold.Fixed #5569, generic options set on the yAxis affected the colorAxis.Fixed #5570 and #5590, regression causing blank export on Batik based export servers.Fixed #5572, pie slices were not hidden in 3D pie charts on legend click.Fixed #5595, HTML tooltip did not hide on point mouse out via the tooltip.Fixed #5605, error on async onload of destroyed chart.Fixed #5618, updating master series caused wrong visibility on linked series.Fixed #5619, the Series remove event was fired when updating a series.Fixed #5620, text was mispositioned when loading a chart in a hidden iframe in certain browsers.Fixed #5622, click event for line series point was not called when column was rendered below.Fixed #5631, zeroes in logarithmic chart made the whole graph crash.Fixed #5632, gaps were broken in arearange and areasplinerange.Fixed #5646, waterfall did not work correctly with logarithmic axis.Fixed #5647, xrange points disappeared if x was outside plot but x2 inside.Fixed #5647, xrange points disappeared when x was outside visible range.Fixed #5655, animation: true on a series config caused animation to jump from the middle.Fixed #5658, error on updating series from its own mouseOver event.Fixed #5662, setExtremes on polar chart caused padded max value.Fixed #5665, addPoint animation parameter was not used.Fixed #5679, handle isArray for ES6 iterator.Fixed #5681, JS error on adding custom group to points.Fixed #5689, text had soft line wraps when white-space: nowrap was used in combination with text-overflow: ellipsis.Fixed issue #4133, error bar data labels positions failing on redraw.Fixed issue #5205, color axis changed colors when legend was disabled.Fixed issue #5567, wrong clipping of offline exported SVG in IE11/Edge.Fixed wrong handling of minRange on logarithmic axis, related to #1227.  Highcharts v4.2.6 (2016-08-02) # Added crisp correction for crisper treemap points.Added support for animating graphs to the right when updating data or setting axis extremes. Related to #5294.Refactored sideways animation logic for graphs to better reflect shifting data. Closed #5294.  Bug fixes Fixed tick animation when showFirstLabel or showLastLabel were set to false.Fixed #2522, point names should fill up categories when X is not set.Fixed #2597, data labels remained visible even though container was hidden.Fixed #3571, treat NaN in data as null.Fixed #4204, hover.brightness wasn't used for positive bars in waterfall.Fixed #4216, connectEnds with null as first point failed.Fixed #5052, wrong placement of ticks on opposite axis on 3D charts.Fixed #5197, JS error on hovering chart after setData before redraw.Fixed #5215, JS error when legend configuration object was set to false.Fixed #5280, stacked area was wrong with non-zero Y axis threshold and data points at 0.Fixed #5287, unsnapped crossshair was hidden after adding points.Fixed #5298, empty cells in Google Spreadsheet made the graph disappear.Fixed #5302, dateFormat didn't handle Date objects like before.Fixed #5310, global stacking affected polygon series.Fixed #5311, JS error when setting an event config to null.Fixed #5322, negative values in pie series was rendered incorrectly.Fixed #5324, calling Renderer.label with a shape of rect failed.Fixed #5332, last axis label was stuck when doing repetetive redraws.Fixed #5337, tooltip for polygon should not behave like scatter points.Fixed #5339, plot area disappeared when categories were too long.Fixed #5348, error in arearange series when trackByArea was false.Fixed #5350, 3D pies failed redraw when animation was off.Fixed #5352, treemap tooltip did not format point value.Fixed #5354, noSharedTooltip was undefined for gauge and solid gauge, which caused errors when shared tooltip was enabled.Fixed #5376, axis title position was wrong with font-size text values.Fixed #5396, drilldown activeDataLabelStyle color contrast did not work.Fixed #5417, regression causing HTML axis labels to misbehave with useHTML and rotation.Fixed #5442, incorrect clipRect counter causing points to disappear on series update.Fixed #5480, axis showed 0k or 0M. Suffix not needed for zero.Fixed #5486, threshold null caused wrong fill on all-negative axis.Fixed #5495, shared tooltips not always working because of rounding error.Fixed #5500, pyramid height caused wrong position.Fixed #5504, exporting module default settings was not compatible with https.Fixed #5513, Chart.setSize required both width and height to be set.Fixed #5519, issues with setting null colors in drilldown.Fixed #5522, 3D charts scale differently first time versus subsequent redraws.Fixed #5523, marker radius was incorrect when values were of type string.Fixed issues with PNG/JEPG in IE and Edge in offline exporting, ref #5410.Fixed issue #5410, offline exporting in IE/Edge failed with embedded images for PNG/JPEG.  Highcharts v4.2.5 (2016-05-06) # Added new option, exporting.printMaxWidth, to prevent printed charts cut off on the right side. Closes #2088.Added new option, title.widthAdjust and subtitle.widthAdjust, to prevent titles from flowing over elements.Added support for JPEG in offline download module, ref #5157.  Bug fixes Fixed #3070, verticalAlign didn't work with rotated data labels on column series.Fixed #4087, error 11 was not described on the website.Fixed #4670, zones colors were not applied for markers on hover.Fixed #5211, titleSetter in combination with buildText added duplicate content to the title.Fixed #5220, a regression causing JS error when resizing polar charts.Fixed #5221, support for minPointLength in xrange study.Fixed #5226, polar chart with no data failed with error.Fixed #5228, scroller.getUnionExtremes did not consider navigation axis min and max.Fixed #5230, a horizontal and opposite axis used to have wrong alignment for its title.Fixed #5234, x value of null cancelled rendering of all points.Fixed #5236, last point was not always visible due to rounding errors.Fixed #5237, inverted should not have an effect on polar charts.Fixed #5250, columns were not visible in IE10.Fixed #5254, data labels were not aligned to the point box in heatmaps.Fixed #5259, crosshair prevented point hover when drawn above points.Fixed #5261, break at the end of a label caused wrong bounding box.Fixed #5266, pinchDown was sometimes empty on Android.Fixed #5269, crosshairs on wrong point with multiple series and non-shared tooltip.Fixed #5274, dataLabels.overflow not always respected on heatmaps.Fixed issue in the xrange study with axis extremes when there were other, more extended series in the same chart.  Highcharts v4.2.4 (2016-04-14) # Added support for polar columnrange series.Added e.originalEvent to drilldown event in order to catch modifier keys and other properties. Closes #5113.Added new drilldown event, chart.events.drillupall, that is triggered after multiple single drillup events. Closes #5158. Closes #5159.Added new option, chart.options3d.fitToPlot to fit 3D charts into the available plotting area. This may affect the layout of existing 3D charts if the layout was adjusted by chart.margin. The chart.margin setting can now normally be removed. Closes #4933.Added new option, lang.shortWeekdays, to specify short weekdays other than the first three letters of the weekday.Added new value, day, for pointIntervalUnit.Added option, legend.navigation.enabled, to allow disabling legend scroll.  Bug fixes Fixed #3450, tooltip did not display after zooming on Android.Fixed #3916, halo and tooltip visible for points outside the plot area.Fixed #4552, mouse interaction and tooltip positions didn't match on 3D scatter chart.Fixed #4631, treemap series displayed no data even when data existed.Fixed #4679, when series are overlapping, the tooltip should show the topmost point.Fixed #4700, users can set and modify opacity on parent nodes in treemap.Fixed #474, vertical label alignment on top axis was off when labels were on multiple lines.Fixed #4751, inconsistent data label behaviour after redraw.Fixed #4784, setting allAreas to false does not center map.Fixed #4812, dataLabels which was supposed to be hidden were still visible.Fixed #4856, zooming did not work in Treemap.Fixed #4866, space was not reserved for tick marks, allowing ticks to overflow the chart when axis labels were not present.Fixed #4868, axis breaks were not applied for a range series.Fixed #4891, pie slice's graphics were not fully hidden, when slice was hidden.Fixed #4954, corrected floating values with isSum and isIntermediateSum in Waterfall series.Fixed #4961, placement of tooltip on flags for inverted charts.Fixed #4984, tooltip jiggling on arearange even when followPointer was true.Fixed #5007, JS error from tooltip when running in strict mode.Fixed #5010, stacked areas didn't work with Date objects as X values.Fixed #5029, runtime error on empty data set.Fixed #5030, bars were shaking on initial animation.Fixed #5034, a regression causing axis labels on vertical axis not to wrap.Fixed #5053, regressions related to chart callbacks firing async.Fixed #5060, date format for %e was not consistent with docs.Fixed #5063, solid gauge tooltip showed wrong series the first time.Fixed #5066, crosshair with snap: false only appeared when hovering a point.Fixed #5075, display was not deferred on data labels with useHTML.Fixed #5079, a regression causing vertical axis title to disappear in IE8.Fixed #5084, wrong Heatmap Intro was set in parts.js, which made the Download Builder fail.Fixed #5085, tooltip showed for points immediately outside the plot area on the X axis.Fixed #5086, X axis labels overlapped when added via Chart.addSeries.Fixed #5087, container with padding caused error with printing in IE8.Fixed #5099, single point marker was not displaying when surrounded by null points.Fixed #5101, click events did not fire on pie slices after Point.update.Fixed #5112, returning false from event handlers didn't cancel default function.Fixed #5133, data labels disappeared on chart redraw when defer was explicitly set to true.Fixed #5134, a regression causing wrong aniation on pie labels when moving from one side to the other.Fixed #5137, boost module threw JS error when doing mouse interaction after removing series.Fixed #5144, problem with percentage stack with null points.Fixed #5146, columns with zero value and no border on negative chart were visible even though they shouldn't.Fixed #5156, funnel did not respect the color set for selected state.Fixed #5160, data grouping and boost module did not play well together.Fixed #5167, wrong padding in bubble charts made point disappear after setting axis extremes.Fixed #5171, log scale transformation functions were not accessible from the outside.Fixed #5174, invalid CSS because of division by zero.  Highcharts v4.2.3 (2016-02-08) #   Bug fixes Fixed #4989, Chart.getSVG function produced invalid SVG.Fixed #4999, a regression causing JS error on hovering columns having a shadow.Fixed #5001, a regression causing empty arearange series to fail with JS error.Fixed #5004, a regression causing stacked step areas to render incorrectly.Fixed #5015, a regression causing splines with null points and connectNulls: true not to render.Fixed #5016, a regression where a spline with equal X values failed to show.  Highcharts v4.2.2 (2016-02-04) # Added new option, linecap, to allow round corners on solid gauge.Changed chart.load event to wait for external symbol images, so that their size is set correctly in the SVG. This comes in handy for export and server generated images.  Bug fixes Fixed #1977, bubble series shadow was not moved when moving bubbles.Fixed #4077, panning was not supported on inverted charts.Fixed #4086, tick marks and labels were not trimmed to axis extremes when tickPositions option was used.Fixed #4573, wrong number rounding in some cases.Fixed #4622, updating point didn't change legend's item.Fixed #4759, a regression which did not update point markers in point.update().Fixed #4779, data labels were not cropped when rotated.Fixed #4859, no easy way to catch offline export failed exception.Fixed #4861, where offline export would fail in some cases with embedded images.Fixed #4870, column width calculation not correct on logarithmic X axis.Fixed #4886, pie slicing failed and tooltip disappeared too quickly on Windows phone.Fixed #4888, fillOpacity of 0 did not take effect on area charts.Fixed #4889, plotLine and plotBand should be rendered with higher zIndex than frames in 3D view.Fixed #4890, originalEvent was missing from selection event since 4.2.0.Fixed #4898, rounding issues with Y axis causing columns to exceed threshold value, and plot lines to be filtered out.Fixed #4904, async loading of points kept running after chart was destroyed in boost module.Fixed #4905, pie data labels were not hidden when scaling down.Fixed #4906, chart did not zoom when drag and drop was dropped on a different chart.Fixed #4911, false detection of overlapping data labels in multiple panes.Fixed #4912, specific export data label style didn't take effect for pies.Fixed #4913, regression in box size detection causing chart to overflow the container in some cases.Fixed #4914, boost module loadingDiv was destroyed before redraw was finished.Fixed #4918, spline curved wrongly when plotX or Y had a value of 0.Fixed #4920, polar X axis labels misaligned after chart redraw.Fixed #4927, crosshair only worked for one Y axis.Fixed #4928, HTML label lengths were not reset on resize.Fixed #4929, halo covered point and disallowed point click in IE8.Fixed #4938, HTML elements were missing visibility and opacity setters.Fixed #4951, X axis daily ticks did not render on midnight around a DST crossover when the getTimezoneOffset callback was used.Fixed #4955, export button was hidden by category crosshair.Fixed #2069, null points in stacked areas were rendered as zero instead of gaps.  Highcharts v4.2.0 (2015-12-15) # Included the Standalone Framework in Highcharts and removed the concept of adapters.Removed global properties in Highcharts and modules. Closes #4389.Added new constructor, Highcharts.chart, that allows instanciating a chart without the new keyword.Added an option to set the renderTo div as the first argument to the constructor, like Highcharts.chart(renderTo, options);.Added support for fill-opacity and stroke-opacity attributes on VML renderer. Support semi-transparent fill with named colors on area series.Breaking change: Easing functions from jQuery UI no longer work. They will fall back to the default "swing" easing. With Highcharts 4.2, the easing function must be defined on the Math object itself.Breaking change: The sparkline demo has some changes in the constructor.  Bug fixes Fixed #3372, tooltip for columnrange series was misplaced.Fixed #4667, column was left semi-opaque after drill up with the Standalone Framework.Fixed #4782, marker image width and height didn't apply to legend.Fixed #4799, wrong position of columns when setting grouping:false in charts with multiple columns.Fixed #4801, setting visibility by series.update() didn't update series group.Fixed #4811, legend checkbox position was wrong with legend title present.  Highcharts v4.1.10 (2015-12-07) # Added new feature, borderColor: null for pies, which inherits the slice color. This allows a simple workaround for antialiasing gaps between slices when not using a real border (#1828).Added new option, xAxis.labels.reserveSpace, to control whether the labels should take up space in the layout. Closes #3479.Added new option, treemap.sortIndex.Better animation on 3D pie drilldown (#3534).  Bug fixes Fixed #2409, allowing x/yLow and y/yHigh in range charts to work across orientation.Fixed #2597, in Firefox, some elements stayed visible even when the container was hidden by visibility: hidden.Fixed #2995, series color with gradient was not correct in tooltip.Fixed #3140, wrong placement and axis margin when using rotated labels on a vertical axis.Fixed #3737, column/bar order inside group did not match the xAxis.reversed setting.Fixed #3745, added missing right shape of the slice when using startAngle.Fixed #4088, proper shapes and dataLabels positions for 3D pie chart. Minor refactoring and commenting.Fixed #4184, tickInterval not taking precedence over auto point range.Fixed #4267, updated points didn't update negativeColor until hover.Fixed #4309, crash in Firefox inside hidden iframe using standalone framework.Fixed #4369, yAxis.reversedStacks rendered wrong order for 3D columns.Fixed #4374, ticks became misaligned after updating the chart, even when chart.alignTicks was set to true.Fixed #4388, axis titles sometimes overlapping with axis labels in 3D charts.Fixed #4391, white areas in area stacks with multiple points on same X value.Fixed #4415, X axis label overlapped when step was set to 1.Fixed #4453, tooltip was sometimes visible in printed charts.Fixed #4533, pointBreak event was not called for xAxis and different series types than column.Fixed #4584, 3d pie with null data slices getting plotted.Fixed #4605, data labels were not shown if a column or column range extended far outside the plot area.Fixed #4638, bubble legend icon not tolerating relative font size units.Fixed #4640, exporting failed in IE7.Fixed #4641, pie slices with null values should not have a data label.Fixed #4645, shared tooltip did't show all of the points.Fixed #4652, wrong alignment of labels in the left side of pies.Fixed #4656, bar border was visible on zero values for reversed Y axis.Fixed #4660, regression caused missing last alternate plotBand when using categorized xAxis.Fixed #4663, treemap drillUp button is now visible when the chart has no titles.Fixed #4671, switching from normal to boost mode left duplicate graph.Fixed #4675, boost module did not remove tracker path after zooming out from SVG renderer.Fixed #4678, resetting zoom didn't reapply ellipses to all axis labels.Fixed #4681, memory leak on dynamic charts due to increasing bounding box cache.Fixed #4686, halo was not centered on the point.Fixed #4691, wrong default text alignment of axis title on opposite side when the title was in low or high position.Fixed #4694, xAxis labels were improperly positioned with opposite xAxis and staggerLines.Fixed #4701, Point.update changed types of items in series.options.data, causing issues with turboThreshold.Fixed #4704, setting new data on a pie chart didn't update color of the slice.Fixed #4721, hyphenated attribute names were not correctly animated.Fixed #4732, halo opacity not taking effect with named colors.Fixed #4736, tooltip x position was NaN when zooming in certain cases.Fixed #4737, crosshair's stroke-width should be updated after chart's resize.Fixed #4738, funnel chart not rendered correctly when center was specified.Fixed #4749, data.decimalPoint didn't work with negative values.Fixed #4756, wrong position of rotated axis labels on left side.Fixed #4768, hidden data labels visible in tall charts.Fixed #4769, plot bands didn't animate properly.Fixed #4789, dynamically added gauge dial was drawn on top of pivot.Full drilldown functionality for 3D pies. Closes #3534.  Highcharts v4.1.9 (2015-10-07) # Added new option, axis.visible.Added new option, bubble.sizeByAbsoluteValue, to allow negative bubbles sizes to be based on the absolute value rather than a scalar difference from smallest to greatest. Closes #4498.Added new series option, softThreshold, to prevent showing subzero axis ticks for line series that consist of positive data only.Added support for legendType: 'point' on more series types than just pie and its derivatives.  Bug fixes Fixed #2473, allowHTML should not affect the forExport flag.Fixed #2711, set proper order of data labels inside columns.Fixed #2854, SVG images in symbol URL's did not display in IE11.Fixed #3529, selected point changed color after updating.Fixed #3542, tooltip with useHTML did not fade out smoothly.Fixed #3632, pie inner size shouldn't be allowed to be greater than outer size.Fixed #3636, negativeColor wasn't set for marker on hover.Fixed #3801, pie chart radial gradient position did not update on chart resize.Fixed #3971, X axis label step was not honoured when rotation was set.Fixed #4136, treemap did not export correctly after drillToNode.Fixed #4298, treemap did not update axis extremes after updated data.Fixed #4431, tooltip was broken when changing from column series to a different type.Fixed #4442, alignTicks forced axes to align, even when only one of them contained data.Fixed #4465, tooltip disappeared on point when stickyTracking was false.Fixed #4482, line disappeared during animation when series.step was enabled.Fixed #4485, ticks were added inside axis break on datetime axis.Fixed #4502, wrong bounding box detection of rotated labels caused overlapping text in old IE.Fixed #4504, bars were misplaced when using reversed yAxis.Fixed #4510, point search along X axis failed in boost module.Fixed #4511, tooltip was not displayed, when yAxis.max cut off top part of the column.Fixed #4519, updatating pie data immediately failed with Standalone Framework.Fixed #4525, errors in exported SVG when allowHTML was true.Fixed #4526, series used the same clip-paths, which caused wrong clipping when using different axes.Fixed #4529, boost module produced error with pie charts.Fixed #4530, heatmap with single point and large colsize caused the point not to display.Fixed #4532, stack ID's as strings caused JS error in Highcharts 3D.Fixed #4536, unable to zoom in closely on first category when minRange was less than closest point range.Fixed #4543, null value bubbles should not be drawn.Fixed #4546, pie and flag series not showing tooltip correctly when displayed in a chart with shared tooltip.Fixed #4558, when resizing chart during addPoint animation cause error in stacking.Fixed #4562, logarithmic zAxis for 3D scatter did not render properly points.Fixed #4586, some markers moved by 1px after hovering.Fixed #4594, errors when stacking two series with different data lengths on a log axis.Fixed #4599, cropThreshold should be ignored when getExtremesFromAll is enabled.Fixed #4615, labels on color axis were wrongly positioned when useHTML.Fixed #4627, data labels exported twice in IE and Edge. Text shadows not rendered in Edge.Fixed issue with duplicated pane backgrounds after the #3176 fix.Fixed issue with offline export in Firefox. Closes #4550.Fixed regression with global animation and timing of calls.Fixed #2801, whiskerLength for boxplot can be set in pixels.Fixed #3323, 3d pie parts have better zIndexes, out part of slice crossing sides created, normalization of alpha and beta to (-360, 360) range.Partly fixed #1686, tooltip not hiding when mouse enters over it then out from series.Refactored columns. Separated the crisping logic from the rest of the translation logic. Related to #4179.  Highcharts v4.1.8 (2015-08-20) # Added experimental support for using HTML in exported charts through the exporting.allowHTML option. Discussed in #2473.Added new option, maxPointWidth, to the column chart type and its derivatives.Add %k, hours with no padding, in dateFormat.Don't cache undefined bounding box key. Closes #4328.  Bug fixes Fixed #4448, which causes duplicated event calls for column series.Fixed #1498, minor ticks were missing when using column series.Fixed #1655, where setExtremes event could be called with undefined extremes.Fixed #2775, click on custom button propagated and caused JS errors when destroying chart.Fixed #3379, minPadding and maxPadding was wrong on color axis.Fixed #3737, points within a group were not reversed in a reversed bar chart X axis.Fixed #3879, where linked series didn't inherit initial visibility from a parent.Fixed #3909, HTML data label was invisible after drilling up.Fixed #4149, tooltip went off plot area when data was clipped.Fixed #4189, wrong position of the legend in IE7.Fixed #4219, enconding problem with ellipsis. Better fix for #4079.Fixed #4246, pie slices with null values should not be rendered.Fixed #4313, setting one of the extremes removed both, min and max, axis paddings for bubble series.Fixed #4320, stack items building up and creating memory leak when adding and removing points.Fixed #4333, data label overlapping detection was too aggressive. Don't handle padding when the label doesn't have a border or background.Fixed #4339, touch-dragging in IE11 on a zoom enabled chart caused JS errors.Fixed #4343, axis lines missing when 3D was loaded.Fixed #4347, legend item click of heatmap with data classes should hide items.Fixed #4349, updating point.x prevented point from being hidden from legend.Fixed #4350, pie chart failing with StockChart constructor.Fixed #4356, pointBreak wasn't called for values below the threshold.Fixed #4356, series with null threshold now calls breakPoint correctly.Fixed #4359, drilldown pie selected slices had wrong color.Fixed #4360, float error on logarithmic axis label.Fixed #4364, chart click event fired when clicking menu items in the export menu.Fixed #4365, pie chart connectors were not hidden when data labels used HTML and hiding the series.Fixed #4371, where negative Axis offset miscalculated clip-path for series.Fixed #4390, JS error in some cases on updating a series with no data.Fixed #4396, different minSize and maxSize per separate series didn't work.Fixed #4401, better handling categories based on a point.name.Fixed #4410, a regression causing incorrect mouseover events in column charts.Fixed #4411, setting axis.labels.step to 1 didn't result in 1:1 labels.Fixed #4420, generic X axis gridline width with 3d columns.Fixed #4421, overlapping upper data labels on arearange series.Fixed #4430, point color was not set on positive points when negativeColor was set.Fixed #4434, regression causing failure with reversed solid gauge.Fixed #4443, auto rotation was not reset after widening chart when labels used HTML.Fixed #4449, a regression causing wrong alignment on legend items when rtl was combined with useHTML.Fixed #4477, too dense ticks when setting staggerLines, caused browser crash.Fixed #4313, setting one of the extremes removed both, min and max, paddings.Fixed #4351, setSize with standalone adapter didn't resize inner container.Fixed animation on updating map colors.Fixed issue with displayNegative not working with all data. Closes #4419.Fixed issue with pie and data labels producing JS error in IE6.Fixed issue with updating mapbubble point to null.Fixed regression with JS error on updating pie slice value to null.Improve logic for pointBreaks, touch #4356.Partial fix for #3861, bubble series not working with logarithmic axes. It now displays, but the bubbles are clipped unless the user sets a padding.  Highcharts v4.1.7 (2015-06-26) # Added new option, drilldown.allowPointDrilldown, that can be set to false to allow only drilling to categories. Closes #4295.Added support for useHTML in legend navigation.Added useHTML option to no-data-to-display module. Closes #4316.  Bug fixes Fixed #2911, JS error when drilldown and allowPointSelect were enabled at the same time.Fixed #3318, gauge background altered background on polar charts in the same page.Fixed #3650, updating a point from zero in 3d pies.Fixed #3709, crash when showing/hiding linked series and setting data at the same time.Fixed #3941, added option to turn off axis label ellipsis through text-overflow style.Fixed #4130, errors when running Series.update from the series' own events.Fixed #4170, halo was still visible after hiding pie slice.Fixed #4233, columns and areas ascended from botton when threshold was null and all values negative. Closed #4282.Fixed #4275, when null points were present inside an axis break, connectNulls: false did not have an effect.Fixed #4280, 3D for inverted charts was disabled.Fixed #4284, a regression causing columns to disappear after Point.update with an object argument.Fixed #4291, number suffixes like k and M was applied to non-round tick labels.Fixed #4301, point update on solid gauge gave wrong animation.Fixed #4308, graphs were clipped to axis line even when it was offset.Fixed #4309, JS error in Firefox when rendering chart inside an iframe with display:none.Fixed #4310, point hovering was unstable when stickyTracking was false and point markers disabled in normal state.Fixed #4318, ignoreHiddenPoint didn't take effect for funnels.Fixed #4319, tooltip was broken on canvas heatmap demo.Fixed bad translation from broken axis pixels to values. Part of #4229.Fixed issue with Batik powered exporting and IE8. Invalid SVG tag.  Highcharts v4.1.6 (2015-06-12) # Added new option, series.getExtremesFromAll, that tells the y axis to be scaled to the whole series range, not only the visible part.Added scaling support for Z axis on 3D charts.Added xAxis.title.x and xAxis.title.y options for positioning.Export: Added missing treemaps.js, fixes #4092.Export: Added support for Map constructor.Export: Added treemaps for serverside rendering.Export: Enable loading of maps.js.  Bug fixes Fixed issue with wrong data label being hidden on overlap in columns.Fixed issues with ellipsis on first and last label on X axis. Closes #3975.Fixed #4160, 3D should be disabled for inverted charts.Fixed #4160, 3D should be disabled for inverted charts.Fixed #1457, columnrange did not render with reversed Y axis.Fixed #182, browser hangs when updating chart from series mouseOut event.Fixed #2077, innerSize of pies was not correct when size was dynamic.Fixed #2088, crosshair shown on multiple axes.Fixed #3923, crash in Chrome when extending a dashed line to extreme length.Fixed #3974, duplicated data labels on Retina displays when text-shadow is applied.Fixed #3977, tooltip content sometimes displayed outside tooltip.Fixed #4069, slow updating of multiple pie slices.Fixed #4108, line wrap dataLabels in tree maps.Fixed #4116, cannot disable tooltip on polar chart.Fixed #4117, broken tooltips in pie charts when useHTML was enabled.Fixed #4124, treemap click on legend item returned error.Fixed #4128, tooltip only looked at X value for line series.Fixed #4146, point marker stayed after updating point to null when connectNulls was true.Fixed #4161, a regression causing wrong position of tooltip in top row of heatmap.Fixed #4163, tooltip broken on pie in combo chart.Fixed #4166, resetting point state was coupled to tooltip, resulting in state not reset when the tooltip was empty.Fixed #4167, chart crashed on Y axis breaks in stock chart.Fixed #4177, X axis label ellipsis overlapped when in the middle of the axis.Fixed #4197, ignoreHiddenPoint didn't work.Fixed #4200, unresponsive tooltip on tight column chart with shared tooltip.Fixed #4201, redundant tick alignment to empty axes.Fixed #4203, radial gradient rendered wrong in 3D Pies.Fixed #4208, click events did not bubble.Fixed #4210, touch scroll was trapped when zoomType enabled.Fixed #4217, tickInterval on linked axis did not follow that of parent.Fixed #4221, negative color and zones not working with logarithmic axis.Fixed #4223, tooltips showed year when data resolution was less than 1 millisecond.Fixed #4247, X zooming within an Y axis break resulted in empty chart.Fixed #4256, summary columns on waterfall, including data labels, extended below the plot area if an Y axis minimum was set.Fixed #4261, added namespace to drillToNode on click event in tree maps.Fixed #4264, column in stacked chart was mispositioned in some cases.  Highcharts v4.1.5 (2015-04-13) # Added new option, series.keys.Added now option, autoRotationLimit, as an upper limit for when to apply auto rotation. Closes #3941.Added options to solidgauge, radius and innerRadius on individual points.Changed tooltip behaviour in line charts and derivatives. This made swithching between series easier when the other series was covered by the tooltip.  Bug fixes Fixed #2922, redundant drilldown event on clicking data label.Fixed #3355, causing misaligned bars around the threshold value.Fixed #3758, setData on heatmap caused X axis to lose point range.Fixed #3839, axis labels not using available space after resize.Fixed #3867, errors on drill up on multi-series multi-level chart.Fixed #3912, shared tooltips not working well with pointPlacement.Fixed #3935, time axes got wrong extremes in rare cases.Fixed #3951, drilldown activeLabelStyle was lost after setting extremes.Fixed #3962, tooltip covered stacked columns near edges of the chart.Fixed #3967, shared tooltip not working with two datetime axes.Fixed #3969, legend indicator not displayed on colorAxis for 0 values.Fixed #3976, one legend item's height influenced all subsequent boxes.Fixed #3985, clicks registering incorrectly on column charts.Fixed #3988, column legend markers were not aligned to baseline.Fixed #3990, drilldown failed after destroying and re-initialising chart.Fixed #3995, all points were black after drilling in treemap with a coloraxis.Fixed #3996, font-style not taking effect with useHTML.Fixed #4001, errors thrown on area with a single point and zones.Fixed #4003, text replacement in export replaced content in label.Fixed #4006, wrong rendering of zones with values less then the minimum.Fixed #4014, touch scrolling not working on charts since the default followTouchMove changed.Fixed #4015, solid gauge color not updating in IE8.Fixed #4035, lineWidthPlus adding to states.hover.lineWidth.Fixed #4046, treemap issue with drillToNode and redraw of the chart.Fixed #4051, minPointLength gave wrong position on reversed Y axis.Fixed #4055, unable to set borderWidth to 0 for 3d columns.Fixed #4056, stack labels on reversed axis not vertically aligned correctly.Fixed #4062, 3d zIndex incorrect on chart resize.Fixed #4067, 3d columns datalabels not aligned.Fixed #4068, null colors rendered as black in columns and white in pies.Fixed #4069, setVisible was very slow on pies with many legend items.Fixed #4070, label ellipsis lost on vertical axis after redraw.Fixed #4075, zone elements were not destroyed on series update.Fixed #4079, bullets in tooltips had wrong encoding in IE8 on non-UTC pages.Fixed #4082, series with zones didn't apply hover line width.Fixed #4083, series with zones animated wrong on addPoint.Fixed #4085, wrong usage of momentjs in demo.Fixed #3832, bundled PhantomJS scripts not copied to filesystem on Windows.  Highcharts v4.1.4 (2015-03-10) # Added originalEvent to wrapped event argument for point and series click. Closed #3913.Changed description for error 23 (related to #3920).Fixed data.parseDate callback.  Bug fixes Fixed #1093, chart was resized after cancelling print.Fixed #3890, errors on box plots and error bar series when stacking was set in general plot options.Fixed #3891, axis label rotation not working outside -90 to 90.Fixed #3899, tooltip on column range only working on one point per X value.Fixed #3901, tooltip displaying for null points.Fixed #3904, shared tooltip gave errors with null points.Fixed #3911, data label duplication on WebKit with Retina displays.Fixed #3919, click event always triggered on the same point with a shared tooltip.Fixed #3920, color tweening with gradient fills caused black result.Fixed #3926, tooltip not showing when entering the plot directly on a column.Fixed #3932, shadow was not applied when negativeColor was used.Fixed #3934, pie chart did not update when legend was hidden.Fixed #3937, pointer events not reset after chart destroy.Fixed #3945, tooltip did't work afer resize.Fixed regression causing mouseover to not work with a single series.  Highcharts v4.1.3 (2015-02-27) #   Bug fixes Fixed #3900, duplicated Y axis in exported charts. Made export module more testable so it would have caught this error.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, error in title setter when setting a non-string value.  Highcharts v4.1.2 (2015-02-27) # Added new option to tree maps: interactByLeaf.Added new dataLabel option, shape, in order to allow callouts and connectors on data labels.  Bug fixes Fixed #3567, Safari failed at exporting charts with images.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, JS error when setting element title to a non-string value.Fixed #3886, wrong rendering of waterfall with a non-zero Y axis minimum.Fixed #3873, series.points array order was modified when building the k-d tree.Fixed #3866, data labels not re-appearing in remaining series after hiding another series.Fixed #3875, eternal loop and crash in Chrome when using minorTickInterval on an axis with very close data points.Fixed #3842 and #3872, data labels with text shadow are mispositioned in Firefox and modern IE.Fixed #3849, duplicated text on data labels in export. Closes #3864.Fixed #3868, setData broke tooltip.Fixed issue with tooltip not hiding after hiding a series from a floating legend.Hide tooltip on mouse leaving the plot area, also when a hoverSeries is not defined.Fixed #3860, a regression causing onMouseOver event not to work on line series.Fixed #3856, shared tooltip in polar charts.Fixed #3863, pointer with data grouping and addSeries.Fixed #3844, colorByPoint not working on tree maps.Fixed #2202, chartOptions.xAxis options not added in export.Fixed #3852, a regression causing logarithmic axis on gauges to fail.Fixed #3845, problems with addPoint on 3D pies.Fixed #3841, 3d column layering issue.Fixed #3793, charts with huge numbers fail at Number.toFixed.Fixed #3841, issue with multiple columns in 3d.Fixed #3830, point names in category axis were lost after Axis.update.Fixed #3836, a regression causing plot band labels to always be visible.Fixed #3840, isIntermediateSum miscalculation.Fixed drilldown issue with labels having both drilldown and static points.Fixed #3839, a regression causing columns not to be clipped while animating in.Fixed #3837, too aggressive data label collision detection in heat maps.Fixed #3834, crosshair drawn incorrectly on dynamically added yAxes.Fixed #3806, JS errors on clicking on non-drillable axis label after drilldown.  Highcharts v4.1.1 (2015-02-17) #   Bug fixes Fixed #3826, a 4.1 regression causing markers to be clipped after setSize.  Highcharts v4.1.0 (2015-02-16) # Added polygon series type.Added e.category event argument in drilldown events to make it clear when a category is clicked. Related to #3771.Added new option to the data module, firstRowAsNames.Added new option, pointIntervalUnit, in order to allow months and years as point intervals. Closes #3329.Added beforePrint and afterPrint events. Related to #2284 and #3729.Added new method, Series.removePoint, to allow removing points that are not instanciated on demand.Added new option, global.getTimezoneOffset, to allow integration with third party timezone libraries like moment-timezone.js.Added new Axis option, tickAmount. Refactored alignTicks on multi-axis charts to first compute a tickAmount, then make all axes comply with that.Added new Axis option, autoRotation as an array of possible values.Added new callback option, tooltip.pointFormatter.Added polar support for arearange. Issue #3419.In solid gauges, added support for initial animation as well as setting animation object for updates. Closes #3135.Made the entire numberFormat method settable and wrappable from the outside.Made tooltip.followTouchMove true by default, and allowed page scroll at the same time.Implemented support for "contrast" color setting in data labels. When the data label is inside a shape (like a column), this will ensure the best readability.On category axes, let the crosshair width cover the whole category like a band.Refactored zIndex handling on SVGElements so that the zIndex can also be modified after the element is first added.Changed the Axis.tickPositioner callback so that the default tick positioning logic runs first, to allow modification in the tick positioner instead of creating positions from scratch. Closes #3538.Made the legend draw below or above the plot area in cases where it is placed in a corner and the layout is horizontal.Implemented algorithm for setting precise tooltip xDateFormat when needed, but general format like year, month, day etc. when the time falls on midnight and the closest point range dictates it. Related to #3329.New default behaviour for the xAxis.minTickInterval option on datetime axis. It now goes to the closest point range by default.Implemented silent degradation instead of error 19 when user options dictate too many ticks on an axis.Removed overflow:justify logic. Instead, move labels and add ellipsis in case of overflow.Export server: Adapted to PhantomJS 2.Export server: Implemented XSS filter.Fixed error on applying stacking to area range series.Partly fixed #3506, overlapping axis labels on polar chart.Fixed waterfall issue where the upColor stayed after updating point to negative. Related to #3710.Don't allow decimals on yearly X axis.  Bug fixes Fixed #3724, JS error on preventing the selection event and running setExtremes immediately.Fixed #3728, Point.update not updating category name.Fixed #3743, minor ticks rendered outside plot area.Fixed #3778, redundant legend paging visible after redraw.Fixed #3197, drilldown with hidden series.Fixed #3719, updating areaspline to area failed.Fixed #3703, show no-data message on hidden series also.Fixed #3679, no-data label not realigning after showing hidden container.Fixed #3710, update point did not update sum in waterfalls.Fixed #3712, checkboxClick not handled for pie charts.Fixed #3708, color disappearing on redraw of solid gauge.Fixed #3702, JS error when running setData on a hidden series.Fixed #3670, funnel ignored point specific border settings on init.Fixed #3648, data label posision for column incorrect when using custom positioned Y axis in inverted chart.Fixed #3654, millisecond ticks not placed correctly.Fixed #3652, minor grid lines sometimes rendering outside the plot area to the right.Fixed #3201, crashes when zooming too far in on a dashed series.Fixed data module issue with blank chart when using forced categories with data longer than turboThreshold.Fixed #3635, markers overlapping in cases where they should not, according to the default behaviour.Fixed #2361, plot bands disappearing under certain conditions when zooming in so that parts are clipped.Fixed #3636, negative colors not applied on hover.Fixed #3623, negative values in pies causing bad drawing after running setData.Fixed #3575, huge columns not rendering on Chrome.Fixed #3608, reversed Y axis in gauges causing arcs to be drawn inside out.Fixed #3600, errors raised in modules when a chart was destroyed in its own callback.Fixed #3346, tooltip failed for two Y axes side by side.Fixed #3579, mixed up levels in multidimensional drilldown.Fixed #3569, reset zoom button disappeared after multiple zoom operations in empty area.Fixed #3390, single heatmap point getting huge size and causing rendering defects. Better axis metrics for single points. Closes #2515.Fixed #3544, drilling up failed when top series data was added dynamically.Fixed #3536, implemented error message on wrong color definitions in heat maps.Fixed #3525, error 12 in master-detail demo.Fixed #3295 and #3514 label box not rendered correctly with 0 values.Fixed #3507, fixed width tooltip with a single word on the last line was clipped horizontally.Fixed #3501, long axis labels taking up too much space instead of wrapping in drilldown charts.Fixed #3500, monthly and yearly X axis ticks having the wrong distribution when using timezoneOffset.Fixed #3449, export menu not working on touch devices when zoomType was set.Fixed #3391, halo not hidden on hiding a pie slice from legend.Fixed #2889, tooltip not displayed on line series when followPointer was true. Closes #3258.Fixed #3176, updating gauge axis caused background to disappear.Fixed #2919, errors and wrong behaviours on multi-level drilldown.Fixed #3445, pie charts showing wrong bullet color in tooltip.Fixed #2919, errors on drilldown with multiple axes.Fixed #2912, JS error on drawing hidden waterfall.Fixed #3437, data module failing with numeric data in first column.Fixed #3436 causing round linecaps on median lines in box plots. Reverted fix for #1638, a workaround for a Firefox bug regarding linecaps. Newer Firefox versions don't have the bug.Fixed #3431, regression causing error 16 not to be triggered.Fixed #3434, error 10 throwed with null values on logarithmic axis.Fixed #3380, a regression causing Series.update not to honour updated zIndex.Fixed #3240, 3d pie labels with 0 values.Fixed #3418, wrong default tooltip header date format when passing points every two days, two months etc.Fixed #3416, broken tooltip on colorAxis.Fixed #3152, tooltip didn't display on the far left of a zoomed axis with categories.Fixed #3382, line series disappering when a negativeColor was applied and the threshold was way beyond the chart.Fixed #3411, align ticks fails without ticks.Fixed #3402, redundant halo on heatmap.Fixed #3404, regression causing canvas heatmap to white out.Fixed #3402, issue with updating bar to pie.Fixed #3389, JS error when drilling up multi-level too quickly.  Highcharts v4.0.4 (2014-09-02) # Added more date parsing logic to the data module. Now integrates with Date.js, and uses Date.parse. Tries to parse all dates, but falls back to categories if dates are not sorted (which may be a sign that parsing went wrong).Added support for setting marker image dimensions. Closes #1807. Closes #1817.Added a better default value for xAxis.allowDecimals. Don't allow decimals in X value ranges that look like years. Closes #3363.Added warning on trying to plot negative points on a logarithmic axis.Allow changing "Date" class used to support other calendars. Added new option global.Date.Allow overriding Highcharts.numberFormat from the outside. Closes #3284.Made point.click event work in combination with drilldown charts.  Bug fixes Fixed #3381 3D pies, wrong z index applied to sides.Fixed #3279, column z issues in 3d.Fixed #3397, footerFormat does not replace variables.Speed optimization of Series.setData, related to #3260.Fixed #2909, a regression causing chart click event not to fire when zoom enabled on touch devices.Fixed #3334, missing animations in 3d pies.Fixed issue causing markers to show even on dense line series, in spite of new logic in 4.x where it should depend on series density.Fixed #3202, tick marks being drawn in unwanted positions when tickInterval was set on categorized axis.Fixed #424, wrong tooltip position for column series in a pane position.Fixed #3352, JavaScript errors on clicking category labels on async drilldown.Fixed #3344, drilldown axis label style inconsistent after redraw.Fixed #3353, wrong axis minimum and maximum on thresholded series when switching from linear to logarithmic axes type.Fixed #3342, memory leaks in jQuery 2.x when repeatedly reinstanciating charts or destroying and recreating renderer primitives.Fixed memory leak on addPoint caused by adding empty names to the Axis.names lookup table.Fixed #3328, 3D Columns and null values.Fixes #3317, extra tick added when there are only two ticks (start and end).Fixed #3315 by disallowing duplicate ids in drilldown.Fixed #3182, three level drilldown broken when drilling up and down again on the same series.Fixed #3276 with HTML markup in element titles when a label is shortened by ellipsis.Fixed #3088, tooltip blocking new mouse interaction after hiding when useHTML is true.Fixed #3285, funnel and pyramid center option not working for vertical dimension.Fixed #3300 where data labels would remain semi-transparent when chart updated in the middle of labels fading in.Fixed #3295, labels do not render 0 as value.Fixed #3282, plotBorder width changed sign, causing a strange animation.Fixed #3245, waterfall series failed when first element was Sum or IntermediateSum.  Highcharts v4.0.3 (2014-07-03) # Added 3d options edgeColor and edgeWidth to distinguish from borders that have different defaults.Added option, chart.panKey, to allow panning and zooming on the same chart. The chart can now be configured so the user can pan by holding down the shift key while dragging.Added features zMin and zMax for bubble series, to set the Z value corresponding to minSize and maxSize independently from the data.Changed default top position for loading label to 45%, which results in a vertically centered label.Better handling of data label heights on pie charts, related to #2630.Better handling of dynamic font sizes. Adjust tooltip text-wrapping. Apply dynamic font size (em) on line breaks. Fixed placement of title and axis labels when using ems for font size. Added support for em font-size in legend.itemStyle.  Bug fixes Fixed #2251, a regression since 3.0.8 causing text and graphic elements to become selected while zooming in old IE.Fixed #3195 where a short axis with startOnTick and endOnTick set to false would display no ticks at all.Fixed #2694 causing columns to overlap by one pixel in some cases when pointPadding is 0.Fixed #2227, waterfall breaking with more than one intermediate sum.Fixed #3163, pie chart data labels displaying outside plot area.Fixed #1991, a regression causing area stacks with null or missing values to draw incorrectly.Fixed #3158 causing wrong line wraps on text containing markup.Fixed #3151, waterfall columns not displaying a border when the rendered height was 0.Downloadbuilder missing metatags in SVG, added filterset, fixes #3106.Fixed #3072 causing unexpected borders after hover on column series when borderWidth was 0.Fixed #3132 causing wrong line breaks in SVG text (pseudo HTML) containing markup.Enabled mouse tracking on data labels for some series types where it had been mistakenly disabled.Fixed #2697, JavaScript error in IE11 on destroying a chart containing useHTML elements after the chart container has first been emptied.Fixed #3126, waterfall graph getting wider on hover. Introduced new options, lineWidthPlus, radiusPlus for hover state of graphs and markers.Fixed #3116, halo failing to animate when a point was updated to a new position. Removed redundant pointer.reset call on Axis.redraw because Chart.redraw also calls the same method.Fixed #3113, roundoff error throwing off calculations of extremes on log axis.Fixed #3104, touch panning not being able to pan outside the data range even if the axis min and max options were outside the range.Fixed #3098, plot area size of a pie chart not being recalculated after the legend size changed.Fixed #3090 causing default 3d options not to be interpreted correctly.Fixed #3094 causing series Z index to change after Series.update.Fixed regression issue #3095, semi-transparent fills coming out as black in exports created by Batik.Fixed #3082, positioning of 3d pie datalabels.Fixed #3080 causing JS error on low chart due to negative height of the legend clip rectangle.Fixed #3051 causing wrong Z indexes for slices in 3d pie charts.Fixed #3075 causing touch panning on a categorized axis to alter range.Fixed #3039, series options was not read for 3D.Fixed #2893 causing heatmap point colors not to update after updating the color axis coloring.Fixed #1080, loading text not reflowing to changed chart size.Fixed #3056 with tooltip chevron not pointing exactly on the right point of the graph when animating between close positions.Fixed #3044 causing JS errors in some cases when axis label formatter returned null or undefined. Closes #3050.Fixed #3053 causing series to be cropped too tight on logarithmic X axis when the number of points exceeded the crop threshold.Fixed #2240 causing the point mouse out event not to fire when the tooltip is shared.Fixed #2997, solidgauge issue with points past ±360° or below yAxis.min.Fixed #3028 causing the last series to become unlinked when calling Series.update on several linked series in succession.Fixed #3027 causing truncation of axis labels when the axis title offset is set and the axis title is shorter than the labels.Fixed #3023 causing defered data labels to show even if series was hidden in the meantime while animating.Fixed #3003 causing rotated data labels to be misaligned after redraw when using Standalone Framework.Fixed #3017 causing centering of data labels on inverted range series not to work.Fixed #3007, with halo showing on invisible points in pies.Fixed #3016 causing halo on sliced pie series to diplay incorrectly.Fixed #3000, labels wrongly aligned on plot lines with multiple axes.Fixed #3014 causing wrong tooltip position in waterfall charts in Highcharts 4.Fixed #3006, prevent null and 0 points from rendering in 3D Pies.Fixed #2982 by returning the added plot line or plot band object after Axis.addPlotLine or Axis.addPlotBand.Fixed #2977, set mimimum view point distance for 3D.Fixed #2975 with clipping not being updated on column series and derived series types after chart resize.Fixed #2968, 3d columns not drawn correctly when equal to max.Fixed #2963 where columns were badly drawn in Chrome due to a rendering bug.Fixed #2962 causing data labels on gauges not to display unless defer is set to true.Fixed #2954 that caused invalid SVG attributes on animating in and out grid lines when running older jQuery versions or the Standalone Framework.  Highcharts v4.0.0 (2014-04-22) # For news, see the release announcement.The default design has been updated with Highcharts 4, but all aspects of design can be reverted to the Highcharts 3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts v3.0.10 (2014-03-10) # Improved performance by 35% in our benchmark suite.Added new option, plotOptions.gauge.overshoot, that takes a value in degrees for how much the dial should overshoot when the value is off the chart.Added smarter logic to Series.setData, where instead of re-creating all the data points, existing points are updated. This allows animation, performs faster and is less prone to memory issues.Added option, yAxis.reversedStacks, to choose whether to stack from the top down or from the bottom of the stack and up.Added support for drilldown on multi-series column charts. Closes #2604.Added 'pyramid' type of series.Added 'reversed' option to funnel series.  Bug fixes Fixed #2755 where attributes in pseudo-HTML were applied outside elements.Fixed #2753 which caused errors and broken behaviour on drilldown containing null points.Fixed #2770 where data labels on error bars were not displayed.Fixed #2681 where the Pointer object leaked memory after Chart.destroy.Fixed #2763 where series on log axes would disappear alltogether when the axis became too short.Fixed #2760 where the ignoreHiddenSeries setting had no effect on bubble sizes.Fixed issue with Chart.setTitle not causing the chart to redraw to adapt to changed size of the title. Closes #2719. Closes #2744.Fixed #2738 where legend navigation would add one page too many when the last page had two items.Fixed #2722 where pie slice data label connectors would have the wrong Z index after hiding and showing the slice.Made chart.style option take effect on chart instances, not only globally. Closes #2723.Fixed #2713 where series connected to a dynamically added X axis would fail.Fixed issue with horizontal axis labels being clipped instead of justified into chart area. Closes #2703.Fixed #2700 causing data labels to not render inside columns if the actual value of the column was cropped.Fixed #2693 with drilling up from drilldown caused interference between charts.Added sparkline demo.Fixed memory leaks in IE11 due to implementation of touch support. Closes #2691.Export server: Fixed jar location lookup on Windows, closes #2869.Fixed issue with disappearing bar chart data labels in certain chart widths. Closes #2683.Fixed issue with showLoading not displaying in IE9. Closes #2686.Fixed issue with Axis.update not removing all associated series. Closes #2687.Fixed failure in updating stacking from percent to normal. Closes #2682.Fixed issue with misalignment of rotated axis labels with useHTML in IE11. Closes #2684.Fixed issue with wrapping horizontal legends not taking the x option into account. Closes #2680.Fixed issue with JS errors on hovering chart when running IE11 in combination with the Standalone Framework. Closes #2672.Fixed issue with wrong rotation of polar charts when X axis was reversed. Closes #2570.Fixed issue with tooltip position and hover point on polar chart where startAngle was < 0. Closes #2665.Fixed issue with empty tooltip boxes visible in tall pages in IE10.Fixed issue with showLoading not working in Standalone Framework. Closes #2653.Fixed issues with pie slices and data labels remaining visible after hiding the pie series itself. Closes #2315. Closes #2656.Fixed issue with automatic line height on labels with em font sizes. Closes #2651.Fixed issue in 3.0.9 where wrong vertical axis labels would be skipped when they were of varying height. Closes #2642.Provided reasonable default column width and group width for column charts with only one X value when minRange was set. Closes #2610.Fixed issue with too many pages in the legend when using legend navigation. Closes #2617.Fixed unexpected effects of zooming outside the data range. Closes #1734.Fixed issue with line graphs not being vertically centered when there was only one value which exceeded the upper limit of 44bit values. Closes #2619.Worked around Firefox 26 drawing issue where legend items would not redraw after resizing the chart. Closes #2580.Fixed issue with mispositioned data label on single pie slice with certain pie sizes, caused by JavaScript rounding error. Closes #2650.Fixed issue with text bounding boxes not being correctly computed when the chart was added to a container with display:none !important. Closes #2631.Fixed issue with gauge pane background color not taking effect on multiple panes, or respecting changes. Closes #2257. Closes #2649.Fixed error in Standalone Framework where calling destroy on an animating element would result in endless error messages. Caused errors when a chart was destroyed while fading out the tooltip. Closes #2616.Fixed pie chart issue with messed up data labels with certain combinations of start and end angle. Closes #2645.Fixed issue with pies ignoring endAngle when it was set to 0.Performance improvement for updating tick labels. Closes #2640.Fixed issue with tooltip header not displaying relevant time resolution when points where added at minute or hour resolution with a day between them. Closes #2637.Fixed issue with wrong bounding box detection of numeric texts when they were of number type instead of strings. Closes #2316.Fixed issue with JS errors and failing to activate charts in pages that are saved to disk from the browser. Closes #2609.Fixed issue with followPointer not working correctly for line charts.Fixed issue with numerical legend items crashing chart when navigation was enabled. Removed unsafe internal use of elemWrapper.bBox, used elemWrapper.getBBox() instead. Closes #2605.Fixed regression with pie slice hover color becoming increasingly brightened after repeated redraws. Closes #1619.Fixed issue with positioning of markers in oldIE in inverted charts. Closes #1111.Fixed oldIE issue with box plots and error bars not showing in inverted charts. Closed #1680. Closed #1806.Fixed missing stack percentage in normal stacks. Closes #2551.Fixed issue in Standalone Framework with getting the right mouse position inside a scrollable div. Closes #2205.Fixed JS error on hovering over a chart after running Chart.setData without redrawing. Closes #2594.Fixed issue with tooltip position if data is NaN.  Highcharts v3.0.9 (2014-01-15) # Added bower.json file. Closes #2244.  Bug fixes Fixed JS error on quickly moving the mouse out of a chart. Related to #2499.Fixed issue with text positioning in modern IE when CSS line height was much smaller than font size. Closes #2444. Closes #2568. Closes #2569. Affects #2591.Fixed issue with crosshairs not exactly following the tooltip, mostly visible ou touch devices. Closes #2582.Fixed issue with categorized Y axis on gauges being positioned wrong. Closes #2593.Reverted optimization that skipped individual handling of point attributes. Closes #2549. Closes #2587.Fixed issue with adding a point in the middle of a line series failing. Issue #1109.Fixed regression with datetime tooltip header format falling back to full years. Closes #2581.Fixed rounding error in stack labels. Closes #2576.Implemented new option, switchRowsAndColumns, in the data module.Fixed regression in 3.0.8 with hover color of columns having individual color option. Closes #2579.Fixed issue with fillColor on box plots not honored when colorByPoint is true. Closes #2574.  Highcharts v3.0.8 (2014-01-09) # Export: Streamlined and removed unnecessary properties in maven pom.xml.Export: Cleaning up overlap in maven dependencies for java export server.Added handling of white-space: nowrap in styles for SVG text.Implemented logic that removes overlapping axis labels just before they are rendered.  Bug fixes Fixed issue with unexpected arc rendering in VML. Closes #168.Added multitouch support for IE10/11. Closes #2536.Added default date format for the headerFormatter. Closes #2546.Fixed issue with categorized Y axis overflowing the plot area because category padding weren't applied. Closes #1784.Fixed issue with negative color being clipped in a series with all negative values.Optimized performance by caching results for getBBox for numbers, since numbers are monospaced and the same bounding box applies to any number of the same character length and the same font family and font size. Also, don't delete cached bounding box on word wrap when there is only one word. These two optimizations improved rendering times by 15% on Chrome and Firefox using our benchmark tests. Relates to #2525.Fixed JS errors in IE11 workaround when destroying a chart in the same thread as creating it. Closes #2030.Prevented memory build-up in datetime axes by avoiding unnecessary use of the Axis.names array for categories. Closes #2523.Fixed issue with hidden pie slices affecting the positions of data labels. Closes #2510.Prevent timeout when calling chart.reflow as an API call. Closes #2224.Fixed issue with disappearing data labels in gauges when center is outside plot area. Closes #2415.Fixed issue with clipped chart when resizing down. Closes #2503.Fixed typo in series sorting causing series to change order when updating series type in IE9. Closes #2501.Fixed issue with point state marker graphic staying in its previous position after a zoom operation on mouse or touch devices. Closes #2500.Fixed issue on iOS where selection of columns and pie slices needed two touches except on the very first run. Closes #2499.Fixed JS errors on empty series on secondary axis when tickPositions were defined. Closes #2482.Added formattributes to exporting to allow setting custom attributes.Removed line running setting event.returnValue, which causes a warning in Chrome. Closes #2251.Fixed a couple of minor issues related to legend navigation.Fixed regression on running Point.update with null value. Closes #2481.Export: Refined code on waiting for images loaded.Export: Missing images fallback gracefully, closes #2474.Fixed regression with stack order not being affected by series.index. Closes #2456.Fixed issue with bubble chart not displaying when displayNegative was false.Fixed issue with data label styles not updating from Point.update. Closes #2468.Improved setOptions by copying new objects into existing instead of creating new defaultOptions structure. Improves performance and keeps internal pointers. Closes #2469.Fixed SVG errors on exporting SVG from IE8, causing Batik not to render the SVG. Closes #2463.Fixed JavaScript error when firing a series click event in IE8 using the Standalone Framework. Closes #2465.Removed thousands separators from numbers below 10,000 in the default X axis label formatter. This prevents commas to be inserted in years when applied to a linear axis. Closes #2466.Data module: Update itemDelimiter option to default to tab character if a tab is found within the CSV string. This makes CSV parsing work with content copied directly from Excel.Fixed issue with clipped legend items when navigation is enabled. Closes #2098.Fixed issue with document events set in exporting not being destroyed when destroying chart. Closes #2407.Fixed issue with tooltip options not taking effect on certain series types where the same options were defined in series specific defaults. Closes #907.Fixed issue with markers on inverted charts. Closes #2450.Fixed issue with shared tooltip showing wrong category when pointPlacement was used. Closes #2434.Performance improvement by not listening to document mousemove when the tooltip is hidden.Added symbolHeight and symbolRadius options for legend.Fixed issue with orphaned stack labels after Series.destroy and Series.update. Closes #2440.Fixed issue with updating the visibility of a pie slice causing it to go invisible. Closes #2430.Added new option, global.timezoneOffset, to allow setting which timezone the data is displayed in even though the input data is defined as UTC.Fixed bad positioning of rotated elements when useHTML was true. Closes #2404.Added error message on trying to add an object literal point configuration on a series with more data points than the turboThreshold.Fixed issue with flags on the last point dropping down to the X axis when the main series enters data grouping. Closes #2374.Fixed regression where legend would disappear when the linkedTo option was set to null. Closes #2414.Fixed regression causing JS errors after updating an axis title when useHTML is set. Closes #2402.Fixed issue with NaN tick positions being applied to empty axis, causing wrong number of ticks in chart with multiple axes. Closes #1741.Export: Beans from export-convert-module are now configurable from the export-web-module.  Highcharts v3.0.7 (2013-10-24) # Performance improvement by moving color parsing regexes out of the Color class to a global definition in order to be instanciated only once.Made new option, linecap, for line series. Closes #2358.Allow disabling the hover state for a specific point marker. Closes #1610.Made showInLegend option overridable for linked series.Worked around Firefox/Win issue with median lines on box plot spilling over the edges of the box. Closes #1638.Made the data labels inherit the series' cursor setting.Improved fix for #2030 to work with IE11 quirks mode.Reverted fix for #1651, which introduced an error with stack data labels not being moved on update. Closes #2336.Added new option, sizeBy, to bubble charts to set whether the area or the width should reflect the data value.Improved workaround for IE11 text positioning issue by not applying it to exported charts, closes #2030.  Bug fixes Fixed issue with useHTML legend items not drawing after removing all and adding again. Closes #2393.Fixed regression after fixing #2153, related to assigning styles in VML browsers. Fixes #2368 and #2368.Fixed issue with plot band label not being hidden when zooming out of view. Closes #2328.Fixed wrong calculation of point.percentage in percentage stacked tooltips. Closes #2375.Fixed issue with yearly ticks being computed wrong, causing stagger lines where not necessary. Closes #2360.Fixed issue with IE8 not being able to add soft line breaks in text in export.Fixed issue with only first series' point names being used for categories. Now all series are inspected. Closes #2357.Fixed issue with broken export menu in IE9 compatibility mode. Closes #2335.Fixed JavaScript error on updating a point value to null. Closes #2359.Fixed issue with response of PhantomJS server in export-server that lead to StringIndexOutOfBoundsException, fixes #2367.  Highcharts v3.0.6 (2013-10-04) # Added new option, chart.spacing, to set spacing as an array.Added round linejoins and linecaps to line graphs for better look in prints.Added support for negative values in stacked percentage columns. Closes #2197.Added new option to pie charts, endAngle, to allow semi-circle donuts and pies.Added experimental support for axis.labels.ellipsis. Not implemented for VML renderer.Adapted Java exporting server to PhantomJS saving files locally.PhantomJS running as server can save files to filesystem, closes #2137.Fixed issue with too high axis max tick on very small charts where the height of the plot area was much smaller than the tickPixelInterval setting.Implemented Async download from export server.Added CORS filter for Cross-Origin requests to export server.Adapted Java exporting server to PhantomJS saving files locally.Add event handler to close context menu from touching outside the menu. Improves user experience on touch devices. Closes #2258.Forced disabling of startOnTick and endOnTick when navigator is enabled in Highstock. Closes #1090.Exposing the reflow method on chart objects.Added no-data-to-display plugin.Worked around bug in IE11 with rendering text in horizontal legends. Closes #2030.Added new option, dataLabel.overflow: 'justify'. Closes #1789, #1859, #1962, #1984 and #2190.  Bug fixes Fixed issue with scatter series not displaying in polar charts. Closes #2060.Fixed issue on touch devices with click events not firing on series, points or chart when chart.zoomType was set. Closes #2275.Fixed regression issue with slow running updates on gauges. Closes #2320.Fixed regression with vertical crosshair not working in Highstock with series compare. Closes #2316.Fixed issue with hide/show series in some versions of Android. Closes #2269.Fixed error message in PHP/Batik exporting stack when called without posting width. Closes #2303.Worked around InkScape bug where the hidden empty tooltip would display as a square in exported SVG. Closes #2301.Fixed issue with updating min and max using Axis.update() after running setExtremes. Closes #2306.Fixed issue with bubbles not resizing in IE8. Closes #2294.Fixed issue with unsorted data labels for funnels. Closes #2289.Fixed issue with JS errors in IE8 when trying to animate a rotated data label. Closes #1821.Fixed issue with disabling data label for a specific point not taking effect. Closes #2282.Fixed issue with Highcharts error 19 triggering with a hidden or very small chart. Closes #2272.Fixed issue with exporting button's menus being shared between multiple buttons. Closes #1908.Fixed issue with bubbles and other marker points not taking the "color" property of the point. Closes #2219.Fixed compatibility issue with the Standalone Framework and Dojo. Closes #2268.Fixed issue with updating to line series when starting with a spline. Closes #2270.Fixed issue in gauges with ticks disappearing or being badly laid out after resizing. Closes #1262.Fixed issue with Standalone Framework in legacy IE where click event wouldn't work on line series, and hovering didn't preserve the state of the tooltip. Closes #2265.Fixed JS error on adding VML styles in old IE in pages with more than 32 style sheets. Closes #2153.Fixed issue with waterfall columns starting at the wrong place with certain values on the Y axis. Closes #2241.Fixed issue with stacks not being cleared after updating a series. Closes #2229.Fixed issue with error number 19 firing on stock charts with ordinal axis when not needed. Closes #2228.Fixed positioning problem with tooltips on flags. Closes #2211.Fixed issue with addPoint() on waterfall charts. Closes #2209.Fixed issue with wrong animation between lines of different length. Related to #1325 and #1386.Fixed issue when having no data in stacking chart. Closes #2207.Fixed issue with removing points in funnel charts. Closes #2206.Fixed issue with Point.update removing the selected state when applied with an object configuration. Closes #1909.Fixed issue where running addPoint with an X value not being able to insert the point into the middle of a sorted series. Closes #1109.Fixed issue with percentage stacked area series adding up negative values incorrectly. Closes #2197.Fixed issue with overlapping X axis labels and maxStaggerLines not taking effect on dynamically added series. Closes #2186.Fixed error on redrawing chart after applying a plot line with zero width. Closes #2189.Fixed issue with data labels of hidden series attracting mouseover and tooltips in IE10. Closes #2185.Fixed issue with connectNulls not taking effect on stacked areas. Closes #1836.Fixed regression where the lower stacked series in an area stack would not display. Closes #2181.  Highcharts v3.0.5 (2013-08-23) # Added Standalone Framework for using Highcharts without jQuery, MooTools or Prototype.Added error message on adding too many ticks to an axis. Closes #2174.Implemented better sharpening logic for columns and bars. Closes #1188. Closes #2091.Improved axis line, plot line and grid line positioning so that a 2px line series along the X axis shows up as exactly 1 pixel, half inside and half outside the visible plot area. Closes #1687.Added error message on exceeding the turboThreshold. Closes #2107.  Bug fixes Fixed issue with non-aligned axes after multiple setExtremes with internal redraws. Closes #2169.Fixed regression in IE8 where an error occured on fading out the tooltip in older jQuery versions. Closes #2161.Fixed issue with series.linkedTo not working when added in non-source order. Closes #2166.Fixed issue with missing textShadow on HTML datalabels.Fixed issue with tooltip not displaying on scatter points lying on the edge of the chart, when moving the mouse in from the outside. Removed limitation of only showing tooltips for points lying inside the plot area. Closes #2147.Fixed problem with tracking mouse movements on lines near the edge of the chart because the line tracker was not clipped. Clipped the tracker and added tracking to the marker group also. Closes #1894.Fixed regression with stacked columns on a log axis not displaying. Closes #2104.Fixed issue on older Chrome versions on mobile where pinch zooming was broken. Closes #2143.Fixed regression with log X axis affecting the calculated data extremes. Closes #2117.Fixed issue with point markers not being updated from Point.update method. Closes #2130.Fixed regression that appeared when fixing #2005, where tooltips didn't display in IE8 after scrolling down a page. Closes #2129.Fixed issue with area stacks containing negative values. The stacks are now treated differently between columns and areas. In column stacks, negative points always extend from the trheshold and down. For area stacks however this is counterintuitive. Instead, negative points are substracted from the stack. Closes #1910.Fixed regression where a pie slice with value zero would show up as a quarter of a circle. Closes #2103.Fixed hanging browser on pie charts where all values were 0 or null.  Highcharts v3.0.4 (2013-08-02) #   Bug fixes Fixed issue with plot bands or lines not being removed after Axis.update(). Closes #1975.Fixed regression from 3.0.3 where redrawing a chart containing stacked points within the same series would cause the single stack to redraw badly. Closes #2095.Fixed regression with resizing a stacked chart containing negative values. Closes #2089.Fixed JS errors in polar chart when instanciated with no data. Closes #2093.Fixed regression with staggered X axis labels on reversed axis. Closes #2081.  Highcharts v3.0.3 (2013-07-31) # Added automatic stagger lines for colliding labels on horizontal axis.Added support for automatic text wrapping in long title names. Closes #776.Added new option, legend.itemDistance, to allow control over the distance between items of a horizontally laid out legend. Closes #832.Added context and event information to click handlers on touch devices. Closes #1830.Added useHTML option for plot line and plot band labels. Closes #1916.Added support for multidimensional series (arearange, ohlc, box plot etc.) in data module.Added automatic default alignment of axis labels based on which side of the chart and the label's rotation.Added automatic line-wrap of titles and subtitles if the text exceeds the chart width. This change includes changing the default Y position of the subtitle to allow it to depend on the title height.Increased performance of Series.addPoint on large series by preventing looping over all data points on each call. Closes #1937.  Bug fixes Fixed #2017 where the browser would freeze when xAxis.min equals xAxis.max on a datetime X axis.Fixed legend box size browser issue.Worked around issue in Chrome 28 where numberFormatting would round all values to whole numbers after running for a while. Closes #2043. Closes #2052.Fixed issue with point.name being applied to the wrong category label. Closes #2046.Optimized merge function by moving a check out of the loop. Closes #2045.Fixed issue with wrong calculation of areas when a negative color was used on an inverted chart with non-zero threshold. Closes #2011.Fixed issue in Highcharts 3.0.2 where data labels for null points were rendered as 0. Closes #1997.Fixed issue with click events on columns not firing on touch devices until the second touch. Closes #1551.Fixed issue with mouse and tooltip offset inside frameset when running IE10 in compatibility mode. Simplified mouse position detection. Closes #2005.Fixed issue with percentage stacked area and missing values. Closes #1991.Fixed issue with unexact position of columns where minPointLength applies. Closes #1166.Fixed problem with setting area series fillOpacity to 0. Closes #1983.Fixed issue with export menu displaying outside the chart at the top of the button. Closes #1985.Fixed issue with double xmlns attributes created in IE9 and IE10. Closes #1978.Fixed issue with pie slices animating from center on first call to Point.update. Closes #959.Fixed issue with updating shadow positions on bubbles. Closes #1977.Disallow JavaScript execution from formatted category labels.Fixed issue with percentages not being available for pie chart legend. Closes #897.Fixed issue with visible:false not taking effect on pie chart data labels. Closes #876.Fixed issue with updating an element's dashstyle programmatically. Closes #874.Fixed issue with stack labels not appearing in other series types than column. Closes #1383.Fix for error while converting to SVG file in phantomjs, missing character in XML.Added event to hide the tooltip on touch devices when touching outside the plot area. Closes #1203.Fixed issue with stacked columns within a single series. Closes #1959.Fixed issue with useHTML labels not cleaning up their parents when destroyed. This would leave a lot of empty divs inside the container after updating for example axes. Closes #1960.Fix for error while downloading SVG files, missing character in XML doctype.Fixed issue with point markers not being aligned to columns. Closes #1843.Fixed PDF cropped and split on 2 pages issue #1957.Fixed issue with IE8 and exporting with old look. Closes #1964.Fixed issue with no legend symbol on areaspline series when line and markers were hidden. It now uses the rectangular legend symbol like regular area series. Closes #602.Fixed issue with area legend taking the marker fill color instead of the area fill color when different. Closes #585.Fixed issue with legend box not reserving space for legend title. Closes #1717.Fixed issue where switching from log to linear scale caused the threshold of columns to become lower than zero. Closes #1791.Fixed issue with legend symbols not being centered in text when font size increased. Closes #1804.Fixed tooltip order and naming of quartiles in box plot.Fixed issue with rotated labels along a vertical axis becoming wrongly positioned based on bounding box. Closes #1951.Better detection for showing or hiding the data labels based on whether the entire bounding box is inside the plot area. Closes #1788.Fixed issue with dynamically modified data being lost after Series.update. Closes #1780.PhantomJS JavaScript files are automatically unzipped to java.io.tmpdir.Fixed issue where calling Point.select(true) on a pie slice would toggle it, not select it. Closes #1823.Fixed issue with removing plot band or line and reflecting it in export. Closes #1114.Fixed issue with adding X axis dynamically. Closes #1827.Fixed funnel chart issues with center Y not taking effect, and points disappearing when neckHeight is equal height. Closes #1866.Fixed issue when using rotation on a particular point's data label, the next point's data label would be rotated. Closes #1883.Fixed issues with legend items not reflecting updates to pie slices. Closes #1831. Closes #1885.Fixed issue with wrong alignment of labels on the X axis of a rotated polar chart. Closes #1942.Fixed issue with too tight ticks on X axis on column charts with only a few columns. Closes #1943.Fixed issue with bubble series not working at all when number of points exceed the turboThreshold. Removed the turboThreshold option for bubble series. Closes #1898.Fixed issue with spline animation of lower part when negativeColor is used and running addPoint. Closes #1899.Moved the warning on unsorted data to catch unsorted data in the middle of the data set in addition to the first two values. Closes #1900.Fixed issue with X axis not redrawing after Point.update. Closes #1906.Fixed issue with tooltips not accounting for the startAngle of a polar chart. Fixed issue with tooltips not being wrapped around from the last point to the first point at the top of a polar chart. Closes #1915. Closes #1469.Fixed issue with Safari crashing when displaying tooltips with nested HTML tags. Closes #1596.Fixed issue with negativeColor and logarithmic Y axis. Closes #1726.Fixed issue with negativeFillColor not taking effect unless a negativeColor is also set. Closes #1907.Fixed issue with multiple class names added to tracker objects. Related to #1918.Fixed wrong position of dials in IE7 and IE8 Quirks mode. Closes #1873.Fixed issue with inconsistent xAxis label width on bar charts. Closes #1931.Fixed issue with click events not being handled on flag series in IE9 and IE10. Fixed support for hovering stacked flags in old IE. Closes #1924.Fixed regression with wrong higher path on arearange series on inverted chart. Closes #1930.Fixed position of rotated X axis labels to prevent overlapping with the element below. Closes #1764.Fixed JS error on setting new data on initially empty series. Closes #1920.Fixed issue with datetime axes not using intervals greater than 10 years. Closes #1913.  Highcharts v3.0.2 (2013-06-05) # Added stackLabels.format option analogous to dataLabels.format. Closes #1837.Added localized number formatting to data labels. Related to #1637.Removed php-phantomjs, this will not be supported any longer.Partially fixed issue with blurred legend contents in PDF export. Issue #1782.Don't neglect sum points in positive bar calculations, issue #1653.  Bug fixes Fix a bug related to updating existing StackItem instead of creating a new one after calling Point.update().Fixed error on exporting from IE8.Fixed handling of connectNulls on area range series so that null values in either low or high positions are also connected. This allows filling the area between lines with different X values. Closes #1404.Adding ability to define pointPlacement numerically.Fixed JS error on certain operations with jQuery 1.10. Closes #1881.Fixed regression with exporting.chartOptions not taking effect. Closes #1759.Fixed issue with setting medianWidth, stemWidth or whiskerWidth to 0 on box plots and error plots. Closes #1833.Fixed issue with errors on running point click event after the same point was destroyed from a series click event. Closes #1844.Fixed issue with stacks and series.index option. Closes #1722. Closes #1689.Fixed JS error on touching pie charts in iOS Safari. Closes #1861.Fixed touch zooming and panning problems from Highcharts 3.0.1. Closes #1860.Fixed JS error on iPad with disabled tooltip. Closes #1857.Fixed issue with pie slice not reverting to original position after slicing when animation is disabled. Closes #1767. Closes #1846.Fixed issue with last marker missing in certain withs of dual axis charts. Closes #1858.Fixed issue with error on custom exporting buttons containing no symbol. Closes #1822.Fixed issue in MooTools and Prototype adapters when used with highcharts-more.js. Closes #1834.Fixed issue with mispositioned pies in inverted charts after resizing. Closes #1795.Fixed pointer to error message for wrong axis binding. Closes #1800.Fixed issue with pie wrong chart data label connectors disappearing when hiding slice. Closes #1810.Fixed issue with wrong min and max in selection events on categorized axis. Closes #1207.Fix a bug when stacks wasn't updated after extremes change.Fixed issue with plot background image not being used in exported images. Closes #1765.Fixed issue with higher ranks X axis labels not being applied to the last label. Closes #1760. Related to #1649.Fixed exception after destroying a chart while the tooltip is still visible. Closes #1728.Fixed missing tooltips on flags when data grouping was disabled. Closes #1730.Fixed issue with missing text decoration on data labels in export. Closes #1729.Fix error related to waterfall positive bar starting at negative value, close #1653 and #1732.Fixed JS error when a pie series is present in an inverted chart. Closes #1736.Fixed issue with click events not being fired unless the mouse hasn't moved a pixel.Fixed JS error issue in bubble charts when first series is hidden. Closes #1737.Fixed issue with wrong sized bubbles when one series contains no points. Closes #1735.Fixed IE8 issue with mislocated bubbles after hiding and showing a series.Fixed issue with the smallest bubbles in a bubble chart occasionally disappearing. Closes #1710.Fixed issue with missing markers on negative points when explicit color was set. Closes #1702.Fixed issue with toolip appearing in printed chart when tooltip.shared was enabled. Closes #1707.Fixed issue with chart axes and chart options getting out of sync on Axis.remove. Closes #1706.Fixed issue with wrong tooltip date header format on single points. Related to #568.Fixed issue with negativeColor not taking effect on area and similiar series types when lineWidth is 0. Closes #1705.Fixed issue with null higher value in area range plots being interpreted as 0. Closes #1703.  Highcharts v3.0.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.  Bug fixes Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Made loading mask use the current chart size, not the initial one. #1601.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts v3.0.0 (2013-03-22) # See the release announcement.  Highcharts v2.3.5 (2012-12-19) # Added pie.startAngle option.Added a delay before hiding exporting menu to prevent the menu from hiding in IE when hovering over neighbour elements and button title. #1357.Implemented warning on unsorted data for line charts and stock charts. #725. Also throw a Highcharts error on unsorted column data, because the column distance and width logic relies on sorted data. Related to #987.Added line.step options: "left", "center", "right". Fixed issue with step in area ranges. #1330.Added a global lookup array, Highcharts.charts, holding all available chart instances in the page. This prevents issues with writing multiple charts to the same div.Implemented better animation for donuts. #779.Reorganized event assignment so that devices with touch support not only observe the touch events, but also the corresponding mouse events. This prepares for the new generation of browsers with both mouse and touch support. #1305.Prevented getTimeTicks from creating corrupted array. Related to #1301.Improved rendering speed of data labels by not adding a rectangle for labels without border or background.Better detection for repeating gradients. Instead for checking for the same object, the actual gradient definition is now used as the key. #1282.  Bug fixes Fixed problem with gauge dial overlapping data label. #1403.Fixed issue with data labels of hidden series being visible after exporting from IE8. #1407.Fixed IE6 and IE7 issue with image symbol markers not always being displayed after page reload. #292.Fixed endless loop in Highstock JavaScript and SVG errors in all charts when setting a negative chart width. #1393.Fixed issue with wrong tooltip position in Android 4.0. #1385.Fixed issue with bottom checkboxes in a legend being hidden after cancelling legend scroll by resize.Fixed issue with series-level image markers not being visible in exported charts.Fixed issue with pie slices not being added to the legend after the first redraw. #1329.Fixed wrong Y axis extremes on stacked line series chart. #1376.Fixed issue with wrong placement of image backgrounds on labels, specifically image shapes in flag charts. #1378.Fixed problem with multiple buttons with menu items in exporting module.Fixed issue with visible borders in exported chart when borderWidth = 0 on column charts in Firefox. #1369.Fixed issue with tooltip remaining visible after hiding its series. #1361.Fixed issue with reflowing in IE < 9, as well as frozen pivot on resizing gauges in IE < 9. #1235.Fixed issue with backgrounds on multiple gauges within the same chart. #1244.Fixed JS error in IE8 when trying to assign a gradient color to image markers. #1336.Fixed issue with squished X axis labels on column charts with one single point. Now if the series only contains one value, only one tick is shown. #1337.Fixed issue with tick labels using useHTML and step being slightly visible. #1338.Fixed issue with legend items not responding to mouse interaction when legend.useHTML is true. Fixed positioning of legend items in Chrome when legend.useHTML is true. #1249.Fixed issue with wrong positioning of bars in a bar chart when grouping was set to false. #1251.Fixed issue with useHTML, fixed width and word wrapping in Firefox. #1254.Fixed issue with legend checkbox position not being updated in navigatable legends. #1253.Fixed issue with wrong placement of minor grid lines on datetime axes. #1314.Fixed issue with Highcharts.dateFormat only replacing the first occurence of a pattern. #953.Fixed issue with wrong dial rotation in angular gauges when used with logarithmic axes.Fixed memory leaks in IE7 releated to SVGRenderer.label and MooTools. Refering to #1298.Fixed issue with blinking column animation on extremely large columns. #1303.Fixed issue with data label alignment not being updated after point update. #1306.Fixed broken height detection of rotated labels in IE9. #1307.Fixed line graph tracker objects so that the stroke-linejoin is round. This ensures better tracking around spikes in the data. #1225.Fixed issue with placement of data labels on a column chart with reversed Y axis. #1308.Fixed issue with visible gray marker objects appearing after Batik export from IE10.Fixed error on exporting an empty chart due to labels with y attribute of NaN. #1300.Fixed issue with setting tooltip.valueDecimals to 0. #1248.Fixed JavaScript error on redrawing chart after series removal in IE < 9. #1258.Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.  Highcharts v2.3.3 (2012-10-04) # Refactored data label alignment logic for better maintainabilit. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Worked around Safari 6 bug causing disappearing pie slices. #1208.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed gauge series data labels after regression testing.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed orphaned marker after Point.update to null. #1269.Fixed issue with text wrapping and bounding boxes in Android 2. #1140.Fixed wrong positions of polar column chart data labels. #1199.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with tooltip spilling out to the left in inverted chart. #1231.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed issue with colors and borderWidth not being applied to individual dials in gauges.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts v2.3.2 (2012-08-31) # Added support for rotation of text when useHTML = true in modern browsers. #916.Added new option, ignoreHiddenPoint, for pies.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.  Bug fixes Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. <ahref="https://github.com/highcharts/highcharts/issues/1209">Issue #1209.Fixed issue with data labels appearing outside plot area on initial load.Fixed 2.3 regression regarding unstable sorting in Chrome. #337.Fixed auto connect calculation in polar charts when category values are skipped. #1197.Fixed issue with alternateGridColor placement not adhering to tickmarkPlacement setting. #949.Fixed issue with config objects for data skipping a place in the color rotator in export. #868.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts v2.3.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts v2.3.0 (2012-08-24) # Added radial gauges.Added polar projection for cartesian chart types.Added range series types: area range, area spline range and column range.Added radial gradients for pies.Fixed bugs.  Highcharts v2.2.5 (2012-06-08) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. 1027.Reverted fix for #904 where a line with lineWidth of 0 became visible in hover state. 1016.Added legend.maxHeight option for paging.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. 864.  Bug fixes Fixed Android 2 compatibility problem. 1034.Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. 1021.Fixed broken minRange after the #878 fix.Fixed issue with chart title and subtitle responding too late to chart resize. 1012.Fixed JS error on quickly changing range selection in Highstock in column charts. 1004.Fixed issue with clipping of legend after resize to a greater width. 1001.Fixed issue with size detection of rotated text in exported charts legacy IE. 997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. 4. 992.Fixed issue with the series.pointRange option not affecting the width of columns.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. 974.Fixed JS error on setting categories with fewer items before the chart was redrawn. 970.  Highcharts v2.2.4 (2012-05-31) # Added paging for the legend. Added legend.navigation options set.Added tooltip.positioner option.Refactored major parts of Highcharts by splitting the Chart object into separate prototypes. This eases extendability as the objects are available from the outside, and individual methods and properties can be overridden.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Worked around compatibility issue with jQuery 1.8 preview.Removed warnings on accessing layerX and layerY in Chrome.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.  Bug fixes Fix bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed JS error in Firefox on destroying chart with data labels using MooTools adapter. #958.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.  Highcharts v2.2.3 (2012-05-07) #   Bug fixes Fixed issue with ticks and gridlines not being aligned after chart redraw.  Highcharts v2.2.2 (2012-04-26) #   Bug fixes Fixed bugs.  Highcharts v2.2.1 (2012-03-15) # Added box options like borderWidth, backgroundColor and more for data labels.  Bug fixes Fixed bugs.  Highcharts v2.2.0 (2012-02-16) # Better performance with thousands of points.Improved useHTML feature on labels to skip SVG text generation and use true HTML bounding box.Added configuration options to the Reset button.Added support for logarithmic axes.Numerous bug fixes.Added partial support for Android 2.x. See the compatibility page for limitations.  Highcharts v2.1.9 (2011-11-11) #   Bug fixes Fixed memory leaks in legacy IE.  Highcharts v2.1.8 (2011-11-05) #   Bug fixes Fixed compatibility issue with jQuery 1.7.  Highcharts v2.1.7 (2011-10-19) # Added useHTML option for most text related configuration objects.Added softConnector option for pie data labels.Added chart.selectionMarkerFill option.Worked on memory leak issues.  Bug fixes Fixed issues with data label positioning for pies.Fixed issue with tooltips covering point in certain cases.Fixed issues with latest MooTools.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.6 (2011-07-08) # Rewrote data label positioning for pies.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.5 (2011-06-22) # Added shadows for pies.Exported charts now respect user set min and max after zoom and visibility option.Added option series.connectNulls to connect line graphs through null points.Added support for exporting image symbols in charts.Added data labels for stack totals and improved positioning of column and bar data labels.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.4 (2011-03-02) # Updated MooTools adapter to work with MooTools 1.3.  Bug fixes Fixed issue with charts not displaying in IE on pages with large background images or external resources.Fixed issue Safari Mobile crashing after removing a series dynamically.Fixed minor issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.3 (2011-02-07) # Added soft line breaks for long category labels.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.2 (2011-01-12) # Added adapter for the Prototype JavaScript framework.Added vertical centering logic for data labels on bars when y not given.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.1 (2010-12-03) # Added Highcharts.version property.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.0 (2010-11-23) # Implemented resizing and reflowing of charts.Added automatic margin adjustment.Added shared tooltip and crosshair.Added more animation options.Added category label anti collision options.Added groups and stacks combination.Added data label connectors for pies.Optimized for iPad.Added dashed lines.Added labels for plot bands and plot lines.Added a separate MooTools adapter.  Upgrade notes Legend positioning: Since version 2.1 Highcharts is aware of the size of the titles and legend and will try to make room for these in the chart's margins. When upgrading from older versions, this may lead to too great margins depending on where your legend is positioned. To prevent this, set a new option, floating to true in your legend options. Furthermore, the x and y values of the legend position is now relative to the chart.spacingTop and chart.spacingLeft etc. properties instead of the chart's outer edge.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.5 (2010-09-17) # Optimized for IE9 Beta 1. Highcharts is now running beautifully under IE9 Standards mode, but quirks mode is slower than IE8.Added second parameter, callback, for Highcharts.Chart().Added text parameter for showLoading().  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.4 (2010-09-07) #   Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.3 (2010-08-07) #   Bug fixes Fixed JS error on destroying chart with events in IE.  Highcharts v2.0.2 (2010-08-06) # Added linked axes.  Bug fixes Fixed minor bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.1 (2010-07-18) # Removed chart.updatePosition method. Recalculating the position after moving the container is no longer necessary.Fixed some minor bugs from 2.0.0.Release notes:.chart.updatePosition is deprecated.  Bug fixes Fixed some minor bugs from 2.0.0.  Highcharts v2.0.0 (2010-07-13) # Completely rewritten rendering layer based on SVG and VML.Excanvas no longer needed.Added exporting module for exporting to PNG, JPG, PDF and SVG as well as printing the charts.Added donut charts.Better positioning options for legends.Dramatic speed improvements in Internet Explorer for series with many points.Release notes:.series.dataURL and series.dataParser are deprecated. Use jQuery ajax instead. Example can be seen at the ajax loaded data example.  Bug fixes Fixed memory build-up issues.Fixed some minor bugs reported since 1.2.5.  Highcharts v1.2.5 (2010-04-13) # Added chart.updatePosition and chart.container.Added possibility for initially empty charts.Added options.chart.showAxes.Added series.pointWidth for column series.Added step property to lines.Added legend.reversed option.  Bug fixes Fixed zooming issues on inverted charts.Fixed error on stacking of only null points.Fixed issue with excanvas not being initialied before Highcharts.Fixed tickInterval issue.Fixed image symbols not removed on zooming.Fixed issue with datalabels not removed on zoom.Fixed mouse events like click and mouseover not working when tooltip was disabled.Fixed roundoff issues on axis labels on Firefox/Mac.Fixed issues with setData in pies.  Highcharts v1.2.4 (2010-03-10) # Added resetZoom and resetZoomTitle to the lang object.Added the global.useUTC option.  Bug fixes Fixed error message in IE on window unload.Fixed tooltip width detection issue in IE7.  Highcharts v1.2.3 (2010-03-08) #   Bug fixes Fixed error messages appearing in some cases after hiding all series.Fixed issue with toggling the visibility of stacked columns.  Highcharts v1.2.2 (2010-03-05) # Added lang.decimalPoint and lang.thousandsSep options.Added chart.destroy method.Added axis.setCategories method.  Bug fixes Fixed memory leaks.Fixed two error messages.Fixed pie slice border issue with WebKit.Fixed minor issue with maxZoom and min/max values.Fixed issues with null values.Fixed rectangle redrawing issue with column and bar plots.  Highcharts v1.2.1 (2010-02-25) #   Bug fixes Fixed issue on initially hidden series.Fixed issue with hover area on bars.Fixed addPoint for pies.  Highcharts v1.2.0 (2010-02-23) # Added methods and properties for working with charts, axes, series and points dynamically after render time.  Highcharts v1.1.3 (2010-02-03) #   Bug fixes Fixed a bug in the MooTools adapter.  Highcharts v1.1.2 (2010-01-22) #   Bug fixes Fixed some minor bugs and issues.  Highcharts v1.1.1 (2010-01-06) # Added individual color for column and bar plots.  Bug fixes Fixed stacked charts in Safari 4.Fixed spline series crashing when only one point defined.Fixed tooltip borders not responding to changes in content height.Fixed wrong placement of zero plane for area series.  Highcharts v1.1.0 (2009-12-18) # Added support for multiple axes with options to place the axis on opposite side and offset from the plot area.Added support for events.Added explicit chart width and height.Added plotLines.  Bug fixes Fixed some bugs.  Highcharts v1.0.2 (2009-12-09) #   Bug fixes Fixed warnings in SSL mode in IE.Fixed minor display issues.  Highcharts v1.0.1 (2009-12-06) #   Bug fixes Fixed zooming for splines.Fixed legend symbols disappearing on zoom.Fixed area and bar stacking issue.Fixed zooming in stacked areas.Fixed issue with single point column plots.Fixed issue with zero level in column and bar charts.  Highcharts v1.0.0 (2009-11-27) # First release.Highcharts Stock  Highcharts Stock v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Stock 12.2.0.Added support for chart options in standalone navigator. See #22212.  Bug fixes Fixed #22135, setting ellipsis annotation options via annotationOptions did not work as expected.Fixed #21299, scrollbar and navigator margin settings were incorrect.Fixed #22557, navigator series was missing after reenabling navigator.Fixed #21879, control point option was not working for measure annotation.Fixed #21642, mousewheel zoom was not triggering zoom on standalone navigator.  Highcharts Stock v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Stock 12.1.2.  Highcharts Stock v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Stock 12.1.1.  Bug fixes Fixed #22262, a regression since v12.1.0 causing range selector buttons not to be responsive if the inputEnabled was false.  Highcharts Stock v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Stock 12.1.0.  Bug fixes Fixed #22311, calendar date picker was missing for the rangeSelector inputs.Fixed #21945, a regression since v11.3 causing the rangeSelector.align option not to work properly when set to right.Fixed #21220, resizing panes with multiple axes was resulting in incorrect axis height.Fixed #22269, select element didn't update the selected index when range changed in rangeSelector.  Highcharts Stock v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Stock 12.0.2.  Bug fixes Fixed #22262, a regression causing range selector buttons not collapse on narrow screens when there was no input.  Highcharts Stock v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Stock 12.0.1.  Highcharts Stock v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Stock 12.0.0.Added new series type, Point and Figure.Added new series type, Renko.Implemented new flow for update for RangeSelector.  Bug fixes Fixed #21524, in some cases panning to axis minimum was impossible in data grouped ordinal column chart.Fixed #21884, rendering issues with the borders of the Measure annotation.Fixed #20662, keyboard focus with Tab key was not working when rangeSelector dropdown was focused.Fixed #17890, timeline series didn't work correctly with stock chart.Fixed #21916, pixel-to-value axis calculations with ordinal and data grouping were incorrect.Fixed #21683, the first candle color in the hollow candlestick series was incorrect.Fixed #21584, navigator series was not removed correctly, causing chart.update to fail under some conditions.Fixed #20482, crosshair's label was cut off in certain label config.Fixed #21268, standalone navigator container height did not adjust correctly when a custom height was set.  Highcharts Stock v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Stock 11.4.8.  Bug fixes Fixed #21316, panning on axes with overscroll was not possible.Fixed #21660, navigator handles were not updated if they had URL symbols.Fixed #21483, zooming out on ordinal axes was not working correctly.Fixed #20359, scrollbar was not working when x-axis extremes were the same.  Highcharts Stock v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Stock 11.4.7.  Bug fixes Fixed #21274, plotBands were assigned to the wrong yAxis when there was no series in the navigator.Fixed #21507, removed annotation was still visible in exported chart.  Highcharts Stock v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Stock 11.4.6.  Highcharts Stock v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Stock 11.4.5.  Bug fixes Fixed #17945, colors lost on a color axis after going back to grouped state with data grouping enabled.Fixed #20354, navigator's grid lines were too long in a chart with a scrollable plot area.  Highcharts Stock v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Stock 11.4.4.  Bug fixes Corrected bad rendering of the navigator outline, a regression since v11.4.3.Fixed #21319, a regression since v11.4.0, resetZoomButton was visible while panning on non-ordinal axes.Fixed #21043, series references from navigator.baseSeries were not removed entirely after original series removal.Fixed #16915, the navigator should inherit the base x-axis padding when ordinal is false.Fixed #21064, Stock Tools buttons active state wasn't toggling correctly.Fixed #20877, panning using one finger on touch devices didn't work correctly with a dispersed dataset.Fixed issue with accessibility proxy element for navigator being present even without a navigator.  Highcharts Stock v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Stock v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Stock 11.4.2.Added new option, series.cumulativeStart. See #19050.Added new option, navigator.handles.borderRadius.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20549, empty string in flag title resulted in default 'A' assigned.Fixed #20214, RangeSelector#render was unnecessarily called 3 times on each chart render.Fixed #20829, added styled mode support for advanced annotations.Fixed #20382, custom id on navigator axis returned undefined with get().Fixed #20877, a regression in v11.3.0 causing mobile touch panning not to work correctly.Fixed #20936, boosted navigator was not included in inverted chart's clipRect.Fixed #20529, range selector not working with chart constructor.Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Stock 11.4.1.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Stock 11.4.0.Added #20275, possibility to set xAxis.overscroll in pixels or percentage.Improved implementation of attractToPoint to make use of KD-tree.Improved semantics of Stock Tools and popups to for better accessibility, specifically use <button> elements rather than spans.  Bug fixes Fixed #20318, navigator series data wasn't set with dataSorting enabled on initial run.Fixed #19808, the range selector week button behaved weirdly after using the scrollbar.Fixed #20430, mousewheel zoom with overscroll stuck.Fixed #20327, rangeSelector allowed to set range larger than possible extremes.  Highcharts Stock v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Stock 11.3.0.  Bug fixes Fixed #19861, series.searchPoint returned undefined after annotation redraw.Fixed #19243, if the last point in the dataset was from a scatter series, it was invisible.Fixed #20284, a combination of scatter, boost and ordinal axis threw error about processedXData.Fixed #19715, chart update failed with dataGrouping and dataSorting.Fixed #19743 and #19742, data grouping anchor positions weren't working correctly if there was only one point. Also tooltip didn't take into consideration the anchors.Fixed #19851, the rangeSelector button state was not preserved after adding data to a series.Fixed #19816, incorrect zooming with multiple series and ordinal axis.Fixed #19922, the range selector All button is now auto-selected if the data range is smaller than the selected range.Fixed #19926, click event wasn't bound correctly for annotations with HTML labels.Fixed #19793, trendline was not working for duplicate x values.Fixed #19892, HeikinAshi and Hollow Candlestick were not working with certain dataGrouping periods.  Highcharts Stock v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Stock 11.2.0.Added fibonacci.reversed option. Closes #19367.Added accessibility support for navigator handles.Added keypress (ESC) action to popup and sidebar.  Bug fixes Fixed #19736, mouseWheel zooming prevented scrolling in Stock Tools popups.Fixed #19992, xAxis ticks on broken axes were displayed incorrectly.Fixed #19779, mouse wheel zoom was not working when zooming on empty space without any points.Fixed #10073, flags were clumped together on the left side of the chart when allowOverlapX was false and the flags were dense.Fixed #19632, spacebar char couldn't be typed into input element.Fixed #16368, axis breaks caused points to overlap in stock charts.Fixed #16686, yAxis extremes were incorrect with VBP indicator compare.Fixed #16769, tunnel annotations had incorrect height on logarithmic axes.Fixed #17212, first grouped point in navigator was incorrect.Fixed #16784, calculations in extended ordinal position were wrong.Fixed #19505, label connector for the callout shape was not rendered in certain label positions.Fixed #19233, dragging annotations on chart with null points was inconsistent.Fixed #15569, at rapid mouse movements outside the chart, zoom didn't work properly.Fixed #19264, flag positioning on the spline series.Fixed #19493, zero values in Stock Tools popup fields were missing.Fixed #18251, range selector should consider all series extremes.Fixed #19121, Measure Annotation went back to its initial position after update.  Highcharts Stock v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Stock 11.1.0.  Upgrade notes For Highcharts Stock, the ordering of series and axes in the chart.series, chart.xAxis, chart.yAxis and chart.axes arrays were changed. Previously the navigator series and axes were last of the initial items, and when adding items they were appended. From now on, the internal navigator series and axes are always last, so the index of items now corresponds to that of the current options.  Bug fixes Fixed #18459, dragging annotations on chart with ordinal axes was inconsistent.Fixed #19042, text of annotation label was missing after updating it.Fixed #16068, panning on ordinal axis was inconsistent.Fixed #19024, wrong position and size of stockTools rectangle after resizing it on second y-axis.Fixed #18863, last point in zoomed ordinal axis was not visible.Fixed #18974, wrong approximation set for cumulative sum when dataGrouping was enabled.Fixed #17007, VBP indicator did not update correctly.  Highcharts Stock v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Stock 11.0.1.  Bug fixes Fixed #17977, disabling global animation did not affect scrollbar.Fixed #18922, scrollbar track did not catch click events.  Highcharts Stock v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Stock 11.0.0.  Bug fixes Fixed #18710, trendline points were not recalculated after adding or removing a point to main series.Fixed #18643, indicator threw volumeSeriesID error on range selector click.Fixed #18584, vertical line annotation position was incorrect when saved to options after drag and drop.Fixed #18689, indicator linked to another indicator should update after adding points.Fixed #16940, wrong cross label positions on multiple axes.Fixed #18528, last inside point was incorrectly calculated for lastVisiblePrice.Fixed #18276, annotations touch was not captured on mobile devices.Fixed #16841, Slow Stochastic Indicator was missing %D line when the K value was NaN.Fixed #18238, VBP indicator was not throwing an error when volume series had no data, or didn't exist.Fixed #17790, lastPrice and lastVisiblePrice labels were not destroyed during redraw.  Highcharts Stock v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Stock 10.3.3.  Bug fixes Fixed #18176 and #18178, indicators didn't work with an empty dataset.Fixed #18025, grid lines were rendered across panes.Fixes #17190, indicator linked to another indicator didn't update when data was added to main series.Fixed #17114, chart with data grouping had errors if the plot width was zero.Fixes #16753, when adding a custom indicator, if the parameter name contained any digits, the stock tools pop-up did not display it.Fixed #18088, color for Heikin-Ashi candles was set incorrectly.Fixed #17995, measure's control points were positioned incorrectly when yAxis.min wasn't equal to 0.  Highcharts Stock v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Stock 10.3.2.  Bug fixes Fixed #16487, Indicators button in Stock Tools GUI was active after popup close.  Highcharts Stock v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Stock 10.3.0.  Bug fixes Fixed #17814, the first point was not correctly removed for series with only one point when boost was enabled with ordinal.Fixed #17664, Ichimoku cloud was incorrectly positioned.  Highcharts Stock v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Stock 10.2.1.Added new option navigator.stickToMax, see #17539.  Bug fixes Fixed #17423, Stock Tools were unreachable when the container was wrapped.Fixed #17425, editing labels hid Elliott3 line.Fixed #17522, when the lastPrice label was enabled, there was an error in the console.  Highcharts Stock v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Stock 10.2.0.  Bug fixes Fixed #17305, the height of the Tunnel annotation wasn't overwritten in localStorage.Fixed #17405, zooming on boosted charts froze under certain conditions.Fixed #15799, offsetMin did not get applied by pre-selected range selector buttons.Fixed #15608, the MACD indicator did not have default colors.Fixed #17322, when axis was reversed, the tooltip overlapped flags.  Highcharts Stock v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Stock 10.1.0.  Bug fixes Fixed #17141, data grouping was not applied properly in charts with multiple series.Fixed #16901, navigator and range selector visibility was not inherited.Fixed #15735, axes were wrongly calculated when removing an indicator via Stock Tools GUI.  Highcharts Stock v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Stock 10.0.0.  Bug fixes Fixed #16970, Rectangle annotation didn't have a control point.Fixed #16759, range selector buttons overwrote series data grouping options when selected by default.Fixed #16670, Range Selector's buttons with dataGrouping setting caused error after adding an indicator using the Stock Tools GUI.Fixed #16492, Navigator did not stick to the max when adding a point and an additional, empty series was existing on the chart.  Highcharts Stock v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Stock v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Stock 9.3.2.Added fillColor option to create area fill between lines in multi-line indicators. See #15653.  Highcharts Stock v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Stock 9.3.1.  Bug fixes Fixed #16532, performance regression in ordinal axis.Fixed #16397, the VBP indicator was not recalculated after adding the point.Fixed #16371, incorrect Stock Tools button state after deselecting.  Highcharts Stock v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Stock 9.3.0.Added new annotation, Ellipse. See #15008.Added new annotation, Time Cycles. See #15826.Added new annotation Fibonacci Time Zones. See #15825.VBP indicator now follows the main series when the compare mode is on and compareToMain is false. See #16277.Added new feature Cumulative Sum. See #15361.Added Disparity Index average parameter as a dropdown in the Stock Tools popup. See #16159.Removed requiredIndicators info and added EMA to the default indicators master. See #15409.Added new series type: HLC, see #15346.  Upgrade notes Changed the default SMA index parameter from 0 (open) to 3(close). This also has an impact on the other indicators where SMA is being used, namely MACD, Price Envelopes and the Linear regression family.Renamed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.  Bug fixes Fixed #16158, the Stock Tools indicator popup had wrong series selected by default in some cases.Fixed #15727, the annotation popup was hidden when dragging from input to outside popup.Fixed #16316, #16370 the positions of annotations were not calculated properly on ordinal axes.Fixed #16319, grouped positions were not calculated correctly after clicking the range selector's All button multiple times.Fixed #16447, a separate axis was not visible after adding the Chaikin oscillator through Stock Tools.Fixed #14055, ordinal axis and data grouping didn't work with the boost module.Fixed #16449, the rectangle annotation added via Stock Tools was rendering without one side.Fixed #16513, the navigator was shrinking after adding points when stuck to axis minimum.Fixed #16451, unable to add annotation through Stock Tools on a logarithmic axis.Fixed #16415, changed default SMA index parameter, added an index to Keltner channels indicator.Fixed #16234, the popup of basic annotation shapes displayed label options.Fixed #16390, a regression in a documentation article and demo. Multiple lines indicator didn't work after changes related to migrating MultipleLines mixin to composition.Fixed #16041, long flag labels were not distributed properly which resulted in removing them.Fixed #16139, changed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.Fixed #16318, corrected the langKey property in Stock Tools gui for the Crooked Line 5 annotation.Fixed #13868, #16085, hovering over a pie series in a stock chart generated errors in the console.Fixed #16255, error after setting new extremes in a chart with ordinal axis and invisible series.  Highcharts Stock v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Stock 9.2.2.  Bug fixes Fixed #16238, a regression causing data grouping information not to reset when zooming in, both in the tooltip and in internal properties.  Highcharts Stock v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Stock 9.2.1.  Bug fixes Fixed how the color is applied for bullish hollow candlestick line.  Highcharts Stock v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Stock 9.2.0.Added Heikin Ashi series type. See #15348.Added Hollow Candlestick series type. See #15347.Added support for declaring an indicator series before the main series. See #15892.Added support for creating a custom indicator on an additional axis through the Stock Tools popup. See #15804.  Bug fixes Fixed how the ordinal axis is being calculated after grouping.Fixed the CSS fill property of bullish candlestick and the hollow candles.Fixed #16055, after adding a point to an ordinal axis, panning was impossible.Fixed #15970, annotation positions were not accurate with an ordinal axis.Fixed #16087, stock tools threw in IE.Fixed #15867, comparing an indicator with multiple lines (eg Bollinger Bands) was not possible.Fixed #16036, VBP indicator graphic did not update correctly with volumeDivision enabled.Fixed #15729, annotation did not stay selected after dragging.Fixed #16011, some labels/shapes disappeared when updating annotation with multiple labels/shapes and not passing in any labels/shapes.Fixed #15725, adding annotations with multiple steps used the wrong axis coordinates when moving the cursor to a different pane.Fixed #15726, rectangle annotations were not clipped.Fixed #15730, toolbar popup did not get hidden when hiding the selected annotation.Fixed #15952, annotation afterUpdate event did not fire when using control point.Fixed #15864, a regression in the navigator. When rangeSelector.selected was set, the navigator had the wrong position after adding a series to an empty chart.Fixed #15733, missing 'Periods' label in Stock Tools pop-up for some indicators.Fixed #15849, candlestick fill was wrong when updating point data from rising to falling.Fixed #6765, changed how and when the dataGrouping should be fired for multiple series when one of them doesn't require grouping.Fixed #2406, fixed val2lin method to correctly calculate positions outside the visible plotArea in ordinal axis.  Highcharts Stock v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Stock 9.1.2.  Bug fixes Fixed #15728, indicator popup columns did not have separate scrollbars.Fixed #13238, panning on mobile devices with ordinal axis didn't work correctly.  Highcharts Stock v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Stock 9.1.1.  Bug fixes Fixed #15803, navigator positioned using navigator.xAxis.left flickered when dragging.Fixed #15740, error in some cases when destroying elements of the chart and Stock Tools were present.Fixed #15491, range selector button text vertical centering did not work well and paddingLeft and paddingRight in buttonTheme were not supported.Fixed #15706, lastVisiblePrice label color class did not always match the series color class.Fixed #15508, the measure annotation's label wasn't correctly rendered inside the annotation.Fixed #14742, the axis range property was ignored when there were fewer data points.Fixed #15593, Stock Tools overflowed the chart container when the class chart was not set on the container.Fixed #15400, clipping was wrong after calling setSize in load event with stock loaded.  Highcharts Stock v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Stock 9.1.0.Added new feature, series.dataGrouping.anchor, for controlling where grouped points are rendered within the group. See #12455.Added new technical indicator, Disparity Index. See #15139.Added new technical indicator, Directional Movement Index (DMI). See #15140.Added new technical indicator, Chande Momentum Oscillator (CMO). See #15142.Added new technical indicator, On-Balance Volume (OBV). See #15138.Added currentPriceIndicator and lastPrice for multiple series (also to indicators and volume), see #14888.Added line series as available type for the RSI Indicator. See #14930.  Upgrade notes The data grouping smoothed property has been deprecated and has been changed to firstAnchor, anchor and lastAnchor.The default value of linearregression.params.xAxisUnit has been changed from undefined to null.  Bug fixes Fixed #13807, adding a technical indicator in the Stock Tools when multiple axes were predefined would break the chart.Fixed #15218, scrollbar.liveRedraw defaulting to true in modern browsers did not work when scrollbar was set in chart options instead of axis options.Fixed #3825, when ordinal axis and dataGrouping were enabled, panning worked unevenly in one direction.Fixed #14192, disabled stock tools GUI buttons when all series were invisible.Fixed #15157, replaced the hex, and string colors in the stock tools with the colors defined in the palette.Fixed #15222, className was not applied to lastPrice crosshair.Fixed #6332, split tooltip didn't work correctly with flag series type with empty text property.Fixed #15512, dynamically added series did not use range selector data grouping.Fixed #13847, data labels in navigator should be disabled in the default configuration.Fixed #15362, corrected API and Stock Tools popup list of indicators' params.Fixed #15435, clipping was sometimes wrong after update with stock loaded.Fixed #15524, dragging annotation after updating label threw and labels.overflow set to justify did not work correctly.Fixed #15502, vertical counter annotation did not work.Fixed #15424, fibonacci annotation lineColor and lineColors options did not work.Fixed #15445, options got mutated when creating stock chart.Fixed #15383, indicators did not recalculate when updating series type.Fixed #15384, updating flag shape did not work.Fixed #15005, point dataGroup start was not calculated correctly.Fixed #12116, boosted stacked chart with range selector enabled and a partial range selected threw.Fixed #15324, elements such as legend and title sometimes had the wrong position when using stock tools.Fixed #15178, console warning when using states in rangeSelector.buttonTheme options.Fixed #15170, added lang options for indicators parameters in Stock Tools popup.Fixed #8603, dynamically added stock axes missed forced options, addition to #15164.Fixed dynamically added axis defaults in stock, axes dynamically added to stock charts got different defaults than the ones added through the chart constructor.Fixed #15029, improved currentPriceIndicator button functionality.Fixed #15060, range selector text input was too short when inputBoxWidth was not set, especially in IE.Fixed #13858, clipping was wrong after plot height had been changed by a responsive rule firing during chart load with stock loaded.Fixed #15075, some Stock Tools annotations were being drawn incorrectly when yAxis.top was set.Fixed #15155, some line drawing tools of the Stock Tools package didn't work correctly.Fixed #15005, when groupAll was set to true, group start was badly calculated.Fixed #13247, getTimezoneOffset got called with NaN timestamp when rendering stock chart with at least one empty series.Fixed #15074, lastPrice color was not applied properly.Fixed #14197, after changing shortPeriod in MACD, points were missing.Fixed #14879, currentPriceIndicator label was not always visible when navigating the data set.Fixed #9671, updating stock chart axes through Chart.update with oneToOne set to true did not work correctly.Fixed #15128, parts of the series disappeared when redrawing a regular chart with series.clip set to false and stock loaded.Fixed #12100, unable to scroll using mousewheel inside Stock Tools popups when mapNavigation was enabled.Fixed #9738, groupAll did not work correctly with OHLC-based series.Fixed #10296, navigator leaked event handlers into series and x-axis on Series.update.Fixed issue mentioned in #15060 and #15062, it was not possible to enter months starting with 1 into the range selector date input under certain conditions. When typing the extremes now only update on blur and when pressing enter, which is the same behaviour the text inputs have.Fixed #11930, removing dynamically added y-axes did not work correctly with navigator enabled, causing the removed axis to show in exported charts.Fixed #13876, toggling currentPriceIndicator button threw error.  Highcharts Stock v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Stock 9.0.1.  Bug fixes Fixed #15124, range selector with inputs wider than the plot and no buttons threw.Fixed #14977, MACD indicator index param did not work.Fixed #13473, it was not possible to scroll back down to the threshold after scrolling up with yAxis.scrollbar enabled and no explicit yAxis.min set.Fixed #15042, IKH indicator lines changed color on the first redraw.Fixed #14063, an error was thrown when scrolling an inverted chart with a flag series.Fixed #14280, Stock Tools GUI popup - clicking on the 'x' button didn't call the closePopup event.Fixed #14932, #13251, updating compare through plotOptions did not work.  Highcharts Stock v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Stock 9.0.0.Added new feature, rangeSelector.dropdown. This feature allows the range selector button row to be collapsed into a dropdown when space is limited. The new behavior may be forced, disabled or responsive (default).New graphic design for the range selector date inputs. Simplified visual appearance and flexible width based on the rendered content.Added native browser date pickers to the range selector. Supported browsers are Chrome, Firefox, Edge and Safari for mobile. Other browsers fall back to text inputs.Added rangeSelector.buttons.title option for assistive technology and general accessibility (#14437), and assistive technology announcement on range selector button click (#14438).  Upgrade notes The range selector date input fields have a new visual appearance. See this fiddle on how to revert to the old design.Range selector inputs will now be of type date, datetime-local or time, depending on the required granularity. For supporting browsers, date picker widgets will be presented. For non-supporting browsers, it falls back to the legacy text input functionality.Indicators no longer inform about missing dependencies in the browser console.  Bug fixes Fixed #14495, the lastVisiblePrice label in price-indicator module overwrote the crosshair.label.backgroundColor property.Fixed #14416, range selector ignored the time.timezoneOffset setting.Fixed #14826, the tooltip border color did not reflect the upColor of OHLC and candlestick series.Fixed #9744, stock toolbar overlapped left-aligned title and legend.Fixed memory leak in range selector, chart load event listeners leaked on update.Fixed #11669, enabling range selector with update did not work properly.Fixed #14292, right-aligned range selector buttons were positioned outside the chart after animating in.Fixed #14691, incorrect order of annotation subtitles in pop-ups in Firefox.Fixed #14193, scrollbar did not work on touch devices.Fixed #14698, issue with how the EMAPercent was calculated in the DEMA and TEMA indicator.Fixed #14544, range selector did not fully support slashes in date inputs.Fixed #14505, when one of the chart series had a single point, the navigator handles could be dragged beyond the default xAxis.minRange. The computed minRange was NaN.Fixed #14436, range selector styling with keyboard navigation.Fixed #13934, chart crashed when dataGrouping was disabled and axis extremes were set outside the data range.  Highcharts Stock v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Stock 8.2.2.  Bug fixes Fixed #14060, navigator's yAxis did not match the chart.Fixed #14254, the plotBands.acrossPanes option had no effect.Fixed #13751, wrong clip path after adding/removing series.Fixed #13950, in StockTools, adding technical indicators to column-type series did not use the same dataGrouping.approximation.  Highcharts Stock v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Stock 8.2.0.  Bug fixes Fixed #13205, range selector showed wrong values ​​after update.Fixed #13664, measure had wrong position when used on a positioned Y axis.Fixed issue with range selector buttons text color, see #13798.Fixed #13788, adding data to an empty chart and updating rangeSelector.selected altogether did not render new series.Fixed #13813, hiding series when dataGrouping was enabled and legend.layout was set to "proximate" used to render legend item at the wrong position.  Highcharts Stock v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Stock 8.1.2.  Highcharts Stock v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Stock 8.1.1.  Bug fixes Fixed #13392, the navigator had wrong top position when legend.layout was proximate.Fixed #12696, calling series.setData() after series.update(options, redraw=false) on a cropped or grouped dataset would update the wrong points.Fixed #13334, panning an ordinal axis with equal spaced data did not work correctly.  Highcharts Stock v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Stock 8.1.0.  Bug fixes Fixed #13287, incorrect position of the vpb (volume by price) series after the initial animation.Fixed #12054, problem saving and loading simple annotations (label, rectangle and circle) from localStorage added via Stock Tools.Fixed #12391, zones were broken when series was updated.Fixed #13184, dynamically disabling scrollbar and decreasing number of points in chart.update() caused wrong extremes on xAxis.Fixed #13025, legend was overlapping range selector when they were both vertically aligned to the top.Fixed #11480, error with crosshair labels after enabling the Stock Tools' current price indicator and changing the timeframe of the chart.Fixed #12834, hidden series applied wrong extremes on X axis when scrolling.Fixed #13176, Stock Tools' fullscreen button did not work.Fixed #13114, the navigator did not update without a base series and scrollbar.  Highcharts Stock v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highstock 8.0.4.  Bug fixes Fixed issue with rangeSelector buttons alignment, see #13014.  Highcharts Stock v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highstock 8.0.3.  Highcharts Stock v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highstock 8.0.2.  Highcharts Stock v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highstock 8.0.1.  Bug fixes Fixed issue with axis labels outside plot range when ordinal enabled, see #12716.Fixed #7204, OHLC ticks were rendered incorrectly with higher series.lineWidth values.Fixed issue with navigator overlapping when axis labels width change, see #12573.  Highcharts Stock v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highstock 8.0.0.Added Slow Stochastic indicator.  Bug fixes Fixed regression which prevented from panning to the left side when dataGrouping and xAxis.ordinal were enabled.Fixed #12216, Stock Tools UX was not working optimal on mobile devices.Fixed #12145, missing option supertrend.color.Fixed #12298, enabling crosshair label while a point was hovered rendered crosshair labels for all axes.  Highcharts Stock v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highstock 7.2.2.  Highcharts Stock v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highstock 7.2.1.  Bug fixes Fixed #12266, applying zones on macd when the main series had no data produced an error.Fixed #11471, updating chart with new series and oneToOne set to true used to throw errors when data was grouped.Fixed #12215, VWAP technical indicator added via StockTools was added to the wrong pane.Fixed #11426, arearange series had disabled dataGrouping by default.Fixed #1172, handles positions and xAxis extremes were incorrect when using column type series in navigator.Fixed #12099, panning to the left did not work properly after zooming in when data grouping was enabled.Fixed #11716, basic annotations (rect, circle and label) were missing options in StockTools' popup.Fixed #12058, compare with one single data value failed. It now behaves like when comparing to data points of the same value - it renders on the 0 line.  Highcharts Stock v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highstock 7.2.0.  Highcharts Stock v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highstock 7.1.3.Added new technical indicator, trendline, showing price trend.  Bug fixes Fixed #11483, lastPrice indicator was incorrect with dataGrouping.Fixed #11415, vertical scrollbar was visible in annotation popup.Fixed #11175, navigation.bindings.rectangleAnnotation did not resize it's width/height according to xAxis/yAxis extremes.Fixed #11174, size of measure annotation was not recalculated in redraw.Fixed #10980, defining just one item in stockTools.gui.definitions[name] threw errors.Fixed #11191, dataGrouping.approximation.average did not correct floating point precision errors.Fixed #10745, sometimes old points were not removed after updating data with enabled dataGrouping.Fixed #11366, annotationOptions did not work for some of the bindings[annotationName].Fixed #11351, gapSize and multiple dataGroupings sometimes hide series line with lower granularity.Fixed #11344, some icons were not loaded from custom url. Added new general option, navigation.iconsURL that takes over from the more specific stockTools.gui.iconsURL.Fixed #11206, editing technical indicators in stock tools did not select correct series.Fixed #11079, stock-tools were not working correctly in inverted charts.Fixed #11005, X axis line width affected clipping of the series graph or columns, even when the Y axis did not extend to the X axis.Fixed #10827, issues with the TEMA indicator's tooltip and boost module. Caused by a method name collision.Fixed #10932, xAxis.minPadding didn't work when plotOptions.series.dataGrouping was enabled.  Highcharts Stock v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highstock 7.1.2.Added new options plotBands.acrossPanes and plotLines.acrossPanes to control rendering lines across all panes. See #6644.  Bug fixes Fixed #10404, range selector inputs overlapped exporting menu.Fixed macd series wrong rendering issue after point update with data cropped (see #10774).Fixed issue with incorrect scrollbar if axis extremes were the same (#10733).Fixed #10290, ordinal xAxis in lazy loading sometimes did not render all xAxis labels after zooming out.Fixed #10618, different yAxis.opposite settings caused scrollbars to overlap.Fixed #10605, simple annotations (label, circle, rectangle) added using stock-tools were misplaced in exported chart.  Highcharts Stock v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highstock 7.1.1.  Bug fixes Fixed #10460, updated options in annotations prevented updates from stock tools popup.  Highcharts Stock v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highstock 7.1.0.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10015, chart update did not reserve space for rangeSelector.Fixed #10015, chart update did not reserve space for rangeselector.Fixed #10144, delete button in GUI did not work for flags.Fixed #10183, Elliot waves did not render last line when added through GUI.Fixed #10192, technical indicators added via stock tools for a volume series were rendered on a wrong yAxis.Fixed #10193, wrong navigator series indexes after addSeries().Fixed #10196, plotOptions.<indicator>.params did not update default values in inputs.Fixed #10201, stochastic indicator did not open it's pane from GUI.Fixed #10261, mouse event arguments should be passed to range selector button click handler.Fixed #10332, After drawing a segment line and moving end point whole chart area was selected.Fixed #1289, wrong extremes on second pane yAxis when zoomed the first one.Fixed #4606, range selector inputs did not blur and jQuery UI datepicker didn't close.Fixed #7067, Navigator was not added by chart update.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9994, navigator.xAxis.min was wrong with main xAxis.min set and ordinal enabled after addPoint.  Highcharts Stock v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highstock 7.0.3.Added new property compareToMain to certain indicators. See #7773.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10001, pointer events were missing after hide stock toolbar.Fixed #8430, Series data in navigator was reset after update unrelated series.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9209, rangeSelector.selected and rangeSelector.options.selected were not cleared when all buttons were unchecked.Fixed #9493, indicators were badly updated when data was cropped. Closed #8572, #9822.Fixed #9913, useOhlcData did not work when datagrouping enabled.Fixed #9915, price indicator had error when no points.Fixed #9928, xAxis label was incorrect when point had declared name.  Highcharts Stock v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highstock 7.0.2.  Bug fixes Fixed #6989, require data to be sorted for dataGrouping instead of for all series in a Highstock chart.Fixed #7083, improved pane clipping for column type series.Fixed #9235, option Axis.scrollbar.liveRedraw did not block events and redraw.Fixed #9693, added default groupPixelWidth when dataGrouping options were set to all series through plotOptions.series.Fixed #9724, wrong position of range selector on init when all series were hidden.Fixed #9740, calling chart.update() removed all stockTools bindings.Fixed #9767, annotations' dynamic updates (update, remove, resize, drag and drop) were not applied in the exported chart.Fixed positioning of flags when attached to a yAxis with pane information.Fixed #8544, series keys were not applied with turboThreshold and dataGrouping.Fixed #9787, set supertrend cropThreshold equal to main series one on init.Fixed #9847, stocktools gui and popup did not support touch events.Fixed #9854, correct compareValue for OHLC series.  Highcharts Stock v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highstock 7.0.1.  Bug fixes Improved layout in Stock Tools toolbar.Fixed issue in Stock Tools where separate yAxes should be created for certain indicators.Fixed missing translation of measure key in lang.navigation.popup.Fixed #10214, stocktools bindings referred to wrong chart container.Fixed #10351, ichimoku - remove was broken in iE11.Fixed #10387, verticalCounter in stockTools was broken.Fixed #10392, stocktools popup was not compatible with IE.Fixed #9938, added annotation options in stocktools.  Highcharts Stock v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highstock 7.0.0.Added new technical indicators: Arroon, Arroon Oscillator, Absolute Price Oscillator, Williamis %R, NATR (Normalized Average True Range), Linear regression indicator, Linear regression intercept, Linear regression angle, Linear regression slope, Keltner channels, Price Channel, Acceleration Bands, Triple EMA, Double EMA, TRIX, Percentage Price oscillator, Super trend, Chaikin oscillator, Awesome Oscillator, Detrended price.Added depth chart demo.Added Stock Tools, a new range of features moving Highstock in the direction of full featured trading dashboards. The module adds a toolbar with controls for:Add, update or remove indicators for the chart series.Drawing custom annotations like text, lines, arrows etc.Parallel channel, pitchfork annotations, Elliot waves and Fibonacci retracements.A measure tool, displaying information about the measured area, including things like the amount of points, time range etc.Infinity line, controlled by two points, allowing projection of a trend forward in time.Full screen mode.Chart type toggle (OHLC, candlestick, line etc.).Current price indicator with label.  Upgrade notes Indicators that depend on another indicator now require the depencency to be loaded manually. Otherwise an error will be thrown. For example MACD requires EMA, that means the EMA indicator should be loaded first.  Bug fixes Fixed #4710, range selector didn't update on clicking the chart after changing input.Fixed #8951, improved ema efficiency, index changed.Fixed #9102, hardcoded stochastic series name.Fixed #9160, xAxis.overscroll rendered too many labels.Fixed #9285, reset zoom button was permanently disabled by navigator or rangeSelector despite dynamic updates.Fixed #9299, avoid hiding flags with box position equal to 0.  Highcharts Stock v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highstock 6.2.0.  Bug fixes Fixed #9020, columnrange bottom dataLabels were not rendered when dataGrouping was enabled.Fixed #9075, adding a point used to reset zoom when series had different ranges.Fixed #9077, a regression causing disappearing points in some cases related to data grouping.  Highcharts Stock v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highstock 6.1.4.Added feature to preserve non-data point options inside data-grouped points. The options from the first point are copied over to the group. Closes #8999.  Bug fixes Fixed #8440, keyboard navigation in stock charts throwing errors.Fixed #7051, dataGroupInfo.start was indicating wrong point when points were grouped weekly.Fixed #8335, setting xAxis.min did not change extremes when points were grouped.Fixed #8546, flags were not clipped.Fixed #8812, regression in inverted navigator caused wrong extremes on when navigated to data extremes.Fixed #8817, setting stacking option for OHLC and Candlestick series threw errors.Fixed #8847, MACD used to crash when provided amount of points was insufficient.Fixed #8848, removing empty MACD technical indicator used to throw errors.Fixed #8889, corrected demo for approximation.Fixed #8899, setting chart.style.zIndex prevented RangeSelector's inputs from receiving focus.Fixed #8938, advanced stock demo threw errors when changing from Demo 2 to Demo 1.Fixed #8965, Stochastic indicator %D value was calculated incorrect.Fixed #8968, SMA technical indicator threw errors on updating last point in the dataset.Fixed issue with presentational attributes leaking through styled mode in range selector.  Highcharts Stock v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Stock v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highstock 6.1.2.  Upgrade notes Fixed performance issues with default settings and the Boost module. Now xAxis.ordinal is turned off if one of the series are in boost mode, and scrollbar.liveRedraw is turned off by default if boosting.  Bug fixes Fixed #8733, range selector was unable to update to enabled: true.Fixed #3777, candlestick series on a reversed yAxes was rendered incorrectly.Fixed #8196, updating a chart with oneToOne with the same options caused errors and disappearing X and Y axes.Fixed #8433, added option rangeSelector.buttons.preserveDataGrouping to keep dataGrouping on extremes change.Fixed #8542, crosshair was not working for logarithmic axes.Fixed #8562, errors in console when legend covers plot area.Fixed #8572, technical indicators' data was not updated when adding a point with shift.Fixed #8573, flags were not hidden.Fixed #8595, toggling navigator caused plotting area to shrink.Fixed #8715, error on destroying navigator series after the parent series had already destroyed it internally.Fixed #8769, rangeselector position forgotten when updating chart margins.Fixed graphical issue with scrollbar animating on first drag in the navigator handles.  Highcharts Stock v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highstock 6.1.1.  Bug fixes Fixed #7828, browsers were crashing when panning million of points on a chart.Fixed #8031, columns overlapped xAxis - correction.Fixed #8196, navigator series interfered with series order when running chart.update.Fixed #8200, reset zoom button did not hide after resetting extremes.Fixed #8212, improved API reference of dataLabel.y and added API reference of pointValKey for ohlc series.Fixed #8374, navigator's series did not inherit visible option from linked series.Fixed #8376, PSAR and MACD technical indicators were throwing errors when main series did not have enough points.Fixed #8445, Rate of Change (RoC) had wrong tooltip when params were set.  Highcharts Stock v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highstock 6.1.0.Added dataGrouping.groupAll option to prevent columns value change on scrolling when dataGrouping is active. Closes #5344.Created advanced stock chart demo to showcase dashboarding.  Bug fixes Fixed #4960, wrong position of flags on inverted chart.Fixed #5308, negative timestamps threw errors with enabled rangeSelector.Fixed #5581, navigator was broken after removing all series.Fixed #6423, dynamically added axes had wrong indexes after axis.update().Fixed #6994, zoom out on mobile devices did not select correct rangeSelector buttons.Fixed #7823, technical indicators caused dataGrouping issues.Fixed #7827, sometimes forced dataGrouping by year didn't render all points and xAxis labels.Fixed #7945, zones in MACD technical indicator broke rendering signal line.Fixed #7995, chart threw errors when initialized with xAxis: [].Fixed #8023, point.update() threw exceptions when not defining options.Fixed #8038, dynamic change of navigator.adaptToUpdatedData did not work.Fixed #7684, spacingBottom was ignored after chart update.  Highcharts Stock v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highstock 6.0.7.  Bug fixes Fixed #7802, incorrect EMA calculation when series had points with zero values.Fixed #7788, MACD did not display calculated points.  Highcharts Stock v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highstock 6.0.6.  Bug fixes Fixed #5457, incorrect flag placement in pane layout.Fixed #7686, series was not visible with dataGrouping and gapSize combined.Fixed #7690, yAxis array options ignored when using setOptions.  Highcharts Stock v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highstock 6.0.5.Made showLastLabel default for category yAxes. See #6104 and #7546.  Bug fixes Fixed #6379, scrollbar.liveRedraw was not respected on mobile devices.Fixed #7219, crosshair label was incorrect when using multiple panes.Fixed #7547, a regression causing grouped data points to remain visible after zooming in to non-grouped data.Fixed #7563, drag-panes module triggered zoom.Fixed #7576, navigator handles rendered wrong extremes when xAxis was reversed.Fixed #7642, default technical indicator name was not based on parameters.Fixed #7648, Bollinger bands were not rendered when linked to an area series.Fixed #7713, reversed navigator xAxis didn't show new points.Fixed #7732, drag-panes module was changing navigator's yAxis size.  Highcharts Stock v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highstock 6.0.4.Added y value to flag points on a series. See #7440.  Bug fixes Fixed #7307, unable to set tooltip.split to false from setOptions.Fixed #7458, the 1M button in the range selector was not visually in pressed state even when initially selected when the data range crossed DST.Fixed #7509, calling chart.destroy() after setData with redraw false caused JS error.  Highcharts Stock v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highstock 6.0.3.  Bug fixes Fixed #3482, using direction rtl caused various labels to be mispositioned.Fixed #4674, overlapping flags when next to each other.Fixed #4798, white pixel visible next to the chart on init.Fixed #6612, the "Reset Zoom" button always returned to previous zoom.Fixed #6984, strange animation when zooming between data grouping levels.Fixed #7256, redundant redraws when toggling a series with linked navigators.Fixed #7275, X axis labels were gone in a scatter chart with X axis breaks.Fixed #7378, removing base series with only scrollbar enabled caused errors.  Highcharts Stock v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highstock 6.0.2.  Bug fixes Fixed #7246, tooltips not working on flags with the default split option.Fixed #7256, redraw event was triggered when calling Series.setVisible with the redraw argument set to false.  Highcharts Stock v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highstock 6.0.1.  Highcharts Stock v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highstock 6.0.0.Added built-in technical indicators.Added drag-and-drop pane resizing.Added support for positioning of the range selector.Added support for max range and handle customization in the navigator.Added support for scrolling past the data.Added compareStart to define which point should be the base for calculations. See #1613.Added rangeSelector.buttons.offsetMin and offsetMax to control button range extremes. See #1613.Added xAxis.maxRange to limit maximum allowed range for navigator.Added xAxis.overscroll.Added new options to navigator.handles.  Bug fixes Fixed #6655, flag series with showInNavigator set to true caused error and missing graph.Fixed #7109, stack size exceeded when using responsive rules.Fixed navigator updating issues. Closes #7110 and #5846.  Highcharts Stock v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highstock 5.0.14.  Highcharts Stock v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highstock 5.0.13.Added option, series.gapUnit, to allow greater control of gapSize. Closes #6645.Allow relative length for axis.width and axis.left. See #6836.  Bug fixes Fixed #5846, #5936, #6193 and #6251. Rewritten Navigator update logic.Fixed #6546, gapSize with stacking didn't work.Fixed #6734, linkedTo was wrongly applied to Navigator series.Fixed #6771, ensure events are handled on same document as chart elements.Fixed #6830, RangeSelector button loses focus on adding points in chart.load event.Fixed #6930, scrollbar was rendered with wrong extremes when Axis had not any data.Fixed minor Navigator issues.  Highcharts Stock v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highstock 5.0.12.  Bug fixes Fixed #6683, inverted chart rendered scrollbar outside the container.Fixed #6709, Chart.get(id) caused errors when at least one series was hidden with grouped points.Fixed #6716, dataGrouping in arearange series did not reserve space for null points.Fixed #6720, zAxis gridLines were incorrectly rendered.Fixed #6725, navigator mask was black in old IE.Fixed #6725, navigator's outer masks rendered as black in IE6/7/8.  Highcharts Stock v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highstock 5.0.11.  Bug fixes Fixed #2914, dataGrouping approximation wasn't checked properly.Fixed #5479, added averages option for approximation in dataGrouping.Fixed #6445, function getSelectedPoints did not find points outside of cropThreshold.Fixed #6537, month buttons were not setting correct extremes when the current month had more days than previous months.Fixed #6562, crosshairs always drawn relative to high value in OHLC and candlestick charts.Fixed #6573, scrollbar was rendered on xAxis labels, when using chart.scrollbar option.Fixed #6590, dataGrouoping wasn't wokring correctly with keys set on data.Fixed #6590, dataGrouping wasn't working correctly with keys set on data.Fixed #6615, enabling Chart.scrollbar by chart.update() caused errors.  Highcharts Stock v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highstock 5.0.10.  Bug fixes Fixed #1716, navigator handles were not moving if the range was very small.Fixed #3517, yAxis.top caused flags on xAxis to be rendered outside the view.Fixed #3763, stable sort was not used for flags.Fixed #6303, events didn't work for flags when useHTML was set to true.Fixed #6453, scrollbars for multiple yAxes were positioned incorrectly.Fixed #6478, flags on OHLC were unable to have onKey set to low or high.  Highcharts Stock v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Stock v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highstock 5.0.8.  Bug fixes Fixed #6276, a regression which broke x-panning.Fixed #5493, performance regression with data grouping for a hidden series.Fixed #5800, outline position was wrong when outlineWidth was wider.Fixed #6071, Axis.update() changed default settings.Fixed #6262, vertical scrollbar on an inverted chart was positioned incorrectly when used without navigator.Fixed #6266, dragging navigator with full range caused points to disappear.Fixed #6327, flags series tooltip position.Fixed #6334, scrollbar called afterSetExtremes event twice.Fixed #6363, series.remove() ignored redraw param if series had a related series in the navigator.Fixed #6383, adding point after series.update() reset xAxis extremes.Fixed #6421, errors after destroying a chart with multiple scrollbars.  Highcharts Stock v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highstock 5.0.7.Added support for navigator in inverted charts.Created new module stock.src.js so Highstock can be loaded as a module for Highcharts.  Bug fixes Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5602, issues with setting range by inputs.Fixed #6012, navigator handles couldn't be moved after hiding and updating series.Fixed #4114, navigator didn't respond to mouse events when xAxis was reversed.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed #5979, wrong column width when the X axis contained breaks.Fixed #6140, candlestick hover state didn't respect lineWidth.Fixed #6156, a regression causing poor performance with forced dataGrouping when dealing with hundreds of thousands of data groups.Fixed #6162, series.update() didn't update all series.Fixed #6166, events were not bound to all plotBands.Fixed #6191, navigator dropped too early when encountering minRange.Fixed #6192, unwanted clipping when used with gauge series.  Highcharts Stock v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highstock 5.0.6.Added new option, series.compareBase, to allow percentage comparison to start at 100%.  Bug fixes Fixed #2685, xAxis.offset didn't work for navigator's xAxis.Fixed #5924, wrong extremes on dynamically added axes.Fixed #6057, setting correct series clip-path for polar charts.Fixed #4988, navigator.enabled, rangeSelector.enabled, scrollbar.enabled ignored when setOptions was used.  Highcharts Stock v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highstock 5.0.5.  Bug fixes Fixed #2944, title.style.fontSize ignored when setOptions was used.Fixed #5904, navigator series were using wrong clipPath.Fixed #5923, columns were not rendered correctly with linked axes.Fixed #5978, fillColor was not applied for flags, when was set on in the point config.  Highcharts Stock v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highstock 5.0.4.  Highcharts Stock v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highstock 5.0.3.  Bug fixes Fixed #5884, optimizing addSeries.Fixed #5918, navigator handles were blurry when navigator height was an odd number.Fixed #5930, selected range selector button was unselected if redrawing before doing manual selections.Fixed #5971, eternal loop on setting general minor grid lines that applied to the navigator.  Highcharts Stock v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Highcharts Stock v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Bug fixes Fixed issues with Highstock keyboard navigation in the Accessibility module.Fixed #5602, issues with setting range by inputs.Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5088, marker states on flags were ignored.Fixed #5706, wrong series visualization when using compare.Fixed #5814, one all-zero series caused others to fail with compare.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed issue where removing and re-adding navigator via chart.update caused errors.Fixed issue with range selector inputs not hiding or showing correctly when setting chart size with animation.  Highcharts Stock v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highstock 5.0.0.Added support for multiple series in the navigator, see series.showInNavigator and series.navigatorOptions.Added new option, plotOptions.flags.textAlign.Deprecated the baseSeries option, now replaced by showInNavigator.  Highcharts Stock v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highstock 4.2.7.Added Series.dataGroupInfo to allow accessing data grouping information from the approximation function.Added warning on trying to update grouped point.  Bug fixes Fixed #5635, regression causing background images on flags to fail.Fixed #5493, hidden series with data grouping caused wrong extremes on xAxis.Fixed #2049, flags were misplaced when using more than one column-type series.Fixed #3228, inputs in range selector didn't allow to view the historical data in lazy loading.Fixed #3961, bubble series caused JavaScript errors in Highstock.Fixed #3111, column series were clipped off when resizing chart during initial animation.Fixed #3112, compare for candlestick.Fixed #5231, input fields not receiving focus after showing hidden chart.Fixed #5600, YTD button was disabled when all the data was within the same year.Fixed #5686, scrollbar.minWidth option causes misplacement for a scrollbar bar.Fixed #5699, column series dissapeared when added after chart initialization and using navigator.Fixed #5702, crosshair label's anchor was misplaced during mouse move.  Highcharts Stock v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highstock 4.2.6.Added new option set, yAxis.scrollbar, to allow scrollbars on Y axis (or in fact any axis) in Highstock. Read announcement.Refactored sideways graph animation to allow smooth navigation when clicking scrollbar buttons, adding multiple points etc.  Bug fixes Fixed #687, first value of compare chart should be the last of the previous range.Fixed #5316, wrong columns and ticks after toggling ordinal setting with axis update.Fixed #5323, regression causing JS error on redrawing empty stock chart.Fixed #5330, JS error when enabling range selector in Chart constructor.Fixed #5395, animation mixed up on navigator and range selector.Fixed #5414, navigator series updated wrong on addPoint when data grouping was disabled.Fixed #5453, unresponsive first drag on navigator.Fixed #5477, error on first mouse hover with crosshairs.Fixed #5485, setCompare did not affect exported chart.Fixed #5489, a regression causing data grouping on range selector buttons to fail.Fixed #4222, flag's title wasn't updated with Point.update.Fixed #5388, performance hit when running a forced data grouping with a lot of empty groups.Fixed #5390, navigator series wasn't updated when chart initialized without series.  Highcharts Stock v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highstock 4.2.5.Refactored scroller redraw to prevent chart from redrawing twice.  Bug fixes Fixed #2266, series didn't animate when running addPoint.Fixed #3452, zoomed range didn't move when adding points to stock chart without a navigator.Fixed #5193, browser crash in Chrome 49+ when updating candlestick points frequently.Fixed #5231, input fields not receiving focus after showing hidden chart.  Highcharts Stock v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highstock 4.2.4.Added new Point property, dataGroup, that holds information of what raw data points are included in a grouped point.  Bug fixes Fixed #3477, range selector did not update axis extremes after pressing enter in IE.Fixed #4747, gapSize did not apply to each series independently.Fixed #5041, scroller.zoomedMin was bigger than zoomedMax, which caused error due to negative width.Fixed #5165, space was reserved for the exporting button even when disabled.Fixed #5172, scroller threw error with empty series data and an X axis minimum setting.  Highcharts Stock v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highstock 4.2.3.  Bug fixes Fixed #5008, failure on gaps in navigator series under certain conditions.  Highcharts Stock v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highstock 4.2.2.Added new option to flag series, onKey, to configure what key the flag should be placed on. Closes #4873.  Bug fixes Fixed #4907, data grouping didn't give correct distance to points immediately outside the plot area.Fixed #4922, range series didn't work with compare mode.Fixed #4926, axis breaks on Y axis failed.Fixed #4935, error with shifting multiple series in edge case.  Highcharts Stock v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highstock 4.2.0.  Bug fixes Fixed #4798, single pixel from range selector input visible on chart border.Fixed #951, compare not displaying a graph when first value was 0.  Highcharts Stock v2.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highstock 2.1.10.Some improvements on crosshair labels (#4722).  Bug fixes Fixed #2908, navigator xAxis sometimes covered drag handles.Fixed #1195, scrollbar breaking after hiding all series when navigator disabled.Fixed #2822, wrong column distribution on ordinal axis in a multi-series chart if the series points had different spacing.Fixed #3238, format strings not replaced in header and footer.Fixed #3375, range selector button state was sometimes set to selected when it overlapped with other buttons.Fixed #4661, negative starting point in compare series caused series not to display.Fixed #4696, srollbars didn't work on Android in some cases.Fixed #4703, navigator window jumped back and forth while touch-dragging.  Highcharts Stock v2.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highstock 2.1.9.Added new option, rangeSelector.height, to reserve space for buttons and input.  Bug fixes Fixed #2920, dataGrouping.smoothed made graph extend to series extremes.Fixed #4501, X axis range larger than data broke the chart.Fixed #4520, JS errors on setting extremes outside the navigator's range.Fixed #4602, navigator line color was not affected by color setting.  Highcharts Stock v2.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highstock 2.1.8.Added new lang option, invalidDate, determining what to display in invalid range selector input. Closes #4384.  Bug fixes Fixed #3119, flag on first point didn't render.Fixed #4147, first column not initially shown in month view.Fixed #4324, tooltip not displayed on image flags in IE.Fixed #4335, setDataGrouping was wrong with multiple series.Fixed #4403, zones caused JS error with separate and empty navigator series.Fixed #4452, range selector did not appear after adding data.Fixed #4457, tabbing away from range selector input did not hide the input.Fixed #4466, setTitle caused overlapping title and range selector buttons.  Highcharts Stock v2.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highstock 2.1.7.  Bug fixes Fixed #3013, top X axis was not considered when placing range selector.Fixed #4226, individual line color on candlestick up-points didn't take effect.Fixed #4229, errors on scrolling on an axis containing breaks with breakSize.Fixed #4244, data labels on area range broke on JS error when labels were outside viewable area.Fixed #4285, a regression causing flags to be shaped like squares in some cases.Fixed #4314, running Axis.update caused label alignment to shift.Fixed #4317, X axis update affected the selected range.  Highcharts Stock v2.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highstock 2.1.6.  Bug fixes Fixed #1317, clipping not correctly applied to multi-pane charts when highcharts-more.js was loaded.Fixed #1417, linked ordinal axes.Fixed #4196, axis update from ordinal to non-ordinal failed.Fixed #4202, scrollbar created for empty chart.Fixed #4209, breaks crashed navigator on long series.Fixed #4252, anchor line of flags was skewed. Made all flags crisp as well as in line with tick marks of the same value.  Highcharts Stock v2.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highstock 2.1.5.Added feature, forced data grouping tied to range selector buttons. View demo.  Bug fixes Fixed #3983, plot band labels outside axis range were visible.Fixed #4042, column series disappearing if another column series is updated and data grouping enabled. Also affects series types derived from columns. Closes #4040.Fixed #4053, min and max in the navigator.xAxis options were not respected if the data exceeded the setting.Fixed issue with the range selector input boxes not being able to focus after first focusing, then clicking on the chart outside the input.  Highcharts Stock v2.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highstock 2.1.4.  Bug fixes Fixed #2998, reflow during initial series animation caused clipped chart.Fixed #3865, range selector not working in IE.Fixed #3897, point up/down colors not redrawing after updating point value.  Highcharts Stock v2.1.3 (2015-02-27) # Most issues listed under Highcharts 4.1.3 above also apply to Highstock 2.1.3.  Bug fixes Fixed #3857, issue with setExtremes and axis breaks causing Highstock scrolling not to work across breaks.  Highcharts Stock v2.1.2 (2015-02-27) # Most issues listed under Highcharts 4.1.2 above also apply to Highstock 2.1.2.  Bug fixes Fixed #3882, plot bands not displayed if they were clipped on the edge of the plot area.Fixed #3543, scrolling passed data extremes threw off navigator.  Highcharts Stock v2.1.1 (2015-02-17) #   Bug fixes Fixed #3818, ordinal axis not working.Fixed #3821, tooltip error with flags.Fixed #3816, tooltip not working after series data or extremes changed.Fixed #3817, JS errors with pies generated by highstock.js.  Highcharts Stock v2.1.0 (2015-02-16) # Most issues listed under Highcharts 4.1.0 above also apply to Highstock 2.1.0.  Bug fixes Fixed #3755, resize cursor set on scrollbar.Fixed #3706, point.color not working when series.upColor was set.Fixed #3647, missing markers in scatter chart because of auto-marker logic.Fixed #3639, flags don't shifting position after removing one in a stack.Fixed #3539, navigator outline one pixel off at the left side.Fixed #3519, markers showing outside a clipped pane.Fixed #3524, multipane plot line logic interfering with grid lines in heatmap.Fixed #3487, JS error on creating stock chart with empty series.Fixed #3451, clipped data series when changing chart size and series animation was disabled.  Highcharts Stock v2.0.4 (2014-09-02) # Most issues listed under Highcharts 4.0.4 above also apply to Highstock 2.0.4.Added buttonPosition to RangeSelector, issue #3395.Regard "startOfWeek" option in data grouping.  Bug fixes Fixed #3274, range selector not working in IExx because of issue with floats and Element.blur.Fixed #3211, stuck tooltip and crosshair when touch-panning.Fixed #3359, higher ranked time labels not showing with negative timezoneOffset.Fixed #3125, overlapping extreme X axis labels on ordinal axis in certain cases.Fixed #3339, ordinal axis crashing on updating too quickly.Fixed #3299 where Y axis labels on subsequent panes would be drawn outside the plot area when they should be inside like the first pane.  Highcharts Stock v2.0.3 (2014-07-03) # Most issues listed under Highcharts 4.0.3 above also apply to Highstock 2.0.3.Added new option, rangeSelector.allButtonsEnabled to force auto-disabled buttons on inadequate range to be clickable. Closes #2418.  Bug fixes Fixed #3150 causing error when setting dataGrouping options for flag series.Fixed #3146 causing auto alignment of axis labels to fail.Fixed #1326 causing parts of candlesticks not to print from Chrome's printing dialog.Fixed #3040 where the scrollbar would be mispositioned when setting the extremes of a chart outside the data range.Fixed #3018 causing JS errors on negative height rectangle in low-height plot area.  Highcharts Stock v2.0.0 (2014-04-22) # See the release announcement.The default design has been updated with Highstock 2, but all aspects of design can be reverted to the Highstock 1.3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts Stock v1.3.10 (2014-03-10) # Most issues listed under Highcharts 3.0.10 above also apply to Highstock 1.3.10.  Bug fixes Fixed #2708 where panning on an ordinal axis containing candlesticks, OHLC or column series would cause the zoomed range to decrease.Fixed #2696 where a single point outside the visible X range would be grouped within the first data group.Fixed issue with data grouping not being reset when zooming in and multiple series were present. Closes #2692.Fixed issue with first point being left out in data grouping when grouped to an earlier time. Closes #2533.Fixed issue with percentage stacking in combination with data grouping. Closes #2445.Fixed issue with navigator not reflecting the limitations of the minRange. Closes #2618.Fixed issue with scrollbar giving the wrong results in the chart when the axis was padded with axis.max. Closes #2611.Fixed issue with compare mode breaking down when at least one series had empty data. Closes #2601.Fixed issue with candlestick not aligning with crosshairs.  Highcharts Stock v1.3.9 (2014-01-15) # Most issues listed under Highcharts 3.0.9 above also apply to Highstock 1.3.9.Highstock: Fixed regression with missing tooltip on flag series. Closes #2573.  Bug fixes Fixed broken panning in Highstock 1.3.8. Closes #2590.  Highcharts Stock v1.3.8 (2014-01-09) # Most issues listed under Highcharts 3.0.8 above also apply to Highstock 1.3.8.  Bug fixes Fixed issue with flags being clipped away when connected to the last X value. Closes #2543.Fixed scrollbar issue with low precision and sometimes the scrollbar not moving at all when it was too small. Closes #1468.Fixed issue with adding the first series dynamically to Highstock when the range selector was enabled. Closes #624.Fixed issue with selected state range selector button not reflecting the real selection in exported charts. Closes #2458.Fixed issue with the navigator not spanning the full width of the main data when the base series did not fill it. Closes #2436.Fixed issue with non-sync data grouping on ordinal axis when X distribution differs. Closes #2416.Fixed regression with data grouping getting stuck when zooming in. Closes #2110.Fixed issue with ordinal axis and selected range being normalized to selected button even when time span doesn't allow it. Closes #2290.Fixed issue with range selector inputs not allowing to set date to the actual data extreme when the extreme had higher precision of the input format. Closes #2438.  Highcharts Stock v1.3.7 (2013-10-24) # Most issues listed under Highcharts 3.0.7 above also apply to Highstock 1.3.7.Added options to control the size of range selector input boxes, Closes #2353.Enabled data grouping by default on navigator series, so that turning off data grouping in the main series doesn't automatically turn it off in the navigator.  Bug fixes Fixed issue with scrollbar never going fully back to the axis max after clicking the scrollbar buttons. Closes #2293.Fixed regression where series got truncated after hiding another series i a chart with data grouping enabled. Closes #2373.Fixed issue with scatter points showing on the edge of the chart and taking up an ordinal position even when they are well outside the axis range. Closes #2342.Fixed problems with panning or scrolling back to max last value when the navigator was previously zoomed to an earlier time span. Closes #2341.  Highcharts Stock v1.3.6 (2013-10-04) # Most issues listed under Highcharts 3.0.6 above also apply to Highstock 1.3.6.Added upLineColor option to candlestick.  Bug fixes Fixed Highstock issue with stacks not being properly cleared when moving between non-grouped and grouped data, leaving artefacts in a stacked area chart. Closes #1651.Fixed issue with min and max on the navigator X axis not being settable. Closes #2277.Fixed Highstock issue with the axis maximum changing when dragging the handle to change the axis minium, and vice versa. Closes #2163.Fixed Highstock error messages when initiating a chart with set X axis min and max and empty series data. Closes #2238.Fixed Highstock issue where data grouping would stick and be applied when not necessary after showing a time range where it was necessary. Closes #2110.Fixed Highstock issue with tooltips displaying for points outside the X axis range and crosshairs displaying in the wrong position. Closes #1149.Fixed issue in Standalone Framework where event were triggered in reversed directions, causing JS errors in Highstock. Closes #2220.Fixed Highstock issue with flags not being correctly positioned on an axis if the X axis line width is zero. Closes #2032.Fixed Highstock issue with flags showing on the edge of the zoomed area on ordinal axes. Closes #2198.Fixed Highstock issue with fake columns appearing just outside the plot area on an ordinal axis. Closes #1260.  Highcharts Stock v1.3.5 (2013-08-23) # Most issues listed under Highcharts 3.0.5 above also apply to Highstock 1.3.5.Disables range selector buttons which range is below the X axis automatic or explicit minimum range.Make sure Highstock zoomed range is moving at least one pixel when clicking scrollbar buttons. Closes #1716.Improved range selector buttons by rendering them disabled when the associated range is not available. Closes #2050.  Bug fixes Fixed Highstock issue with range selector buttons becoming unselected after scrolling and panning. Highcharts now attempts to keep the range selector button pressed even in ordinal axes, as long as it is scrolling within a relatively linear-scaled area. Closes #2041.Fixed Highstock issue with the Y axis tick label not being shown when there is only one singe value and one tick. Closes #2100.  Highcharts Stock v1.3.4 (2013-08-02) # Most issues listed under Highcharts 3.0.4 above also apply to Highstock 1.3.4.  Bug fixes Fixed Highstock regressen with column grouping not working across Y axes on either side of the chart. Closes #2086.Fixed Highstock regression after fixing #460, where animating candlestick would give JS errors if it had no whiskers before. Closes #2094.Fixed Highstock regression on adding an empty series next to a series with data grouping enabled. Closes #2090.  Highcharts Stock v1.3.3 (2013-07-31) # Most issues listed under Highcharts 3.0.3 above also apply to Highstock 1.3.3.Implemented shadow option for candlesticks. Closes #1955.Reorganized and improved link between scroller and its data. It now allows the base series to be added async. Related to #624.New default value for scroller.liveRedraw to prevent redrawing the chart while scrolling the navigator on slower mobile devices. Closes #1926.Added new Highstock option, rangeSelector.inputDateParser.  Bug fixes Fixed #2068 where Highstock export failed with navigator disabled specifically for the export.Fixed JS errors in Highstock when resizing a window after a chart's container is hidden. Closes #1998.Fixed error message in Highstock. Closes #872.Fixed Highstock issue with range selector button becoming unselected when updating data. Closes #690.Fixed Highstock issue with range selector buttons not responding to hover in IE9 and IE10. Closes #667.Fixed Highstock issue with columns in different panes reserving space for eachother. Stack groups are now tied to the Y axis. Closes #642.Fixed Highstock issue where panning fully to the right didn't dock the zoomed area. Made the sticking more tolerant. Closes #570.Fixed crosshairs position when series.compare is set. Closes #1205.Fixed Highstock issue with long series being grouped and short series not being grouped. Closes #1634.Fixed Highstock issue with navigator handles disappearing when zooming on hidden data set. Closes #1946.Fixed Highstock issue with gapSize and switching from ordinal to non-ordinal axis. Closes #1794.Fixed issue with dynamically added events being removed from axis after Axis.update. In Highstock, this caused the scrollbar not to be updated to base axis zooming after running setCategories. Closes #1842.Fixed issue with running setCompare when the compare option was initially unset. The setCompare method now also works on the Navigator yAxis. Closes #1891.Fixed Highstock issue on touch devices where pinch zooming a chart with multiple panes would result in the lower pane moving up to the top of the chart. Closes #1701.Fixed "Invalid date" appearing in range selector input when opening date was 0. Related to #1878.Fixed Highstock issue with changeDecimals of 0 not taking effect. Closes #1904.Fixed issue with extra lines in the middle of candlesticks when open values are equal to high values. Closes #460.Fixed Highstock issue with JavaScript errors and disappearing charts on scrollbar click when there is only one point present in the chart. Closes #1851.  Highcharts Stock v1.3.2 (2013-06-05) # Most issues listed under Highcharts 3.0.2 above also apply to Highstock 1.3.2.Additional fix in Highstock to ensure fixed scrollbar width when dragging scrollbar.Added information on DOM event to setExtremes handlers from navigator in Highstock. Closes #1838.  Bug fixes Fixed Highstock issue with updating zoomed range by the range selector when all series are hidden. Closes #1568.Fixed Highstock issue with mispositioned xAxis when a floating legend was present. Closes #1816.Fixed issue in Highstock where data labels on the navigator would cover the navigator handles and shades. Closes #1839.Fixed Highstock errors with two points with the same X value. Closes #1588.Fixed Highstock regression with scatter series not displayed. Closes #1853.Fixed Highstock issue with wrong up day calculation in OHLC and candlestick. Reverts the fix for #1395. After discussion among our users, there seems to be a consensus that an up day is a day where the close value is higher than the open value. As opposed to a day where the close value is higher than the previous trade day's close value. The functionality is now reverted to what it was before. Closes #1489.  Highcharts Stock v1.3.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.Made loading mask use the current chart size, not the initial one. #1601.  Bug fixes Fixed Highstock issue with OHLC and candlestick charts on logarithmic Y axis. #1697.Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed Highstock issue with flag image backgrounds changing size after panning in and out of view. #1630.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed Highstock 1.3 issue in Firefox where the page would scroll all the way up when clicking the range selector inputs. #1645.Fixed issue with unsynchronized data grouping when one series is shorter than the other on an ordinal axis. #1675.Fixed Highstock issue with columns and derived series types being cut off on an ordinal axis. #988.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highstock regression with disappearing points for data prior to 1970 on an ordinal axis. #1666.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts Stock v1.3.0 (2013-03-22) # Highstock 1.3 is built on Highcharts 3.0, and shares the same new features for cartesian series types. See the release announcement for 3.0.  Highcharts Stock v1.2.5 (2012-12-19) # Applied fixes for Highcharts Basic version 2.3.5.Added scrollbar.minWidth option in Highstock. #1246.  Bug fixes Fixed JS error on quickly scrolling a chart with image markers. #1390.Fixed issue with wrong Y axis min/max detection on updated OHLC points. Partially solves #1374.Fixed issue when adding points to hidden OHLC or candlestick series. #1377.Fixed issue with zoomed range increasing when moving the range without resizing it. #1370.Fixed issue with Exporting dropdown menu being covered by the range selector inputs.Made the range selector inputs visible in exported charts. Added rangeSelector.inputPosition option.Fixed Highstock issue with YTD button when not using UTC. #941.Fixed Highstock issue with unresponsive range selector buttons by applying clipping to the mouse tracker. #484.  Highcharts Stock v1.2.4 (2012-10-08) #   Bug fixes Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.Fixed regression with pie charts not working when loading highstock.js. #1284.  Highcharts Stock v1.2.3 (2012-10-04) # Refactored data label alignment logic for better maintainability. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Highstock: Fixed buggy navigator when point distribution is smaller than minRange. #1056.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed JS error on moving reset button in Highstock. #1278.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed JS error message in Highstock when destroying a chart after zoom. #1267.Fixed regression with plotOptions.series.dataGrouping not being respected since Highstock 1.2. #1228.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed JS error on rendering a Highstock chart with an empty series array.Fixed Highstock issue where the reset zoom button would not show when the navigator and rangeSelector were hidden, and the scrollbar was visible. Related to #979.Fixed issue with stacks becoming inverted after update, caused by recursive redrawing. #1119.Fixed issue with tooltip animation timer running constantly instead of only when the tooltip is moving.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts Stock v1.2.2 (2012-08-31) # Added demonstration of async data loading in Highstock.Added support for rotation of text when useHTML = true in modern browsers. #916.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.Worked on zoomType for stock charts, allowing the reset button to work more intuitively (#979).  Bug fixes Fixed issue with IE7 trying to load "ew-resize" when dragging the scrollbar in Highstock.Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. #1209.Fixed issue where flags on an X axis with an offset, height or top option defined, were not placed correctly on the axis.Fixed issue with data labels appearing outside plot area on initial load.Fixed 1.2 regression regarding unstable sorting in Chrome. #337.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts Stock v1.2.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts Stock v1.2.0 (2012-08-24) # Added range series types: area range, area spline range and column range.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.6 (2012-08-24) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. #1027.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. #864.Worked around compatibility issue with jQuery 1.8 preview.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Added scrolling for the legend. Added legend.navigation options set.Removed warnings on accessing layerX and layerY in Chrome.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.Updated fix for #608 to work around JS error in Firefox.Prevented trying to set extremes on empty axes when using selection zoom. #859. #906.Don't create multiple title nodes on subsequently setting attr title. #891.Worked around issue with tooltips for stacked bar chart were not visible in IE7. #863.Added smooth animation when adding multiple points. #860.Changed zIndex on the range selector buttons in order for the tooltip to show above them. #852.Prevented error on exporting in Prototype by setting default border radius for data labels to 0. #853.Adding enctype to the exporting post to allow it to work in HTTPS in Firefox. #839.Set xAxis.labels.overflow option to null by default in Highcharts, while 'justify' in Stock charts only. #841.Allow the tooltip and the point hover state to survive a chart redraw. #349.Worked on data labels for range series.  Bug fixes Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. #1021.Fixed issues with grouped data points not being destroyed after zooming on Y axis only. #622.Fixed error message in Firefox when using jQuery UI datepicker against range selector inputs. #1020.Fixed stuck tooltip, crosshairs and state marker after zooming in Highstock. #1003.Fixed JS errors in Highstock when trying to pan a chart with no series. #1017.Fixed JS error on quickly changing range selection in Highstock in column charts. #1004.Fixed issue with size detection of rotated text in exported charts legacy IE. #997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. #4. #992.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. #974.Fixed JS error on setting categories with fewer items before the chart was redrawn. #970.Fixed bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed issue in protofy branch that choked on setting extremes in Highstock.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.Fixed issue with stack columns' position after redrawing chart. #936.Fixed issue where a line with lineWidth of 0 wouldn't show in hover mode. #940.Fixed issue with lang.decimalPoint option not being applied to axis labels. #939.Fixed float rounding error that caused extra tick position on logarithmic Y axes. #934.Fixed issue with alignTicks not being respected after a chart redraw. #842.Fixed JS error when adding points to a series before redraw. #927.Fixed JS error message on running Axis.setTitle before axis is first rendered. #922.Fixed NaN in attributes in export in Firefox 3.5. #912.Fixed test size detection bug in bar charts with line-broken labels. #909. #882.Fixed issues with setData for pies. #542.Fixed error message on setSize without navigator in Highstock. #904.Fixed Highstock error on accessing Navigator series.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with scrollbar without navigator didn't respond to Chart.setSize. Partial fix for #955.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed errors and crashes on resize. #905.Fixed so stack totals are updated after point.update. #787.Fixed issue with position of stack total labels. #506 and #516.Fixed error on forced grouped series with no data. #885.Fixed problem with test size detection when rendering a chart within a container with an inherited display property. #883.Fixed problem with chart.click events firing after selection. #370.Fixed issue with wrong tooltip to point binding on bar charts containing null values. #833.Fixed problem with flags visible at the end of graph when zoomed off screen. #847.Fixed problem with range selector buttons not becoming unselected when clicking a new button. This happened only when the actual range wasn't changed because the buttons spanned a too wide range. #851.  Highcharts Stock v1.1.5 (2012-03-15) # Added feature for the first and last x axis label to stay within the plot area, or be hidden if there is no room.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.4 (2012-02-15) # Added temporary workaround for text rendering bug in Chrome 18 Beta.Added support for setting height in chart.setSize().  Bug fixes Fixed issue with Navigator not responding to selection zoom.  Highcharts Stock v1.1.3 (2012-02-03) #   Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.1.2 (2011-12-23) #   Bug fixes Fixed regression bug from 1.1.1 where touch events were not captured in iOS.  Highcharts Stock v1.1.1 (2011-12-22) # Made navigator.xAxis.ordinal inherit xAxis.ordinal.  Bug fixes Fixed display bug with ordinal axes in Chrome 16.  Highcharts Stock v1.1.0 (2011-12-14) # Added ordinal axis option for displaying non-linear data without gaps, typically intraday data withiout gaps for nights and weekends or daily data without gaps for weekends.Added a few advanced options for axis and legend object.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.2 (2011-11-08) #   Bug fixes Fixed compatibility issue with jQuery 1.7.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.1 (2011-10-25) # Added series.compare option to compare the development of values.  Bug fixes Fixed error on chart.addSeries.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.0 (2011-10-18) # First release.Highcharts Maps  Highcharts Maps v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Maps 12.2.0.  Highcharts Maps v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Maps 12.1.2.  Highcharts Maps v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Maps 12.1.1.  Bug fixes Fixed #17192, Proj4 threw an error, coordinates must be finite numbers, with certain combinations of Highcharts Maps and other charts in the same page..  Highcharts Maps v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Maps 12.1.0.  Highcharts Maps v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Maps 12.0.2.  Highcharts Maps v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Maps 12.0.1.  Highcharts Maps v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Maps 12.0.0.  Bug fixes Prevent mousewheel capture on maps if they are all zoomed out, so that the user can scroll normally down the page.Fixed #21546, specific color axis ranges broke map drilldown.  Highcharts Maps v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Maps 11.4.8.  Bug fixes Fixed #21581, the credits.href setting wasn't respected in Map charts.  Highcharts Maps v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Maps 11.4.7.  Highcharts Maps v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Maps 11.4.6.  Highcharts Maps v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Maps 11.4.5.  Highcharts Maps v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Maps 11.4.4.  Highcharts Maps v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Maps v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Maps 11.4.2.  Bug fixes Fixed #13049, hovering reordered DOM elements in maps and heatmaps, causing problems for screen readers.Fixed #20886, data labels mouse event tracking was broken after drill up.Fixed #20948, bubble legend created unexpected ticks in map charts.Fixed #20857, map zooming animation was broken after drilling down.  Highcharts Maps v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Maps 11.4.1.  Highcharts Maps v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Maps 11.4.0.  Bug fixes Fixed #20476, dataLabels were overlapping map navigation buttons.Fixed #20441, point visibility was reverted after interaction with a map.Fixed #18857, map animated from top left on any series.update.Fixed #20231, if mapPoint.name was given, point.name didn't take effect.  Highcharts Maps v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Maps 11.3.0.  Bug fixes Fixed #19551, patterns got scaled with their assigned map areas causing inconsistent rendering.Fixed #20086, a regression where hovering over mapbubble series points would show the tooltip for another point.Fixed #19676, after drilling up in certain cases the map zoom was inconsistent compared with the initial zoom.  Highcharts Maps v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Maps 11.2.0.Added support for GeoHeatmap interpolation.  Bug fixes Fixed #19373, map drilldown animation was impossible to disable.Fixed #19323, setData on Map Series threw an error with the PatternFill module.Fixed #19190, prevented map display error on drag out of valid coordinates.Fixed #19175, a regression causing selected points being lost after map zooming or panning.  Highcharts Maps v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Maps 11.1.0.Added support for tiled web maps.  Bug fixes Fixed #18017, animation should not change the positions of map points while quick scrolling on the touchpad.Fixed #18961, map drilldown didn't work with multiple series.  Highcharts Maps v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Maps 11.0.1.  Bug fixes Fixed #18925, map drill down was broken for GeoJSON maps.  Highcharts Maps v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Maps 11.0.0.Added geo heatmap series type for showing concentration of values on a geo map.Added flow map series type for showing flows or movements between points on a map.  Bug fixes Fixed #18647, when there was a single data point in the TileMap series, circle and diamond shape tiles didn't render properly.Fixed #18004 and #17261, map data labels were misplaced for some shapes.Fixed #18074, the Draggable Points module didn't work for mappoint series.Fixed #18542, panning in zoomed-in Orthographic projection didn't work.  Highcharts Maps v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Maps 10.3.3.Added new linecap option for maps.Added new option, mapView.fitToGeometry.  Bug fixes Fixed #18137, border width was not resetting after hover.Fixed #18166, border or line width set on point was not scaling on zoom in map and mapline series.Fixed #17925, zooming issues with Maps on mobile.Fixed #17238, panning on y axis was inverted in maps using custom SVG path as map data.  Highcharts Maps v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Maps 10.3.2.  Bug fixes Fixed #17355, keyboard navigation for map zooming and panning no longer worked.Fixed #18012, custom colorKey didn't work on mapbubble series.Fixed #17918, zooming to insets in TopoJSON maps was not working.Fixed #17734, offline exporting to PDF failed for maps.Fixed #17907, a regression causing data labels on the far side on an orthographic world projection to stick.  Highcharts Maps v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Maps 10.3.0.Better default value for legend.valueDecimals for color axis with data classes. Now it preserves the decimals of the from and to settings by default.Improved the UX on legend items when using a color axis with data classes. Hovering now renders other map areas as inactive, and clicking the legend item renders them as null rather than completely hiding them.  Highcharts Maps v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Maps 10.2.1.  Highcharts Maps v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Maps 10.2.0.  Bug fixes Fixed #17105, issues with mapline.lineWidth and map.borderWidth options and state settings.Fixed #17279, mappoint fill color didn't work with NaN values.Fixed #17012, toggling allAreas did not correctly update the bounds of the map.Fixed #17013, map view did not fit correctly to bounds after running Series.setData.Fixed #17205, the marker cluster of coinciding points was causing an infinite loop on click.  Highcharts Maps v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Maps 10.1.0.Added official support and API for the Spider Map (mapbubble series with line). See #17023.  Bug fixes Fixed #16598, addPoint() not adding point to map.Fixed #17139, chart.proj4 option didn't work.Fixed missing accessible description of map titles with TopoJSON maps.Fixed #17057, addPoint() wasn't working correctly after series.update({}, false);.Fixed #17082, zooming out to zoom level 0 didn't work (the view was bouncing back).Fixed #16782, point's joinBy was wrong when updating data with an unsorted order.  Highcharts Maps v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Maps 10.0.0.Added native support for TopoJSON in the chart.map and series.mapData options.Moved existing translation functions from Chart to MapView, and added new functions MapView.pixelsToLonLat and MapView.lonLatToPixels. Added lon and lat properties directly to mouse event arguments.Added new map series option, map.affectsMapView.  Bug fixes Default joinBy added for mapbubble.Fixed #16722, container size preventing map rotation.Fixed #16896, hovering over mapbubble with shared tooltip caused an error.Fixed #15782, export hamburger icon hiding behind mapNavButtons.Fixed #15374, maps series.joinBy update didn't work.Fixed #11636, updating series.mapData didn't work correctly.  Highcharts Maps v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Maps 9.3.3.  Highcharts Maps v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Maps 9.3.2.  Bug fixes Fixed #14267, tilemap.tileShape set to square threw an error into the console.Fixed #16549, a regression causing arrow navigation in map-like series types not to work.  Highcharts Maps v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Maps 9.3.1.Added LambertConformalConic projection, commonly used in national maps.  Bug fixes Fixed a regression in Highcharts Maps, geographic maps were not visible in exported images.Fixed #16541, the solid-gauge module was generating error with Maps.Fixed #16534, mappoint point didn't update its position when zooming.  Highcharts Maps v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Maps 9.3.0.Improved map geometry by removing axes and implementing a MapView class. The MapView includes, currently as a beta feature, client side projection. Part of the improved geometry is the new series.data.geometry option to make it easier working with GeoJSON.  Upgrade notes Programmatically zooming the map by running Axis.setExtremes() no longer works. Instead, use MapView.setView.  Bug fixes Fixed #15656, resolved broken mouse scroll on some browsers.  Highcharts Maps v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Maps 9.2.2.  Highcharts Maps v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Maps 9.2.1.  Highcharts Maps v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Maps 9.2.0.  Highcharts Maps v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Maps 9.1.2.  Highcharts Maps v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Maps 9.1.1.  Highcharts Maps v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Maps 9.1.0.  Bug fixes Fixed #15605, trackpad zooming in maps was too fast and unpredictable.Fixed #15406, responsive rule broke map navigation.  Highcharts Maps v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Maps 9.0.1.  Highcharts Maps v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Maps 9.0.0.  Bug fixes Fixed #13981, no map displayed when using marker clusters and empty data array.Fixed #14343, cluster marker image animation had wrong position.  Highcharts Maps v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Maps 8.2.2.  Highcharts Maps v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Maps 8.2.0.  Bug fixes Fixed #13302, marker cluster image symbol not displayed after zooming.  Highcharts Maps v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Maps 8.1.2.  Bug fixes Fixed #13426, reset zoom button appeared while panning maps and the chart was not zoomed in.  Highcharts Maps v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Maps 8.1.1.  Bug fixes Fixed #13195, tooltip was shown for points that were hidden by data classes.Fixed #9424, map navigation zoom buttons had [Object object] in DOM styles.  Highcharts Maps v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Maps 8.1.0.  Bug fixes Fixed regression in vertical panning.  Highcharts Maps v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highmaps 8.0.4.  Highcharts Maps v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highmaps 8.0.3.  Highcharts Maps v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highmaps 8.0.2.  Highcharts Maps v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highmaps 8.0.1.Added new option, chart.proj4, allowing the Proj4 library to be used without being available in the window context.  Bug fixes Fixed issue with map navigation buttons not being aligned to the plot area on initial rendering. See #12776.  Highcharts Maps v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highmaps 8.0.0.Added marker clusters  for scatter and map point series.  Highcharts Maps v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highmaps 7.2.2.  Highcharts Maps v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highmaps 7.2.1.  Bug fixes Fixed #12231, loading Highmaps as a module and using color axis thrown a reference error.Fixed #11924, using the addColorAxis method in Highmaps hid the map.  Highcharts Maps v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highmaps 7.2.0.  Bug fixes Fixed #11448, bubble legend in Highmaps caused unexpected grid lines.  Highcharts Maps v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highmaps 7.1.3.  Highcharts Maps v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highmaps 7.1.2.  Bug fixes Minor speed improvement for maps.Fixed #10617, a regression with updating series.  Highcharts Maps v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highmaps 7.1.1.  Highcharts Maps v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highmaps 7.1.0.  Bug fixes Fixed #10049, a regression causing data labels on null points not to show.Fixed #10057, setting borderWidth to 0 did not work.  Highcharts Maps v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highmaps 7.0.3.  Highcharts Maps v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highmaps 7.0.2.  Highcharts Maps v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highmaps 7.0.1.  Highcharts Maps v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highmaps 7.0.0.  Highcharts Maps v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highmaps 6.2.0.  Highcharts Maps v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highmaps 6.1.4.  Highcharts Maps v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Maps v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highmaps 6.1.2.  Highcharts Maps v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highmaps 6.1.1.  Bug fixes Fixed #7091, map drilldown failed after pinch zooming.Fixed #8442, working around a Chrome regression causing map strokes to draw too wide after animation.  Highcharts Maps v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highmaps 6.1.0.  Bug fixes Fixed #5837, null color was set by attribute in styled mode.  Highcharts Maps v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highmaps 6.0.7.  Highcharts Maps v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highmaps 6.0.6.  Highcharts Maps v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highmaps 6.0.5.  Highcharts Maps v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highmaps 6.0.4.  Bug fixes Fixed #7490, color axis marker remained when legend was disabled.Fixed #6242, issue where disabling the legend caused stray colorAxis ticks.  Highcharts Maps v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highmaps 6.0.3.  Bug fixes Fixed #7313, data labels didn't work with mapbubble series.  Highcharts Maps v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highmaps 6.0.2.  Highcharts Maps v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highmaps 6.0.1.  Highcharts Maps v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highmaps 6.0.0.Added new series type, tile maps, supporting honeycomb, diamond and circle layout.  Bug fixes Fixed #7166, map area borders got wider during animation after mouseover.  Highcharts Maps v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highmaps 5.0.14.  Highcharts Maps v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highmaps 5.0.13.  Bug fixes Fixed #5202, flickering on unhovering areas even when hover state was disabled. Removed the maps-specific color animation since it is now handled by animation the core setState.Fixed #5295, empty first series broke map.Fixed #5319, wrong label position for Netherlands in official map.Fixed issue with redundant labels on color axis containing data classes.  Highcharts Maps v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highmaps 5.0.12.  Highcharts Maps v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highmaps 5.0.11.  Bug fixes Fixed #5676, regression causing nullInteraction not to take effect.Fixed #6632, error when updating color axis with data classes.  Highcharts Maps v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highmaps 5.0.10.  Highcharts Maps v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Maps v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highmaps 5.0.8.New advanced demo for map pies.  Bug fixes Fixed #6025, color axis got misplaced after update then resizing chart.Fixed #6287, regression with panning on countries close to the edge.Fixed #6369, mapNavigation options were not applied on chart.update.  Highcharts Maps v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highmaps 5.0.7.  Bug fixes Fixed #4816, overlapped labels on color axis in legend.Fixed #6069, data class color was not properly represented in the tooltip in styled mode.Fixed #6134, a regression causing Series.addPoint to fail on map series.Fixed #6209, colorAxis range calculated from first series only.  Highcharts Maps v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highmaps 5.0.6.  Bug fixes Fixed #6049, colorAxis colors did not work in styled mode.  Highcharts Maps v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highmaps 5.0.5.  Bug fixes Fixed #6030, hover color not removed if using named colors.  Highcharts Maps v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highmaps 5.0.4.  Bug fixes Fixed #5991, jerky animation on map zoom.  Highcharts Maps v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highmaps 5.0.3.  Bug fixes Fixed #5881, a regression with colorAxis.update in v5.0.Fixed null-point issue with maplines.  Highcharts Maps v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Highcharts Maps v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Bug fixes Fixed #5785, map area class names only had the first space in the name replaced by a hyphen.  Highcharts Maps v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highmaps 5.0.0.Simplified the map configuration by setting a general chart.map option and allowing tuples in the data description.Added new option, chart.mapTransforms.  Highcharts Maps v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highmaps 4.2.7.Added new option, colorAxis.showInLegend.Added new option, series.nullInteraction to allow tooltips and mouse events on null points.  Bug fixes Fixed #5201, lineWidth ignored for mapline in IE11.Fixed #5685, axis padding was not included when zooming out.Fixed #5694, issue with line width on latlon mappoints.  Highcharts Maps v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highmaps 4.2.6.  Bug fixes Fixed #5011, mousewheel zoom also scrolled page.  Highcharts Maps v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highmaps 4.2.5.  Bug fixes Fixed #5050, setData with allAreas could cause SVG errors.Fixed #5249, doubleClickZoomTo caused error on null points.Fixed #5277, a regression causing maps to fail in IE8.  Highcharts Maps v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highmaps 4.2.4.Added mapNavigation.mouseWheelSensitivity option for zooming.  Bug fixes Fixed #4505, errors from crosshairs while dragging after zooming.Fixed #4740, realign zoom buttons after chart is rendered.Fixed #4981, dashStyle didn't work on IE.  Highcharts Maps v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highmaps 4.2.3.  Highcharts Maps v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highmaps 4.2.2.  Bug fixes Fixed #4821, setOptions not working with map credits.Fixed #4840, credits title set to undefined when map module is included.  Highcharts Maps v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highmaps 4.2.0.  Highcharts Maps v1.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highmaps 1.1.10.  Highcharts Maps v1.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highmaps 1.1.9.  Bug fixes Fixed issue with double clicking map zoom buttons. Closes #4444.  Highcharts Maps v1.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highmaps 1.1.8.  Bug fixes Fixed #4362, hidden data labels caused neighbouring areas to not receive mouse events.Fixed #4397, point color option should always take precedence over color axis.Fixed #4409, tooltips not working properly in combination maps.Fixed #4464, error on updating dataClasses of colorAxis when the legend was disabled.Fixed issue with animation not running on point.update of map areas.  Highcharts Maps v1.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highmaps 1.1.7.  Highcharts Maps v1.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highmaps 1.1.6.  Bug fixes Fixed #3207, issue with updating color axis with data classes.Fixed JavaScript errors on drilling when graphic is missing.  Highcharts Maps v1.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highmaps 1.1.5.Force correct aspect ratio when adding a "map" series without the Map constructor.  Bug fixes Fixed #3894, a regression causing setData on maps to fail.  Highcharts Maps v1.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highmaps 1.1.4.  Bug fixes Fixed #3917, wrong series Z index when combined with 3D module.  Highcharts Maps v1.1.2 (2015-02-27) # Some issues listed under Highcharts 4.1.2 above also apply to Highmaps 1.1.2.  Bug fixes Fixed #3871, marker for colorAxis not displaying in Highmaps 1.1.  Highcharts Maps v1.1.0 (2015-02-16) # Some issues listed under Highcharts 4.1.0 above also apply to Highmaps 1.1.0.Added hover with full copyright text to map credits.  Bug fixes Fixed #3789, dragging failed after zooming and setting size.Fixed #3613, problems panning a map when zoomed in close to its edges.Fixed #3627, map not repositioning on chart reflow.Fixed #3218, border gets wider on zooming in IE11.Fixed issue where removing point would not cause view to reset.Fixed #3314, negative coordinates in GeoJSON causing the map to be misaligned or drawn outside the plot area.Fixed #3190, reversed color axis displaying the wrong gradient.  Highcharts Maps v1.0.4 (2014-09-02) # Some issues listed under Highcharts 4.0.4 above also apply to Highmaps 1.0.4.Added true color animation for Highmaps and heat maps, so fills and strokes are animatable through SVGElement.animate. Closes #3311.  Bug fixes Fixed #3360 incorrect ticks on the colorAxis.Fixed #3209, the first map area missing when joinBy was null.Fixed #3219, wrong color when only one data class on color axis.  Highcharts Maps v1.0.1 (2014-06-12) # First release of Highmaps.Highcharts Gantt  Highcharts Gantt v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Gantt 12.2.0.  Highcharts Gantt v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Gantt 12.1.2.  Highcharts Gantt v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Gantt 12.1.1.  Highcharts Gantt v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Gantt 12.1.0.  Highcharts Gantt v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Gantt 12.0.2.  Highcharts Gantt v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Gantt 12.0.1.  Highcharts Gantt v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Gantt 12.0.0.  Bug fixes Fixed, #17738, gantt series did not support array-based points.  Highcharts Gantt v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Gantt 11.4.8.  Highcharts Gantt v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Gantt 11.4.7.  Highcharts Gantt v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Gantt 11.4.6.  Highcharts Gantt v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Gantt 11.4.5.  Highcharts Gantt v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Gantt 11.4.4.  Highcharts Gantt v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Gantt v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Gantt 11.4.2.  Bug fixes Fixed #20940, rangeSelector wasn't a part of fixed elements in Gantt.  Highcharts Gantt v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Gantt 11.4.1.  Highcharts Gantt v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Gantt 11.4.0.  Highcharts Gantt v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Gantt 11.3.0.Changed the default color of the Gantt axis grid, to a more lightweight presence. The associated options are xAxis.grid.borderColor and yAxis.grid.borderColor.Added width to data label in x-range and gantt series, allowing implementers to easily apply word-wrap or ellipsis within the tasks. See #17148.Added support for grid.columns on tree-grid axes.  Bug fixes Fixed #16626, secondary grid axis ignored xAxis.units set.Fixed #19845, grid axes had open-ended cells in some cases.Fixed #19657, grid axis column headers displayed inconsistently depending on how many rows were in the chart.Fixed #15196, gantt chart threw error when nodes in the data set were orphaned.  Highcharts Gantt v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Gantt 11.2.0.Added new option, gantt.connectors.radius, to allow curved connectors between task dependencies.  Highcharts Gantt v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Gantt 11.1.0.  Bug fixes Fixed #18947, better colors for arrows and top-level task title in dark mode in styled mode Gantt.  Highcharts Gantt v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Gantt 11.0.1.  Bug fixes Fixed #18945, dragging point to row with index of 0 didn't work in gantt/x-range.  Highcharts Gantt v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Gantt 11.0.0.  Bug fixes Fixed #18435, tooltip was misplaced outside the plot area when zooming in gantt and x-range series.  Highcharts Gantt v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Gantt 10.3.3.  Highcharts Gantt v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Gantt 10.3.2.  Bug fixes Fixed #17833, all gantt series connectors weren't redrawn/deleted when updating them.  Highcharts Gantt v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Gantt 10.3.0.  Highcharts Gantt v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Gantt 10.2.1.  Highcharts Gantt v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Gantt 10.2.0.  Highcharts Gantt v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Gantt 10.1.0.  Bug fixes Fixed #16550, the week dateFormat was not calculated correctly when useUTC: false.  Highcharts Gantt v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Gantt 10.0.0.  Bug fixes Fixed #16673, label icons in TreeGrid were not destroyed after an update.Fixed #16439, ticks were missing while scrolling the grid axis.  Highcharts Gantt v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Gantt v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Gantt 9.3.2.  Highcharts Gantt v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Gantt 9.3.1.  Highcharts Gantt v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Gantt 9.3.0.  Highcharts Gantt v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Gantt 9.2.2.  Highcharts Gantt v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Gantt 9.2.1.  Highcharts Gantt v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Gantt 9.2.0.  Bug fixes Fixed #15453, gantt grid axis tick labels disappeared when scrolling.Fixed #15896, scrollbar did not work with gantt.  Highcharts Gantt v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Gantt 9.1.2.  Highcharts Gantt v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Gantt 9.1.1.  Bug fixes Fixed #15742, rightmost gantt chart grid axis tick labels did not get shortened correctly.Fixed #15692, gantt chart grid axis did not update from months to years when resizing down.Fixed #15661, options got mutated when creating map or gantt chart.Fixed #15664, updating lineColor and lineWidth of gantt chart outer axis border did not work.  Highcharts Gantt v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Gantt 9.1.0.  Bug fixes Fixed #14904, drop-down icon on tree grid child disappearing after two clicks on parent.  Highcharts Gantt v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Gantt 9.0.1.  Bug fixes Fixed #12691, gantt connector disappeared when a task was partially visible.  Highcharts Gantt v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Gantt 9.0.0.  Bug fixes Fixed #14868, axis labels were positioned incorrectly in non-Gantt charts when the Gantt package was imported.Fixed #14808, Gantt with scrollbar and uniqueNames threw an error.Fixed #14147, in xrange/gantt series, the tooltip wasn't centered above the point if there were more than one series in the chart.  Highcharts Gantt v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Gantt 8.2.2.  Bug fixes Fixed #14166, currentDateIndicator ignored per-chart time options, default label formatter used global dateFormat.  Highcharts Gantt v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Gantt 8.2.0.  Bug fixes Fixed #10281, yAxis label adjustment for long text.Fixed #10779, yAxis max value occurred the wrong axis rendering.Fixed #13359, more than one scrollbar were visible when grid enabled.Fixed #13376, changed the default Gantt navigator series.  Highcharts Gantt v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Gantt 8.1.2.  Bug fixes Fixed #12012, collapse not working when chart had set height.  Highcharts Gantt v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Gantt 8.1.1.  Bug fixes Fixed #13246, gantt was not initialized when no series option was provided.  Highcharts Gantt v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Gantt 8.1.0.  Bug fixes Fixed #13221, grid axis labels rendered outside the cell if the cell width was 0.Fixed #12984, Gantt tasks not being collapsed when added by chart.addSeries.  Highcharts Gantt v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highcharts Gantt 8.0.4.  Highcharts Gantt v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highcharts Gantt 8.0.3.  Highcharts Gantt v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highcharts Gantt 8.0.2.  Highcharts Gantt v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highcharts Gantt 8.0.1.  Bug fixes Fixed #12617, when collapsing a parent node in the tree grid, its child tasks were still rendered.  Highcharts Gantt v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highcharts Gantt 8.0.0.  Bug fixes Fixed #11427, in certain date ranges, single years were displayed on both rows in the grid axis.Fixed #10324, regression with xAxis.grid.cellHeight.  Highcharts Gantt v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highcharts Gantt 7.2.2.  Highcharts Gantt v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highcharts Gantt 7.2.1.  Highcharts Gantt v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highcharts Gantt 7.2.0.  Highcharts Gantt v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highcharts Gantt 7.1.3.  Bug fixes Fixed #10887, regression with Axis.update() in Treegrid axis.Fixed #10942, progress indicator was not redrawn after collapsing and expanding nodes.Fixed #10804, navigator affected the positions of the gantt dependencies negatively.  Highcharts Gantt v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highcharts Gantt 7.1.2.  Bug fixes Fixed #10570 and #10580, setData was triggered on every render, causing treegrid failure when collapsing and problems with the navigator.Fixed #10129, regression with point.collapsed in treegrid. When set to true in the options, the point could never be expanded.Fixed #10470, grid axis tampered with tick positions.Fixed #10329, removed excessive path in gantt connectors, in the simpleConnect algorithm.Fixed #10539, rounding errors in gantt data labels.  Highcharts Gantt v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highcharts Gantt 7.1.1.  Highcharts Gantt v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highcharts Gantt 7.1.0.  Bug fixes Fixed #10350, compatibilty issue with IE11 and xrange.  Highcharts Gantt v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highcharts Gantt 7.0.3.  Bug fixes Fixed #9479, treegrid addSeries compatibility.  Highcharts Gantt v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highcharts Gantt 7.0.2.  Highcharts Gantt v7.0.1 (2018-12-19) # Added built-in support for Highstock's range selector and navigator for easier navigation within Gantt charts.Most changes listed under Highcharts 7.0.1 above also apply to Highcharts Gantt 7.0.1.  Bug fixes Fixed #10176, scrollbar error when collapsed treegrid.Fixed #10211, issue with treegrid show/hide series.  Highcharts Gantt v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highcharts Gantt 7.0.0.  Bug fixes Fixed #9216, larger default width for exported Gantt charts.Fixed #9496, exporting data to CSV/XLS did not work in Gantt.  Highcharts Gantt v6.2.0 (2018-10-17) # First release of Highcharts Gantt.Highcharts Dashboards  Highcharts Dashboards v3.2.0 (2025-03-26) # DataGrid has been renamed to Grid, and the DataGrid.dataGrid factory function is deprecated. Use Grid.grid instead.Implemented a loading indicator for the DataGrid, added the showLoading and hideLoading methods to manage the indicator's visibility, closes #22225.Added support for displaying calculated values in the KPI component, including sum, average, median, max, min, count, and product. Custom formulas can also be defined. See #21559.  Bug fixes Fixed #22720, component destroy mispositioned resize buttons.Fixed #22684, connector polling restarting based on assignment.Fixed #22676, Fullscreen case-sensitive naming.Fixed #22546, Firefox support for mouseenter when dragging.Fixed issue with missing overwrite option in cell format and formatter.Fixed #22624, lang was not applied on new row item in add-component section.Fixed, the newly added chart component had incorrect options in the sidebar.Fixed the time format in the DataGrid.Fixed #22301, cells could be misaligned in multi-row headers when a horizontal scrollbar was visible.Fixed #22492, updating HighchartsComponent with the new chartConstructor did not work.Fixed #22271, highlight was not removed when dragged new component.Fixed #22207, error was return when dragged new component.Fixed #22208, the edit mode button did not reflect the state of the mode.  Highcharts Dashboards v3.1.0 (2024-12-04) # DataGrid: Improved accessibility with more granular control via config options, including ARIA live announcements on e.g. cell editing and column sorting. Read more in the new docs on accessibility.EditMode: Added confirm/cancel events on button click in the sidebar. See #22131.  Bug fixes Fixed overlapped sorting icon with long headers in Datagrid.Fixed #21955, the nested group was rendered when empty options.Fixed #21862, incorrect behavior in component editor when option path points to an array element.  Highcharts Dashboards v3.0.0 (2024-10-16) # The DataGrid has been fully rewritten, introducing new features and establishing a foundation for future enhancements and additional functionality. This release includes several breaking changes, so please refer to the Upgrade Notes below for detailed guidance before upgrading.The sidebar in editMode is now sticky and always visible when scrolling through the page.The styledMode is now disabled by default for the Highcharts Component and KPI Component.Removed formerly deprecated responsiveBreakpoints option from the API.  Upgrade notes Please refer to the DataGrid migration article before upgrading, as DataGrid is rewritten and includes several breaking changes.  Bug fixes Fixed infinite classes when editing components in the sidebar.Fixed #21269, styling errors when forcing the light mode dashboard in the dark mode system.  Highcharts Dashboards v2.3.0 (2024-08-26) # Added the possibility of setting toolbar visibility for individual components, closes #20907.Removed column aliases from DataTable, API documentation, and affected samples. Closes #21485.Added methods (getLocalRowIndex & getOriginalRowIndex) for referencing between rows of original and modified data tables.Changed the layout element in the Add component sidebar to a row and improved the look when added.Added an HTML text field in the sidebar to control and edit the content of the HTML component.Added support for the beforeParse callback in the GoogleSheetsConnector options. Closes #21235.  Bug fixes Fixed some smaller issues with the HTML component.Fixed #21615, when the useHTML was enabled, content in a cell was not rendered correctly when scrolling.Fixed #21280, it was impossible to set the component active state, so added isAcitve flag.Fixed parseDate in DataConverter was private.Fixed, added missing DataConverter type in DataConnector.Added missing utility method to the Dashboards namespace.Fixed error when trying to sync with an invisible point.  Highcharts Dashboards v2.2.0 (2024-07-02) # Added the EditMode for dashboards declared with custom HTML, allowing users to modify the components inside.Added the methods getComponentById and getComponentByCellId to the Board class. Addressing feature request #21378.Renamed onEditModeToggle to toggleEditMode.Removed the setting icon from the row toolbar.Added edit mode events. Changed the way components are updated in edit mode. See #20756.Added isStandalone option to add non-nested options in the edit mode sidebar, #20793.Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.  Bug fixes Fixed #21310, updating values in the DataGrid did not update connected components.Fixed #21189, dragging and dropping elements from the sidebar and inside the dashboard was impossible in Firefox.Removed connector name from the HTML component sidebar.Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.  Highcharts Dashboards v2.1.0 (2024-05-22) # Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.Added affectedSeriesId option to the Highcharts Component's highlight sync.Added ability to set multiple connectors for the Highcharts Component.Added a vue example with custom layout.  Bug fixes Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed issue with synchronization not being stopping during component destroy.Added error handling for rendering components in the same cell.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.Fixed #20661, dashboards were broken when used non-unique ids of cells.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v2.0.0 (2024-03-13) # Added support for custom HTML layout. The use of gui is now optional.Dashboard, and charts, are now 100% stylable via CSS instead of JavaScript configuration.Include what you need, with Dashboards Core, Layout/EditMode and DataGrid as separate scripts. dashboards-plugin is removed and no longer needed.Improved chart synchronization options, and added additional options to highlight synchronization. highlight, tooltip and crosshair can now be set separately.Improved and simplified column assignment. Moved the option from component scope to component.connector.Added support for HTML as string in the HTML Component.  Upgrade notes Dashboards Core, Layout/EditMode and DataGrid are now seperate scripts, and needs to be explicitly included whenever needed. See respective documentation articles for details.The old columnAssignment logic is no longer supported, and needs to be refactored to the new one.Responsive layout should now be specified using CSS media queries.  Bug fixes Fixed synchronization was not stopping during component destroy.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v1.3.1 (2024-03-05) # Added cloud monitoring demo.  Bug fixes Fixed the wrong length of columns in JSONConverter, when x is the same.Fixed #20557, incorrect calculation of component content height when caption is defined.Fixed #20509, wrong type declarations in Dashboards ES modules.Fixed #20445, DataGrid column headers disabling.Fixed crossfilter sync with string data.  Highcharts Dashboards v1.3.0 (2024-01-24) # Internal optimizations and minor TypeScript enhancements.  Highcharts Dashboards v1.2.1 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.  Bug fixes Fixed, it was impossible to set KPI content flex-direction.  Highcharts Dashboards v1.2.0 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.Added closing sidebar, when clicking outside the box.Added the possibility to define a custom path in columnNames for JSON connector to parse complex data.Added the affectNavigator option allowing crossfilter to affect the contents of the other navigators.Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed issue with missing rows, when datagrid visibility was switched.Fixed, it was impossible to set KPI content flex-direction.Added unmount event to component options.Added missing type for the columnName parameter.Fixed missing update position of the context menu.Fixed syncs between different lengths of arrays of series.Fixed KPI component updating when new options include chart options.Fixed d.ts files for HighchartsTypes.Fixed #20046, there was an error when adding a new chart component.Improved accessibility by changing the context menu toggle into a button.  Highcharts Dashboards v1.1.3 (2023-11-29) # Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed #20046, there was an error when adding a new chart component.  Highcharts Dashboards v1.1.2 (2023-11-08) # Added closing sidebar, when clicking outside the box.Added demo that saving and loading dashboards in localStorage.Added the settings.enabled option. Closes #19707.Disabled add component button when the cell toolbars are disabled. Added options for disabling the add component and rwd buttons.Added aria-expanded for the context menu button.  Bug fixes Improved accessibility by changing the context menu toggle into a button.Added missing type for the columnName parameter.Added unmount event to component options.Fixed undefined id in row, cell and layout.Fixed zoom syncing when min or max stays the same.  Highcharts Dashboards v1.1.1 (2023-09-21) # Added aria-expanded for the context menu button.DataTable.aliases property replaces DataTable.getColumnAliases() and DataTable.setColumnAlias().  Highcharts Dashboards v1.1.0 (2023-09-19) # Added the aria-label for the context menu button.Added cellFormatter to the dataGrid module.Added NavigatorComponent for crossfilter of a connector table.Added custom sync demo.Added events to the EditMode state.Added docs about component's sync.Added KPI Component docs as extra article.Created additional docs of the Highcharts Component.Added loading indicator which turns on for a cell until a connector is loaded.Refactored component life cycle methods.Removed scaleElements option in the HTMLComponent.Added dashboard es-modules docs.Added styledMode into KPI component.Implemented usage of connectors and sync (extremes event) for KPI component.  Bug fixes Fixed, it was impossible to change the confirmation popup close button.Fixed reference translation in function arguments of MathModifier.Fixed, dataGridOptions were not applied to the DataGrid component.Removed double resize of DataGrid.Fixed mousewheel problem in the climate demo.Fixed broken reflow in the dashboards.Applied default connector to the dragged new element.Improved the edit mode sidebars and popup design.  Highcharts Dashboards v1.0.2 (2023-08-10) # Replaced blocklist with allowlist in columnAssignment option.RangeModifier will now intersect the results of multiple ranges by default. Use the additive option to concatenate results of multiple ranges.Implemented visibility sync handler.Implemented disabling of editing of the columns, which are created by Math Modifier.Added user-defined redraw event for dashboard components.  Bug fixes Fixed whitespaces not being removed from names when using CSVConnector with firstRowAsNames enabled.Fixed bug with disabling toolbars for cell or row.Fixed insufficient waiting for loading connectors on second request.Fixed missing reference to DOM element in the dataGrid, after dragging a point.Fixed, added TextOptions to documentation, changed gui.enabled as optional.Fixed, the data grid did not resize cells properly.Improved TypeScript-support of Dashboards.Fixed, sync was not preserved when the component updated its connector.  Highcharts Dashboards v1.0.1 (2023-07-19) # Added getOptions() method that returns config of dashboard.  Bug fixes Path to icons has changed to ./gfx/dashboards-icons/.Fixed problem in dataGrid  with visible unnecessary scrollbars on Windows.Fixed links in the API that were pointing to not existing URL's.Fixed, the DataGrid component was not rendered when data was fetched though the csvURL.Improved TypeScript declarations to support classic bundles (minified and as source).Fixed some URL's and indentation error in the *.md files.  Highcharts Dashboards v1.0.0 (2023-06-29) # First release of Highcharts DashboardsHighcharts Grid  Highcharts Grid v1.0.1 (2025-03-27) #   Bug fixes Grid: Fixed the errors resulting from not supporting innerHTML editing by AST.  Highcharts Grid v1.0.0 (2025-03-25) # First release of Highcharts Grid Lite\n\nChangelogView changelog for Highcharts, Highcharts Stock, Highcharts Maps, Highcharts Gantt, Highcharts Dashboards. Highcharts Grid.
 Go to the Download page to get the latest version.Highcharts  Highcharts v12.2.0 (2025-04-07) # Added support for native color-mix. This means colors don't have to be parsed and analyzed in order to allow tweening and modification. Which means full support for CSS variables, named colors and all color definitions known to the browser. Read more in the docs.Added experimental flag, HTMLElement.useForeignObject. When true, labels with the useHTML flag are rendered inside a <foreignObject> in SVG, instead of the traditional parallel div structure.Added ESM bundles for dynamic imports. Use highcharts/esm/highcharts.js or load from our CDN.Added new options, tooltip.fixed and tooltip.position, as a simple declarative way of keeping the tooltip fixed.Added the nullInteraction option for more series types than before. Null points will now support data labels and tooltips.Added language modules for some selected languages, as well as a structure to continue building on.Added level headers in treemap as separate cells through the dataLabels.headers option. Followed up with improved layout control with the new treemap.groupPadding and treemap.nodeSizeBy options.  Bug fixes Fixed #21913, sunburst data labels got stuck in top left corner after traversing.Fixed #21972, layoutAlgorithm.splitSeries for individual packed bubble series did not work.Fixed #22233, tooltip was not prioritizing correctly when multiple scatterpoints hovered.Fixed #22235, decimal lon/lat values were not handled correctly in geoheatmaps with interpolation.Fixed #22489, column series click events failed after enabling then disabling scrollable plot area.Fixed #22664, labels were accidentally being hidden when they should not.Fixed #22709, optional chaining threw a syntax error in dumbbell module.Fixed #22845, a regression causing choppy tooltip animation on pie charts and some other chart types where followPointer was set to true.Fixed #22764, a regression causing axis labels with useHTML to wrap when not needed.Fixed #22707, YYYY-MM date format was not parsed in Safari and Firefox.Fixed test for overlapping scatterpoints was failing on master.Fixed #22533, boosted scatter cropped original data on zoom.Fixed #22609, axis label with soft hyphen was not wrapping text correctly.Fixed #22543, added default vertical offset for all navigation buttons.Fixed #22617, a regression in waterfall data label alignment.Fixed #22380, circles were misaligned in a polar chart when pane.startAngle was set to a non-zero value.Fixed #22456, line wrapping regression in split tooltips with useHTML.Fixed #22516, prevented inactive state for series with shared markerGroup when hovering a boosted series.Fixed #22438, no shared tooltip appeared when zoomed in boost.Fixed various issues with packed bubbles - (partly) frozen point, frozen halo, clicking plot selecting last clicked point.Fixed #22455, series' plot line rendered on the bottom chart edge was sometimes fully clipped.Fixed #22450, ES5 build failed in legacy browsers due to Unicode property escape used in regex.Fixed #22526, disabled context button added extra tabfocus.Fixed #21994, legend a11y proxy elements not tracking legend items correctly.Fixed #21928, setting plot options for pie chart with multiple data labels did not work.Fixed #22295, shared tooltip anchor position was not animated correctly between a single and multiple points.Fixed #22317, removed Batik-specific rgba replacement on export.Fixed #22334, overscroll values were incorrect with rangeSelector enabled.Fixed #22194, Boost not rendering column series with a single point that was outside plot area.Fixed #21886, redraws were fired for every level when drilling up.Fixed #21743, minor grid lines rendered outside the axis plot area.Fixed #22296, missing tick after drill-up when parent series had a single point.  Highcharts v12.1.2 (2024-12-21) #   Bug fixes Fixed #22423, a regression in v12.1.1 causing Highcharts to crash when loaded from a script tag in the head section.  Highcharts v12.1.1 (2024-12-20) #   Bug fixes Fixed #22393, the global Highcharts.dateTime function didn't pick the locale from the html.lang attribute, fell back to browser default.Fixed #7873, min and max settings in exporting.chartOptions axis options were not respected if the user had interacted with the axis.Fixed #22402, a regression in v12 causing wrong number formatting with lang.decimalPoint and lang.thousandsSep set to , and . respectively (European style).Fixed #22394, a regression in v12.1.0 causing bad alignment of text inside the reset zoom button.  Highcharts v12.1.0 (2024-12-17) # Added new treemap feature, the grouping of small leaf nodes, configured by the treemap.cluster option.  Bug fixes Fixed #22329, a regression causing wrong tooltip header with plus sign in date formats.Fixed #22335, treemap data label padding was not respected.Fixed #22357, multiline text was not centered within data labels.Fixed #22316, some tooltip date formats were not correctly replaced.Fixed #22277, setting the time.timezone option explicitly to undefined didn't work as described.Fixed #21405, stickyTracking was broken for BubbleSeries.Fixed #21815, scatter series with Boost showed incorrect values in tooltip when zooming.  Highcharts v12.0.2 (2024-12-04) #   Bug fixes Fixed #22124, numeric font-size for labels didn't work as announced.Fixed #22258, v12 modules didn't work with highstock, highmaps and highcharts-gantt NPM bundles.Fixed #22052, drilldown breadcrumb showed the wrong label when scrollbar was enabled.Fixed #22088, tooltip could spill over at certain widths.Fixed #21897, missing points in scatter series with boost.Fixed #22169, only the first zone got shadow when shadow was true.  Highcharts v12.0.1 (2024-11-28) # Fixed #22243, compiled files were not available on npm.  Highcharts v12.0.0 (2024-11-27) # Refactored the Series class to organize its data in a DataTable instead of parallel arrays. Removed the internal Series properties xData, yData, processedXData and processedYData, as well as some additional series-specific data arrays, in favor of Series.dataTable.Added support for data.x values as date strings. These can now be defined for example as '2024-10-03' as a more human readable alternative to timestamps. Also allowed date string in other options referring to x values, like xAxis.min, xAxis.max, series.pointStart, plotLines.value, Gantt series start and end, Axis.setExtremes() etc.Refactored all internal time zone handling with functions powered by Intl.DateTimeFormat.Added new option, lang.locale, to determine in what language dates are rendered.Added support for locale-aware date formatting through the Intl.DateTimeFormat browser API. Changed all default datetime format strings to locale-aware formats.Added ucfirst template helper function to allow upper case first in strings.Added support for string parameters in template helper functions.Added support for textOverflow: 'ellipsis' with texts and labels spanning multiple lines, as well as the lineClamp CSS property. This allows better control over the layout of axis labels and data labels.Changed the default chart font-family to better match system fonts and improve legibility.Changed the default build system to webpack, allowing for tree shaking in the build process and smaller builds.Improved default alignment of title, subtitle and the context menu button. Added new option, title.minScale.Added option legendColor to set legend symbol color as distinct from series color, see #21776.Added tweening support for 4 and 8 digit hex colors.Use Point instances as context for tooltip and data label formatters and formats.Added support for individual whisker length for box plots and error bars. See #21648.  Upgrade notes When importing Highcharts as a node module, additional modules no longer require initialization. Previously modules would be first imported, then initialized:// Imports for Highcharts v11
import * as Highcharts from 'highcharts';
import addAccessibility from 'highcharts/modules/accessibility';

addAccessibility(Highcharts); // <== This no longer works!
Since v12, the module will not return a factory function, so above code will cause an error. Instead, import it like this:// Imports for Highcharts v12
import * as Highcharts from 'highcharts';
import 'highcharts/modules/accessibility';
See the elaborate article in the docs.All date and time strings are now by default rendered in the web page's default language as set in the html.lang attribute, or falls back to the browser default. Setting lang.locale to en-GB will restore the labels approximately as they were prior to v12. For exact backwards compatibility, set all the time format options (xAxis.dateTimeLabelFormats, tooltip.dateTimeLabelFormats etc) back to their v11 defaults in addition.The time.getTimezoneOffset function callback no longer works. Instead, use the timezone option.All time-related options in the global group were removed. Use the time options instead.The data handling of the Series class has been rewritten to use the DataTable class directly. As a consequence, the parallel arrays storing the series data are removed, and replaced by Series.getColumn().Series.xData is replaced by Series.getColumn('x')Series.yData is replaced by Series.getColumn('y')Series.processedXData is replaced by Series.getColumn('x', true)Series.processedYData is replaced by Series.getColumn('y', true)The "Download PDF" menu item was removed from the default exporting menu, in preparation for a future update where exporting is done on the client side by default. The future update will require PDF download to either run via the export server like before, or to load a third party script. To re-enable the PDF download in the menu, add downloadPDF in the contextButton.menuItems.The HighchartModuleLoaded window event is no longer supported as we moved to webpack builds with tree shaking capabilites. Instead, extensions must rely on events and wrapped methods.The title.widthAdjust option is removed. Instead, use contextButton.buttonSpacing to make space for non-default context button.Titles and subtitles now have adaptive alignment. To revert to the pre-v12 defaults, set title.align and subtitle.align to center, and title.minScale to 1.The Point instances are now used as context for tooltip and data label formatters and format strings, instead of an abstract context object. In most cases this will cause no changes as the properties of the context object are now moved to the Point itself, but some changes may occur. Specifically the {point.x} key for points on a category axes will no longer return the category name. Instead, use {category}.  Bug fixes Fixed #21793, templating did not correctly parse sub expressions inside nested if conditions.Fixed #22188, graphs were clipped at the left side when zooming on a series containing zones, and the x-axis was of type category.Fixed #20550, centerInCategory did not work with multiple stacks.Changed default exporting.url to a more stable server, dedicated to SVG export only.Fixed #22187, word wrap failed for SVG when a word with markup fell at the breaking point.Fixed #22100, pie data label was cut off in some cases when rendered at the bottom of the pie. Altered positioning logic by letting labels gravitate towards the sides when there is space available, which also leaves room for the pie to render larger in limited space.Fixed #19335, accessibility focus border was incorrectly positioned in some edge cases.Fixed #21863, a regression causing the Boost module to fail with treemap series.Fixed #21890, scrollablePlotArea was not supporting parallelCoordinates.Fixed #21684, tooltip with outside did not receive css themes assigned to container.Fixed #21924, custom sizes in marker states did not work.Fixed #21098, corrections for ie11 compatibility fix.Fixed #21136, pointer events were called on points outside of plot area with scrollablePlotArea enabled.Fixed #21267, a regression causing elements to disappear when zooming on an X-range chart.Fixed #21804, columns were crisped to full pixel width even when the crisp option was explicitly false.Fixed #16931, errors in Chrome when modifying chart before printing the page.Fixed #21745, click event was fired on drag for multiple charts.Fixed #21530, tick values were padded onto user-defined category axes.Fixed #18461, changes to options3d alpha and beta were not applied to pie body.Fixed #21534, mouseover point event broke drilldown.Fixed #20470, allow values from nested properties in exported data.  Highcharts v11.4.8 (2024-08-29) #   Bug fixes Fixed #21165, series didn't render properly when the chart height was very large.Fixed #21106, series clipped on boost disabled and increased the chart size.Fixed #21734, minor ticks were wrongly distributed with multiple axes or when tickAmount was set.Fixed #21521, plot band labels and plot line labels would overlap if positioned too close. Added inside and allowOverlap options to the Axis.plotBands.label options.Fixed #20499, data labels failed to apply width in styled mode.Fixed #21205, offline PDF exporting was broken by attempted erroneous child node removal when the chart contained text paths.Fixed #21241, accessibility could not be dynamically enabled or disabled.Fixed #21188 and #21510, hidden divs with special CSS styles increased chart height by firing ResizeObserver.Fixed #21650, the data module was not successfully updating the x-axis in some cases.Fixed #21255, tooltip with outside rendered outside viewport, making document.documentElement expand.Fixed #21605, legend text was not vertically aligned with the symbol.  Highcharts v11.4.7 (2024-08-14) #   Bug fixes Fixed #21554, tab navigation was trapped in a loop after printing the chart.Fixed #20456, boosted heatmaps were not rendering in some cases.Fixed #21501, #21547 and #21569, various tooltip and interaction issues caused by a temporary pointerEvents fix for older Chromium.Fixed #21277, version and other metadata was not being replaced after building esm-modules.Fixed #21429, the rounded solid gauge series was misaligned when close to 100%.Fixed #21281, hovering line with split tooltip, then scatter, caused tooltip animation to start in top-left.Fixed #17854 , fillOpacity was too strong in boosted series.Fixed #9748, the mouseup event was not respected after setting the event.Fixed #21315 inverted bubble point halos were not positioned correctly.  Highcharts v11.4.6 (2024-07-08) #   Bug fixes Fixed #21470, bad require tagging causing bad module references.  Highcharts v11.4.5 (2024-07-04) #   Bug fixes Fixed #21446, a regression causing broken imports of modules due to bad relative paths.Fixed #21445, generated TypeScript declarations for deprecated option series.events.legendItemClick.  Highcharts v11.4.4 (2024-07-02) # Refactored the series.turboThreshold option to be more forgiving. Instead of failing with a warning message, the Series class now silently skips the fast looping of raw numbers and processes the object configuration instead, at a slight performance cost.Introduced new event and option legend.events.itemClick, deprecated events.legendItemClick. See #3957.Added new option treemap.traverseToLeaf which allows to drill into last possible leaf of Treemap series.  Upgrade notes Text path support is no longer part of the highcharts.js main bundle, but requires loading the modules/textpath.js bundle. It is however built into those series that use text paths by default.  Bug fixes Temporarily fixed #21144, workaround for a Chromium bug while touching and scrolling chart.Fixed #21098, various minor fixes for IE11 compatibility.Fixed #21302, added the description to all arguments in the Tooltip constructor.Fixed #20525, in boosted charts, markers were not being hidden when zoomed in series was hidden.Fixed #21174, stack labels were wrongly positioned for multiple x-axes in inverted charts.Fixed #21341, updating the height of a SVGLabel didn't occur immediately.Fixed #19224, treegraph data labels did not hide when allowOverlap was false. Implemented overlap detection for labels with text path.Fixed #21177, setting data to a hidden packed bubble series would throw error.Fixed #21124, special character broke string label templating format.Fixed regression after fix #20435, updating of existing point event didn't remove the old event.Fixed #20969, tooltip did not dissappear when hovering from one chart to another.Fixed #21245, points were wrongly positioned for multiple boxplot series.Fixed #20494, chart did not switch back to default config upon exiting responsive conditions.Fixed #21176, in boosted charts, the halo was wrongly animated for multiple series with multiple axes.Fixed #19944, error message "getAttribute is not a function" appeared in certain edge cases in Firefox.Fixed #16925, stacked area series with null data produced bad animation.Fixed #11794, max rendered series.lineWidth for boost was 1.  Highcharts v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts v11.4.2 (2024-05-22) # Fixed #21109, tooltip animation was not smooth. Added the option to set tooltip.animation as an animation object, not just a boolean as previously.Added new options pane.background.borderRadius, and plotBands.borderRadius for gauges.  Bug fixes Fixed #20451, legend.symbolWidth and legend.symbolHeight didn't change color axis dimensions if colorAxis.width or colorAxis.height were not set.Fixed #20876, redraw and drillupall events were called too many times during chart drill up.Fixed #5334, pixel alignment issues between grid lines, column series, error bars and scatter points.Fixed #20585, gap in the border at the bottom of bubbles at some sizes.Fixed #20729, pressing "enter" on a tabbed point resulted in different event than clicking it with a mouse.Fixed chart height docs, updated 500px-sample title, and added new demo showing height inherited from container.Fixed #18776, the series colors were not found when boosting multiple series in a single canvas in styled mode.Fixed #21125, a regression causing wrong positioning of bubbles in an inverted bubble chart.Fixed #20564, minus sign was displayed for the number zero if it was rounded from a negative value.Fixed #20816, time zone wasn't respected in Templating in format strings.Fixed #20804, setOptions didn't change radial axis defaults.Fixed #20146, dragging didn't work for the errorbar series.Fixed #20988, exporting chart, then dragging an annotation and exporting again used to cause wrong annotation position in the subsequently exported charts.Improved the default padding of axis labels, and fixed their collision calculations.Fixed #20998, data labels overflowed the plot area when the axis position was different from default.Fixed #20405, a regression in network graph. When dragging a node, others didn't follow.Fixed #20560, destroyed points in the area range series were wrongly used during mouse hover.Fixed #20656, series with manipulated points were missing a11y description on initial load.Fixed #20965, unwanted animation of right-aligned label when only the text changed.Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.1 (2024-04-04) #   Bug fixes Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.0 (2024-03-05) # Added new option sankey.nodeDistance and the possibility of setting sankey.nodeWidth to auto. The same option pair is also supported by organization chart and treegraph series.Enhanced the pinch zoom behavior to redraw the axes and series continuously. Previously it created a preview by scaling the graphs, then did a full review at the end. Also a deeper refactor and unification of the whole zoom, pan and mousewheel logic.Added new option organization.hangingSide which allows nodes to hang from the right side in inverted organization charts. See #17240.  Bug fixes Fixed #20334, chart width exceeded container width on Windows when the chart itself caused page scrollbars.Fixed #20572, destroying a chart after point hover sometimes produced an error.Fixed #15921 by applying fillColor to series from highContrastTheme.colors if set.Fixed #20166, ticks and gridlines were visible outside the axis in some corner cases.Fixed code scan issues 56, incomplete string escaping or encoding in SVGRenderer, and 72, incomplete multi-character sanitization in SVGRenderer.Fixed code scan issue 73, incomplete multi-character sanitization in SVGElement node title.Fixed code scan issue 90, permissive regex in mapcharts.js.Fixed code scan issue 111, potential prototype pollution in Utilities.ts.Fixed code scan issue 112, potential prototype pollution in NavigationBinding.ts.Fixed #20329, detached elements and events in the Accessibility module produced a memory leak.Fixed #20394, series.color only initially impacted the color of x-range points.Fixed #20435, point events update didn't work.Fixed #20516, this was not bound to plot line or plot band object in event callbacks.Fixed #20429, toggling bellcurve visibility threw error.Fixed #20440 and #20569, multiple series zones broke graph.Fixed regression since v11.3, column range series had area-style legend marker.Fixed #20433, boosted scatter chart did not work without axis min/max-options.Fixed #20307 and #20301, alignment and overlap detection for rotated data labels didn't work correctly.Fixed #19730, centerInCategory on inverted column chart had incorrect series order.Fixed #20264, the packed bubble series was not rendered correctly in an inverted chart.  Highcharts v11.3.0 (2024-01-10) # Implemented native handling of the time.timezone option, making the dependency on moment.js redundant.Added new options colorAxis.width and colorAxis.height, allowing absolute or relative size. See #17870.Added new option chart.axisLayoutRuns. It allows opting in for more predictable axis tick and label layout, at the cost of performance. See #19794.Added new default legendSymbol for area series and its derivatives.  Upgrade notes The exporting.formAttributes no longer works because the internal post function was replaced by the fetch API. The formAttributes option can for some purposes be replaced with exporting.fetchOptions. See the fetch article on MDN for more information about possible options.  Bug fixes Fixed #19169, the focusBorder was not removed from SVGElement after the element had been unfocused.Fixed #20319, funnel point path not rendered properly when the point's top coordinates were within top boundaries of the funnel neck.Fixed #20291, y-axis crosshair was missing for 3d column.Fixed #20340, histogram bins x2 value was wrongly calculated.Fixed #20191, exporting a chart using the export module caused beforeunload event to fire.Fixed #20142, pie selected point was semi-transparent on legend hover in styled mode.Fixed #18744, a point covered by an area series should be fully clickable if the tooltip shows.Fixed #20129, the lack of root and window in the NX environment was causing an error on load.Fixed #20097, script errors and invisible series in error bar with certain extremes.Fixed #19857, short x-axis labels disappeared in some edge cases when labels.autoRotation was set.Fixed #18804, zooming in below boostThreshold didn't disable boost on scatter series.Fixed #20120, data labels in packed bubble series were misaligned after updating the series position.Fixed #16920, formalized and fixed the data.columnTypes option.Fixed #17545, misplaced funnel and pyramid data labels after legend item click when dataLabels.inside set to false.Fixed #19497, some points disappeared when changing extremes of the category axes in boost.Fixed #20098, multiple data labels were not rendered when enabled in plotOptions.Fixed #19895, removing a series while rendering in boost mode could cause a TypeError.Fixed #20002, stroke wasn't applied to annotations during offline PDF export.Fixed #19976, columns threw off center when using mouse wheel zoom.Fixed #19621, errors instead of expected behavior when using arrow-keys to navigate first and last items in legend.Fixed #19130, negativeColor was applied to positive graphs for the part of the line that extended below the threshold.Fixed #19604, ticks were sometimes differently calculated after a series update.Fixed #20007, contrast color setting for data labels did not respect their background colors.Fixed #19946, nodes in the organization chart weren’t centered while using node width or height options.Fixed #19917, setting options in a series without series.data would add default aria-label.  Highcharts v11.2.0 (2023-10-30) # Upgraded the build pipeline to benefit from new language features. Bundles are now compiled to ES2020 by the TypeScript compiler (*.src.js files), and minified by swc (*.js files).Added support for multiple data labels on pie slices.Added new option, sankey.nodeAlignment for the Sankey series to specify which side of the chart nodes should align.Added new option, sankey.linkColorMode.Added feature to allow different symbols for upper/lower markers in area range and dumbbell charts. See #14024.Set the default series.lineWidth of line graphs to 2px for better accessibility.  Bug fixes Fixed #19552, treegraph was losing node parent during export.Fixed #19885, axis.breaks didn't work with zooming.Fixed #13240, using default data labels alignment for bubble series.Fixed #19826, Lollipop grouping didn't work correctly.Fixed #19934, CSV export was broken in Safari.Fixed #19480, added missing TypeScript definitions for PlotLineOrBand properties.Fixed #17820, clip rect did not take into account boosted navigator.Fixed #17014, boostThreshold with null point threw an error.Fixed #19762, offline export PDF documents didn't scale.Fixed #19671, treegraph was throwing an error when setting legendSymbol to lineMarker.Fixed #14108, start and end dates in exported CSV data for X-range series.Fixed #19744, series' clip option was not working in polar charts.Fixed #19725, drilling between cartesian and non-cartesian series didn’t work properly.Fixed #19692, mouse wheel zoom was enabled even when general zoom was not.Fixed #19253, Offline Export did not work for boosted series.Fixed #18062, pinch to zoom didn't work on Android Mobile devices after any click on the chart.Fixed #19314, tooltip chevron was cut off when outside was enabled.Fixed #19616, breadcrumbs disappeared when invoking chart.update in sunburst and treemap.Fixed #19362, x-range series tooltip lost its correct default date and time formatting.Fixed #19148, NaN x value disabled area chart graphic elements.Fixed #19457, multiple dataLabels enabled/disabled threw render (console) error.Fixed #19524, treegraph links weren't disappearing after calling setData.Fixed #19343, tooltip positioning on xrange points lying on shifted axes.Fixed #19368, TreeGraph chart displayed extra node expander for hidden child when levels collapsed. Also fixed collapseButton visibility.Fixed #19341, null points could be hovered in the boost module.Fixed issue with missing points in boosted heatmap with interpolation set to true.Fixed #18988 and #17594, vertical and horizontal offsets for inverted Sankey and Organization charts didn't work correctly.Fixed #19516, read-only CSS properties weren't excluded during the export of the chart.Fixed #19217, mobile pinch on inverted charts flipped the chart.Fixed #19203, plotOptions.series.pointStart couldn't be updated more than once.Fixed #18815, boostThreshold set for one series boosted all series.Fixed #19374, disabled keyboardNavigation didn't remove the exit anchor.Fixed #19465, wrong property in numberFormatter API demo.Fixed #19412, chart.zooming.resetZoom position settings were overwritten by the deprecated parameter.Fixed #19110, chart's height, and minLinkWidth misaligned sankey links.Fixed #19178, some yAxis options were disappearing after mouse wheel zoom.Fixed #19200, styles were not applied to the annotation label when useHTML was enabled.Fixed #19202, excluded events.legendItemClick from item series API.Fixed #19179, changing the crop property on annotations through annotationOptions in the chart config did not work.Fixed #15441, auto-scroll did not follow tooltip when navigating with keyboard while zoomed in.Fixed #17170, data labels with outline or shadow were misplaced in PDF files exported using the offline exporting module.Fixed #19002, with a11y enabled < sign was stripped, causing issues with screen readers.Fixed #19027, a regression in v11 causing the chart to redraw twice on updates that triggered a resize of the container.Fixed #19078, proximate legend did not work after updating the legend.enabled property.Fixed #19093, SVG <filter> issue with shadow enabled on line series when points had the same x or y value.Fixed #19134, color and symbol changed constantly for the same series after every drill-up.Fixed #19127, centerInCategory was not working for column pyramid.Fixed #19035, tooltip tap or click stopped working after pinch zoom in iOS.Fixed #19143, a regression causing incorrect series name from CSV for packed bubble series.  Highcharts v11.1.0 (2023-06-05) # Added support for mouse wheel zooming through chart.zooming.mouseWheel. This feature is embedded in the Highcharts Stock bundle, but requires an additional module file for the Highcharts bundle.Added the heatmap.interpolation option for creating smooth heatmaps.Added new function, Chart.getOptions(), to get the current active configuration options for the chart.Added the treegraph.fillSpace option for treegraphs to fill the whole plot area even when some points are collapsed.Added borderRadius option support for funnel and pyramid series. See #18839.  Bug fixes Fixed #18869, redundant chart redraws on changing title, subtitle or caption font size, or top level chart font size.Fixed #19017, failure in parsing negative numbers with spaces in the data module.Fixed #19053, a regression since 10.3 causing item series update not to work correctly.Fixed #19051, axis crossing was not always correct.Fixed #18985, updating enableMouseTracking from true to false didn't work.Fixed #17589, update of multiple data labels didn't work in specific conditions.Fixed #17791, pointRange wasn't calculated for multiple series with single points.Fixed #19028, border radius was wrongly applied for negative column points when the zoneAxis option was x.Fixed #12063, packed bubble parent nodes had a bad position after width update.Fixed #18891, invisible data labels in treegraph series reacted to hover.Fixed #18960, a regression in v11, wrong placement for data labels in dumbbell series.Fixed #18110, yAxis.maxPadding was ignored when yAxis.softMin was set.Fixed #18956, a regression causing small sankey nodes rendering as circles.Fixed #18876, updating the tooltip didn't work when wasn't declared in the chart configuration.  Highcharts v11.0.1 (2023-05-08) # Added new option, xAxis.crossing and yAxis.crossing, making it easier to create axis layout for mathematical plots.Added new option, series.legendSymbol. See #18753.  Bug fixes Fixed #18884, sunburst circular labels did not work when the difference in value was small.Fixed #18928, a regression in v11 causing the tooltip to not display in subsequent charts when the first chart in the web page was hidden.Fixed #18821, hidden overlapped data labels with useHTML on were still active for the mouseover event.Fixed sonification issue where resuming after pause ignored the original onEnd argument.Fixed too low contrast for credits in High Contrast theme.Fixed #14602, arearange series.label.onArea was not implemented.Fixed #18856, the last point wasn't displayed while hovering in the boost module.  Highcharts v11.0.0 (2023-04-25) # Design facelift with clearer, more vivid palette, added contrast for text labels and many minor visual changes.Added new series type, treegraph. Read more in the docs.Added new series type, pictorial.Removed support for IE 8 and older.Changed the default builds to ECMAScript version ES2016.Replaced SASS files for styledMode with updated CSS files. Highcharts theming is now easier by supporting CSS variables as well as prefers-color-scheme. See style by CSS.Sonification module v2 with many new features for audio charts, now part of the official API.Changed default rotationMode to circular for sunburst data labels.Added minorTicksPerMajor option for axes, see #13338.Added the point.percentage property for gauge charts, see #18433.Added ResizeObserver to the chart so it could adjust reflow on container size change, closes #17924.  Upgrade notes To revert to the old design, use the theme defined in the v10 theme sample.Font sizes of the chart are now using rem by default. This may cause too small or too big fonts if your web page is using non-default root element font size. To avoid that, set chart.style.fontSize to 16px or any other values you see fit.The top-level labels option has been deprecated for a long time and is now removed. Use Annotations instead.Time-related settings on the global options structure are removed. Use the time options instead.The new version of the sonification module is not backwards compatible with the old, experimental module.The default builds were changed to ECMAScript version ES2016. See the system requirements on how to support IE11 and other legacy browsers.If you're using chart.styledMode, and your end users have prefers-color-scheme set to dark in their browsers, they may now be presented with dark-themed charts. The exception is if your CSS overrides the default coloring.Changed default rotationMode to circular for sunburst data labels.  Bug fixes Fixed #18790, custom symbols were incorrectly positioned in some cases.Fixed #18103, Y zoom while panning on top of the plot when chart inverted was not working.Fixed #18066, after updating the series data to one point with category xAxis there were unwanted labels.Fixed #17720, the tooltip with enabled outside and split properties was badly positioned for some series.Fixed #18693, tooltip.stickOnContact threw errors on hover between one series with followPointer set to true and the second series followPointer set to false.Fixed #18741, incorrect guide box behaviour while dragging stacked bars.Fixed #14080, bubble legend didn't work correctly if the legendItemClick event for one series was prevented.Fixed #18635, bad tooltip position in an inverted chart inside a scrollable container when tooltip.outside was true.Fixed #17614, timeline styled mode default colors.Fixed #18617, stack labels in inverted charts were mispositioned in the y axis.Fixed #18636, waterfall lines missing when there was a null point.Fixed #17168, the Sunburst series didn’t work properly when the chart was inverted.Fixed #17257, item chart points color wasn't updating.Fixed #17280, bubbles with z: 0 caused points to disappear.Fixed #16516, legend symbol height didn't accept 0 as a value.Fixed #18501, vertical alignment of stack labels didn't work with logarithmic axes.Fixed #18502, pointPadding for heatmap series wasn't working with reversed axes.Fixed #18444, a polar chart with type "bar" and data labels caused JavaScript error.Fixed #17912, column range points were not aligned with column points.Fixed #18443, the className property in guideBox didn't work for drag & drop.Fixed #10005, wrong series name and legend item by using data.seriesMapping property.Fixed #18422, stacked polar column chart with zero value rendered a wedge across the whole y axis.Fixed #16675, adding annotation from a custom button was not possible if the button had a custom SVG symbol.Fixed #18305, updating series marker size was not working if the initial size was not set.  Highcharts v10.3.3 (2023-01-20) # Added /es5 path for legacy script files on code.highcharts.com and in the npm package, see #18070.Added new option, exporting.allowTableSorting, to allow turning off sorting of the data table. See #18007.  Upgrade notes In Highcharts version 11, released at the earliest March 1 2023, the main script files at code.highcharts.com and npm will be compiled for evergreen browsers. This includes files like highcharts.js, modules/exporting.js, accessibility.js etc. Should you need to continue supporting browsers more than three years old, like IE11, we will provide legacy script files in the /es5 folder. These files are now available, and we recommend you do the switch before the release of version 11. See a live example, or read the details at #18070.Lollipop series data values should now be given as y, not as low. See live demo.  Bug fixes Inheritance refactor of Lollipop series, #14103.Fixed #17888, plot line labels with align: 'right' and textAlign: 'left' weren't displayed. Added clip option for labels to allow displaying outside the plot area.Refactored how the position of stack labels is calculated. Closed #16764, #12133, #15129 and #17116.Fixed #17998, setting linecap wasn't reflected in legend items.Fixed #14114, color axis marker color did not get applied to most series in styled mode.Fixed #16274, custom marker symbol size was not being updated.Fixed #18212, long treemap data labels with useHTML set to true were wrongly positioned.Fixes #18147, some data labels weren't rendered correctly in polar charts.Fixed issue with series label overlapping data labels.Fixed #16944, wrong tooltip position when using the positioner callback and outside: true.Fixed #18168, legend item was mispositioned if the related series was located at the top of the chart and proximate layout was enabled.Fixed #17948, the tooltip position was bad when yAxis.reversedStacks was set to false.Fixed #17314, chart.alignThresholds and stacking were not working correctly together.Fixed #18116, the central data label in sunburst series was too short.Fixed #18080, hovering over area range points after zoom reset was throwing errors.Fixed #18145, boost module couldn't render series with colour set to grey.Fixed #18127, a regression causing an unintended border on data labels when setting backgroundColor and borderColor but no explicit borderWidth.Fixed #17856, line color in hover state did not work as expected in heatmap.Fixed #17933, x axis labels had incorrect styling after drilling down.Fixed #17963, breadcrumbs' position and display were incorrect when scrollablePlotArea was enabled.Fixed #17970, wrong color on heatmap point when updating from null to a valid number.  Highcharts v10.3.2 (2022-11-28) # Refactored and simplified series group inversion logic. It is now simpler and more lightweight, and allows animating the transition between a non-inverted and inverted chart.  Bug fixes Fixed #17815, the tooltip didn't receive styling from series.options.className in styledMode.Fixed #17957, data labels disappeared on point hover when marker.enabled was set to false.Fixed #17991, adding an invisible series caused error upon attempted exiting of fullscreen, when pattern-fill was set.Fixed regressions with missing tooltip on organization chart and sankey chart nodes after v10.3.0.Fixed #17753, removed not allowed < symbol from attributes.Fixed #17902, in stacked waterfalls, the x value was not available for the context of stackLabels.formatter.Fixed #12133, stack labels alignment was wrong when scrollablePlotArea was enabled.Fixed #17878, column series cursor was incorrect after plotOptions update.Fixed #12416, tooltip did not update when scrolling scrollable plot area.Fixed #17952, added TypeScript support to package files in es-module/masters.Removed stroke/stroke-width workaround for older browser bug.  Highcharts v10.3.1 (2022-10-31) # Files of v10.3.0 were missing from npm.  Highcharts v10.3.0 (2022-10-31) # Added new feature, zooming on polar charts. See #16992.Added new feature, series.label.useHTML to support HTML formatting in series labels. See #17282.Made the legend items of venn diagrams list the names of points instead of the names of series, see #17113.Changed the default values for dependency wheel data label vertical positioning.  Bug fixes Fixed #17839, spacebar would not toggle items in the legend when using the accessibility module.Fixed #17538, export failed in Firefox using styled mode and CSS variables.Fixed #17315, item series custom marker was stretched after redrawing.Fixed #14226, auto rotation of tick labels didn't work when step set to 1.Fixed #17685, the tooltip sometimes got stuck when combining the useHTML and stickOnContact options.Fixed #17177, updating tooltip.followTouchMove didn't work.Fixed #17785, a regression causing drag and drop of bubbles between packed bubble groups to fail.Fixed #17630, making it possible to display percentage values when hovering over a boosted stacked point.Fixed #17288, pie chart shadows were not applied on update.Fixed #17639, exporting feature was removing duplicated points.Fixed #17677, a regression causing text and outline out of alignment for sunburst data labels.Fixed #17610, centerInCategory did not consider columns with the same x-value when centering them.  Highcharts v10.2.1 (2022-08-29) # Refactored zoom options, introduced new object structure as chart.zoom.Added Highcharts.Series.types and Series.registerType(type, class) for custom series, see #17551.  Bug fixes Fixed #17413, data labels contrast color omitted the chart background.Fixed #17547; if chart.zoomType option is set, boosted rendering will not be forced as long as threshold is not reached.Fixed #17627, single quoted attributes were not recognized and caused color style not to apply in tooltips.Fixed #15752, arearange didn’t work in parallel coordinates.Fixed #17442, color axis data classes were not keyboard navigable.Fixed #17438, updating points with the category axis gave the wrong x position.Fixed #17486, bubbleZExtremes was not removed when the bubble series was removed.Fixed #17481, zones clip was incorrectly calculated and the line was partially missing when scrollablePlotArea was enabled.Fixed #17484, changed the link opacity on hover in organization series.Fixed #17472, shared tooltip did not work in polar charts.Fixed #17359, stickyTracking was not respected correctly for polar charts.Fixed #17401, console error from accessibility module when using numeric point id.  Highcharts v10.2.0 (2022-07-05) # Added option to sort the chart data table by clicking the column headers. See #16972.Added RTL support for breadcrumbs, see #17340.Added new feature, series.onPoint, allowing to display some series types (e.g. pie) over a point with a given id. See #12526.  Bug fixes Fixed #17273, data labels did not always have enough contrast. Ensured maximum contrast according to W3C's relative luminance.Fixed #12206, xAxis.labels.y did not adapt to multiline labels when xAxis.opposite was true.Fixed #17281, an error in console when bubble with custom marker exceeded the zThreshold.Fixed #17285, made the opacity property work for different states in the sankey series.Fixed #17167, legend title didn't hide when chart data was empty.Fixed #17336, hover state was only applied once to buttons.Fixed #11816, in gauge series, added dial path into API documentation.Fixed #17352, the tooltip was not visible after updating scrollablePlotArea.Fixed #17381, generic class names in data table conflicted with commonly used classes in CSS.Fixed #17186, CSV rows were missing delimiters when data was missing at the end of a row.Fixed #17236, timeout for accessibility module warning caused test issues.  Highcharts v10.1.0 (2022-04-29) # Added allowMutatingData chart property to prevent data mutation while updating series or point. See #4259.Added new option, accessibility.point.describeNull.Added new fullscreen events, fullscreenOpen and fullscreenClose, callback functions to modify chart options during toggle fullscreen mode. See #16968.Added warning by default when the accessibility.js module is not loaded.Added new option, accessibility.series.descriptionFormat.Improved the theme colors for high contrast light and high contrast dark to show more hue variance.Reduced verbosity of accessibility information by default.Changed the default value of SVGElement.show's inherit argument to true.Added option to remember keyboard focus for points: accessibility.keyboardNavigation.seriesNavigation.rememberPointFocus.Added new option pie.thickness describing thickness ring of pie. This option takes precedence over pie.innerSize. See #6647.  Bug fixes Fixed #8324, an error was thrown when calling drillUp() after chart.applyDrilldown().Fixed #17188, an incorrect breadcrumbs list was generated when drilling down the axis category.Improved default behavior of accessibility module with axis descriptions as well as landmark roles.Fixed #15178, warning of invalid attribute for Reset Zoom button.Fixed #17146, a regression in v10 with parsing of HTML with inline style rules containing a colon.Fixed #14320, the table was not re-rendered after a data update.Part of #15863, the scrollbar is no longer initially rendered with y: -9999.Fixed #9687, vertical data label suppressed when close to the right edge of the plot area.Fixed #17100, excessive padding in some cases when tickAmount was set.Fixed #16921, regression causing the wrong size of a hovered heatmap cell after zooming in.  Highcharts v10.0.0 (2022-03-07) # Adde new series type, arc diagram.Added breadcrumbs functionality for drilldown charts as well as hierarchical series like treemaps and sunburst. This replaces the drill-up and traverse-up buttons.Added new feature chart.alignThresholds for aligning the thresholds in charts with multiple axes.Added new options hangingIndentTranslation and minNodeLength for Organization chart, for improving the layout of deep structures. See #13915.Added new option Highcharts.AST.bypassHTMLFiltering for disabling AST filtering.Added option, boost.pixelRatio, providing Retina and device pixel ratio support to the Boost module.Added areaspline series to the supported series in the Boost module, see #8288.  Upgrade notes In an organization chart, children of a parent with hanging layout will now inherit this layout. To prevent this, set layout = "normal" for these nodes.The drilldown.drillUpButton options set is deprecated and replaced by drilldown.breadcrumbs. Some but not all settings are backwards compatible. See our demo of mimicking the legacy button style with breadcrumbs. The same is true for treemap.traverseUpButton.The offline exporting module now requires version 2 of jsPDF and version 2 of svg2pdf when exporting to PDF. Our own CDN, downloads and packages are updated, but if you're loading old releases from elsewhere, it will fail.  Bug fixes Fixed #15133, data labels were missing the fade-in effect upon drilling down.Fixed #16470, setting custom drag handle cursor in options.Fixed #16873, Windows High Contrast Mode not detected in non-Microsoft browsers.Migrated global win to window. This will mask the global window object in every Highcharts bundle, so that always Highcharts.win === window.Fixed #16788, accessibility issue with some columns not being focusable because of wrong point.isInside flag.Fixed #16431, data points were trimmed due to axis floating-point rounding.Fixed #6884, console errors related to style attributes because of Content Security Policy.Fixed #16979, only one point per x value was shown when stacking set to percent.Fixed #16974, esc keypress keyboard focus issue with multiple charts on the same page.Fixed #16818, issue with keyboard navigation and legend.labelFormatter.Fixed #14175, enabling and disabling dataLabels.rotation misplaced data label's position.Fixed #16474, added missing click event callback on sides of the 3D pie slices.Fixed #16893, series.findNearestPointBy set to xy was not working well with Boost.Fixed #16791, exporting a chart in styled mode on Safari v15 produced a black image.Fixed #11712, in node-based series types like dependency wheel and network graph, calling node.update() in the afterAnimate event would throw errors.Fixed #16339, keyboard focus management issues with fullscreen change.Fixed #16884, smarter defaults for accessible point descriptions.Fixed #16045, tooltip with opacity was not fully hidden when hovering over a reset zoom button.Fixed #6417, added support for non-ASCII characters (Chinese, Russian etc) in exported PDF via the new exporting.pdfFont property.Fixed issues with data.enablePolling and Google Sheets.Fixed issue with data module updates when dataGrouping options were present.Fixed #16820, adding drilldown series on point mouseover threw an error.Fixed #16169, stack order was affected when centerInCategory enabled and reversedStacks set to false.Fixed #16479, resetZoomButton was not visible after drilling up to a level with zoom.Fixed #16568, setting data options with Highcharts.setOptions did not work.Fixed #16135, after drill-up, the series did not go back to its original state.Fixed #16589, SVG export broken when accessibility module was included.Fixed issue on mobile where a point would be highlighted visually after drilldown with a11y module loaded.Fixed keyboard nav issues #16633, #16634, #16625.Fixed legend keyboard navigation issues #16520, #16545, #16467.Fixed #16497, legend keyboard navigation caused page scroll with container scaling.Fixed #10525, setting tickPositions to undefined didn't clear options.Fixed #16697, legend item style changed when using the keyboard to focus it.Fixed #16596, the first column point of categorized x-axis wasn't draggable.  Highcharts v9.3.3 (2022-02-01) #   Bug fixes Fixed #16339, keyboard focus management issues with fullscreen change.  Highcharts v9.3.2 (2021-11-29) # Added support for Trusted Types, a browser standard for preventing cross-site scripting vulnerabilities.  Bug fixes Fixed #16398, spacing was incorrect for legend items without a name.Fixed issue with data module updates with firstRowAsNames enabled.Fixed #16665, a regression causing updating of dataLabels.useHTML not to take effect.Fixed #16562, Windows high contrast mode keyboard navigation issues.  Highcharts v9.3.1 (2021-11-05) # No changes for the basic Highcharts package.  Highcharts v9.3.0 (2021-10-21) # Added new offset options for nodes in Sankey and Organization chart, nodes.offsetHorizontal and nodes.offsetVertical. See #15225.Added new option, annotations.crop, allowing to hide annotations outside the plot area. See #15399.Allow removing accessibility information sections by setting section formats to null.Support series.accessibility.point options matching the top level accessibility.point options.Support pageUp/pageDown in legend keyboard navigation for scrolling between legend pages.Improvements to series keyboard navigation, now supporting End/Home/PgUp/PgDown keys.  Bug fixes Fixed #12169, allowing Blob offline export in Firefox.Fixed #16150, pyramid shape was incorrect for inverted charts when yAxis.width set.Fixed #16275, ticks on the axis weren't displayed when their value was too high.Fixed #16165, border radius disappeared after hovering a point in heatmap.Fixed #13780, tooltip was mispositioned when yAxis was reversed.Fixed #12828, click event on point wasn't working on IE with color axis.Fixed issue #15876, DOM order not following keyboardNavigation.order.Fixed #11756, adding image without optional parameters threw an error.Fixed #15480 and #16052, disabled point markers sometimes appeared on redraw with accessibility module loaded.Fixed #13683, the last row of items in a paginated legend was not fully visible in edge cases.Fixed #16004, a regression causing shared tooltip not to show for some axes with multiple differently positioned axes.Fixed #16245, automatic minRange did not consider floor/ceiling.Fixed #12961, the chart crashed when axis.tickInterval was negative.Fixed #15117, pointStart and pointInterval did not work with turboed 2d array data.Fixed #16143, offline exporting hidden boosted series threw error 28.Fixed #16176, funnel data labels with rotation set showed console error.  Highcharts v9.2.2 (2021-08-24) # Added internal support for Google Sheets API v4, fixing stability problems with loading data from spreadsheets.  Upgrade notes Existing setups with Google Sheets stopped working in August 2021 as Google phased out version 3 of their Google Sheets API. Highcharts has now been upgraded to version 4 of the API, but this will not work unless an API key is given in the data.googleAPIKey option. See the comprehensive tutorial from Hands-On Data Visualization on how to obtain the key. Additionally, data.googleSpreadsheetWorksheet is deprecated and replaced by data.googleSpreadsheetRange, which allows for more detailed instructions on what data to load.  Bug fixes Fixed #16231, a regresssion in v9.2 causing exporting not to work with styledMode enabled.  Highcharts v9.2.1 (2021-08-19) #   Bug fixes Fixed additional case for #15235, nested whitespace got removed in HTML.  Highcharts v9.2.0 (2021-08-18) # Improved ES module architecture with support for tree shaking of the most commonly used modules. See #8667.Added new feature, series.relativeXValue, allowing point X values to be relative to the series.pointStart and subject to series.pointInterval and series.pointIntervalUnit.  Bug fixes Fixed #15938, charts still crashed in some legacy browsers where Intl was missing.Fixed #15235, whitespace between HTML elements got removed.Fixed #15986, accessibility exit anchor disappeared on Chart.update.Fixed #15229, accessibility region labels were sometimes duplicated.Fixed #16119, touch scrolling was blocked after zooming when single-finger panning was not enabled.Fixed #16146, negative values broke sunburst chart.Fixed #16153, fontFamily reset when updating chart.style.Fixed #16126, printing chart in full screen with accessibility loaded threw.Fixed #16112, axis options set by setOptions were not picked up by polar chart when chart axis options were set as an array.Fixed #16104, chart warned about unsorted data when updating category names.Fixed #14143, #14434, #13310, tooltip with stickOnContact and useHTML or outside enabled did not work properly.Fixed #16080, #13705, sankey chart with self-referential points broke on redraw.Fixed #16084, #13671, updating timeline chart did not work properly in some cases.Fixed #15334, some waterfall data labels did not show for points below threshold.Fixed #16062, lines after the first line break in text with useHTML set to true were misaligned in exported charts when exporting.allowHTML was set to false.Fixed #16053, color axis disappeared after toggling legend.Fixed #16044, draggable point guide box was not big enough when the point was partially outside the end of the axis.Fixed #16042, 1px gaps showed between some xrange points when there was no gaps in the data.Fixed #1441, datetime axis ticks did not get date/time formatting applied when tickPositions were set.Fixed #15777, plot line labels were not clipped.Fixed #13840, 3d column chart with scrollbar showed points outside plot in upper left corner.Fixed #15983, event did not get removed when updating it to undefined.Fixed #15973, word cloud focus border position for rotated points was wrong in Firefox.Fixed #12015, linked series did not get inactive state applied when hovering legend item.Fixed #15946, unchanged markers set in options did not animate when updating data through update.Fixed #15449, HTML in exporting menu item text did not work.Fixed #15922, heatmap data labels with useHTML enabled and default formatter did not work, per-point borderColor and borderWidth did not work.Fixed #15902, legend proxy buttons did not update when updating series.Fixed 3d bug, z-axis updated twice on Chart.update.Fixed #15862, Chart.update with oneToOne attempting to remove pane threw.Fixed #9047, boosted series with null points showed warnings in some browsers.Fixed #5430, marker shown on hover with disabled markers missed CSS class.Fixed #15909, pie point with visible set to false and useHTML data labels threw.  Highcharts v9.1.2 (2021-06-16) # Exposed Point.doDrilldown and Axis.drilldownCategory as official API methods.  Bug fixes Fixed #15841, a regression causing charts to crash some browsers where Intl was missing.Fixed #15869, boosted rendering sometimes crashed with multiple different chart types.Fixed #15845, selection marker showed without mousedown after export.Fixed #15843, shared tooltip with stickOnContact enabled did not always update position.Made default pattern-fills more subtle and usable. Changed accessible-pie demo for better pattern handling.  Highcharts v9.1.1 (2021-06-04) # Added new option for bullet chart, targetOptions.borderRadius. See #15649.Improved legend accessibility by placing legend buttons in a list.  Bug fixes Fixed #15401, console warning when loading funnel 3D module, tableValues invalid attribute.Fixed #15757, heatmap.borderRadius did not work.Fixed #14780, offline exporting charts with HTML content to PNG or JPEG fell back to the export server even in browsers that supported it.Fixed issue with extraneous table caption HTML encoding in the export data module.Fixed #15701, tooltip text alignment broke when setting font size.Fixed #15811, setting title.verticalAlign to middle did not vertically center the title completely.Fixed #15667, scatter line showed on hover after updating lineWidth to 0.Fixed #15639, error when calling removePlotBand after destroying Axis.Fixed #9612, panning after zooming sometimes broke with pointPlacement set to on or between.Fixed handling of local time with Safari 14.1.Fixed #15771, drilldown failed when points were cropped from the start of the series.Fixed #14403, tooltip covered interactive elements like the legend, buttons or annotations. Added a CSS class, highcharts-no-tooltip that can be applied to elements to prevent the data tooltip covering them.Fixed #15746, heatmap select state color did not work correctly.Fixed #15708, heatmap null points missed highcharts-null-point class.Fixed #15698, Highcharts instance was accessed incorrectly on error.Fixed #15325, panning multiple axes did not work.Fixed #15685, boosted scatter chart with empty first series rendered ghost points.Fixed a scrollablePlotArea regression, tooltip did not show sometimes.Fixed #15646, zones with no color set were invisible in boosted chart.Fixed #15640, legend items lost disabled state on keyboard navigation.Fixed #15654, shadow offset did not get applied on inverted charts.Fixed #15636, draggable point guide box was not big enough when the point was not fully inside.Fixed #15607, random stack labels with the value 0 showed when zooming in.Fixed #15521, inactive state remained on points after exiting chart with keyboard navigation.  Highcharts v9.1.0 (2021-05-04) # Added text to axis label context, making it possible to insert the default formatting inside labels.format.Added additional item object context for lang.accessibility.legend.legendItem.  Bug fixes Fixed #14966, selected null points generated NaN values in the SVG.Fixed #9549, column drag handle was not visible with reversed Y axis.Fixed #15291, inconsistent addition of symbols definitions in the SVG renderer.Fixed #15528, labels.allowOverlap set to false stopped working for axis tick labels after update.Fixed #11493, #13095, tooltip showed outside axis and plot bounds.Fixed #15520, space key fired legend item click twice in Firefox.Fixed #15523, negativeColor did not work for lollipop series.Fixed #15525, clicking data label did not drill down line and area series.Fixed #15560, dumbbell connectors remained visible after changing series type when markers were not rendered.Fixed #15555, removing dependency wheel points during animation threw.Fixed #15547, bullet target disappeared when combined with rounded-corners plugin.Fixed #15537, some data updates while dragging point threw.Fixed #13943, split tooltip was rendered to wrong side on smaller charts.Fixed #15534, updating area series containing null data to no data threw.Fixed #15509, <u> tag not working with useHTML.Fixed a regression, area series with empty data caused SVG error.Fixed #15488, square shape did not support rounded corners.Fixed #15489, polar spline series with null data did not render path.Fixed #15416, #15413, heatmap keyboard navigation not working after mouse interaction, and backwards navigation not working as expected.Fixed #15343, regression with treemap and sunburst keyboard navigation.Fixed #15447, wordcloud keyboard navigation, and added support for making the chart container a separate tab-stop.Fixed #15463, legend symbolWidth did not correctly default to symbolHeight.Fixed #11336, no tooltip showed when hovering very small chart.Fixed #15436, previous legend items remained visible after dynamically adding color axis.Fixed #15434, plot band was not completely hidden when hiding series.Fixed #15438, polar chart with null data and accessibility module loaded threw.Fixed #15420, series with zones or negativeColor enabled leaked memory on update.Fixed #15412, some charts showed non-passive scroll-blocking warnings.Fixed #10464, halo position was wrong when using boost with multiple axes.Fixed #15392, boosted chart with empty data showed turbo warning.Fixed #15382, updating polar column to zero value did not work.Fixed #15377, inactive state with 0 opacity applied due to inactiveOtherSeries being true did not work for data labels and connectors.Fixed #15359, wrong BubbleLegend color in styledMode.Fixed #14882, stacked area and connectNulls sometimes did not work correctly together.Fixed #14906, split tooltip flickered with followPointer enabled.Fixed #15160, inactive state was not always cleared on touch devices when clicking outside the chart.Fixed #15188, added error display fallback to the most recently added chart for debugger module.Fixed event handler leaks in fullscreen module, flags series and scrollablePlotArea.Fixed #15018, tooltip split, outside and useHTML did not work together.Fixed #13449, updating dataLabels.allowOverlap did not work.Fixed reset zoom and drillup button alignment after plot size changes, button alignment did not update when the plot size changed due to hiding or showing elements such as legend or title.Fixed #15179, crisping did not work correctly for subpixel radius markers.Fixed #15260, networkgraph point className option did not work.Fixed #15162, in styled mode, the font-size of the subtitle was not used like defined in Sass file.Fixed #15234, #15213, #13492, #2022, axis options passed in when creating chart got mutated.Fixed #15217, bar chart tooltip position was wrong with centerInCategory enabled.Fixed #13646, the color option did not take effect in empty pie series.Fixed #13572, area series fill was not closed, making it hard to add a stroke for the area itself.Fixed #11687, drillUpButton did not have a fixed position when using scrollablePlotArea.Fixed #15134, updating networkgraph series color did not work.Fixed #14980, toggling stacking with centerInCategory enabled did not work.Fixed #15145, some data labels did not show in percent stacked bar or column charts when points were partially outside axis extremes.Fixed #9998, exporting menu was clipped below the chart.Fixed #10159, updating treemap data while traversed down threw.Fixed #11293, boosted chart rendered duplicate series when combined with responsive options.Fixed #15069, panning default type was missing.Fixed #14439, simulation of packedBubble stopping too early.Fixed #14448, #11614, drillup button disappeared when combined with a vertical scrollablePlotArea on inverted charts.  Highcharts v9.0.1 (2021-02-16) # Exposed Highcharts.AST and provided samples of overriding the HTML allow lists.Auto compute heading level for the pre-chart accessibility description.Added success callback for exportChartLocal, see #11403.  Bug fixes Fixed #12422 and #9124, un-boosted graphics remained visible after resetting zoom on boosted charts when using zones.Fixed #12517, resetZoomButton did not show when using scrollablePlotArea.Fixed #15045, centerInCategory did not work with columnrange series.Fixed #11909, updating boost options did not work.Fixed #12031, tooltip distance did not scale correctly with outside set to false.Fixed #12047, some columns were not completely vertical when using boost with useGPUTranslations set to false.Fixed #12061, stroke-width animation did not work when using zones.Fixed #13222, chart size was wrong after exiting fullscreen.Fixed #15022, vertical panning was limited to the first series extremes after zooming in.Fixed #15037, a regression causing failure with text parsing in PhantomJS.Fixed #8862, #12112, y-axis did not stay fixed after update when using scrollablePlotArea.Fixed #15009, setting className on points in venn series did not work.Fixed #12548, 3d scatter chart rendered no points when the first point had z set to null.Fixed #14973, pattern fill failed to render when <base> tag was present and window.location was manipulated via history.pushState.Fixed #14395, updating colorAxis legend layout did not work with non-cartesian series.Fixed #14954, offline export with styledMode enabled sometimes failed in IE.Fixed #14110, hovering labels with useHTML set to true threw in IE.  Highcharts v9.0.0 (2021-02-02) # Improved security by filtering all HTML configuration strings and abstract syntax trees through allow lists before inserting into the DOM.Added support for area series in 3D charts.Added new feature chart.zoomBySingleTouch to provide optional mouse-like selection zooming for touch devices. See #14775.Added accessibility support for legend title #(14872) and provided more intuitive legend item labels for assistive technology (#14837).  Upgrade notes Due to improved security, some tags or attributes may be removed from HTML configuration options like labels or tooltip formats and formatters. Read more in the docs on how to allow them.  Bug fixes Fixed #14138, tooltip was displayed outside plotArea for columns when they were exceeding yAxis extremes.Fixed #13490, point hovering effects such as tooltip stopped working after disabling chart.polar with update.Fixed #10322, limit local timezone to timestamps without timezone.Fixed #14910, centerInCategory broke after zooming twice.Fixed #8095, reset zoom button was not visible after drilldown.Fixed #14893, removed misleading default value in the labels.format docs.Fixed #11494, setting z-index on tooltip with outside set to true through chart options was not possible.Fixed #14351, solidgauge pane flickered on update.Fixed #14771, incorrect tooltip position on inverted chart with adjusted axis width.Fixed #14053, plot bands added before update with redraw set to false were not added when dynamically adding plot bands between the update and a redraw.Fixed #14148, waterfall chart with reversed yAxis rendered wrong stacking connectors.Fixed #14209, histogram after setData with empty array wasn't updated.Fixed #14876, minPointLength columns did not show for series with only zero values when combined with series with only negative values.Fixed #14834, colorAxis ignored reversed option set in chart config on update.Fixed #14793, Z axis broke on update.Fixed #14833, column series axis breaks did not render correctly.Fixed #14283, problems with dynamically updating the color axis visible property.Fixed #14858, left and right-aligned callout labels with the anchor above or below sometimes missed anchor lines when there was no room for a chevron.Fixed #13220, #12788, #12489, #11975, wrong pointer position after changing size or scale on a parent element. Chart.reflow now needs to be called after scale changes and Chart.updateContainerScaling has been removed.Fixed #14305, original chart options got mutated on update.Fixed #14830, exporting waterfall chart with stack labels and hidden series threw.Fixed #8635, zooming variwide chart did not work.Fixed #8742, some stackLabels did not render with dataLabels enabled.Fixed #8795, hovering the chart after zooming in and using setData with redraw set to false threw.Fixed #14549, incorrect clip-path for added axis.Fixed #13283, an issue with the data module's CSV parser. Hex colors (and any other strings following a hash) were treated as a comment and ignored.Fixed #14769, axis label formatter was called with NaN values when the axis was short and series consisted of only null values.Fixed #13996, #13488, pointer position was wrong after chart element was scrolled inside another element.Fixed #14773, styledMode pie series not updating color correctly second time.Fixed a11y issue with absolute positioning, touches #14090.Fixed the initialization of Time.variableTimezone, it caused Time to sometimes return the wrong time when useUTC was set to false.Fixed #14623, Point.colorIndex did not pick up Series.colorIndex updates.Fixed #14584, setting dataLabels.allowOverlap to false did not work properly for sankey series.Fixed #14624, panning.type enabled panning while panning.enabled = false.Fixed #14649, dynamically updating visual attributes on points in flag series did not work.Fixed #14637, setting pointPlacement to between placed line series points on ticks instead of between them.Fixed #14315, setting X axis extremes outside the chart series' data range threw.Fixed #14246, pie point stayed hidden after first legend item click when ignoreHiddenPoint was set to false.Fixed #14236, stacked area chart did not render correctly with the broken-axis module loaded and a gapSize greater than 0.Fixed #13948, exported PDFs containing linear gradients with multiple 0 offset stops had errors.Fixed #13961, datetime axis had missing ticks when Chart.time had half-hour timezone or timezoneOffset set.Fixed #13804, 3d pie animation in inactive tab threw.Fixed #13716, annotations added in responsive rules did not work.Fixed #14746, column chart with null data, datetime axis and useUTC set to false threw.Fixed #14765, Highcharts.patterns global was missing.Fixed #14444, boosted inverted chart had wrong clip-path.Fixed #14244, tooltip in column-based series with multiple xAxis had wrong position.Fixed #14362, no animation when a series was added dynamically.Fixed #14426, it was not possible to pan vertically to 0 after zooming.Fixed #14458, drilling down 3d chart points with the same name threw.Fixed #14425, last histogram bin sometimes had inaccurate x2.Fixed #14417, charts displayed parts of the data when min or max exceeded extreme values.Fixed #14397, networkgraph simulation restarted on series.update().Fixed #14078, all points rendered in all series with boost.usePreallocated on.Fixed #14428, enabling drilldown through Point.update() did not work.Fixed #14214, parliament chart (item series type) threw error on negative values. Negative values should be ignored like in the pie series.Fixed #14433, dependency wheel data labels had wrong position for items covering more than 180 degrees of the wheel.Fixed #14260, series graph color was affected by marker.fillColor in Boost.Fixed #14289, histogram series entered an infinite loop when passed certain data values.Fixed #14379, when scrollablePlotArea was enabled, gauge axis was not scrolling along.Fixed #14440, ColumnRangeSeries missed adjustForMissingColumns.Fixed #13277, event listener leakage in several series and export module.Fixed regressions with chart.update and chart.setSize, causing side effects like stacks not updating and series not.Fixed #14023, for small numbers and decimals argument set to zero, the numberFormater returned wrong values.Fixed #13957, added error handler while mixed series data in boost.Fixed #14883, prototype pollution was possible through the merge function.  Highcharts v8.2.2 (2020-10-22) #   Bug fixes Fixed #13811, Point.partialFill didn't override Series.partialFill.Fixed #14356, offline PDF export failed for larger datasets.Fixed #14352, wrong button text displayed when chart initialized with a table.Fixed #14349, first point being null broke the accessibility screen reader.Fixed #14366, error in boost module on older Windows installations.Fixed #14050, error when passing empty dataLabels array columnrange and related series.Fixed #14298, Chrome complained about touch events not being cancelable when calling preventDefault.Fixed #14310, addPlotBandOrLine didn't check if the axis was visible before rendering.Fixed #14278, first point was highlighted on long touch when the accessibility module was loaded.Fixed #13956, annotations had the wrong position for resized Y axis.Fixed #14230, chart.update failed to update time options in some cases.  Highcharts v8.2.0 (2020-08-20) # Internally reorganized source file structure and naming.Added defer as animation parameter, see #12901. This allows for granular deferring of series animation, labels etc.Added toggle feature for the data table in the export-data module. See #13690.Added support for configuring sonification options in the chart configuration, as well as support for disabling individual series, configuring master volume, and inverted polarity mapping. Note that chart configuration options are still considered experimental and may change.Added new option, time.moment, allowing the moment.js library to be used without being available in the window context.  Upgrade notes The file structure of ES modules has changed. This has no consequences when using master files as advised (like http://code.highcharts.com/es-modules/masters/highcharts.src.js), but may break when loading module files directly.  Bug fixes Fixed #13694, threshold wasn't respected when low was defined.Fixed #13553, exception on negative X values on logarithmic axis.Fixed #13737, a regression causing chart zoom to conflict with the browser's drag-and-drop behaviour.Fixed #13710, a regression causing errors on empty pie series.Fixed #13726, img and br tags in data labels not being proper XHTML on SVG export.Fixed #13538, softThreshold not working as expected when a threshold was set.Fixed #10555, scrollablePlotArea not rendering correctly on FireFox.Fixed #12959, #13937, drilldown did not work on treemap and sunburst series after update.Fixed #13789, incorrect arearange path on polar chart when the connectEnds option was set to false.[object Object].Fixed #13736, draggable annotations did not work on touch devices.Fixed #13707, view table link should be a button.Fixed #13864, better accessible legend item labels.Fixed #13729, focus issues with shift+tab.Fixed #13971, missing Series imports preventing some builds from the Download Builder to work.Fixed #13532, a regression in 8.1.0 causing annotations of type "label", "circle" and "rectangle" not to be editable.Fixed #13762, missing xAxis labels on a polar chart when the useHTML option was set to true.Fixed #13846, data labels were initially hidden in some pie chart instances due to overlapping detection.Fixed #12868, drag zoom was not working on multiple charts after scrolling.Fixed #13785, wrong CSV output for data without defined y value.Fixed #13771, polar chart tooltip was hidden when point value was equal to max.Fixed #13570, updating chart and networkgraph series simultaneously threw errors.Increased precision of sonification duration.  Highcharts v8.1.2 (2020-06-16) #   Bug fixes Fixed #13708, a regression breaking Highcharts.keys.Fixed #13680, chart.addSeries failed after calling chart.setSize on a chart with no data.Fixed #13698, a11y not working properly with user tabindex.Fixed #13674, a regression in v8.1.1 causing pie drilldown animation not to work.Fixed #13576, a regression causing drag and drop to fail for some values in the boxplot series.Fixed #13681, reference to global Highcharts scope in module mode made some modules crash when loaded as ES modules.Fixed #13608, a regression causing parallel axes to lose their positions after update.Fixed #13629, the innerSize of a pie series was set to 0 when there was also an additional gauge series.Fixed #13327, pattern fill was incorrect after chart export in Safari.Fixed #13641, legend click on mobile sometimes failed with accessibility module enabled.  Highcharts v8.1.1 (2020-06-09) # Added new option, plotOptions.column.centerInCategory. It centers columns within each category group, but avoiding gaps for null or missing points.Added deprecation error handling.Added support for selecting and dragging parentNode in the packed bubble series. See #11782.  Bug fixes Fixed #13559, no JavaScript execution should be allowed from chart configuration strings, except from callbacks like event handlers and formatters. This prevents JavaScript from being injected from forms and other inputs relaying directly to text properties in the chart config.Fixed #13541, chart.update with oneToOne failed when removing and adding series, if all series had explicit id's.Fixed issue with JS errors and malfunction on drill-up button on touch devices when the accessibility module was loaded.Fixed #12804, in sunburst charts, the drill-up button was visible after drilling up to the top level.Fixed #13554, a11y not supporting proximate legend layout.Fixed #13534, dragging points caused an error on iOS.Fixed #13369, edge case where ticks were different after changing series visibility.Fixed #13293, added the X value in exported data table if the point had defined name and xAxis was not a category type.Fixed #13590, CSS classes not being removed correctly, causing unwanted behaviour in pie chart hovering and unhovering.Fixed #13309, PDF exports always having landscape orientation when using the offline-exporting module.Fixed #13574, packed bubble size changed when other series were added.Fixed #13372, drilldown in horizontal item series was not allowed.Fixed #13420, adding annotation was not working on iOS devices.Fixed #13202, the lollipop series didn't work with all data formats.Fixed #13371, unable to display data labels in item series without setting series size.Fixed #12077, histogram long decimals crashed browsers.Fixed #13342, tooltip tracking was broken after height update.Fixed #13379, item series with no data threw an error.Fixed #12569, point hover state was lost when axis updated.Fixed #11501, 3D pie was not correctly exported to PDF with offline export.Fixed #13071, unnecessary network request in IE11.Fixed #13489, Chart.print() was not working correctly with highcharts-more.js (specifically network graphs) included.Fixed #13482, unable to disable markers in styled mode with a11y.Fixed #13463, closing export menu using ESC key should not move focus.Fixed #11750, series.opacity option was not respected when creating or updating series.Fixed #13308, empty space appeared on top and bottom of sankey chart when using the minLinkWidth option.Fixed #13375, events were not added to dynamically created plot bands and lines.Fixed #13421, animation was fired when zooming boosted series.Fixed #13353, item series - when rendered in a full circle, points overlapped.  Highcharts v8.1.0 (2020-05-05) # Added vertical panning to Highcharts. The chart.panning.type now accepts y directions.Added box options for yAxis.stackLabels: backgroundColor, borderWidth, borderRadius and borderColor. See #13330.Added new series label options, series.label.format and series.label.formatter.Added individual dash style settings for various parts of box plots. See #13065.Added language options for export-data table text, see #13166.Added ability to set markers of heatmap points to a custom shapes defined within SVGRenderer.prototype.symbols object, see #12508.  Upgrade notes The Axis class was refactored as part of the TypeScript migration. Axis extensions like log axis, broken axis, parallel axis, datetime axis and ordinal axis are now handled as compositions. Instead of adding multiple properties to the main axis instance, they now add a single object that holds all properties. This does not affect the options API, but it may affect implementations that are based on some of our samples that used the original properties. Our samples have been updated to use the new structure.For added type safety, we are now defining SVG path definition as two-dimensional arrays, or in TypeScript sense an array of tuples. So ['M', 0, 0, 'L', 100, 100] in the new implementation should be written [['M', 0, 0], ['L', 100, 100]]. We built in a converter for old paths, but there may be cases, like for example directly accessing SVGRenderer.crispLine, where it breaks.  Bug fixes Fixed issue with missing accessibility options in the API.Fixed #12767, exported data table had wrong points categories.Fixed #13305, focus border not updated with scrolling points.Fixed #11500, stack labels had a wrong position after moving X axis or Y axis.Fixed #13332, 3D column not working on IE browsers. Fixed fillSetter in cuboid methods.Fixed #13310, HTML tooltip did not stick on pointer contact when activated.Fixed #13136, couldn't set yAxis.tickAmount when the chart size was small.Fixed #13098, wordcloud animation options didn't work.Fixed #12656, drilldown points were wrong after click on axis label.Fixed #13204, multiple yAxis labels were not centered over the gridlines when rotation was set and alignTicks was enabled.Fixed #8280, 3D column zIndex was wrongly calculated on wide screens.Fixed #13101, pie with negative values threw error on drilldown.Fixed #13226, tooltip prevented interaction on other chart elements.Fixed #13169, a regression causing packed bubble's initial simulation not to work smoothly.Fixed #12163, width of button was not updated when the font weight changed. Also fixed #12165, errors on setting the button width to null.Fixed #13161, stacking was erroneously applied on xrange.Fixed #5999, point.color was not respected for boosted series.Fixed #13134, lollipop misaligned on errorbar series.Fixed #12979, console errors when updating an axis at the same time as updating a related annotation.Fixed #11928, 3D pie was misplaced after calling Series.update.Fixed #13110, chart.sonify was no longer working after v8.0.1.Fixed #13069, histogram produced the wrong number of bins when baseSeries was filled by points with negative values.Fixed #12027, print was not working correctly in packed bubble charts.Fixed #12991, scrollablePlotArea.minHeight was not responsive when changing window height.Fixed #13100, in organization charts, node data labels disappeared in some cases.Fixed #12883, legend pagination was not working correctly when the accessibility module was included.Fixed #13001, scrollablePlotArea not inheriting chart style. Also applied chart styles to tooltip container when tooltip.outside is true.Fixed #13070, annotation was not draggable when HTML label was used.Fixed #13077, the point.isInsidePlot method didn't handle polar charts.Fixed #11635, scrolling didn't trigger hiding of the tooltip when the cursor left the chart's container.Fixed #12091, could not update series shadows without disabling them first.Fixed #12994, tooltip.hideDelay of 0 was causing unexpected tooltip behavior.Fixed #11397, incorrect position of the focus border on text elements.Fixed issue with crosshair wrong position with shared tooltip, see #13002.  Highcharts v8.0.4 (2020-03-10) # Added new option, tooltip.stickOnContact, to allow the tooltip to stick when
 hovering it with the mouse or when touched.  Bug fixes Fixed #13042, getTimezoneOffset callback passed inconsistent value type.Fixed #13018, the vertical axis line and labels were incorrectly positioned when the pane.startAngle, xAxis.angle (inverted chart) or yAxis.angle (non-inverted chart) were set.Fixed #9682, touching legend prevented page scroll.Fixed #12870, hover point is not displayed when boost module is enabled.  Highcharts v8.0.3 (2020-03-05) #   Bug fixes Fixed #13053, a regression that removed the compatibility feature of calling Highcharts.Color without the new keyword.Fixed issue with wrong clipping during series animation when the chart was subject to responsive rules.  Highcharts v8.0.2 (2020-03-03) #   Bug fixes Fixed #13056, the highcharts-3d.js file was not compiled and distributed to code.highcharts.com and npm.  Highcharts v8.0.1 (2020-03-02) # Added new option for polar charts, pane.innerSize.Removed the experimental "Open in Highcharts Cloud" menu item of the export-data module.Added pie series dataLabel x and y position per point, see #12985.Added new option annotations.labelOptions.accessibility.description.Added accessibility functionality for annotations. Also added new option accessibility.point.valueDescriptionFormat.Added support for useHTML property to rotated data labels.Changed the default inactive.opacity for venn diagrams to ease perception, see #10663.Added new option pattern.patternTransform that allows SVG patternTransform functions on a pattern.Fullscreen module added. Allows using the chart.toggleFullscreen() method.Automatically dismiss popup content, such as tooltips, when user presses ESC key.Changed the behavior of keyboard navigation. It no longer opens export menu automatically, but sets focus to the button.Improvements to sonification.Introduced the new options plotOptions.series.custom, series.custom, and series.data.custom to store additional data for custom formatters and custom event callbacks.  Upgrade notes The Highcharts.Color constructor will not work without the new keyword. Use either new Highcharts.Color or the Highcharts.color factory.  Bug fixes Fixed wrong x-range drag handles issue with multiple series, see #12878.Fixed #12934, responsive rules didn't work for drill-up button initially.Fixed #12949, using multiple drilldown with data sorting threw an error.Fixed tooltip position on sankey diagram links and nodes when tooltip.followPointer was false.Fixed #12926, dumbbell marker was incorrectly colored after mouse out when series.marker.fillColor was defined.Fixed #11917, errors and failed rendering of sankey chart if the number of nodes was too great. Fixed by reducing the nodePadding below its setting to allocate space for all nodes.Added new option, annotations.shapes.src, see #12890.Fixed issues with tooltips and scrollable plot area. See #12416 and #12498.Fixed #11993, wordcloud looked incorrect after running setData().Fixed #12566, in the data module, empty points should be parsed to null instead of undefined.Fixed #12812, high contrast mode not detected in new Edge.Fixed #12666, node render to null increase the sum by set weight.Fixed #12514, data label position for column pyramid with 0 value.Fixed issue with wrong axis options after drilldown to treemap series, see #12326.Fixed #10162, RTL text was covered when using a text outline.Fixed issue with updating legend's font-size, see #12705.Fixed issue with pie series update to 3d, see #12714.Fixed #11148, a point should not be trackable when is out of his pane. Also, isInsidePlot() works for panes now.Fixed #12718, markers invisible on chart update from null points with a11y module.Fixed #12690, a11y module caused render issues for 3D funnel.Fixed issue with not visible column data label when a point has a small value, see #12688.Fixed #12711, missing border and background for split tooltip's header in styled mode.Fixed #12513, deselecting previously selected nodes did not work for networkgraph series.Fixed #12156, added series.inactive.enabled option to disable inactive state.Fixed #12453, node with 0 value was rendered on the Sankey and dependency wheel.Fixed #12424, enabling network graph series in legend used to throw errors.Fixed #12515, updating depth in 3D pie chart did not work.Fixed #4369, 3D columns had wrong zIndex with long charts.Fixed issue with disabled animation for empty pie, see #12619.Fixed issue with tooltip wrong position on a bar chart when xAxis top or height set, see #12589.Fixed #12648, datetime axis ticks were wrong in Indian time zone when close to the DST crossover.Fixed #12627, legend items in pie chart overlapped on drilldown.Fixed #5508, data labels were wrongly positioned on inverted 3D charts.Fixed #12484, drag markers for columns were not showing when highcharts-3d and draggable-points were loaded.  Highcharts v8.0.0 (2019-12-10) # Added new series type, radial bar chart. Under the hood, this is a column series in an inverted and polar chart.Added data sorting with animations on update.Added marker clusters  for scatter and map point series.Added new option accessibility.linkedDescription.Added new accessibility options with more flexibility for customizing the hidden screen reader regions. See #12095.Added flame chart demo.  Bug fixes Fixed #12053 and #12152, pattern fill issues. Introduced color.patternIndex option.Fixed #7255, trying to printing chart again, after cancelling in Safari, elements other than chart were not hidden.Fixed #12488, selection zoomed to wrong area in the Treemap series.Fixed issue with wrong extremes for bubble series when xAxis.max set, see #12543.Fixed #12549, disabling keyboard nav still added container tabindex.Fixed #12438, a regression causing the reset zoom button not to work with the a11y module on mobile.Fixed #12462, filename with forward slash (/) not being replaced with safe character when exported. Now replaced with -.Fixed issue with data labels visible despite point placed outside the plot area, see #12370.Fixed #12343, noData message was not visible with gauge series. Added 1 as default zIndex to render the message in front.Fixed #12500, updating dataLabel color from contrast to a different one was not working.Fixed #12459, annotation's control points were not draggable.Fixed #12425, updating sunburst series used to disable traversing.Fixed compatibility issues with menu navigation for screen readers.Fixed #12161, legend textDecoration hidden style not working on IE11 with accessibility module enabled.Improved handling of null point accessibility.Fixed #12090, a11y module broke legend navigation.Fixed minor bugs with keyboard navigation.Fixed #12434 and #12097, regression in venn series label positioning causing JavaScript error.Fixed #12445, updating borderColor and borderWidth didn't work for solid gauge series.Fixed #12421, high contrast mode used to throw errors when the colorAxis module was not loaded.Fixed #12390, not overlapping dataLabels after zoom in and zoom out were hidden.Fixed #12262, Sunburst did not use 100% of the plot area.Fixed #12374, sankey nodes were rearranged after redraw where the nodes.level option was used.Fixed #12295, null was used as event listener in drilldown module, which caused a JavaScript error when called.Fixed #12335, memory leaks in polar series after updating data set.Fixed #12333, setting data in treemap series with points with the same ID's did not render new points.Fixed #12289, sonification timeline issues with multiple charts.Fixed #11617, support tooltip.split with chart.scrollablePlotArea.Fixed #12267, error in waterfall chart when the series was invisible and the first value was below 0.Fixed #12248, the Y axis' range was disturbed on stacked (overlapping) waterfall chart.Fixed #11758, stackLabels in styled mode used to throw errors.  Highcharts v7.2.2 (2020-08-24) #   Bug fixes Backported the fix for #13559, JS execution allowed from chart config, to v7.  Highcharts v7.2.1 (2019-10-31) # Added feature to draw plot lines on radial axes from the inner to the outer radius of the main pane.Added support for combining tooltip.split and tooltip.outside.  Bug fixes Fixed #12222, empty pie series showing lineWidth after hover.Fixed #12223, animating halo for a slice in pie series used to throw errors.Fixed #12243, fill property on pattern fills was applied to the wrong element. Introduced new option, pattern.backgroundColor.Fixed #11644, extremes in color axis were incorrect when using tilemap series with very small values.Fixed #11738, updating treemap series with the same amount of points caused cells to disappear.Fixed #11650, added missing highcharts-tooltip-header classname to the tooltip's header.Fixed #12073, dragging an annotation used to change points' values too.Fixed #7559, error when updating a waterfall with first data value as sum or intermediate sum.Fixed #11776, data labels were not visible in 3D Column series.Fixed #12055, overlapping legend items when combining layout: 'proximate' and useHTML: true.Fixed #12064, redundant spaces separating class names in SVG class attributes.Fixed #12033, error when toggling stacking on area series with nulls.Improved screen reader compatibility for chart export menu.Fixed #11727, logarithmic yAxis with just one label sometimes was rendered with numerical errors.Fixed #11956, pointPlacement did not work for columns with just one category.Fixed #11955, incorrect point positions on inverted chart, when series.pointPlacement was set to between.Fixed #11966, using chart.setTitle() on a chart with scrollablePlotArea misplaced the title.Fixed #11510, points with a relatively very small z value were not displayed in a variwide chart.Fixed #11970, annotation's drag event was not fired.Fixed #11753, invalid label placement broke venn diagrams in certain scenarios.Fixed #11100, 3D columns were not animated on data update.Fixed #11476, inverted variwide chart with disabled X axis labels threw an error.Fixed #11801, dragging annotations did not prevent zooming in.Fixed #11897, combination of pie series and polar chart with panes threw an error.Fixed #11405, plotLines were rendered outside the bottom and left chart edge if the value was the same as the axis extreme.Fixed #11690, removed use of undefined global variable that broke support for ES modules.Fixed #11812, point colors were not changed if colorAxis was added in update.  Highcharts v7.2.0 (2019-09-03) # Added new top-level option, caption. The caption has similar structure to title and subtitle. It renders a chart description below the chart contents, supports reponsiveness and is part of exported charts.Added support for multiple color axes for almost all series.Added high-contrast-light and high-contrast-dark themes with 3:1 contrast against background.  Bug fixes Fixed #11792, error and invalid attributes in organization chart with one point.Fixed #11783, tooltip border and background disappeared when combining tooltip.outside and chart.styledMode.Fixed #7911, axis.reversed should not take effect on a linked axis if the parent axis had a different setting.Fixed #10962, stack labels were misaligned in variwide series.Fixed #11702, error in organization chart with certain relations, plus color was not always applied to nodes.Fixed #11717, loading network graph as ES6 module threw errors.Fixed #11609, prevented reflow of destroyed charts in IE and Edge.Fixed #11546, in packed bubble series parentNodes were missing after chart and series update.Fixed #11199, a regression causing wrong grid line placement in a single-item category axis.Fixed #11469, Series.remove() function didn't work properly with networkgraph and packedbubble series.  Highcharts v7.1.3 (2019-08-14) # Added new minLinkWidth option to sankey series.Added support for label.formatter callback for plot lines and plot bands.Made chart credits accessible to screen readers.Added support for number type in annotation.id, see #10648.Added crop and overflow options for stack labels.Added sensible defaults to plot lines and bands. A plot band can now be initialized with only a value, and a plot band with either from, to, or both.Added new option accessibility.pointNavigationThreshold.Improved keyboard navigation for inverted charts, including bar charts.Added support for Windows High Contrast Mode. A set of styling options are automatically set using chart/series/point update when WHCM is detected. The options automatically match the OS theme, but can be overridden with the new accessibility.highContrastTheme option.Added tooltip.className option for additional custom CSS class.Added support for layout around subtitles with verticalPosition bottom.  Upgrade notes Exact positioning of titles and subtitles with verticalPosition other than top may have changed since last version due to better layout handling.  Bug fixes Fixed #11632, using plotOptions.series.marker.radius for all nodes in a network graph did not prevent them from being cut off.Fixed #7650, hide hover points outside plot area. Fixed #11493, limit split tooltip to yAxis range.Fixed #11513, arearange failed to render when the data started with NaN.Fixed #7650 and #11493, points outside plot area were included as hover points, and were displayed in shared and split tooltip.Fixed #11505, gauge crashed when stacking options were present.Fixed #4024, stacking columns on different xAxis translated columns as in stacking on the same xAxis.Fixed #11329, tooltip transform/scaling issues.Fixed #11386, CSS filters were missing when chart.styledMode was enabled.Fixed #11388, error when applying empty data array to histogram series.Fixed #11389, inactive styles for dependency wheel series in styled mode were missing.Fixed #10542, showing and hiding series now also shows and hides them from assistive technology.Fixed #8608, bubble markers were hidden when Z value was missing.Fixed #11156, draggable did not work with group points and boost module.Fixed #11340, issue with exporting large amounts of data to CSV and XLS.Fixed #10561, issue with legend click on IE11 with a11y module.Fixed #11246, setting crosshair stroke-width in styled mode.Fixed #8735, gapSize did not work in boost mode.Fixed #10285, drag and drop module did not work with logarithmic axes.Fixed #10564, issue with tabbing to legend without chart height set.Fixed #11301, hovering legend item for a hidden series caused other series to get inactive state.Fixed #11169, undefined value was rendered in the loading label.Fixed #11244, series.update({ data }) did not preserve old options if data was passed as an array of objects.Fixed #10896, class name of series label was missing in styled mode.Fixed #11239, updating points in heatmap did not animate fill color.Fixed #11229, negative width and height were applied to heatmap shapes.Fixed #11212, selected state for a node in network graph was applied to all connected nodes.Fixed #11211, calling node.update() in networkgraph series caused errors in console.Fixed #10960, improved touch support on Windows devices.Fixed #11176, removing all nodes and links in a network graph would throw errors with circular data.Fixed #11095, updating data.switchRowsAndColumns worked only the first time.Fixed #11193, downloading the chart as image used to duplicate table created by exporting.showTable option.Fixed #11101, a regression causing crash on responsive chart when reverting to default options.Fixed #9377, added product tags in ES-modules.Fixed #11140, setting series.dataLabels.inside to true forced pie dataLabels to render as in contrast.Fixed #6657, inappropriate contrast color for first and last dataLabel in column/bar series.Fixed #11124, click on a node in networkgraph caused all nodes to reposition.Fixed #10597, issue with series type update after drilldown.Fixed #10861, a regression causing event handlers to pile up when running Chart.update or Series.update with new events options.Fixed #10518, rotation.orientations = 1 in wordcloud series resulted in rotation NaN, which made the SVG rendering of the word crash.Fixed #10498, a regression causing wrong chart width if a parent had transform style.Fixed #11015, removing an annotation did not deselect it, causing errors.Fixed #10522, series.colors was ignored in sunburst.Fixed #10941, null points with the same x-value in stacking were causing wrong offset for other points.Fixed #10984, networkgraph series did not render when loading data from CSV.Fixed #10993, in timeline series, points were visible outside the axis extremes.Fixed #10987, pareto series didn't refresh after updating baseSeries data with less than two points.Fixed issues #10510 and #10594 with pattern fills.Fixed #10930, sometimes data labels were not visible after zooming.Fixed #10961, annotations used to block mouseDown event.Fixed #10717, xAxis.reversed should reverse partialFill on xrange.Fixed #10671, a regression causing crash with responsive chart.spacing settings.Fixed #10699, inactive state was configured wrongly in venn series, causing bad opacity.Fixed #10952, plot background did not scale to scrollable plot area.Fixed #10791, disabled halo feature in Venn series. The docs said it was supported, though it didn't work well.Fixed #10909, subpixel precision caused unwanted space between the area series' area and baseline grid lines.Fixed #10943, TypeScript support for full-screen module (and other modules).Fixed #9099, getSelectedPoints did not include the currently selected or unselected point when called from inside series.point.events.select.Fixed #10874: tooltip wasn't formatted correctly for updated null points.Fixed #10670, heatmap points with zones and colorAxis did not restore colors after hover.Fixed #10323, on timeline series, data label's connector was hidden after setting extremes.Fixed #10524, wordcloud text with multiple words had different alignment than text with a single word.Fixed #10870, regression with Series.update updating marker symbol.Fixed issue with the data module failing on CORS resources.Fixed #10865, image markers in networkgraph used to throw errors in console.Fixed #10708, removed use of Array.prototype.findIndex which would cause Sankey series to break in IE.Fixed #10247, improved data label positions in venn series.  Highcharts v7.1.2 (2019-06-03) # Added new feature, vertically scrollable plot area. This adds native scrolling features vertically, and is enabled using the chart.scrollablePlotArea.minHeight setting.Deprecated the labels option in favor of annotations, see #10429.Added stack labels feature to waterfall series (#3165).Added auto alignment for solid gauges with two labels, see #10635.Improved performance for exporting packedbubble series.Added series.nodes[index].remove() method to networkgraph series to remove a node with all connected links. See #10565.Added support for percentage value in yAxis.labels.distance option for gauge series. See #10587.  Bug fixes Fixed #9269, problems with grid axis update. Modified the columns logic in GridAxis to only add one column (the master) to the public axes array, and the remaining to an internal columns array.Fixed issue with wrong clipping of inverted scrollable plot area (see #10786).Fixed #8607, tooltip was masked at the edges of the chart when chart.scrollablePlotArea was active. Changed the tooltip.outside option to default to true when using scrollable plot area.Fixed #10741, overlapping networkgraph points were dissappearing.Fixed #8417, stacked columns were overlapping after update to 3D.Fixed #9396, could not disable series label animation. Animation is now set to 20% of series.options.animation duration initially, and equal to chart.options.animation on updates.Fixed issue with sorting of events when addEvent was called with parameter options.order value of undefined.Fixed #3881, plotOptions.series trumped plotOptions[type] in chart instance options.Fixed #10669, sunburst didn´t show error when duplicate point id's were used.Fixed #8897, 3D columns were not visible when first series was initially hidden.Fixed #10491, responsive rules were ignored when `colorAxis` updated.Fixed #10737, exporting sunburst's data to CSV did not include points with the same name.Fixed #10713, initializing annotations in responsive rules didn't work.Fixed #9198, zones and negative color were not applied after series.setData.Fixed #10712, solid gauge data labels rendered below center by default. They are now vertically centered. Changed dataLabels.y default to 0.Fixed #10715, column collapsed after drilldown when the X axis labels became longer.Fixed issue with accessibility features not working for series without markers.Fixed #10696, sometimes series animation was missing when updating points via Series.setData().Fixed #10361, a regression causing clipping of the export menu below the chart.Fixed #10646, plotOptions.column.minPointLength drew zero points as negative.Fixed #10062, packed bubble series ignored lang.thousandsSep.Fixed #10630, null point was drawn in solid gauge.Fixed issue where accessible proxy buttons were wrongly positioned in some browsers.Fixed #10625, setData() in networkgraph series caused simulation to run from the initial state.Fixed #10637, the accessibility module increased the chart size.Fixed #10624, updating sankey while hovering a link caused errors.Fixed #10633, panning on mobile devices did not work when xAxis.max or xAxis.min options were set.Fixed #10628, adding annotations in chart's callback threw errors.Fixed #10572, dataRefreshRate didn't work properly for Google Spreadsheets.Fixed #10574, connectNulls could not be disabled in area with percent stacking.Fixed #10536, setting time on a chart instance altered global time.Fixed #10571, split tooltip didn't change stroke color while hovering when points in a single series had different colors.Fixed #10569, regression that caused missing series line after removing zones.Fixed #10516, extreme large zoom in Chrome did not render yAxis labels after zooming out.Fixed #10482, enhancement demo to adding points and lines.Fixed #10540, pie series did not animate slices when toggling legend items.Fixed #10545, networkgraph.dataLabels.linkTextPath did not remove artifical border around label.  Highcharts v7.1.1 (2019-04-09) # Added new option, chart.scrollablePlotArea.opacity, to control opacity of the scrollable mask. See #10416.  Upgrade notes Changed default states.inactive.opacity for map and mapline series to prevent dimming map shapes.  Bug fixes Fixed #10432, missing category name in tooltip when using boost module.Fixed #10466, reset zoom button moved offscreen when using scrollablePlotArea.Fixed #10471, pareto series wasn't rendering when baseSeries was set to first series by 0 number.Fixed #10496, data labels animated when series animation was turned off.Fixed #10504, after deselecting a column, inactive state was used instead of normal state.Fixed #10506, named colors did not work in boost mode.Fixed #4608, boost module highlighted wrong point on hover when chart was inverted. Added support for reversed axes in boost.Fixed #5268, series.threshold = null was ignored in boost mode.Fixed #6963, boost with enabled useGPUTranslations rendered incrorrectly when yAxis was logarithmic type.Fixed #9795, updating chart.spacing didn't reflow all elements.Fixed issue with range selector and time zones, test results were different depending on time zone.Fixed performance issue with sankey chart.  Highcharts v7.1.0 (2019-04-01) # Added Organization Chart series type.Added Item Chart series type for visualizing item counts and parliaments.Added Dependency Wheel series type.Added Timeline series type.Added 3D Pyramid and 3D Funnel series types.Accessibility - improved experience for screen reader users, support for dynamic data and drilldown, as well as support for voice input software.Added inactive states to series and points, allowing other series to be dimmed when the user is hovering the data or legend. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.Added levels to sankey series.Added annotation.events: add, afterUpdate and remove.Added full screen capabilities to exporting module.Added option series.treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.Added options plotOptions.sankey.borderWidth and sankey.borderColor for sankey nodes.Added force directed algorithm for improved packing of packed bubble charts.Added support for nested packed bubbles.Added Verlet integration for network graphs. Generally improved network graph algorithms.Added data labels to links in network graphs.  Upgrade notes Changed default X axis tickWidth option. Now tick marks are not rendered by default on category axes. Set the tickWidth to 1 to bring back the old behaviour.Renamed plotOptions.treemap.drillUpButton to traverseUpButton.The new inactive state makes other items dim when hovering a series. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.  Bug fixes Fixed #10009, wrong tooltip size with useHTML and varying text lengths.Fixed #10010, series.update destroyed points and lost their event handlers.Fixed #10031, long dataLabels for pie with useHTML: true, were generated with width less than 0.Fixed #10052, chart printing failed with error on IE11.Fixed #10055, exporting custom annotation did not work for other types than SVG.Fixed #10063, proximate legend layout did not account for axis top setting.Fixed #10081, chart with parallelCoordinates was not resizing properly after update.Fixed #10082, points below Y axis min in polar charts were drawn incorrectly.Fixed #10101, bubble legend was duplicated with map module.Fixed #10106, issue with the showEmpty feature.Fixed #10107, legend navigation required overly precise clicks/touches.Fixed #10115, vector and wind barb series didn't handle the clip option.Fixed #10127, treemap removed old classNames on update.Fixed #10131, error in draggable points after updating series.Fixed #10160, stacking null points from the same series threw unhandled exception.Fixed #10163, series.setData() did not remove old nodes for a networkgraph.Fixed #10167, a regression causing unwanted padding on top of legends in some cases.Fixed #10187, setData didn't update data when old data had null values and the same length.Fixed #10213, relative chart height didn't apply in responsive chart.Fixed #10220, visible parts on charts inside an element with visibility: hidden.Fixed #10225, histogram produced additional bin on the end.Fixed #10232, solid gauge series had wrong legend symbol.Fixed #10243, offline export failed with boost and hidden series.Fixed #10246, boost culling issue.Fixed #10265, class names were applied multiple times to elements, causing selected pies not to unselect after redraw.Fixed #10273, changing live data settings dynamically didn't take effect.Fixed #10282, overlap larger than smallest circle in venn diagrams.Fixed #10283, click events were not applied on scatter points with base tag present in Firefox.Fixed #10286, responsive setting of showInLegend failed.Fixed #10302, plot line events did not fire if the lines were initially outside visible range.Fixed #10312, keyboard navigation with no data.Fixed #10342, HTML split tooltip did not fade after series update if formatter returned a string.Fixed #10347, annotation-bindings were not compatible with IE11.Fixed #10352, replaced Math.sign() in networkgraph source code for IE compatibility.Fixed #10417, simulation for packed bubble series did not stop when exporting chart.Fixed #6234, some presentational options were not settable in zones in column series.Fixed #6404, plot band labels were not aligned correctly in gauge chart.Fixed #6894, yAxis.softMax didn't take effect on the other side of the zero plane.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7895, renamed and documented option in export-data module responsible for series data visibility in exported chart data - includeInDataExport.Fixed #8766, chart crashed when misconfiguring plotOptions.Fixed #8864, connectorColor didn't work for individual points.Fixed #9087, malformed exported SVG when SVG elements were added inside useHTML labels.Fixed #9128, #10025, histogram series had incorrect amount of free space between points.Fixed #9233, data labels and tooltip formatting was not supported for null points in heatmap.Fixed #9880, hover animation on xrange points was incorrect.Fixed #9917, chart.update with initial pane options did not change the pane.Fixed #9962, line series was not rendered in the boost mode, when all points were outside the extremes.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed #10161, wrong extremes in single category axis.  Highcharts v7.0.3 (2019-02-06) # Added option treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.  Upgrade notes Renamed plotOptions.treemap.allowDrillToNode to allowTraversingTree to avoid confusion with the drilldown module that has a different behaviour.  Bug fixes Fixed #10006, wrong intersection position in venn.Fixed #10038, series labels didn't fit on area series when rendered on data extreme.Fixed #3417, label text-anchor with empty align attribute was set to undefined.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7872, pass proper parameters to animation step when animation is skipped. Resolved issue with wrong column chart placement when rendered in a hidden tab.Fixed #9823, disabled draggable triggered drop event.Fixed #9838, dissappearing traverseUpButton.Fixed #9930, warnings of deprecated e.returnValue in Chrome console.Fixed #9944, incorrect Y axis extremes after zooming X axis with a column series.Fixed #9964, title top margin applied when text was empty.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed ARIA for show/hide legend items.Fixed draggable points capturing click events.Fixed endless recursion in sankey charts on circular data. See #8218.Fixed issue with series event handlers not surviving series.update. Partial fix for #10010.  Highcharts v7.0.2 (2019-01-17) # Added jitter feature to scatter plots.Added feature to set legend.width as a percentage, and restrain the default width to 50% for legends at the sides of the chart.Added overlap stacking to waterfall charts.  Bug fixes Fixed #6817, point click event didn't fire on the first touch.Fixed #7253, long legend titles were not wrapped, pushing the legend out of the chart.Fixed #7860, pointPlacement was not implemented for heatmap.Fixed #8160, treemap data labels overflowed on long words.Fixed #9617, chart update in responsive mode caused some of the responisve options noneffective.Fixed #9685, maximum call stack exceeded in venn diagrams in certain cases.Fixed #9694, tooltip was clipped when using the outside option and different series types.Fixed #9709, missing values when exporting data in venn.Fixed #9718 and #9768, incorrect overlap calculations in venn diagrams in some cases.Fixed #9728, incorrect handling of negative Z values in bubble chart styled mode.Fixed #9747, a regression causing upper area range data labels to get stuck after redrawing.Fixed #9749, memory building up and animation deferred on hidden pages.Fixed #9758, no-data module was ignoring boost points.Fixed #9761, X axis labels overlapped on polar chart with dense categories.Fixed #9762, series was referencing public object for userOptions and some updates were working in an unexpected way.Fixed #9779, rendering bug in svg2pdf.js caused filled rectangles in offline-exported PDF.Fixed #9794, wordcloud series didn't support state options.Fixed #9798, added ability to change options for particular link and improved nodes docs for networkgraph series.Fixed #9801, networkgraph was not compatible with no-data module.Fixed #9803, networkgraph throwing maximum call stack error with cyclical links.Fixed #9815, performance problem with series labels.Fixed #9818, bad rendering of sankey chart with unordered data.Fixed #9835, axis disappeared on rotating labels 180 degrees.Fixed #9841, a regression causing the Y axis to shrink in certain cases when setting xAxis.tickAmount.Fixed #9841, tickAmount axis option wasn't properly supporting false values for startOnTick and endOnTick.Fixed #9849, improved line height handling with non-pixel font-size units.Fixed #9861, error when updating the X value of data points that had an ID.Fixed #9869, tooltip on xrange series type was having misplaced point anchor due to some xAxis options. Closes #9727.Fixed #9871, a regression causing the chart width to be miscalculated when the container had a transform.Fixed an issue in series-label placement logic, labels gravitated to the right.  Highcharts v7.0.1 (2018-12-19) #   Bug fixes Fixed #4119, autogenerated series names were incorrect when index was used.Fixed #9572, chart with shared tooltip and boost module crashed when updating data and tooltip.Fixed #9636, boosted heatmap combination charts did not work.Fixed #9654, a regression causing charts to fail in old IE.Fixed #9678, a regression causing errors in bubble chart with all negative values.Fixed #9680, a regression causing chart generation to crash with wrong type on series config.Fixed #9690, a regression causing chart.scrollablePlotArea to fail in desktop browsers in v7.0.0.Fixed #9711, options argument was mutated after calling chart.update.  Highcharts v7.0.0 (2018-12-11) # Added sonification to the accessibility features.Added TypeScript support (Beta).Added bubble legends, legend items describing the scale of the bubbles.Added feature to match points by id when running setData.Added new series type force directed graph or network graph.Added new series type packed bubble.Added new series type 3D cylinder.Added new series type venn diagram.Added new series type column pyramid chart.Added editor features for annotations, allowing annotations to be added, updated and removed through a GUI.Added debug module for making chart errors visible in the chart.Default exported chart name is now based on the chart title.Added option chart.styledMode to replace the previous separate build of styled mode files.Added options to align pie chart data labels to the edges of the chart.  Upgrade notes If you use styled mode, the setup has changed. Instead of loading files from the code.highcharts.com/js folder, use the base JavaScript files, but set the chart.styledMode option to true.Polyfills are now needed for support in IE 6-8. Before including the highcharts.js file, load modules/oldie-polyfills.js in a conditional comment. Alternatively you can use your own polyfills or a third party library. See System Requirements.If the chart.height setting is higher than the CSS height of the container, the chart will now be clipped. This is a consequence of adapting the chart to table cells and flex layouts.  Bug fixes Corrected chart width for sub-pixel container width. Prevented overflow in flex-grids and table cells.Fixed #2617, wrong number of pages in legend with legend.maxHeight in some cases.Fixed #5293, pointBreak event for broken-axis module was not working for columnrange series type in case highcharts-more was loaded before broken-axis module.Fixed #5857, drilling down column charts to more than the cropThreshold caused lost categories on the X axis.Fixed #8105, split tooltip header couldn't be removed by options.Fixed #8680, responsive rules were not applied on annotations.Fixed #8818, shared tooltips in boost with column series.Fixed #9046, force boost check now takes plotOptions.series.visible into account.Fixed #9121, overlapping text labels with useHTML and styled mode.Fixed #9150, heatmap points were misplaced when using boost module without WebGL.Fixed #9156, export data download failed on iOS.Fixed #9197, no series animation on calling Chart.update with repeated options.Fixed #9200, errors in the console with small height and zones or negative colors.Fixed #9211, inverted heatmap in boost mode had wrong size when WebGL was disabled.Fixed #9226, Wrong number of series with indexex after update.Fixed #9247, console error on empty data labels in area range.Fixed #9248, on series hide/show yAxis extremes were not updated.Fixed #9252, added missing annotations.id documentation.Fixed #9258, remove use of id in default treemap data labels.Fixed #9270, series were removed from configuration options when invoking stock, map or gantt charts.Fixed #9278, drag and drop failing on mobile.Fixed #9289, avoid animating drilldown in wordcloud.Fixed #9291, correctly rounded default dataLablels for xrange series type.Fixed #9298, zooming problems with drag and drop.Fixed #9300, JS error when updating sankey series before it had been redrawn.Fixed #9301, regression in tooltip.headerFormat for xrange series.Fixed #9375, invalid attribute on SVG elements in solid gauge series.Fixed #9400, tooltip box border issues when defining font size inline.Fixed #9410, when using step in boost, the first point was wrong.Fixed #9481, annotations attached to hidden points were visible.Fixed #9485, selected state was not preserved after drilling down and up.Fixed #9487, category axis didn't update when more data than the cropThreshold. Closed #6926.Fixed #9504, some links rendered broken on inverted Sankey diagram.Fixed #9525, wrong number of points after update zoomed chart.Fixed #9533, printing chart via the export menu failed when scrollablePlotArea was active.Fixed #9537, ellipsis not applied to X axis labels when useHTML was true.Fixed #9562, wrong categories and data to axis mapping with uniqueNames and drilldown.Fixed #9565, dot delimiter on dates in CSV caused the format deduction to fail.Fixed #9618, setExtremes should trump axis.ceiling.Fixed #9623, 3D pie chart didn't hide when rendering inside a div with visibility: hide.Fixed #9166, off-screen markers clamped to plot width in boost.Fixed #9206, draggable points did not work with dynamic series.Fixed issue with a11y module sometimes throwing exception on init.  Highcharts v6.2.0 (2018-10-17) # Added support for multiple data labels on each single point.Added draggable points plugin as module.Added support for pointPlacement in X range charts, affecting the category Y axis. Closed #7419.  Bug fixes Fixed #2366, improved polar chart yAxis plotLines resize and animation.Fixed #4281, added information about point in tooltip's headerFormat.Fixed #6169. cropShoulder was inherited by column series, which set it to 0. Fixed by overriding to 1.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #9049, issue with lines to culled points in boost.Fixed #9052, conflict between settings boost.enabled and seriesThreshold.Fixed #9058, error when running chart tests in jsdom.Fixed #9088, updating a point in a pie chart threw errors when another slice was hovered.Fixed #9091, showCheckbox didn't work with layout proximate.Fixed #9097, chart.update error when removing axes and series.Fixed #9119, dataLabels sometimes overlapped stackLabels.Fixed animation of grid lines when changing axis extremes. Follow tick marks.  Highcharts v6.1.4 (2018-09-25) # Better polyfill for forEach in oldIE. See #8865.  Bug fixes Fixed #2165, legend.labelFormatter was not called when series' visiblity changed.Fixed #3495, export menu click was wrongly triggering chart's click event.Fixed #3739, changed rounding method to Math.foor for milliseconds dateFormat to match other date and time formats.Fixed #5009, performance problem with long text strings and word-wrap.Fixed #6405, Highcharts crashed when using category axis, small labels.step option and a large data range. Re-introduced error 19.Fixed #7484, followTouchMove didn't work properly on column series on mobile.Fixed #7815, data labels were visible even when points were hidden.Fixed #8652, replace max/min safe integer with max/min value in wordcloud to support IE11.Fixed #8865, wrong links in sankey chart if the columns didn't start from 0.Fixed #8874 and #8346, Highcharts.indexOfPolyfill wasn't supporting all required arguments.Fixed #8901, bubble chart calculated wrong extremes when either xAxis.min or xAxis.max was set.Fixed #8933, minPointLength squished all ranges to minimum length when xAxis was reversed.Fixed #8960, animation didn't run on Series.update() with new data.Fixed #8972, improved a way of assigning data to specific bins in histograms.Fixed #8994, a regression causing cropped legend items to become long after hover when useHTML was true. Regression since #8809.Fixed #8995, added support for duplicated x values for Series.setData.Fixed issue with tooltip header placement when scrollable plot area was activated.  Highcharts v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts v6.1.2 (2018-09-03) # Support for loading Highcharts as an AMD module.Added parameter to xAxis.labels.formatter in addition to scope, allowing arrow functions as formatters. Closes #8580.Adjusted the threshold for when a contrasted data label turns white or black.  Bug fixes Fixed #3589, inconsistent data label position in the waterfall series.Fixed #7097, rendering problem when animating 3D pie charts while hovering.Fixed #7484, update tooltip position when dragging and followTouchMove is enabled.Fixed #7649, error on 3d pie drilldown and drill up.Fixed #8024, empty gap in connector line in place of a null value.Fixed #8284, multiple markers did not follow points' positions when adding new points.Fixed #8355, error on running Series.setData on boosted series with the updatePoints parameter.Fixed #8506, refactored mapping data to appropriate bins in histograms. Closes #8646.Fixed #8529, not defining series in options for a 3D chart threw an error.Fixed #8532, hover color was ignored in sankey diagrams.Fixed #8561, legend keyboard navigation with useHTML.Fixed #8621, conditions extended in getSlotWidth wrap function.Fixed #8627, demo for legend navigation was not working correctly on Windows.Fixed #8633, implemented support for standard marker symbols in boost.Fixed #8638, legend with proximate layout was misplaced when all points were nulls.Fixed #8641, error on updating 3D chart when created empty.Fixed #8659, treemap child nodes were not clickable due to wrong animation of fill attribute to none.Fixed #8662, series names were random when seriesMapping object property had values more than 10.Fixed #8666, error in styled mode when trying to read a dataLabel style property.Fixed #8682, old sankey nodes were not destroyed when updating the series data.Fixed #8690, plotOptions.vector.rotationOrigin not working properly.Fixed #8699, flags were missing in current time frame.Fixed #8704, the useHTML option did not take effect on rotated data labels, specifically on the sunburst series.Fixed #8708, print chart sometimes showed empty chart in Chrome when Boost was enabled.Fixed #8713, setting cropThreshold on a windbarb series broke the chart.Fixed #8731, boosted area displayed beyond pane when threshold was outside pane.Fixed #8742, glitch in stack label overlapping detection.Fixed #8768, missing ticks at the end of datetime axes if local system was in a half-hour time zone.Fixed #8773, background color of scrollable plot are was not extended, caused page background to bleed through.Fixed #8777, IE7 didn't display pie chart due to badly named some function.Fixed #8789, a regression causing the axis labels to take up too much space in some cases when using HTML.Fixed #8791, solid gauge didn't respect updating colorIndex on points.Fixed #8795, console errors when zoomed in and using Series.setData with redraw set to false.Fixed #8797, scrolling not available when scrollablePlotArea was combined with responsive options.Fixed #8809, a regression causing misplaced HTML axis labels after drilling down and up.Fixed #8818, shared tooltip in boost mode didn't always pick up all points.Fixed #8820, chart.scrollablePlotArea option didn't play well with title.useHTML and other useHTML cases.Fixed #8824, make sure checkboxes stay fixed with chart.scrollablePlotArea enabled.Fixed #8830, orphaned data labels on points outside Y axis range on xrange series.Fixed #8834, exceptions on rendering stack labels on out-of-scale axis.Fixed #6794, 'cursor: pointer' wasn't working for data labels with 'useHTML: true'.  Highcharts v6.1.1 (2018-06-27) # Added new feature, proximate legend layout, to allow placing legend items close to the data series.Added new option, tooltip.outside, to allow the tooltip to render outside the confinement of the chart area. Closes #5784.Added clearer error reporting to offline exporting. Closes #8226.Added default for data.weight in Word Cloud.Added feature, event ordering for controlling what handler runs first when multiple modules are used.Added new default behaviour for sunburst data labels, rotationMode: 'auto'. Now the best fit will be calculated. See #8502.Added support for polar parallel coordinate charts (star plots).Added symbol for month number without leading zero. Closes #8150.  Bug fixes Fixed #4377, exporting context menu did not hide on button click.Fixed #8021, missing points after zoom in scatter 3d.Fixed #8031, columns overlapped xAxis.Fixed #8042, axis labels had the same slot width on 3d charts.Fixed #8140, series legend items didn't show up when colorAxis.showInlegend was false.Fixed #8159, useHTML caused that treemap data label was misplaced.Fixed #8163, added xAxis.reversedStacks option to control stacks order within a columns group.Fixed #8173, crosshair did not work properly with variwide.Fixed #8173, missing unit test.Fixed #8181, wordcloud missed large words.Fixed #8187, stackLabels in bar chart were misaligned.Fixed #8210, a regression causing axis labels to not expand after having ellipsis.Fixed #8214, missing space character before tracker class definition.Fixed #8234, a regression causing overlapping X axis labels on drilldown.Fixed #8241, use secure URLs in themes.Fixed #8243, the way of calculating axis slotWidth changed.Fixed #8245, regression causing data.parsed callback not being called on loading Google Spreadsheets.Fixed #8273, offline export bug due to nested function wrap.Fixed #8276, wrong z-index for halo in styled mode.Fixed #8277, missing top neck of reversed funnel.Fixed #8330, overlapping pie data labels due to a bug in the label distribution algorithm.Fixed #8358, export icon was not disabled using responsive rule.Fixed #8365, indicator calculated wrong values for long and short sma.Fixed #8377, chart disappeared after resizing a hidden chart inside a padded div.Fixed #8392, plotbands update zIndex issue.Fixed #8393, annotations are not exported when added dynamically.Fixed #8402, boost not rendering well with bubble chart and missing z values.Fixed #8406, colorAxis did not get new series extremes after chart update.Fixed #8407, scatter series added to a 3D chart via chart.addSeries was not converted to a scatter3d series.Fixed #8415, className option did not work on plot lines.Fixed #8428, pie chart slice did not show after visibility changes.Fixed #8438, combination charts from CSV didn't lay out properly without seriesMapping.Fixed #8444, axis title rendered a title tag when wrapped across two or more lines.Fixed #8456, improved 3d projection matrix property.Fixed #8467, regression causing long axis labels being clipped when using HTML in combination with whiteSpace: nowrap.Fixed #8477, plot line labels didn't work in browsers that support Array.prototype.flat.Fixed #8478, a regression causing duplicated legend items when using color axis and dynamically adding series.Fixed #8481, chart update with type: bar didn't work.Fixed #8494, incorrect assignment in data export for multiple pie charts.Fixed #8515, padding was not applied to data labels in sunburst series.Fixed #8531, random data labels in sunburst chart were hidden.Fixed #8181, regression with drilling up by clicking root node in Sunburst.Fixed build scripts which returned to early, instead of waiting for promise to resolve.Fixed disabling animation in pattern fills.Fixed export menu rendering below axis when scrollablePlotArea was used. See #8316.Fixed issue where image patterns could not have translucent opacity with default animation.Fixed issue with scrollablePlotArea being applied on exported charts. See #8316.Fixed issue with image patterns in IE not always being shown if images were cached.Fixed issue with initialValue was always supplied to reduce.Fixed scrollablePlotArea, the scroll jumped back to original scrollPositionX after toggling series. See #8316.Fixed stuck series labels.  Highcharts v6.1.0 (2018-04-13) # Added feature for loading data directly from a CSV URL or JSON resource, and keeping it dynamically updated through the data.enablePolling option.Added examples of themes with styled mode: dark-unica, sand-signika, grid-light.Added feature to animate the series when updating data through Series.setData, Series.update or Chart.update. The new logic looks for matching X values and can be disabled through setData's updatePoints option.Added Open in Cloud functionality in the export-data module.Added pattern fill module.Added new feature, chart.scrollablePlotArea, to provide smooth scrolling of data on small devices.Added animation parameter to Chart.update.Added default max-width for pie data labels to avoid long labels squeezing the pie itself.Added new option, data.beforeParse, to allow modifying the CSV when using the data.csvURL option.Added new option, legend.alignColumns, providing better default layout for multiline horizontal legends.Added support for Infinity and -Infinity values for plotOptions.area.threshold, to make the area extend towards either Y axis extreme. Closes #8139.Added support for nested series.keys.Added options minFontSize and maxFontSize to Wordcloud.  Bug fixes Fixed #7792 #7791, inverted charts not clipping correctly in Boost.Added max distance to the label distribution function, so pie data labels and flags are not drawn too far away from the anchor point.Fixed #4881, data labels with useHTML caused recursion error in Firefox on Windows.Fixed #7026, export-data did not work when the boost module was active.Fixed #7103, dataLabels not cropped outside extremes.Fixed #7186, added new build script to dist task. Build and includes es-modules in distribution.Fixed #7362, dataLabels were overlapping when rotation was set.Fixed #7383, SVG title tag not configurable.Fixed #7491, missing words in Wordcloud because of too small playing field.Fixed #7604, axes ticks were wrongly aligned when startOnTick or endOnTick were set to alse.Fixed #7639, wrong extremes after repeated zoom in scatter charts.Fixed #7798, stack labels weren't correctly positioned with multiple yAxis.Fixed #7850, legacy IE wasn't getting classes of DOM elements correctly.Fixed #7857, panning was not working when xAxis was reversed.Fixed #7862, connector lines were not visible in waterfall series when negativeColor was used.Fixed #7874, wrong legend item positions when using HTML after setting chart size.Fixed #7894, legend.verticalAlign top failed with no chart title.Fixed #7896, streamgraph rendering and tooltip issues with single series.Fixed #7898, drillup button with long text was not correctly aligned after multi-level drilldown.Fixed #7906, error in gauge chart if no yAxis.labels config was provided in styled mode.Fixed #7931, error in series-label module when animating while chart was destroyed.Fixed #7933, setting startPoint dynamically failed when data set was empty initially.Fixed #7942, yAxis ticks and title had wrong positions after toggling series visibility.Fixed #7957, custom buttons in exporting didn't rescale image symbols.Fixed #7965, could not toggle the chart.reflow option dynamically with chart.update().Fixed #7968, a regression causing ellipsis setting xAxis.labels.style not to work.Fixed #7975, long pie chart data labels were not correctly truncated, and could not be disabled.Fixed #7986, invalid exported CSS when using comma item delimiter and best-guess decimal point in European locales.Fixed #7991, treemap had wrong root on export.Fixed #7996, polar chart with particular values was rendered wrong.Fixed #8008, drilldown data points set as arrays with keys failed.Fixed #8014, Chart.setTitle didn't result in legend position updating.Fixed #8060, markers flickering after setData() when redraw was deferred.Fixed #8073, animation of graph with center step was distorted.Fixed #8075, adding and removing axes dynamically caused redraw error.Fixed #8083, wrong crosshair width and position for variwide chart.Fixed #8092, plotOptions.bubble.sizeByAbsoluteValue did not render bubbles when z-values were very close.Fixed #8100, arearange markers did not correctly support negativeColor and zones.Fixed #8101, wrong decimal separator in tooltip with multiple values.Fixed #8104, selected state attributes for a point were not applied in xrange series.Fixed #8106, context was not preserved inside lin2log and log2lin axis functions.Fixed #8119, point class name was not applied to the halo and connector.Fixed #8129, yAxis with tickPixelInterval=1 rendered tick close to zero instead of zero.Fixed Series.update to support soft series name without recreating series.Fixed data module failing to initialize chart when the data config was empty.Fixed errors in plugins when destroying a chart from its own callback.Fixed issue with legend navigation sometimes not focusing for single legend item charts.Fixed issues with resizing points with autocalculated pattern dimensions.  Highcharts v6.0.7 (2018-02-16) # Added internationalization support for the accessibility module. See lang.accessibility.  Bug fixes Fixed #150, grid lines did not always align to plot border and to other axis' grid lines.Fixed #1813, graphs and areas were not clipped when exceeding perimeter in polar charts.Fixed #7191, level options was applied to wrong level in treemap when levelIsConstant is false.Fixed #7729, highcharts-more.js couldn't be included multiple times without errors.Fixed #7787, a regression causing incorrect title alignment when useHTML was enabled in v6.0.5.Fixed #7800, error on hovering points in IE11 + compatibility mode.Fixed #7806, API reference had a wrong extend for bullet's targetOptions.Fixed #7812, a regression causing wrong initial position of text with useHTML.Fixed #7814, multiline axis title didn't reflow to chart resize.Fixed #7817, regression with categories in drilldown. Point names were not properly purged from Axis.names array.Fixed #7825, histogram threw error if the base series had equaled values.Fixed #7826, annotations were hidden if the points had disabled markers.Fixed #7850, legacy IE event for onContainerMouseDown wasn't provided properly.Fixed #7854, accessibility of datetime charts.  Highcharts v6.0.6 (2018-02-05) #   Bug fixes Fixed #7700, SVG offline export in styled mode in IE11 added length to styles.Fixed failing test on FireFox, getBBox() shouldn't be used on clipRect elements.Fixed issue with markers always being visible when using GPU translations in boost.Fixed syntax error causing missing sunburst.js file in distributions, see #7775.Fixed #7730, connectNulls in Boost failed with zooming.Fixed #7716, point padding caused extra points where there should be none. See.  Highcharts v6.0.5 (2018-01-31) # Added states.normal to allow disabling animation after point or series hover.Added chart-level time options.Added new sankey options, node.column and node.offset.Added option, series.marker.enabledThreshold, for setting the break point between enabling and disabling markers.Added support for connectNulls in the Boost module. See #7395 and #7631.  Bug fixes Fixed #4647, custom buttons from exporting can be created without tooltip.Fixed #4699, lines pass through data points in inverted waterfall.Fixed #6712, xAxis.scrollbar was not listed in the API docs.Fixed #6985, arearange didn't remove old markers on zoom.Fixed #7179, HTML entities were not escaped in title elements.Fixed #7273, disabled markers caused wrong offset on a point hover with image as symbol.Fixed #7281, streamgraph gave wrong Y axis extremes when yAxis.reversedStacks was false.Fixed #7388. added option sunburst.levelSize and sunburst.levels.levelSize to customize ring sizes.Fixed #7467, rangeSelector.selected didn't work on a year buttons with offsetMin.Fixed #7499, errors and bad redrawing on adding and removing series with Boost module.Fixed #7507, windbarbs immediately on the edge of a zoomed chart were mispositioned.Fixed #7515, null X values in all data points of one series caused all other series to hide.Fixed #7517, sunburst used wrong value to calculate size of root node.Fixed #7523, error on drilldown in styled mode.Fixed #7529, regression with label positioning and useHTML in Edge and IE.Fixed #7534, point.isInside was set to true in a cropped point - added extra check for a point's graphic prop.Fixed #7538, offline PDF export did not handle fonts with multiple charts.Fixed #7555, huge peak values caused smaller values not to render when zooming in on stacked area chart.Fixed #7557, arearange series in boost mode threw errors when zooming out from SVG mode.Fixed #7597, added property outerArcLength to sunburst as an alternative filter to innerArcLength.Fixed #7600, Chart.update with drilldown didn't work.Fixed #7602, error on calling chart.drillUp when chart was not drilled into.Fixed #7607, box plot whiskers and median appeared on hover if their width was set to 0.Fixed #7611, null pointer exception on destroying the chart from selection event.Fixed #7617, xrange series had mispositioned partialFill after zooming in.Fixed #7621, hourly datetime label was skipped instead of repeated when crossing DST change.Fixed #7633, style CSP error when using legend.useHTML.Fixed #7634, errors when using the Boost module in combination with non-boostable series types.Fixed #7646, tooltip didn't work on flags in boosted chart.Fixed #7656, major performance hits when using axis labels with useHTML = true.Fixed #7663, data labels in variablePie were wrongly positioned.Fixed #7667, waterfall caused errors when stacking null points.Fixed #7669, annotations not working in styled mode.Fixed #7677, after removing an annotation the chart threw errors.Fixed #7681, point halo stayed after pie resizing.Fixed #7696, improved documentation for tooltip.split and tooltip.shared options.Fixed #7709, a regression causing plot bands not to render if from or to was Infinity.Fixed #7725, slow performance when using xAxis.uniqueNames and lots of categories.Fixed #7726, synced charts failed with disabled xAxis.crosshairs.snap.  Highcharts v6.0.4 (2017-12-15) # Added feature, xAxis.labels.reserveSpace option only worked when setting it to false, could not be set to true to force reserved space. See #5286.Added new option on flag series, allowOverlapX, to be able to toggle the new feature of overlap avoidance. See #4674.Made keyboard navigation for points work more intuitively, highlights last/first point depending on direction, and wraps around at end.Added option data.sliced and slicedOffset in Sunburst.  Upgrade notes Highcharts now makes room for the legend in the layout if it has verticalAlign: 'top' with a horizontal legend. In existing charts using this layout, the layout of the legend and the plot area may be affected.Fixed #1019, right mouse button dragging should not #1344 trigger zoom**.  Bug fixes Moved accessibility of tables to export-data module. Fixes #7400 and #7486.Fixed #1019, right mouse button dragging should not trigger zoom.Fixed #3965, tickAmount was adding ticks only with bigger value than max for single value axis.Fixed #4939, null points in box plot caused the Y axis extremes to fail and all valid points were lost.Fixed #4958, the pointIntervalUnit option didn't handle the DST crossover correctly when set to 'days'.Fixed #6096, reset zoom button covered the tooltip.Fixed #7042, very small values were not respecting the decimals setting in numberFormat function.Fixed #7226, zooming was not possible when softMin and softMax were set.Fixed #7248, labels in polar charts were clipped when overflowing the chart edges.Fixed #7287, some nested HTML elements in SVG were updating wrong groups.Fixed #7314, Updated wordcloud to use font family sans-serif by default.Fixed #7363, a regression in animation logic causing sunburst data labels not to show after drilling.Fixed #7381, vector series points were visible outside current plot area.Fixed #7384, data label was not visible after drilling up in pie and column charts in Chrome.Fixed #7394, Infinity value broke heatmaps and potentially other charts. See also #3571.Fixed #7397, updating chart type changed rendered series Z index.Fixed #7404, data export from pie chart failed if the point name was an empty string.Fixed #7405, small numbers in exponential notation were wrongly interpreting decimals.Fixed #7406, heatmap was faded when hovering legend in styled mode.Fixed #7411, chart axis disappeared with hidden series in navigator.Fixed #7413, setting drilldown.animation.duration to 0 caused orphaned column shapes after drilling up.Fixed #7414, data label text color was wrong with rotated labels in styled mode.Fixed #7415, keyboard navigation not working with legend paging.Fixed #7418, event handling in iOS led to all series being faded out in styled mode after tapping close to legend items.Fixed #7420, a regression causing stacked column graphs to fail when threshold was null.Fixed #7421, added keyboardNavigation.mode option with serializing functionality.Fixed #7423, bad default behavior for accessibility skipNullPoints and pointDescriptionThreshold.Fixed #7428, legend overlapped title and subtitle when vertically aligned to top.Fixed #7432, ticks not correctly placed on midnight in some cases when the first tick was close to DST crossover.Fixed #7437, a regression causing 3d pie slices not to move on second update using Chart.setSize().Fixed #7439, errors on drilling down in styled mode treemap.Fixed #7448, CSV export problem with auto-detecting decimal points and item delimiters. Item delimiters now default to ; if the detected browser locale has , for decimal points.Fixed #7451, a regression causing panning out of data bounds on category axes.Fixed #7457, function was not accepted as binsNumber for histogram series.Fixed #7463, extra tick was inserted on zoom when using the xAxis.tickPositions option.Fixed #7475, a regression causing xAxis.label.overflow: false not to work.Fixed #7477, 3D line series moved as series visibility was toggled.Fixed #7478, plot border didn't redraw when animation was active.Fixed #7481, error in stacked chart with predefined axis bounds using boost.Fixed #7485, Mozilla Addons Linter found a bad word in the source code.Fixed #7489, sankey chart was not compatible with no-data module.Fixed #7493, stacked area chart didn't respect connectNulls: false after updating point to null.Fixed #7494, chart height increased on window resize in styled mode.Fixed #7495, small gaps were visible between the halo and the pie slices in pie charts due to SVG anti aliasing.Fixed #7507, visible and misplaced wind barbs when outside plot area.Fixed wrong context in animation complete callback when skipping animation due to equal attributes. See #7146.  Highcharts v6.0.3 (2017-11-14) # Added new option, dataLabels.filter, for a declarative way of filtering data labels without using the formatter.  Bug fixes Fixed #1841, bad animation when adding points in area ranges.Fixed #4994, improved documentation on loading Highcharts in ES6.Fixed #6183, small tick interval caused ticks to be merged to one.Fixed #6895, zoomed heat map wastn't clipped properly in boost mode.Fixed #6907, no focus indicator on some browsers.Fixed #7300, font-size in wordcloud was not set as pixels, causing Firefox to render all words equal size.Fixed #7311, minPointLength wasn't correct for some cases.Fixed #7315, marker was listed as a column series option.Fixed #7315, removed wrong docs for series.column.marker and for shadow in hover and select states in column.states.Fixed #7316, null text with useHTML was throwing an error on getBBox().Fixed #7320, a regression causing responsive options for axes and series not being unset.Fixed #7326, setData with equal data length caused badly drawn stacked area series with null points.Fixed #7332, X-range data labels were not hidden for off-screen elements.Fixed #7339, removed doubled axis ticks in case of too dense ticks.Fixed #7342, improved documentation for xAxis.Fixed #7351, dynamically added checkboxes didn't respect scrolling after update.Fixed #7357, a chart without a title threw an error when trying to export data.Fixed #7369, scatter chart with series containing points with null and negative X didn't render.Fixed #7371, sunburst chart failed in styled mode.Fixed #7377, approximation averages wasn't returning undefined values as it should.Fixed issue with date parsing error appearing when not necessary.Fixed issue with markup passing unfiltered into aria-label attributes, causing invalid SVG.Fixed jsdoc plugin. Load highcharts assembler from npm.Fixed keyboard navigation for maps and heatmaps.Fixed navigator update issue. See #5846.  Highcharts v6.0.2 (2017-10-20) # Added nodeFormatter property to data labels and tooltips in the sankey diagram. Closes #7284.Added center algorithm, square and rectangular spirals to Wordcloud. See #7241.  Bug fixes Fixed #7272, regression with columnStart in data module.Fixed #6103, reset zoom button not playing well with drill up button.Fixed #7224, legend item text not positioned properly when useHTML is enabled. Closes #7254.Fixed #7238, useHTML didn't have an effect with split tooltip.Fixed #7243, updating pie series point color didn't update connector color.Fixed #7260, a regression causing the legend box not being resized when dynamically adding and removing series.Fixed #7264, wordcloud did not support the no-data-to-display module.Fixed #7265, a regression with causing data.endRow to be offset by one.Fixed #7280, a regression causing mispositioned HTML data labels on pie charts.  Highcharts v6.0.1 (2017-10-05) #   Bug fixes Fixed #7223, regression in v6 causing stock charts and certain features to crash in IE.Fixed #7228, regression in v6 causing columns with only negative values not to render.  Highcharts v6.0.0 (2017-10-04) # Added Annotations module for annotating a chart with labels or shapes.Added the Boost module for WebGL rendering of millions of points.Added the Series labels module for organic positioning of labels next to the data.Decoupled old IE code into a separate module.Added new series type, bell curve.Added new series type, bullet chart.Added new series type, histogram.Added new chart layout, parallel coordinates chart.Added new series type, pareto chart.Added new series type, sankey chart.Added new series type, 3D scatter chart.Added new series type, stream graph.Added new series type, sunburst.Added new series type, variable pie.Added new series type, variwide.Added new series type, vector plot.Added new series type, wind barbs.Added new series type, word cloud.Added new series type, X range.Improved CSV parser of the data module.  Bug fixes Fixed #5909, plotband border on top was missing.Fixed #6005, selected pie slice had wrong color in styled mode.Fixed #6261, a regression causing charts to draw at small heights if container size was small.Fixed #6268, Chart.update() did not update parameters of the data module.Fixed #6302, chart was not rendered when xAxis.max and rangeselector.selected were defined.Fixed #6648, the redraw parameter in Series.setVisible was not respected when Boost module was loaded.Fixed #6679, a regression causing drilldown not to fire the second time in certain cases.Fixed #6957, when tooltip.useHTML was true on a map and other series types, the shape would flicker and tooltip hide in IE and Edge.Fixed #6992, error in data label positioning with really small pies.Fixed #7012, series group was wrongly translated when 3d columns were added to graph.Fixed #7021, cleared duplicated marker reference.Fixed #7024, regression causing charts not to show when preliminary rendering within a child of a detached node.Fixed #7025, treemap with color axis didn't work in styled mode.Fixed #7030, added highcharts.scss to distribution.Fixed #7031, could not set up Highcharts with a custom window object.Fixed #7034, color tweening from a named (unrecognized) color to a hex color failed.Fixed #7046, a zero value point using minPointLength was always shown as a positive value point.Fixed #7061, line was missing after zooming between points.Fixed #7080, JS error on adding rotated data labels with shadow applied.Fixed #7084, high or non-ASCII characters in CSV file were not exported correctly in IE.Fixed #7088, series didn't hide dynamically in Boost mode.Fixed #7090, offline generated PDF showed hidden series.Fixed #7112, pie chart data labels were visible for negative values.Fixed #7113, updating a pie chart to all negative values didn't clear the slices.Fixed #7115, version format not validated by yarn.Fixed #7117, plot line label had wrong position in polar charts with circular grid lines.Fixed #7126, less than sign followed by a space was interpreted as markup.Fixed #7127, exception in Pointer when updating a series from its own mouseOver event handler.Fixed #7128, data export with combined scatter and column series inserted too many rows.Fixed #7160, treemap should not display halo on hover.Fixed #7175, NaN in text position of plot band label after toggling series visibility.Fixed #7180, disabling tooltip caused event flooding.Fixed #7188, null points creates issues for shared tooltip, when there is more than one point with same x value.Fixed #7193, fixed #7159, hoverPoints in boost mode was not usable for Tooltip.Fixed #7028, axis label width style wasn't respected if there was enough space to render wider labels.  Highcharts v5.0.14 (2017-07-28) #   Bug fixes Fixed #7014, a regression causing JS error when writing a new chart to a node that was originally detached.Fixed JS error on inverted, bosted charts.  Highcharts v5.0.13 (2017-07-27) # Added pos, axis position, to axis label formats. Closes #6859.Added accessibility.keyboardNavigation.tabThroughPoints option, ref #6886.Added legend.keyboardNavigation.enabled option, ref #6838.Added color animation on state change for non-marker based series like columns and tree maps.Added feature to line-wrap long axis titles by default. Fixed #6893, causing multiline axis titles to overlap axis labels.Added new option, exporting.menuItemDefinitions, and allow string keys to be used in the menuItems instead of redefining full objects.Added new option, yAxis.stackLabels.allowOverlap, to prevent stack labels from overlapping. Closes #6876.Added new parameter oneToOne to the chart.update function. This allows for easier integration of Highcharts into dashboard solutions and wrapper APIs.Added markers to arearange and areapsplinerange series. Closed #6736.Removed error message 27 because of conflict when using highcharts-more with maps module. See #6686.  Bug fixes Fixes #6981, wrong layout on inverted heatmaps.Fixed #3946, stackLabels were not working in 3D column chart.Fixed #4853, legend's border wasn't respecting checkboxes.Fixed #5783, the chart width and text bounding boxes were not picked up when the chart was rendered to an element that was detached from the DOM.Fixed #6115, returning an array from tooltip formatter with false value didn't hide split tooltip item.Fixed #6342, class names were not updated on HTML elements.Fixed #6418, HTML data labels and refreshing and deleting caused JavaScript exceptions.Fixed #6616, the border was drawn in a full circle pie slice.Fixed #6695, cursor pointer was missing on drilldown line charts.Fixed #6708, 0 value bars were incorrectly drawn in 3D chart.Fixed #6740, tooltip not hidden when tabbing out of chart.Fixed #6746, events for legacy IE (6-8) didn't have unique keys.Fixed #6747, crosshairs in column charts caused flickering on mouse move in IE and Edge.Fixed #6752, activeDataLabelStyle used to override dataLabel's styles set on a point.Fixed #6760, tooltip.enabled: false did not respond to responsive configuration.Fixed #6761, scatter series data was not correctly exported in the export-data module.Fixed #6763, treemap was missing directTouch property, causing color axis marker to disappear.Fixed #6764, fixed #6791, fixed #6808, addition #6687. Series with noSharedTooltip was unaccessible when tooltip was shared.Fixed #6769, hidden series legend had invalid stroke-width attribute.Fixed #6773, updating xAxis.range didn't change extremes.Fixed #6774, exponential numbers were not correctly handled by number formatter.Fixed #6776, color animation was not working correctly for flags and 3D columns.Fixed #6778, new ellipsis functionality did not account for rotation.Fixed #6781, dataLabels were misaligned on inverted chart when configured xAxis.height.Fixed #6784, 3D draggable scatter demo didn't work on touch devices.Fixed #6792, updating point.marker.symbol to null didn't restore default point's marker.Fixed #6803, charts inside display:none divs became visible in Edge and IE.Fixed #6804, not able to touch-scroll the page on chart with zoom.Fixed #6831, tooltip border color was ignored by split option.Fixed #6835, columnrange disappeared when zooming too far in.Fixed #6838, consider hidden series in keyboard navigation.Fixed #6841, the dataLabels.crop option had no effect on pie charts.Fixed #6860, crosshairs on multiple axis was drawn on wrong position.Fixed #6879, shadow was not applied for split toolip.Fixed #6888, legend.update caused color axis to disappear in heat maps.Fixed #6897, prevented axis extremes change in case of a single point if multiple ticks are set.Fixed #6898, 3d pie chart had wrong color for sides in styled mode.Fixed #6900, column border radius was not respected in styled mode.Fixed #6912, responsive rules affecting series killed animation and data labels.Fixed #6956, improved colors and treemap for IE8.Fixed #6968, chart height didn't reflow when chart.width was set.Fixed #6970, flags were not filled in styled mode.Fixed #6971, rounding errors caused flickering of solid gauge backgrounds in semi circles.Fixed #6988, dataClass.color should be ignored in styled mode.  Highcharts v5.0.12 (2017-05-24) # Added core support for color animation.Added error message on trying to define the same series type twice. Fixes #6686.Let Series.update fall back to the optimized Series.setData if only the data is updated.  Bug fixes Fixed #223, pie chart data labels were not truncated to chart area when pie size was explicitly set.Fixed #3160, let the xAxis.offset option modify the clip area to avoid clipping line graphs.Fixed #4588, loading and "no data" labels overlapped.Fixed #4921, ignoreHiddenSeries caused wrong column position and width after hiding and showing all series.Fixed #6307, offline export issues with styled mode in IE and Edge.Fixed #6517, regression with shared tooltip and columns. Tooltip not following mouse move.Fixed #6659, long series name in legend broke the geometry of the chart. Added textOverflow and max width to default itemStyle.Fixed #6659, long series names made tooltip overflow the chart.Fixed #6664, no-data label remained in heat maps after adding points.Fixed #6670, visible: false didn't work correctly on funnel chart points.Fixed #6687, wrong hover points with columns and shared tooltip.Fixed #6700, axis label font size wrongly detected in styled mode.Fixed #6704, series names were not grouped for two series after drilldown.Fixed #6705, bubble chart click events and point select was broken.Fixed #6706, crash with heatmap and boost-canvas.Fixed #6721, area range fill was broken with null values and connectNulls: true.Fixed #6731, category axis allowed zooming outside range.Fixed AT announcing clickable for some a11y demos.Fixed Firefox issue with styled export, ref #6307.Fixed bug with inserting multiple data tables in export-data.Fixed issue where chart container height was not respected when initially hidden. See #6693.Fixed issue with data labels not appearing on exported charts in styled mode.Fixed issue with missing gridLines in 3D.Fixed issue with mouseOver event in column chart with shared tooltip.  Highcharts v5.0.11 (2017-05-04) # Added export-data as an experimental module in the main repo.  Bug fixes Fixed #1174, added dataLabels distance option for single pie point.Fixed #4743, updating 3D columns with z stacking failed.Fixed #5045, line series should be broken on axis breaks. Moved gapSize logic to the broken-axis module.Fixed #5297, 3D columns were overlapping.Fixed #5424, crosshairs overlapping when there is multiple axis with equal positions.Fixed #5863, panning didn't allow panning back to the extreme data values.Fixed #5911, inverted waterfall was rendered incorrectly.Fixed #6046, copy classes by reference in stead of a hard copy in merge.Fixed #6218, some tooltip options were not updated through chart.update().Fixed #6296, regression causing bubbles not to be clipped.Fixed #6350, solid gauge series did not have CSS point class.Fixed #6420, when multiple axes, show only one snapping crosshair at the same time.Fixed #6440, callout anchor was mispositioned in an inverted chart.Fixed #6441, callout animated to wrong position on point update.Fixed #6488, destroying colorAxis caused error and left legend.Fixed #6527, point.color of negative column was less important than series.negativeColor.Fixed #6549, Y-values of 0 caused the point to be skipped in boost mode.Fixed #6550, a regression causing sprites in meteogram sample not being clipped after animation, resulting in weather symbols all over.Fixed #6563, a regression causing flat integer data to draw on the X axis when allowDecimals was false.Fixed #6566, zAxis wasn't updated through chart.update().Fixed #6569, chart.exportChart() left undefined item in the Highcharts.charts array.Fixed #6574, subtitle was rendered outside the chart when setting subtitle.verticalAlign to 'bottom'.Fixed #6580, blending in boost caused barely visible markers in scatter charts.Fixed #6585, zero-value column's dataLabel was misplaced when using logarithmic yAxis.Fixed #6586, directTouch did not work with shared tooltip.Fixed #6589, pie chart didn't accept undefined values.Fixed #6597, PointerEvent was used unnecessarily, causing bad behaviour on Android.Fixed #6606, no legend keyboard navigation when heatmap module loaded.Fixed #6608, small maxHeight didn't hide all legend items.Fixed #6609, entities in the legend title were not translated.Fixed #6617, rendering a chart in a hidden container with box-sizing. Rewrote the functionality to avoid rendering in a hidden div, so that instead of cloning the div we make the current div temporary visible.Fixed #6627, marker symbol wasn't checked properly.Fixed #6636, a regression causing missing ticks with negative timezone offset.Fixed #6637, null point broke chart.Fixed #6639, accessibility issues with new export-csv versions.Fixed #6641, pane axis caused the error in defualt charts.Fixed #6646, item title was not wrapped in styled item.Fixed #6650, boost module failed with styled mode and heatmap.Fixed #6653, exporting error with IE8.Fixed #6660, changing colorIndex did not update all series styles.Fixed issue in tooltip-outside-box study with narrow windows. Touch #6658.Fixed merge problems with #6576.  Highcharts v5.0.10 (2017-03-31) # Added !default statement to SASS variables for easier configuration. Closes #6436.Added new option, plotOptions.column.crisp, to allow disabling crisp columns and subsequent rendering issues with densely packed items. Closes #5755Added new option, findNearestPointBy to declare how the tooltip searches for points. #6231.Refactored the Pane object to keep track of its own backgrounds, more decoupled from Axis.  Bug fixes Fixed #3481, title and subtitle were not resizing chart correctly when using useHTML on true.Fixed #3936, colorAxis was not updated through chart.update.Fixed #4964, missing plotband when small range.Fixed #6007, exporting after chart.update() threw errors.Fixed #6144, empty categories caused wrong render of tooltip.Fixed #6191, dead clip path references.Fixed #6203, yAxis extremes were wrong calculated for visible scatter points.Fixed #6258, text labels with ellipsis had inconsistent behavior.Fixed #6279, error when hiding series of line polar using data module.Fixed #6359, softMin/softMax didn't work in combination with floor/ceiling.Fixed #6430, areasplinerange polar curve path was wrongly rendered.Fixed #6431, addition to #6476, stickyTracking should default to true when there is a shared tooltip.Fixed #6433, updating Axis with plotBands rendered redundant nodes.Fixed #6437, 3D pie chart disappeared when drilling down after resize.Fixed #6444, exporting the second time failed with axis extremes.Fixed #6449, series with noSharedTooltip was inaccessible with shared tooltip.Fixed #6452, chart.update was not redrawing axes when setting alignTicks to false.Fixed #6456, tooltip didn't show on hovering outside candlestick and OHLC series.Fixed #6458, named color deduction was case sensitive.Fixed #6459, colors of boxplot series points would not update.Fixed #6463, missing closing sign in RegEx caused wrong handling of pseudo attributes.Fixed #6465, first data label in polar charts was not visible.Fixed #6469, series got lost when mixing category data in a dual axis chart.Fixed #6470, exporting failed in IE8 when data labels were enabled.Fixed #6473, wrong text wrapping with textOutline: none.Fixed #6474, custom CSS property was injected into the DOM. Added to blacklist.Fixed #6474, text outlines were not properly cleaned up on resizing.Fixed #6476, shared tooltip with disabled stickyTracking did not work.Fixed #6477, regression on crosshairs with snap in a bubble chart.Fixed #6479, responsive rules didn't apply to panes.Fixed #6481, offline export of pie charts to PDF not working in Firefox and Safari.Fixed #6487, contrast color was not applied for a justified label on a column.Fixed #6497, horizontal legend layout didn't respect spacing setting.Fixed #6499, offline export fails with allowHTML despite no HTML in chart.Fixed #6502, missing chart series and axis in combined logarithmic chart.Fixed #6518, wrong marker positions when hovering after redrawing in boost module.Fixed #6519, empty space caused overlapping in legend.Fixed #6521, missing label for narrow plot band.Fixed #6089, chart.update not taking effect on panes. Also closes #6438.  Highcharts v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts v5.0.8 (2017-03-08) # Added a refactored Boost module based on WebGL. Details and API to be announced.Added animation on graph mouse over and mouse out.Added hooks so that users can define their own log axis conversion functions, and can advertise that the log axis should allow negative values.Added new option, solidgauge.rounded.Added support for relative chart.height as a percentage of the width. This allows for fixed aspect ratio.  Bug fixes Fixed #223, pie chart data labels overflowed after pie reached minimum size.Fixed #2322, updating series type caused remnants of the original series type after multiple updates.Fixed #4916, data values were lost in export after updating a point from a numeric or array configuration to an object configuration.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #6087, minPointLength shifted next points rendering.Fixed #6173, another case of unwanted inline CSS in style mode.Fixed #6187, navigator jumped back after dragging on touch devices.Fixed #6254, Point.update did not apply new class names.Fixed #6264, enabling individual bubble markers did not work.Fixed #6272, inverted stack area chart was badly drawn when containing nulls.Fixed #6274, allowDecimals: false was ignored with flat data.Fixed #6278, missing ticks before DST crossover in some cases.Fixed #6282, text-align did not take effect on data labels with useHTML.Fixed #6291, multiple responsive rules were applied an unapplied in wrong order when resizing.Fixed #6301, legend width option caused wrong alignment when aligned right.Fixed #6305, accessible keyboard navigation in polar charts not working correctly.Fixed #6314, treemap series failed with error in styled mode.Fixed #6321, bubbles were hidden when close and marker.enabled set to null.Fixed #6322, legend navigation arrows did not update correctly on responsiveness.Fixed #6328, issue with disabled tooltip in accessibility module.Fixed #6330, minor ticks affecting the computed extremes of Y axes in some cases.Fixed #6330, minor ticks were not applied outside major ticks on a logarithmic axis.Fixed #6347, error on applying responsive rules where series or axis length was greater than the existing chart.Fixed #6356, legend.maxHeight not respected after chart update.Fixed #6361, accessibility failing for IE8 and older.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #6384, Point.update didn't work with slice: false.Fixed #6387, graph and area rendered differently on area splines next to null points.Fixed #6399, treemap legend item had incorrect color after point was hidden.Fixed #6401, point.states didn't work for maps.Fixed #6402, treemap ignoreHiddenPoint is now true by default.  Highcharts v5.0.7 (2017-01-17) # Added Legend keyboard navigation to accessibility module.Added chart render and predraw events needed by the new Boost module.Added new option, global.timezone, as a convenient shortcut to timezones defined with moment.js.Added optional redraw to drillToNode, related to #6180.Added support for marker.symbol setting on bubble charts.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Changed the Highcharts.error function to handle strings.  Bug fixes Fixed compliance with Checkmarx security checker.Fixed #6108, issue with big data in offline exporting.Fixed #5672, X values in tooltip in Boost module was wrong.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5757, empty chart throws error with accessibility module.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5835, exported SVG didn't validate, width and height attributes were set on group elements.Fixed #5837, could not style null points with CSS.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles were hidden in small charts when maxSize was percentage.Fixed #5884, optimizing addSeries.Fixed #6085, floating point errors on Y axis labels.Fixed #6088, rounding issue in tooltips.Fixed #6107, error with negative width in xrange study.Fixed #6112, issue and regression with swapping series indexes.Fixed #6113, long legend items were unresponsive due to heavy HTML parsing in SVG. Implemented caching.Fixed #6127, pie chart data label overlapped after drill up.Fixed #6128, tooltip caret was not drawn after updating from shared to non-shared.Fixed #6130, Chart.update didn't trigger responsive rules to be re-evaluated.Fixed #6138, reset colorCounter and symbolCounter when all series are removed.Fixed #6147, error in Chart.get when called between redraws.Fixed #6157, offline exporting was not working for Edge.Fixed #6158, duplicate ID of navigator series.Fixed #6171, drawDataLabels did not use updated options when data label already existed.Fixed #6173, no inline CSS should be allowed in styled mode.Fixed #6180, treemap crashed when the root node did not exist.Fixed #6184, polar arearange was misshaped when connectEnds was not set.Fixed #6196, dead clip path references.Fixed #6200, modified treemap setPointValues to only add crisping correction when needed.Fixed #6202, legend icons overflowed legend with large radius.Fixed #6207, when point X was given, point names did not show on category axis after hiding and showing series.Fixed #6208, error on responsive rules for plotOptions.series and series.xAxis.Fixed #6213, wrong text bounding box reported in Chrome for Windows, resulting in asymmetric label padding.Fixed #6217, container sizes below 20px height needed explicit chart height to be set.Fixed issue in offline exporting where libURL option was not picked up.Fixed issue with duplicate highcharts-negative class. Ref #6114.  Highcharts v5.0.6 (2016-12-07) # Added a common hook, Highcharts.error, for user defined error handling.  Bug fixes Fixed #4175, missed ticks when xAxis.reversed was used.Fixed #4507, 3D scatter points were not rendered if z-value was not set.Fixed #5950, broken axis module caused errors when rendering funnel series.Fixed #6003, regression with pie chart selection border width.Fixed #6016, zones weren't applied for point elements in styled mode.Fixed #6018, 3D column not rendered in styled mode.Fixed #6020, stacked waterfall didn't render any points.Fixed #6021, chart.alignTicks on logarithmic axis should not be applied.Fixed #6045, multiple charts exporting demos failed with other width/height settings.Fixed #6054, regression which disabled selecting bubble points.Fixed #6055, halo sometimes animated to another point when hiding.Fixed #6062, minPointLength was applied for null points in a waterfall series.Fixed #6065, text outline was off with multiline text.Fixed #6067, bubble halo stayed forever per series.Fixed #6068, JS error on destroying chart from its own callback.Fixed #6077, legend title disappeared after legend update.Fixed #6080, stray data labels for empty points in column and bar series.Fixed #6094, a regression causing allowPointSelect not to work with 3D pies.Fixed JS errors on path animations in pies. Related to #6051.Fixed border issue on hovered points in map and heatmap. Related to #6064.Fixed issue with split tooltip anchors and panes.  Highcharts v5.0.5 (2016-11-29) #   Bug fixes Fixed #5997, panning not working with reversed axes. Also closes #3278.Fixed #3398, click event for dataLabels when useHTML was set to true didn't work.Fixed #4338, incorrect minPointLength for negative values in waterfall series.Fixed #5860, bubble series in styled mode caused errors.Fixed #5892, errors in console on animating in splines as they are added.Fixed #5947, HTML dataLabels didn't show tooltip on mouseover.Fixed #6014, issue with zooming out of bounds.Fixed #6033, threshold ignored when chart.reflow was used.Fixed issue with build settings of Highcharts themes, and added a minimum of test.Fixed regression related to animation, where the complete step was not executed. This specifically affected drilldown, solid gauge and color axis updates. Closes #6017, 6032, #6023.Fixed wrong product name in license headers.  Highcharts v5.0.4 (2016-11-22) # Refactored animation and attr logic to always stop the single property being set. This prevents an animation from continuing after the same property has been set either through .attr or .animate.  Bug fixes Fixed #5788, artifacts when animating splines before previous animation was done.Fixed #5982, additional series options were not set in exporting.Fixed #5985, issue with allowHTML in offline exporting.Fixed #5989, tooltip did not hide on touch.Fixed #6008, regression causing rotated data labels to break chart in Firefox.  Highcharts v5.0.3 (2016-11-18) # Added new option, lang.numericSymbolMagnitude, to support numeric symbol shortening in Japanese, Korean and certain Chinese locales.Added new option, threshold, for solid gauge series.Added new CSS custom property, textOutline, and at the same time removed the textShadow shim. Closes #5849.Better implementation of the chart.pinchType option. Allow pinchType and zoomType to be set independently. When tooltip.followTouchMove is true, pinchType only applies to two-finger touches. Closes #5840.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Implemented bubbles in the Boost module.Improved alignment of ticks on multiple axes by allowing ticks to be placed at less strict intervals.Refactored split tooltip connectors to use common callback shape instead.  Bug fixes Fixed #3802, yAxis.opposite ignored when setOptions was used.Fixed #3949, added zIndex calculation for scatter in 3D chart.Fixed #5838, split tooltip ignored style options.Fixed #5859, tooltip display problems in styled mode.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5889, pointPlacement did not respect individual series pointRange.Fixed #5895, Axis.update failed with solid gauge Y axis.Fixed #5897, Series.pointAttribs ignored some lineWidth options.Fixed #5899, HTML label bounding box was cached when a width was set in inner HTML.Fixed #5903, a regression causing the halo to cover bubbles so the bubbles weren't clickable.Fixed #5909, plotBand border was only drawn on three out of four sides of the rectangle.Fixed #5912, legend clipping was not removed after resizing to larger size.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #5919, default exporting.libURL used insecure HTTP.Fixed #5921, horizontal legend has height limit even when floating.Fixed #5922, Tooltip.refresh crashed when formatter returned undefined.Fixed #5926, more unique id's for clipping and other internal defs. Prevents conflicts when SVGs from different sources are pasted in the same page.Fixed #5928, first tick disappeared when redrawing chart with type category and uniqueNames = false.Fixed #5931 and #5957, refactured updateButtonStates to fix issues with states of Rangeselector buttons.Fixed #5932, line height was wrong in tooltip with nested em units.Fixed #5934, series.className was missing a trailing space in the legend item.Fixed #5935, a regression when axis was crossing DST in a timezone west of UTC.Fixed #5938, dynamic inversion didn't work without setting certain other properties at the same time.Fixed #5940, disabling the legend via Legend.update did not reclaim legend space.Fixed #5944, offline exporting and styled mode resulted in unstyled, black chart.Fixed #5951, responsive.rules.condition.callback did not work according to documentation.Fixed #5959, hidden series affecting axis closest point calculation.Fixed #5960, incorrect series order after removing and adding series.Fixed #5968, xAxis labels did not have ellipsis when rotation was set to 0, in Firefox and Edge.Partially fixed #5047. Workaround with was given static width and height.  Highcharts v5.0.2 (2016-10-26) # Fixed two regressions.  Bug fixes Fixed #5887, a regression causing bubbles to move on hover.Fixed regression in v5.0.1 where the halo would be mispositioned in inverted charts.  Highcharts v5.0.1 (2016-10-26) # Added new options, axis.softMin and axis.softMax. Closes #5824.Added Legend keyboard navigation to the accessibility module.Added animation on hovering point markers.Added offline PDF export support.  Bug fixes Refactored tooltip delay the generation of the empty label container. This prevents the empty label from being present in exported SVG.Fixed #1880, individual column borderColor.Fixed #4951, issue with placing tick marks on round times when using getTimezoneOffset.Fixed #5427, JS error on async destroy when triggered from custom exporting menu.Fixed #5483 without breaking #5823.Fixed #5538, pie series was not redrawn after modifying title and other elements.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5736, zooming in multiple X axes with crosshairs and snap false caused JS error.Fixed #5745, a regression causing chart.style not to apply to the container.Fixed #5750, null points on categorized axis caused blank chart when drilldown module was present.Fixed #5757, empty chart throws error with accessibility module.Fixed #5764, drilldown not working with Highstock.Fixed #5765, a regression causing 3D pie slices not to update on show/hide when animation was set.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5768, regression since v4.2.7 causing setData with xAxis.type = category to break categories.Fixed #5770, regression causing individual box plot fill not to apply.Fixed #5773, a regression causing axis events not to be called after axis update.Fixed #5777, selected class name remained after unselecting a point by selecting another.Fixed #5779, zoom-out button not working on first touch on touch devices.Fixed #5787, a regression causing the chart.reflow option to never take effect.Fixed #5790, zoom button appeared on swiping already zoomed-out line chart.Fixed #5794, header on tooltip.split was cut off near the ends of the axis.Fixed #5801, artefacts when updating series with tooltip.split.Fixed #5817, a regression causing point-specific marker radius not to be applied. Refactored point sizing logic for initial render, updates and states.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5822, a regression causing drilldown to fail the second time when allowPointDrilldown was false.Fixed #5832, shared tooltip failed with points of the same X value but different pointPlacement.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5837, could not style null points with CSS.Fixed #5839, errors on touch-dragging on mobile devices after dynamically adding a series with visible false.Fixed #5842, image marker symbols were misplaced and missing from exported charts.Fixed #5850, hideLoading didn't work right after calling showLoading in styled mode.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed duplicate setting of halo path since HC5. Added animation to hiding halo.Fixed eternal loop when setting a new chart.height in a responsive rule.  Highcharts v5.0.0 (2016-09-29) # Added styled mode for optional separation of SVG and CSS.Added responsive option set.Added accessibility option set.Added new function, Chart.update in order to update the chart options after render time.Added new function, Chart.addCredits.Added new function, Chart.title.update.Added new function, Chart.credits.update.Added new function, Legend.update.Added new option, Renderer.definition.Added new option, exporting.error for catching errors in offline exporting.Added new option, exporting.libURL for use with offline exporting.Added new option, pane.background.className.Added new option, xAxis.className.Added new option, xAxis.crosshair.className.Added new option, plotOptions.series.dataLabels.className.Added new option, plotOptions.series.className for styling individual series.Added new option, xAxis.plotBands.className.Added new option, xAxis.plotLines.className.Added new option, plotOptions.series.zones.className.Added new option, chart.colorCount for use in styled mode.Added new option, defs for defining reusable elements in styled mode.Added new option, tooltip.padding.Added new option, series.data.colorIndex for coloring points in styled mode.Added new option, tooltip.split.Added new option, chart.description for use with the accessibility module.Added new option, chart.typeDescription for use with the accessibility module.Added new option, xAxis.description for use with the accessibility module.Added new option, plotOptions.series.description for use with the accessibility module.Refactored build system to use ES6 imports and node-based build script.Changed all default colors (except series data colors) to a simplified color scheme based on just a few shared colors.  Highcharts v4.2.7 (2016-09-21) # Added new feature, yAxis.angle, allowing positioning the axis line and labels in polar chart Y axes. This makes it practical to use multiple axes in polar charts.Added option, xAxis.nameToX, allowing points to have the same name but different axis positions on an axis of type category.  Bug fixes Fixed #1011, ignoreHiddenSeries with ordinal axis caused artefacts on a chart.Fixed #1041, gaps in the area fill of stacked areasplines.Fixed #3169, error on drilldown from a null point.Fixed #3341, exceeded stack size on mutually linked series.Fixed #3571, NaN in the beginning of data broke series.Fixed #4778, wrong rendering waterfall series, when yAxis.max was set.Fixed #5186, gaps in the fill of areasplinerange.Fixed #5383, mouse position detection with pointPlacement.Fixed #5528, a regression causing polar arearanges to fail.Fixed #5533, stickyTracking when set to false caused highlighting wrong point.Fixed #5552, linejoins in boost module lines.Fixed #5556, JS error on polygon with empty data.Fixed #5563, JS error in treemap with zero values.Fixed #5568, pointIntervalUnit broke when using more data points than turboThreshold.Fixed #5569, generic options set on the yAxis affected the colorAxis.Fixed #5570 and #5590, regression causing blank export on Batik based export servers.Fixed #5572, pie slices were not hidden in 3D pie charts on legend click.Fixed #5595, HTML tooltip did not hide on point mouse out via the tooltip.Fixed #5605, error on async onload of destroyed chart.Fixed #5618, updating master series caused wrong visibility on linked series.Fixed #5619, the Series remove event was fired when updating a series.Fixed #5620, text was mispositioned when loading a chart in a hidden iframe in certain browsers.Fixed #5622, click event for line series point was not called when column was rendered below.Fixed #5631, zeroes in logarithmic chart made the whole graph crash.Fixed #5632, gaps were broken in arearange and areasplinerange.Fixed #5646, waterfall did not work correctly with logarithmic axis.Fixed #5647, xrange points disappeared if x was outside plot but x2 inside.Fixed #5647, xrange points disappeared when x was outside visible range.Fixed #5655, animation: true on a series config caused animation to jump from the middle.Fixed #5658, error on updating series from its own mouseOver event.Fixed #5662, setExtremes on polar chart caused padded max value.Fixed #5665, addPoint animation parameter was not used.Fixed #5679, handle isArray for ES6 iterator.Fixed #5681, JS error on adding custom group to points.Fixed #5689, text had soft line wraps when white-space: nowrap was used in combination with text-overflow: ellipsis.Fixed issue #4133, error bar data labels positions failing on redraw.Fixed issue #5205, color axis changed colors when legend was disabled.Fixed issue #5567, wrong clipping of offline exported SVG in IE11/Edge.Fixed wrong handling of minRange on logarithmic axis, related to #1227.  Highcharts v4.2.6 (2016-08-02) # Added crisp correction for crisper treemap points.Added support for animating graphs to the right when updating data or setting axis extremes. Related to #5294.Refactored sideways animation logic for graphs to better reflect shifting data. Closed #5294.  Bug fixes Fixed tick animation when showFirstLabel or showLastLabel were set to false.Fixed #2522, point names should fill up categories when X is not set.Fixed #2597, data labels remained visible even though container was hidden.Fixed #3571, treat NaN in data as null.Fixed #4204, hover.brightness wasn't used for positive bars in waterfall.Fixed #4216, connectEnds with null as first point failed.Fixed #5052, wrong placement of ticks on opposite axis on 3D charts.Fixed #5197, JS error on hovering chart after setData before redraw.Fixed #5215, JS error when legend configuration object was set to false.Fixed #5280, stacked area was wrong with non-zero Y axis threshold and data points at 0.Fixed #5287, unsnapped crossshair was hidden after adding points.Fixed #5298, empty cells in Google Spreadsheet made the graph disappear.Fixed #5302, dateFormat didn't handle Date objects like before.Fixed #5310, global stacking affected polygon series.Fixed #5311, JS error when setting an event config to null.Fixed #5322, negative values in pie series was rendered incorrectly.Fixed #5324, calling Renderer.label with a shape of rect failed.Fixed #5332, last axis label was stuck when doing repetetive redraws.Fixed #5337, tooltip for polygon should not behave like scatter points.Fixed #5339, plot area disappeared when categories were too long.Fixed #5348, error in arearange series when trackByArea was false.Fixed #5350, 3D pies failed redraw when animation was off.Fixed #5352, treemap tooltip did not format point value.Fixed #5354, noSharedTooltip was undefined for gauge and solid gauge, which caused errors when shared tooltip was enabled.Fixed #5376, axis title position was wrong with font-size text values.Fixed #5396, drilldown activeDataLabelStyle color contrast did not work.Fixed #5417, regression causing HTML axis labels to misbehave with useHTML and rotation.Fixed #5442, incorrect clipRect counter causing points to disappear on series update.Fixed #5480, axis showed 0k or 0M. Suffix not needed for zero.Fixed #5486, threshold null caused wrong fill on all-negative axis.Fixed #5495, shared tooltips not always working because of rounding error.Fixed #5500, pyramid height caused wrong position.Fixed #5504, exporting module default settings was not compatible with https.Fixed #5513, Chart.setSize required both width and height to be set.Fixed #5519, issues with setting null colors in drilldown.Fixed #5522, 3D charts scale differently first time versus subsequent redraws.Fixed #5523, marker radius was incorrect when values were of type string.Fixed issues with PNG/JEPG in IE and Edge in offline exporting, ref #5410.Fixed issue #5410, offline exporting in IE/Edge failed with embedded images for PNG/JPEG.  Highcharts v4.2.5 (2016-05-06) # Added new option, exporting.printMaxWidth, to prevent printed charts cut off on the right side. Closes #2088.Added new option, title.widthAdjust and subtitle.widthAdjust, to prevent titles from flowing over elements.Added support for JPEG in offline download module, ref #5157.  Bug fixes Fixed #3070, verticalAlign didn't work with rotated data labels on column series.Fixed #4087, error 11 was not described on the website.Fixed #4670, zones colors were not applied for markers on hover.Fixed #5211, titleSetter in combination with buildText added duplicate content to the title.Fixed #5220, a regression causing JS error when resizing polar charts.Fixed #5221, support for minPointLength in xrange study.Fixed #5226, polar chart with no data failed with error.Fixed #5228, scroller.getUnionExtremes did not consider navigation axis min and max.Fixed #5230, a horizontal and opposite axis used to have wrong alignment for its title.Fixed #5234, x value of null cancelled rendering of all points.Fixed #5236, last point was not always visible due to rounding errors.Fixed #5237, inverted should not have an effect on polar charts.Fixed #5250, columns were not visible in IE10.Fixed #5254, data labels were not aligned to the point box in heatmaps.Fixed #5259, crosshair prevented point hover when drawn above points.Fixed #5261, break at the end of a label caused wrong bounding box.Fixed #5266, pinchDown was sometimes empty on Android.Fixed #5269, crosshairs on wrong point with multiple series and non-shared tooltip.Fixed #5274, dataLabels.overflow not always respected on heatmaps.Fixed issue in the xrange study with axis extremes when there were other, more extended series in the same chart.  Highcharts v4.2.4 (2016-04-14) # Added support for polar columnrange series.Added e.originalEvent to drilldown event in order to catch modifier keys and other properties. Closes #5113.Added new drilldown event, chart.events.drillupall, that is triggered after multiple single drillup events. Closes #5158. Closes #5159.Added new option, chart.options3d.fitToPlot to fit 3D charts into the available plotting area. This may affect the layout of existing 3D charts if the layout was adjusted by chart.margin. The chart.margin setting can now normally be removed. Closes #4933.Added new option, lang.shortWeekdays, to specify short weekdays other than the first three letters of the weekday.Added new value, day, for pointIntervalUnit.Added option, legend.navigation.enabled, to allow disabling legend scroll.  Bug fixes Fixed #3450, tooltip did not display after zooming on Android.Fixed #3916, halo and tooltip visible for points outside the plot area.Fixed #4552, mouse interaction and tooltip positions didn't match on 3D scatter chart.Fixed #4631, treemap series displayed no data even when data existed.Fixed #4679, when series are overlapping, the tooltip should show the topmost point.Fixed #4700, users can set and modify opacity on parent nodes in treemap.Fixed #474, vertical label alignment on top axis was off when labels were on multiple lines.Fixed #4751, inconsistent data label behaviour after redraw.Fixed #4784, setting allAreas to false does not center map.Fixed #4812, dataLabels which was supposed to be hidden were still visible.Fixed #4856, zooming did not work in Treemap.Fixed #4866, space was not reserved for tick marks, allowing ticks to overflow the chart when axis labels were not present.Fixed #4868, axis breaks were not applied for a range series.Fixed #4891, pie slice's graphics were not fully hidden, when slice was hidden.Fixed #4954, corrected floating values with isSum and isIntermediateSum in Waterfall series.Fixed #4961, placement of tooltip on flags for inverted charts.Fixed #4984, tooltip jiggling on arearange even when followPointer was true.Fixed #5007, JS error from tooltip when running in strict mode.Fixed #5010, stacked areas didn't work with Date objects as X values.Fixed #5029, runtime error on empty data set.Fixed #5030, bars were shaking on initial animation.Fixed #5034, a regression causing axis labels on vertical axis not to wrap.Fixed #5053, regressions related to chart callbacks firing async.Fixed #5060, date format for %e was not consistent with docs.Fixed #5063, solid gauge tooltip showed wrong series the first time.Fixed #5066, crosshair with snap: false only appeared when hovering a point.Fixed #5075, display was not deferred on data labels with useHTML.Fixed #5079, a regression causing vertical axis title to disappear in IE8.Fixed #5084, wrong Heatmap Intro was set in parts.js, which made the Download Builder fail.Fixed #5085, tooltip showed for points immediately outside the plot area on the X axis.Fixed #5086, X axis labels overlapped when added via Chart.addSeries.Fixed #5087, container with padding caused error with printing in IE8.Fixed #5099, single point marker was not displaying when surrounded by null points.Fixed #5101, click events did not fire on pie slices after Point.update.Fixed #5112, returning false from event handlers didn't cancel default function.Fixed #5133, data labels disappeared on chart redraw when defer was explicitly set to true.Fixed #5134, a regression causing wrong aniation on pie labels when moving from one side to the other.Fixed #5137, boost module threw JS error when doing mouse interaction after removing series.Fixed #5144, problem with percentage stack with null points.Fixed #5146, columns with zero value and no border on negative chart were visible even though they shouldn't.Fixed #5156, funnel did not respect the color set for selected state.Fixed #5160, data grouping and boost module did not play well together.Fixed #5167, wrong padding in bubble charts made point disappear after setting axis extremes.Fixed #5171, log scale transformation functions were not accessible from the outside.Fixed #5174, invalid CSS because of division by zero.  Highcharts v4.2.3 (2016-02-08) #   Bug fixes Fixed #4989, Chart.getSVG function produced invalid SVG.Fixed #4999, a regression causing JS error on hovering columns having a shadow.Fixed #5001, a regression causing empty arearange series to fail with JS error.Fixed #5004, a regression causing stacked step areas to render incorrectly.Fixed #5015, a regression causing splines with null points and connectNulls: true not to render.Fixed #5016, a regression where a spline with equal X values failed to show.  Highcharts v4.2.2 (2016-02-04) # Added new option, linecap, to allow round corners on solid gauge.Changed chart.load event to wait for external symbol images, so that their size is set correctly in the SVG. This comes in handy for export and server generated images.  Bug fixes Fixed #1977, bubble series shadow was not moved when moving bubbles.Fixed #4077, panning was not supported on inverted charts.Fixed #4086, tick marks and labels were not trimmed to axis extremes when tickPositions option was used.Fixed #4573, wrong number rounding in some cases.Fixed #4622, updating point didn't change legend's item.Fixed #4759, a regression which did not update point markers in point.update().Fixed #4779, data labels were not cropped when rotated.Fixed #4859, no easy way to catch offline export failed exception.Fixed #4861, where offline export would fail in some cases with embedded images.Fixed #4870, column width calculation not correct on logarithmic X axis.Fixed #4886, pie slicing failed and tooltip disappeared too quickly on Windows phone.Fixed #4888, fillOpacity of 0 did not take effect on area charts.Fixed #4889, plotLine and plotBand should be rendered with higher zIndex than frames in 3D view.Fixed #4890, originalEvent was missing from selection event since 4.2.0.Fixed #4898, rounding issues with Y axis causing columns to exceed threshold value, and plot lines to be filtered out.Fixed #4904, async loading of points kept running after chart was destroyed in boost module.Fixed #4905, pie data labels were not hidden when scaling down.Fixed #4906, chart did not zoom when drag and drop was dropped on a different chart.Fixed #4911, false detection of overlapping data labels in multiple panes.Fixed #4912, specific export data label style didn't take effect for pies.Fixed #4913, regression in box size detection causing chart to overflow the container in some cases.Fixed #4914, boost module loadingDiv was destroyed before redraw was finished.Fixed #4918, spline curved wrongly when plotX or Y had a value of 0.Fixed #4920, polar X axis labels misaligned after chart redraw.Fixed #4927, crosshair only worked for one Y axis.Fixed #4928, HTML label lengths were not reset on resize.Fixed #4929, halo covered point and disallowed point click in IE8.Fixed #4938, HTML elements were missing visibility and opacity setters.Fixed #4951, X axis daily ticks did not render on midnight around a DST crossover when the getTimezoneOffset callback was used.Fixed #4955, export button was hidden by category crosshair.Fixed #2069, null points in stacked areas were rendered as zero instead of gaps.  Highcharts v4.2.0 (2015-12-15) # Included the Standalone Framework in Highcharts and removed the concept of adapters.Removed global properties in Highcharts and modules. Closes #4389.Added new constructor, Highcharts.chart, that allows instanciating a chart without the new keyword.Added an option to set the renderTo div as the first argument to the constructor, like Highcharts.chart(renderTo, options);.Added support for fill-opacity and stroke-opacity attributes on VML renderer. Support semi-transparent fill with named colors on area series.Breaking change: Easing functions from jQuery UI no longer work. They will fall back to the default "swing" easing. With Highcharts 4.2, the easing function must be defined on the Math object itself.Breaking change: The sparkline demo has some changes in the constructor.  Bug fixes Fixed #3372, tooltip for columnrange series was misplaced.Fixed #4667, column was left semi-opaque after drill up with the Standalone Framework.Fixed #4782, marker image width and height didn't apply to legend.Fixed #4799, wrong position of columns when setting grouping:false in charts with multiple columns.Fixed #4801, setting visibility by series.update() didn't update series group.Fixed #4811, legend checkbox position was wrong with legend title present.  Highcharts v4.1.10 (2015-12-07) # Added new feature, borderColor: null for pies, which inherits the slice color. This allows a simple workaround for antialiasing gaps between slices when not using a real border (#1828).Added new option, xAxis.labels.reserveSpace, to control whether the labels should take up space in the layout. Closes #3479.Added new option, treemap.sortIndex.Better animation on 3D pie drilldown (#3534).  Bug fixes Fixed #2409, allowing x/yLow and y/yHigh in range charts to work across orientation.Fixed #2597, in Firefox, some elements stayed visible even when the container was hidden by visibility: hidden.Fixed #2995, series color with gradient was not correct in tooltip.Fixed #3140, wrong placement and axis margin when using rotated labels on a vertical axis.Fixed #3737, column/bar order inside group did not match the xAxis.reversed setting.Fixed #3745, added missing right shape of the slice when using startAngle.Fixed #4088, proper shapes and dataLabels positions for 3D pie chart. Minor refactoring and commenting.Fixed #4184, tickInterval not taking precedence over auto point range.Fixed #4267, updated points didn't update negativeColor until hover.Fixed #4309, crash in Firefox inside hidden iframe using standalone framework.Fixed #4369, yAxis.reversedStacks rendered wrong order for 3D columns.Fixed #4374, ticks became misaligned after updating the chart, even when chart.alignTicks was set to true.Fixed #4388, axis titles sometimes overlapping with axis labels in 3D charts.Fixed #4391, white areas in area stacks with multiple points on same X value.Fixed #4415, X axis label overlapped when step was set to 1.Fixed #4453, tooltip was sometimes visible in printed charts.Fixed #4533, pointBreak event was not called for xAxis and different series types than column.Fixed #4584, 3d pie with null data slices getting plotted.Fixed #4605, data labels were not shown if a column or column range extended far outside the plot area.Fixed #4638, bubble legend icon not tolerating relative font size units.Fixed #4640, exporting failed in IE7.Fixed #4641, pie slices with null values should not have a data label.Fixed #4645, shared tooltip did't show all of the points.Fixed #4652, wrong alignment of labels in the left side of pies.Fixed #4656, bar border was visible on zero values for reversed Y axis.Fixed #4660, regression caused missing last alternate plotBand when using categorized xAxis.Fixed #4663, treemap drillUp button is now visible when the chart has no titles.Fixed #4671, switching from normal to boost mode left duplicate graph.Fixed #4675, boost module did not remove tracker path after zooming out from SVG renderer.Fixed #4678, resetting zoom didn't reapply ellipses to all axis labels.Fixed #4681, memory leak on dynamic charts due to increasing bounding box cache.Fixed #4686, halo was not centered on the point.Fixed #4691, wrong default text alignment of axis title on opposite side when the title was in low or high position.Fixed #4694, xAxis labels were improperly positioned with opposite xAxis and staggerLines.Fixed #4701, Point.update changed types of items in series.options.data, causing issues with turboThreshold.Fixed #4704, setting new data on a pie chart didn't update color of the slice.Fixed #4721, hyphenated attribute names were not correctly animated.Fixed #4732, halo opacity not taking effect with named colors.Fixed #4736, tooltip x position was NaN when zooming in certain cases.Fixed #4737, crosshair's stroke-width should be updated after chart's resize.Fixed #4738, funnel chart not rendered correctly when center was specified.Fixed #4749, data.decimalPoint didn't work with negative values.Fixed #4756, wrong position of rotated axis labels on left side.Fixed #4768, hidden data labels visible in tall charts.Fixed #4769, plot bands didn't animate properly.Fixed #4789, dynamically added gauge dial was drawn on top of pivot.Full drilldown functionality for 3D pies. Closes #3534.  Highcharts v4.1.9 (2015-10-07) # Added new option, axis.visible.Added new option, bubble.sizeByAbsoluteValue, to allow negative bubbles sizes to be based on the absolute value rather than a scalar difference from smallest to greatest. Closes #4498.Added new series option, softThreshold, to prevent showing subzero axis ticks for line series that consist of positive data only.Added support for legendType: 'point' on more series types than just pie and its derivatives.  Bug fixes Fixed #2473, allowHTML should not affect the forExport flag.Fixed #2711, set proper order of data labels inside columns.Fixed #2854, SVG images in symbol URL's did not display in IE11.Fixed #3529, selected point changed color after updating.Fixed #3542, tooltip with useHTML did not fade out smoothly.Fixed #3632, pie inner size shouldn't be allowed to be greater than outer size.Fixed #3636, negativeColor wasn't set for marker on hover.Fixed #3801, pie chart radial gradient position did not update on chart resize.Fixed #3971, X axis label step was not honoured when rotation was set.Fixed #4136, treemap did not export correctly after drillToNode.Fixed #4298, treemap did not update axis extremes after updated data.Fixed #4431, tooltip was broken when changing from column series to a different type.Fixed #4442, alignTicks forced axes to align, even when only one of them contained data.Fixed #4465, tooltip disappeared on point when stickyTracking was false.Fixed #4482, line disappeared during animation when series.step was enabled.Fixed #4485, ticks were added inside axis break on datetime axis.Fixed #4502, wrong bounding box detection of rotated labels caused overlapping text in old IE.Fixed #4504, bars were misplaced when using reversed yAxis.Fixed #4510, point search along X axis failed in boost module.Fixed #4511, tooltip was not displayed, when yAxis.max cut off top part of the column.Fixed #4519, updatating pie data immediately failed with Standalone Framework.Fixed #4525, errors in exported SVG when allowHTML was true.Fixed #4526, series used the same clip-paths, which caused wrong clipping when using different axes.Fixed #4529, boost module produced error with pie charts.Fixed #4530, heatmap with single point and large colsize caused the point not to display.Fixed #4532, stack ID's as strings caused JS error in Highcharts 3D.Fixed #4536, unable to zoom in closely on first category when minRange was less than closest point range.Fixed #4543, null value bubbles should not be drawn.Fixed #4546, pie and flag series not showing tooltip correctly when displayed in a chart with shared tooltip.Fixed #4558, when resizing chart during addPoint animation cause error in stacking.Fixed #4562, logarithmic zAxis for 3D scatter did not render properly points.Fixed #4586, some markers moved by 1px after hovering.Fixed #4594, errors when stacking two series with different data lengths on a log axis.Fixed #4599, cropThreshold should be ignored when getExtremesFromAll is enabled.Fixed #4615, labels on color axis were wrongly positioned when useHTML.Fixed #4627, data labels exported twice in IE and Edge. Text shadows not rendered in Edge.Fixed issue with duplicated pane backgrounds after the #3176 fix.Fixed issue with offline export in Firefox. Closes #4550.Fixed regression with global animation and timing of calls.Fixed #2801, whiskerLength for boxplot can be set in pixels.Fixed #3323, 3d pie parts have better zIndexes, out part of slice crossing sides created, normalization of alpha and beta to (-360, 360) range.Partly fixed #1686, tooltip not hiding when mouse enters over it then out from series.Refactored columns. Separated the crisping logic from the rest of the translation logic. Related to #4179.  Highcharts v4.1.8 (2015-08-20) # Added experimental support for using HTML in exported charts through the exporting.allowHTML option. Discussed in #2473.Added new option, maxPointWidth, to the column chart type and its derivatives.Add %k, hours with no padding, in dateFormat.Don't cache undefined bounding box key. Closes #4328.  Bug fixes Fixed #4448, which causes duplicated event calls for column series.Fixed #1498, minor ticks were missing when using column series.Fixed #1655, where setExtremes event could be called with undefined extremes.Fixed #2775, click on custom button propagated and caused JS errors when destroying chart.Fixed #3379, minPadding and maxPadding was wrong on color axis.Fixed #3737, points within a group were not reversed in a reversed bar chart X axis.Fixed #3879, where linked series didn't inherit initial visibility from a parent.Fixed #3909, HTML data label was invisible after drilling up.Fixed #4149, tooltip went off plot area when data was clipped.Fixed #4189, wrong position of the legend in IE7.Fixed #4219, enconding problem with ellipsis. Better fix for #4079.Fixed #4246, pie slices with null values should not be rendered.Fixed #4313, setting one of the extremes removed both, min and max, axis paddings for bubble series.Fixed #4320, stack items building up and creating memory leak when adding and removing points.Fixed #4333, data label overlapping detection was too aggressive. Don't handle padding when the label doesn't have a border or background.Fixed #4339, touch-dragging in IE11 on a zoom enabled chart caused JS errors.Fixed #4343, axis lines missing when 3D was loaded.Fixed #4347, legend item click of heatmap with data classes should hide items.Fixed #4349, updating point.x prevented point from being hidden from legend.Fixed #4350, pie chart failing with StockChart constructor.Fixed #4356, pointBreak wasn't called for values below the threshold.Fixed #4356, series with null threshold now calls breakPoint correctly.Fixed #4359, drilldown pie selected slices had wrong color.Fixed #4360, float error on logarithmic axis label.Fixed #4364, chart click event fired when clicking menu items in the export menu.Fixed #4365, pie chart connectors were not hidden when data labels used HTML and hiding the series.Fixed #4371, where negative Axis offset miscalculated clip-path for series.Fixed #4390, JS error in some cases on updating a series with no data.Fixed #4396, different minSize and maxSize per separate series didn't work.Fixed #4401, better handling categories based on a point.name.Fixed #4410, a regression causing incorrect mouseover events in column charts.Fixed #4411, setting axis.labels.step to 1 didn't result in 1:1 labels.Fixed #4420, generic X axis gridline width with 3d columns.Fixed #4421, overlapping upper data labels on arearange series.Fixed #4430, point color was not set on positive points when negativeColor was set.Fixed #4434, regression causing failure with reversed solid gauge.Fixed #4443, auto rotation was not reset after widening chart when labels used HTML.Fixed #4449, a regression causing wrong alignment on legend items when rtl was combined with useHTML.Fixed #4477, too dense ticks when setting staggerLines, caused browser crash.Fixed #4313, setting one of the extremes removed both, min and max, paddings.Fixed #4351, setSize with standalone adapter didn't resize inner container.Fixed animation on updating map colors.Fixed issue with displayNegative not working with all data. Closes #4419.Fixed issue with pie and data labels producing JS error in IE6.Fixed issue with updating mapbubble point to null.Fixed regression with JS error on updating pie slice value to null.Improve logic for pointBreaks, touch #4356.Partial fix for #3861, bubble series not working with logarithmic axes. It now displays, but the bubbles are clipped unless the user sets a padding.  Highcharts v4.1.7 (2015-06-26) # Added new option, drilldown.allowPointDrilldown, that can be set to false to allow only drilling to categories. Closes #4295.Added support for useHTML in legend navigation.Added useHTML option to no-data-to-display module. Closes #4316.  Bug fixes Fixed #2911, JS error when drilldown and allowPointSelect were enabled at the same time.Fixed #3318, gauge background altered background on polar charts in the same page.Fixed #3650, updating a point from zero in 3d pies.Fixed #3709, crash when showing/hiding linked series and setting data at the same time.Fixed #3941, added option to turn off axis label ellipsis through text-overflow style.Fixed #4130, errors when running Series.update from the series' own events.Fixed #4170, halo was still visible after hiding pie slice.Fixed #4233, columns and areas ascended from botton when threshold was null and all values negative. Closed #4282.Fixed #4275, when null points were present inside an axis break, connectNulls: false did not have an effect.Fixed #4280, 3D for inverted charts was disabled.Fixed #4284, a regression causing columns to disappear after Point.update with an object argument.Fixed #4291, number suffixes like k and M was applied to non-round tick labels.Fixed #4301, point update on solid gauge gave wrong animation.Fixed #4308, graphs were clipped to axis line even when it was offset.Fixed #4309, JS error in Firefox when rendering chart inside an iframe with display:none.Fixed #4310, point hovering was unstable when stickyTracking was false and point markers disabled in normal state.Fixed #4318, ignoreHiddenPoint didn't take effect for funnels.Fixed #4319, tooltip was broken on canvas heatmap demo.Fixed bad translation from broken axis pixels to values. Part of #4229.Fixed issue with Batik powered exporting and IE8. Invalid SVG tag.  Highcharts v4.1.6 (2015-06-12) # Added new option, series.getExtremesFromAll, that tells the y axis to be scaled to the whole series range, not only the visible part.Added scaling support for Z axis on 3D charts.Added xAxis.title.x and xAxis.title.y options for positioning.Export: Added missing treemaps.js, fixes #4092.Export: Added support for Map constructor.Export: Added treemaps for serverside rendering.Export: Enable loading of maps.js.  Bug fixes Fixed issue with wrong data label being hidden on overlap in columns.Fixed issues with ellipsis on first and last label on X axis. Closes #3975.Fixed #4160, 3D should be disabled for inverted charts.Fixed #4160, 3D should be disabled for inverted charts.Fixed #1457, columnrange did not render with reversed Y axis.Fixed #182, browser hangs when updating chart from series mouseOut event.Fixed #2077, innerSize of pies was not correct when size was dynamic.Fixed #2088, crosshair shown on multiple axes.Fixed #3923, crash in Chrome when extending a dashed line to extreme length.Fixed #3974, duplicated data labels on Retina displays when text-shadow is applied.Fixed #3977, tooltip content sometimes displayed outside tooltip.Fixed #4069, slow updating of multiple pie slices.Fixed #4108, line wrap dataLabels in tree maps.Fixed #4116, cannot disable tooltip on polar chart.Fixed #4117, broken tooltips in pie charts when useHTML was enabled.Fixed #4124, treemap click on legend item returned error.Fixed #4128, tooltip only looked at X value for line series.Fixed #4146, point marker stayed after updating point to null when connectNulls was true.Fixed #4161, a regression causing wrong position of tooltip in top row of heatmap.Fixed #4163, tooltip broken on pie in combo chart.Fixed #4166, resetting point state was coupled to tooltip, resulting in state not reset when the tooltip was empty.Fixed #4167, chart crashed on Y axis breaks in stock chart.Fixed #4177, X axis label ellipsis overlapped when in the middle of the axis.Fixed #4197, ignoreHiddenPoint didn't work.Fixed #4200, unresponsive tooltip on tight column chart with shared tooltip.Fixed #4201, redundant tick alignment to empty axes.Fixed #4203, radial gradient rendered wrong in 3D Pies.Fixed #4208, click events did not bubble.Fixed #4210, touch scroll was trapped when zoomType enabled.Fixed #4217, tickInterval on linked axis did not follow that of parent.Fixed #4221, negative color and zones not working with logarithmic axis.Fixed #4223, tooltips showed year when data resolution was less than 1 millisecond.Fixed #4247, X zooming within an Y axis break resulted in empty chart.Fixed #4256, summary columns on waterfall, including data labels, extended below the plot area if an Y axis minimum was set.Fixed #4261, added namespace to drillToNode on click event in tree maps.Fixed #4264, column in stacked chart was mispositioned in some cases.  Highcharts v4.1.5 (2015-04-13) # Added new option, series.keys.Added now option, autoRotationLimit, as an upper limit for when to apply auto rotation. Closes #3941.Added options to solidgauge, radius and innerRadius on individual points.Changed tooltip behaviour in line charts and derivatives. This made swithching between series easier when the other series was covered by the tooltip.  Bug fixes Fixed #2922, redundant drilldown event on clicking data label.Fixed #3355, causing misaligned bars around the threshold value.Fixed #3758, setData on heatmap caused X axis to lose point range.Fixed #3839, axis labels not using available space after resize.Fixed #3867, errors on drill up on multi-series multi-level chart.Fixed #3912, shared tooltips not working well with pointPlacement.Fixed #3935, time axes got wrong extremes in rare cases.Fixed #3951, drilldown activeLabelStyle was lost after setting extremes.Fixed #3962, tooltip covered stacked columns near edges of the chart.Fixed #3967, shared tooltip not working with two datetime axes.Fixed #3969, legend indicator not displayed on colorAxis for 0 values.Fixed #3976, one legend item's height influenced all subsequent boxes.Fixed #3985, clicks registering incorrectly on column charts.Fixed #3988, column legend markers were not aligned to baseline.Fixed #3990, drilldown failed after destroying and re-initialising chart.Fixed #3995, all points were black after drilling in treemap with a coloraxis.Fixed #3996, font-style not taking effect with useHTML.Fixed #4001, errors thrown on area with a single point and zones.Fixed #4003, text replacement in export replaced content in label.Fixed #4006, wrong rendering of zones with values less then the minimum.Fixed #4014, touch scrolling not working on charts since the default followTouchMove changed.Fixed #4015, solid gauge color not updating in IE8.Fixed #4035, lineWidthPlus adding to states.hover.lineWidth.Fixed #4046, treemap issue with drillToNode and redraw of the chart.Fixed #4051, minPointLength gave wrong position on reversed Y axis.Fixed #4055, unable to set borderWidth to 0 for 3d columns.Fixed #4056, stack labels on reversed axis not vertically aligned correctly.Fixed #4062, 3d zIndex incorrect on chart resize.Fixed #4067, 3d columns datalabels not aligned.Fixed #4068, null colors rendered as black in columns and white in pies.Fixed #4069, setVisible was very slow on pies with many legend items.Fixed #4070, label ellipsis lost on vertical axis after redraw.Fixed #4075, zone elements were not destroyed on series update.Fixed #4079, bullets in tooltips had wrong encoding in IE8 on non-UTC pages.Fixed #4082, series with zones didn't apply hover line width.Fixed #4083, series with zones animated wrong on addPoint.Fixed #4085, wrong usage of momentjs in demo.Fixed #3832, bundled PhantomJS scripts not copied to filesystem on Windows.  Highcharts v4.1.4 (2015-03-10) # Added originalEvent to wrapped event argument for point and series click. Closed #3913.Changed description for error 23 (related to #3920).Fixed data.parseDate callback.  Bug fixes Fixed #1093, chart was resized after cancelling print.Fixed #3890, errors on box plots and error bar series when stacking was set in general plot options.Fixed #3891, axis label rotation not working outside -90 to 90.Fixed #3899, tooltip on column range only working on one point per X value.Fixed #3901, tooltip displaying for null points.Fixed #3904, shared tooltip gave errors with null points.Fixed #3911, data label duplication on WebKit with Retina displays.Fixed #3919, click event always triggered on the same point with a shared tooltip.Fixed #3920, color tweening with gradient fills caused black result.Fixed #3926, tooltip not showing when entering the plot directly on a column.Fixed #3932, shadow was not applied when negativeColor was used.Fixed #3934, pie chart did not update when legend was hidden.Fixed #3937, pointer events not reset after chart destroy.Fixed #3945, tooltip did't work afer resize.Fixed regression causing mouseover to not work with a single series.  Highcharts v4.1.3 (2015-02-27) #   Bug fixes Fixed #3900, duplicated Y axis in exported charts. Made export module more testable so it would have caught this error.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, error in title setter when setting a non-string value.  Highcharts v4.1.2 (2015-02-27) # Added new option to tree maps: interactByLeaf.Added new dataLabel option, shape, in order to allow callouts and connectors on data labels.  Bug fixes Fixed #3567, Safari failed at exporting charts with images.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, JS error when setting element title to a non-string value.Fixed #3886, wrong rendering of waterfall with a non-zero Y axis minimum.Fixed #3873, series.points array order was modified when building the k-d tree.Fixed #3866, data labels not re-appearing in remaining series after hiding another series.Fixed #3875, eternal loop and crash in Chrome when using minorTickInterval on an axis with very close data points.Fixed #3842 and #3872, data labels with text shadow are mispositioned in Firefox and modern IE.Fixed #3849, duplicated text on data labels in export. Closes #3864.Fixed #3868, setData broke tooltip.Fixed issue with tooltip not hiding after hiding a series from a floating legend.Hide tooltip on mouse leaving the plot area, also when a hoverSeries is not defined.Fixed #3860, a regression causing onMouseOver event not to work on line series.Fixed #3856, shared tooltip in polar charts.Fixed #3863, pointer with data grouping and addSeries.Fixed #3844, colorByPoint not working on tree maps.Fixed #2202, chartOptions.xAxis options not added in export.Fixed #3852, a regression causing logarithmic axis on gauges to fail.Fixed #3845, problems with addPoint on 3D pies.Fixed #3841, 3d column layering issue.Fixed #3793, charts with huge numbers fail at Number.toFixed.Fixed #3841, issue with multiple columns in 3d.Fixed #3830, point names in category axis were lost after Axis.update.Fixed #3836, a regression causing plot band labels to always be visible.Fixed #3840, isIntermediateSum miscalculation.Fixed drilldown issue with labels having both drilldown and static points.Fixed #3839, a regression causing columns not to be clipped while animating in.Fixed #3837, too aggressive data label collision detection in heat maps.Fixed #3834, crosshair drawn incorrectly on dynamically added yAxes.Fixed #3806, JS errors on clicking on non-drillable axis label after drilldown.  Highcharts v4.1.1 (2015-02-17) #   Bug fixes Fixed #3826, a 4.1 regression causing markers to be clipped after setSize.  Highcharts v4.1.0 (2015-02-16) # Added polygon series type.Added e.category event argument in drilldown events to make it clear when a category is clicked. Related to #3771.Added new option to the data module, firstRowAsNames.Added new option, pointIntervalUnit, in order to allow months and years as point intervals. Closes #3329.Added beforePrint and afterPrint events. Related to #2284 and #3729.Added new method, Series.removePoint, to allow removing points that are not instanciated on demand.Added new option, global.getTimezoneOffset, to allow integration with third party timezone libraries like moment-timezone.js.Added new Axis option, tickAmount. Refactored alignTicks on multi-axis charts to first compute a tickAmount, then make all axes comply with that.Added new Axis option, autoRotation as an array of possible values.Added new callback option, tooltip.pointFormatter.Added polar support for arearange. Issue #3419.In solid gauges, added support for initial animation as well as setting animation object for updates. Closes #3135.Made the entire numberFormat method settable and wrappable from the outside.Made tooltip.followTouchMove true by default, and allowed page scroll at the same time.Implemented support for "contrast" color setting in data labels. When the data label is inside a shape (like a column), this will ensure the best readability.On category axes, let the crosshair width cover the whole category like a band.Refactored zIndex handling on SVGElements so that the zIndex can also be modified after the element is first added.Changed the Axis.tickPositioner callback so that the default tick positioning logic runs first, to allow modification in the tick positioner instead of creating positions from scratch. Closes #3538.Made the legend draw below or above the plot area in cases where it is placed in a corner and the layout is horizontal.Implemented algorithm for setting precise tooltip xDateFormat when needed, but general format like year, month, day etc. when the time falls on midnight and the closest point range dictates it. Related to #3329.New default behaviour for the xAxis.minTickInterval option on datetime axis. It now goes to the closest point range by default.Implemented silent degradation instead of error 19 when user options dictate too many ticks on an axis.Removed overflow:justify logic. Instead, move labels and add ellipsis in case of overflow.Export server: Adapted to PhantomJS 2.Export server: Implemented XSS filter.Fixed error on applying stacking to area range series.Partly fixed #3506, overlapping axis labels on polar chart.Fixed waterfall issue where the upColor stayed after updating point to negative. Related to #3710.Don't allow decimals on yearly X axis.  Bug fixes Fixed #3724, JS error on preventing the selection event and running setExtremes immediately.Fixed #3728, Point.update not updating category name.Fixed #3743, minor ticks rendered outside plot area.Fixed #3778, redundant legend paging visible after redraw.Fixed #3197, drilldown with hidden series.Fixed #3719, updating areaspline to area failed.Fixed #3703, show no-data message on hidden series also.Fixed #3679, no-data label not realigning after showing hidden container.Fixed #3710, update point did not update sum in waterfalls.Fixed #3712, checkboxClick not handled for pie charts.Fixed #3708, color disappearing on redraw of solid gauge.Fixed #3702, JS error when running setData on a hidden series.Fixed #3670, funnel ignored point specific border settings on init.Fixed #3648, data label posision for column incorrect when using custom positioned Y axis in inverted chart.Fixed #3654, millisecond ticks not placed correctly.Fixed #3652, minor grid lines sometimes rendering outside the plot area to the right.Fixed #3201, crashes when zooming too far in on a dashed series.Fixed data module issue with blank chart when using forced categories with data longer than turboThreshold.Fixed #3635, markers overlapping in cases where they should not, according to the default behaviour.Fixed #2361, plot bands disappearing under certain conditions when zooming in so that parts are clipped.Fixed #3636, negative colors not applied on hover.Fixed #3623, negative values in pies causing bad drawing after running setData.Fixed #3575, huge columns not rendering on Chrome.Fixed #3608, reversed Y axis in gauges causing arcs to be drawn inside out.Fixed #3600, errors raised in modules when a chart was destroyed in its own callback.Fixed #3346, tooltip failed for two Y axes side by side.Fixed #3579, mixed up levels in multidimensional drilldown.Fixed #3569, reset zoom button disappeared after multiple zoom operations in empty area.Fixed #3390, single heatmap point getting huge size and causing rendering defects. Better axis metrics for single points. Closes #2515.Fixed #3544, drilling up failed when top series data was added dynamically.Fixed #3536, implemented error message on wrong color definitions in heat maps.Fixed #3525, error 12 in master-detail demo.Fixed #3295 and #3514 label box not rendered correctly with 0 values.Fixed #3507, fixed width tooltip with a single word on the last line was clipped horizontally.Fixed #3501, long axis labels taking up too much space instead of wrapping in drilldown charts.Fixed #3500, monthly and yearly X axis ticks having the wrong distribution when using timezoneOffset.Fixed #3449, export menu not working on touch devices when zoomType was set.Fixed #3391, halo not hidden on hiding a pie slice from legend.Fixed #2889, tooltip not displayed on line series when followPointer was true. Closes #3258.Fixed #3176, updating gauge axis caused background to disappear.Fixed #2919, errors and wrong behaviours on multi-level drilldown.Fixed #3445, pie charts showing wrong bullet color in tooltip.Fixed #2919, errors on drilldown with multiple axes.Fixed #2912, JS error on drawing hidden waterfall.Fixed #3437, data module failing with numeric data in first column.Fixed #3436 causing round linecaps on median lines in box plots. Reverted fix for #1638, a workaround for a Firefox bug regarding linecaps. Newer Firefox versions don't have the bug.Fixed #3431, regression causing error 16 not to be triggered.Fixed #3434, error 10 throwed with null values on logarithmic axis.Fixed #3380, a regression causing Series.update not to honour updated zIndex.Fixed #3240, 3d pie labels with 0 values.Fixed #3418, wrong default tooltip header date format when passing points every two days, two months etc.Fixed #3416, broken tooltip on colorAxis.Fixed #3152, tooltip didn't display on the far left of a zoomed axis with categories.Fixed #3382, line series disappering when a negativeColor was applied and the threshold was way beyond the chart.Fixed #3411, align ticks fails without ticks.Fixed #3402, redundant halo on heatmap.Fixed #3404, regression causing canvas heatmap to white out.Fixed #3402, issue with updating bar to pie.Fixed #3389, JS error when drilling up multi-level too quickly.  Highcharts v4.0.4 (2014-09-02) # Added more date parsing logic to the data module. Now integrates with Date.js, and uses Date.parse. Tries to parse all dates, but falls back to categories if dates are not sorted (which may be a sign that parsing went wrong).Added support for setting marker image dimensions. Closes #1807. Closes #1817.Added a better default value for xAxis.allowDecimals. Don't allow decimals in X value ranges that look like years. Closes #3363.Added warning on trying to plot negative points on a logarithmic axis.Allow changing "Date" class used to support other calendars. Added new option global.Date.Allow overriding Highcharts.numberFormat from the outside. Closes #3284.Made point.click event work in combination with drilldown charts.  Bug fixes Fixed #3381 3D pies, wrong z index applied to sides.Fixed #3279, column z issues in 3d.Fixed #3397, footerFormat does not replace variables.Speed optimization of Series.setData, related to #3260.Fixed #2909, a regression causing chart click event not to fire when zoom enabled on touch devices.Fixed #3334, missing animations in 3d pies.Fixed issue causing markers to show even on dense line series, in spite of new logic in 4.x where it should depend on series density.Fixed #3202, tick marks being drawn in unwanted positions when tickInterval was set on categorized axis.Fixed #424, wrong tooltip position for column series in a pane position.Fixed #3352, JavaScript errors on clicking category labels on async drilldown.Fixed #3344, drilldown axis label style inconsistent after redraw.Fixed #3353, wrong axis minimum and maximum on thresholded series when switching from linear to logarithmic axes type.Fixed #3342, memory leaks in jQuery 2.x when repeatedly reinstanciating charts or destroying and recreating renderer primitives.Fixed memory leak on addPoint caused by adding empty names to the Axis.names lookup table.Fixed #3328, 3D Columns and null values.Fixes #3317, extra tick added when there are only two ticks (start and end).Fixed #3315 by disallowing duplicate ids in drilldown.Fixed #3182, three level drilldown broken when drilling up and down again on the same series.Fixed #3276 with HTML markup in element titles when a label is shortened by ellipsis.Fixed #3088, tooltip blocking new mouse interaction after hiding when useHTML is true.Fixed #3285, funnel and pyramid center option not working for vertical dimension.Fixed #3300 where data labels would remain semi-transparent when chart updated in the middle of labels fading in.Fixed #3295, labels do not render 0 as value.Fixed #3282, plotBorder width changed sign, causing a strange animation.Fixed #3245, waterfall series failed when first element was Sum or IntermediateSum.  Highcharts v4.0.3 (2014-07-03) # Added 3d options edgeColor and edgeWidth to distinguish from borders that have different defaults.Added option, chart.panKey, to allow panning and zooming on the same chart. The chart can now be configured so the user can pan by holding down the shift key while dragging.Added features zMin and zMax for bubble series, to set the Z value corresponding to minSize and maxSize independently from the data.Changed default top position for loading label to 45%, which results in a vertically centered label.Better handling of data label heights on pie charts, related to #2630.Better handling of dynamic font sizes. Adjust tooltip text-wrapping. Apply dynamic font size (em) on line breaks. Fixed placement of title and axis labels when using ems for font size. Added support for em font-size in legend.itemStyle.  Bug fixes Fixed #2251, a regression since 3.0.8 causing text and graphic elements to become selected while zooming in old IE.Fixed #3195 where a short axis with startOnTick and endOnTick set to false would display no ticks at all.Fixed #2694 causing columns to overlap by one pixel in some cases when pointPadding is 0.Fixed #2227, waterfall breaking with more than one intermediate sum.Fixed #3163, pie chart data labels displaying outside plot area.Fixed #1991, a regression causing area stacks with null or missing values to draw incorrectly.Fixed #3158 causing wrong line wraps on text containing markup.Fixed #3151, waterfall columns not displaying a border when the rendered height was 0.Downloadbuilder missing metatags in SVG, added filterset, fixes #3106.Fixed #3072 causing unexpected borders after hover on column series when borderWidth was 0.Fixed #3132 causing wrong line breaks in SVG text (pseudo HTML) containing markup.Enabled mouse tracking on data labels for some series types where it had been mistakenly disabled.Fixed #2697, JavaScript error in IE11 on destroying a chart containing useHTML elements after the chart container has first been emptied.Fixed #3126, waterfall graph getting wider on hover. Introduced new options, lineWidthPlus, radiusPlus for hover state of graphs and markers.Fixed #3116, halo failing to animate when a point was updated to a new position. Removed redundant pointer.reset call on Axis.redraw because Chart.redraw also calls the same method.Fixed #3113, roundoff error throwing off calculations of extremes on log axis.Fixed #3104, touch panning not being able to pan outside the data range even if the axis min and max options were outside the range.Fixed #3098, plot area size of a pie chart not being recalculated after the legend size changed.Fixed #3090 causing default 3d options not to be interpreted correctly.Fixed #3094 causing series Z index to change after Series.update.Fixed regression issue #3095, semi-transparent fills coming out as black in exports created by Batik.Fixed #3082, positioning of 3d pie datalabels.Fixed #3080 causing JS error on low chart due to negative height of the legend clip rectangle.Fixed #3051 causing wrong Z indexes for slices in 3d pie charts.Fixed #3075 causing touch panning on a categorized axis to alter range.Fixed #3039, series options was not read for 3D.Fixed #2893 causing heatmap point colors not to update after updating the color axis coloring.Fixed #1080, loading text not reflowing to changed chart size.Fixed #3056 with tooltip chevron not pointing exactly on the right point of the graph when animating between close positions.Fixed #3044 causing JS errors in some cases when axis label formatter returned null or undefined. Closes #3050.Fixed #3053 causing series to be cropped too tight on logarithmic X axis when the number of points exceeded the crop threshold.Fixed #2240 causing the point mouse out event not to fire when the tooltip is shared.Fixed #2997, solidgauge issue with points past ±360° or below yAxis.min.Fixed #3028 causing the last series to become unlinked when calling Series.update on several linked series in succession.Fixed #3027 causing truncation of axis labels when the axis title offset is set and the axis title is shorter than the labels.Fixed #3023 causing defered data labels to show even if series was hidden in the meantime while animating.Fixed #3003 causing rotated data labels to be misaligned after redraw when using Standalone Framework.Fixed #3017 causing centering of data labels on inverted range series not to work.Fixed #3007, with halo showing on invisible points in pies.Fixed #3016 causing halo on sliced pie series to diplay incorrectly.Fixed #3000, labels wrongly aligned on plot lines with multiple axes.Fixed #3014 causing wrong tooltip position in waterfall charts in Highcharts 4.Fixed #3006, prevent null and 0 points from rendering in 3D Pies.Fixed #2982 by returning the added plot line or plot band object after Axis.addPlotLine or Axis.addPlotBand.Fixed #2977, set mimimum view point distance for 3D.Fixed #2975 with clipping not being updated on column series and derived series types after chart resize.Fixed #2968, 3d columns not drawn correctly when equal to max.Fixed #2963 where columns were badly drawn in Chrome due to a rendering bug.Fixed #2962 causing data labels on gauges not to display unless defer is set to true.Fixed #2954 that caused invalid SVG attributes on animating in and out grid lines when running older jQuery versions or the Standalone Framework.  Highcharts v4.0.0 (2014-04-22) # For news, see the release announcement.The default design has been updated with Highcharts 4, but all aspects of design can be reverted to the Highcharts 3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts v3.0.10 (2014-03-10) # Improved performance by 35% in our benchmark suite.Added new option, plotOptions.gauge.overshoot, that takes a value in degrees for how much the dial should overshoot when the value is off the chart.Added smarter logic to Series.setData, where instead of re-creating all the data points, existing points are updated. This allows animation, performs faster and is less prone to memory issues.Added option, yAxis.reversedStacks, to choose whether to stack from the top down or from the bottom of the stack and up.Added support for drilldown on multi-series column charts. Closes #2604.Added 'pyramid' type of series.Added 'reversed' option to funnel series.  Bug fixes Fixed #2755 where attributes in pseudo-HTML were applied outside elements.Fixed #2753 which caused errors and broken behaviour on drilldown containing null points.Fixed #2770 where data labels on error bars were not displayed.Fixed #2681 where the Pointer object leaked memory after Chart.destroy.Fixed #2763 where series on log axes would disappear alltogether when the axis became too short.Fixed #2760 where the ignoreHiddenSeries setting had no effect on bubble sizes.Fixed issue with Chart.setTitle not causing the chart to redraw to adapt to changed size of the title. Closes #2719. Closes #2744.Fixed #2738 where legend navigation would add one page too many when the last page had two items.Fixed #2722 where pie slice data label connectors would have the wrong Z index after hiding and showing the slice.Made chart.style option take effect on chart instances, not only globally. Closes #2723.Fixed #2713 where series connected to a dynamically added X axis would fail.Fixed issue with horizontal axis labels being clipped instead of justified into chart area. Closes #2703.Fixed #2700 causing data labels to not render inside columns if the actual value of the column was cropped.Fixed #2693 with drilling up from drilldown caused interference between charts.Added sparkline demo.Fixed memory leaks in IE11 due to implementation of touch support. Closes #2691.Export server: Fixed jar location lookup on Windows, closes #2869.Fixed issue with disappearing bar chart data labels in certain chart widths. Closes #2683.Fixed issue with showLoading not displaying in IE9. Closes #2686.Fixed issue with Axis.update not removing all associated series. Closes #2687.Fixed failure in updating stacking from percent to normal. Closes #2682.Fixed issue with misalignment of rotated axis labels with useHTML in IE11. Closes #2684.Fixed issue with wrapping horizontal legends not taking the x option into account. Closes #2680.Fixed issue with JS errors on hovering chart when running IE11 in combination with the Standalone Framework. Closes #2672.Fixed issue with wrong rotation of polar charts when X axis was reversed. Closes #2570.Fixed issue with tooltip position and hover point on polar chart where startAngle was < 0. Closes #2665.Fixed issue with empty tooltip boxes visible in tall pages in IE10.Fixed issue with showLoading not working in Standalone Framework. Closes #2653.Fixed issues with pie slices and data labels remaining visible after hiding the pie series itself. Closes #2315. Closes #2656.Fixed issue with automatic line height on labels with em font sizes. Closes #2651.Fixed issue in 3.0.9 where wrong vertical axis labels would be skipped when they were of varying height. Closes #2642.Provided reasonable default column width and group width for column charts with only one X value when minRange was set. Closes #2610.Fixed issue with too many pages in the legend when using legend navigation. Closes #2617.Fixed unexpected effects of zooming outside the data range. Closes #1734.Fixed issue with line graphs not being vertically centered when there was only one value which exceeded the upper limit of 44bit values. Closes #2619.Worked around Firefox 26 drawing issue where legend items would not redraw after resizing the chart. Closes #2580.Fixed issue with mispositioned data label on single pie slice with certain pie sizes, caused by JavaScript rounding error. Closes #2650.Fixed issue with text bounding boxes not being correctly computed when the chart was added to a container with display:none !important. Closes #2631.Fixed issue with gauge pane background color not taking effect on multiple panes, or respecting changes. Closes #2257. Closes #2649.Fixed error in Standalone Framework where calling destroy on an animating element would result in endless error messages. Caused errors when a chart was destroyed while fading out the tooltip. Closes #2616.Fixed pie chart issue with messed up data labels with certain combinations of start and end angle. Closes #2645.Fixed issue with pies ignoring endAngle when it was set to 0.Performance improvement for updating tick labels. Closes #2640.Fixed issue with tooltip header not displaying relevant time resolution when points where added at minute or hour resolution with a day between them. Closes #2637.Fixed issue with wrong bounding box detection of numeric texts when they were of number type instead of strings. Closes #2316.Fixed issue with JS errors and failing to activate charts in pages that are saved to disk from the browser. Closes #2609.Fixed issue with followPointer not working correctly for line charts.Fixed issue with numerical legend items crashing chart when navigation was enabled. Removed unsafe internal use of elemWrapper.bBox, used elemWrapper.getBBox() instead. Closes #2605.Fixed regression with pie slice hover color becoming increasingly brightened after repeated redraws. Closes #1619.Fixed issue with positioning of markers in oldIE in inverted charts. Closes #1111.Fixed oldIE issue with box plots and error bars not showing in inverted charts. Closed #1680. Closed #1806.Fixed missing stack percentage in normal stacks. Closes #2551.Fixed issue in Standalone Framework with getting the right mouse position inside a scrollable div. Closes #2205.Fixed JS error on hovering over a chart after running Chart.setData without redrawing. Closes #2594.Fixed issue with tooltip position if data is NaN.  Highcharts v3.0.9 (2014-01-15) # Added bower.json file. Closes #2244.  Bug fixes Fixed JS error on quickly moving the mouse out of a chart. Related to #2499.Fixed issue with text positioning in modern IE when CSS line height was much smaller than font size. Closes #2444. Closes #2568. Closes #2569. Affects #2591.Fixed issue with crosshairs not exactly following the tooltip, mostly visible ou touch devices. Closes #2582.Fixed issue with categorized Y axis on gauges being positioned wrong. Closes #2593.Reverted optimization that skipped individual handling of point attributes. Closes #2549. Closes #2587.Fixed issue with adding a point in the middle of a line series failing. Issue #1109.Fixed regression with datetime tooltip header format falling back to full years. Closes #2581.Fixed rounding error in stack labels. Closes #2576.Implemented new option, switchRowsAndColumns, in the data module.Fixed regression in 3.0.8 with hover color of columns having individual color option. Closes #2579.Fixed issue with fillColor on box plots not honored when colorByPoint is true. Closes #2574.  Highcharts v3.0.8 (2014-01-09) # Export: Streamlined and removed unnecessary properties in maven pom.xml.Export: Cleaning up overlap in maven dependencies for java export server.Added handling of white-space: nowrap in styles for SVG text.Implemented logic that removes overlapping axis labels just before they are rendered.  Bug fixes Fixed issue with unexpected arc rendering in VML. Closes #168.Added multitouch support for IE10/11. Closes #2536.Added default date format for the headerFormatter. Closes #2546.Fixed issue with categorized Y axis overflowing the plot area because category padding weren't applied. Closes #1784.Fixed issue with negative color being clipped in a series with all negative values.Optimized performance by caching results for getBBox for numbers, since numbers are monospaced and the same bounding box applies to any number of the same character length and the same font family and font size. Also, don't delete cached bounding box on word wrap when there is only one word. These two optimizations improved rendering times by 15% on Chrome and Firefox using our benchmark tests. Relates to #2525.Fixed JS errors in IE11 workaround when destroying a chart in the same thread as creating it. Closes #2030.Prevented memory build-up in datetime axes by avoiding unnecessary use of the Axis.names array for categories. Closes #2523.Fixed issue with hidden pie slices affecting the positions of data labels. Closes #2510.Prevent timeout when calling chart.reflow as an API call. Closes #2224.Fixed issue with disappearing data labels in gauges when center is outside plot area. Closes #2415.Fixed issue with clipped chart when resizing down. Closes #2503.Fixed typo in series sorting causing series to change order when updating series type in IE9. Closes #2501.Fixed issue with point state marker graphic staying in its previous position after a zoom operation on mouse or touch devices. Closes #2500.Fixed issue on iOS where selection of columns and pie slices needed two touches except on the very first run. Closes #2499.Fixed JS errors on empty series on secondary axis when tickPositions were defined. Closes #2482.Added formattributes to exporting to allow setting custom attributes.Removed line running setting event.returnValue, which causes a warning in Chrome. Closes #2251.Fixed a couple of minor issues related to legend navigation.Fixed regression on running Point.update with null value. Closes #2481.Export: Refined code on waiting for images loaded.Export: Missing images fallback gracefully, closes #2474.Fixed regression with stack order not being affected by series.index. Closes #2456.Fixed issue with bubble chart not displaying when displayNegative was false.Fixed issue with data label styles not updating from Point.update. Closes #2468.Improved setOptions by copying new objects into existing instead of creating new defaultOptions structure. Improves performance and keeps internal pointers. Closes #2469.Fixed SVG errors on exporting SVG from IE8, causing Batik not to render the SVG. Closes #2463.Fixed JavaScript error when firing a series click event in IE8 using the Standalone Framework. Closes #2465.Removed thousands separators from numbers below 10,000 in the default X axis label formatter. This prevents commas to be inserted in years when applied to a linear axis. Closes #2466.Data module: Update itemDelimiter option to default to tab character if a tab is found within the CSV string. This makes CSV parsing work with content copied directly from Excel.Fixed issue with clipped legend items when navigation is enabled. Closes #2098.Fixed issue with document events set in exporting not being destroyed when destroying chart. Closes #2407.Fixed issue with tooltip options not taking effect on certain series types where the same options were defined in series specific defaults. Closes #907.Fixed issue with markers on inverted charts. Closes #2450.Fixed issue with shared tooltip showing wrong category when pointPlacement was used. Closes #2434.Performance improvement by not listening to document mousemove when the tooltip is hidden.Added symbolHeight and symbolRadius options for legend.Fixed issue with orphaned stack labels after Series.destroy and Series.update. Closes #2440.Fixed issue with updating the visibility of a pie slice causing it to go invisible. Closes #2430.Added new option, global.timezoneOffset, to allow setting which timezone the data is displayed in even though the input data is defined as UTC.Fixed bad positioning of rotated elements when useHTML was true. Closes #2404.Added error message on trying to add an object literal point configuration on a series with more data points than the turboThreshold.Fixed issue with flags on the last point dropping down to the X axis when the main series enters data grouping. Closes #2374.Fixed regression where legend would disappear when the linkedTo option was set to null. Closes #2414.Fixed regression causing JS errors after updating an axis title when useHTML is set. Closes #2402.Fixed issue with NaN tick positions being applied to empty axis, causing wrong number of ticks in chart with multiple axes. Closes #1741.Export: Beans from export-convert-module are now configurable from the export-web-module.  Highcharts v3.0.7 (2013-10-24) # Performance improvement by moving color parsing regexes out of the Color class to a global definition in order to be instanciated only once.Made new option, linecap, for line series. Closes #2358.Allow disabling the hover state for a specific point marker. Closes #1610.Made showInLegend option overridable for linked series.Worked around Firefox/Win issue with median lines on box plot spilling over the edges of the box. Closes #1638.Made the data labels inherit the series' cursor setting.Improved fix for #2030 to work with IE11 quirks mode.Reverted fix for #1651, which introduced an error with stack data labels not being moved on update. Closes #2336.Added new option, sizeBy, to bubble charts to set whether the area or the width should reflect the data value.Improved workaround for IE11 text positioning issue by not applying it to exported charts, closes #2030.  Bug fixes Fixed issue with useHTML legend items not drawing after removing all and adding again. Closes #2393.Fixed regression after fixing #2153, related to assigning styles in VML browsers. Fixes #2368 and #2368.Fixed issue with plot band label not being hidden when zooming out of view. Closes #2328.Fixed wrong calculation of point.percentage in percentage stacked tooltips. Closes #2375.Fixed issue with yearly ticks being computed wrong, causing stagger lines where not necessary. Closes #2360.Fixed issue with IE8 not being able to add soft line breaks in text in export.Fixed issue with only first series' point names being used for categories. Now all series are inspected. Closes #2357.Fixed issue with broken export menu in IE9 compatibility mode. Closes #2335.Fixed JavaScript error on updating a point value to null. Closes #2359.Fixed issue with response of PhantomJS server in export-server that lead to StringIndexOutOfBoundsException, fixes #2367.  Highcharts v3.0.6 (2013-10-04) # Added new option, chart.spacing, to set spacing as an array.Added round linejoins and linecaps to line graphs for better look in prints.Added support for negative values in stacked percentage columns. Closes #2197.Added new option to pie charts, endAngle, to allow semi-circle donuts and pies.Added experimental support for axis.labels.ellipsis. Not implemented for VML renderer.Adapted Java exporting server to PhantomJS saving files locally.PhantomJS running as server can save files to filesystem, closes #2137.Fixed issue with too high axis max tick on very small charts where the height of the plot area was much smaller than the tickPixelInterval setting.Implemented Async download from export server.Added CORS filter for Cross-Origin requests to export server.Adapted Java exporting server to PhantomJS saving files locally.Add event handler to close context menu from touching outside the menu. Improves user experience on touch devices. Closes #2258.Forced disabling of startOnTick and endOnTick when navigator is enabled in Highstock. Closes #1090.Exposing the reflow method on chart objects.Added no-data-to-display plugin.Worked around bug in IE11 with rendering text in horizontal legends. Closes #2030.Added new option, dataLabel.overflow: 'justify'. Closes #1789, #1859, #1962, #1984 and #2190.  Bug fixes Fixed issue with scatter series not displaying in polar charts. Closes #2060.Fixed issue on touch devices with click events not firing on series, points or chart when chart.zoomType was set. Closes #2275.Fixed regression issue with slow running updates on gauges. Closes #2320.Fixed regression with vertical crosshair not working in Highstock with series compare. Closes #2316.Fixed issue with hide/show series in some versions of Android. Closes #2269.Fixed error message in PHP/Batik exporting stack when called without posting width. Closes #2303.Worked around InkScape bug where the hidden empty tooltip would display as a square in exported SVG. Closes #2301.Fixed issue with updating min and max using Axis.update() after running setExtremes. Closes #2306.Fixed issue with bubbles not resizing in IE8. Closes #2294.Fixed issue with unsorted data labels for funnels. Closes #2289.Fixed issue with JS errors in IE8 when trying to animate a rotated data label. Closes #1821.Fixed issue with disabling data label for a specific point not taking effect. Closes #2282.Fixed issue with Highcharts error 19 triggering with a hidden or very small chart. Closes #2272.Fixed issue with exporting button's menus being shared between multiple buttons. Closes #1908.Fixed issue with bubbles and other marker points not taking the "color" property of the point. Closes #2219.Fixed compatibility issue with the Standalone Framework and Dojo. Closes #2268.Fixed issue with updating to line series when starting with a spline. Closes #2270.Fixed issue in gauges with ticks disappearing or being badly laid out after resizing. Closes #1262.Fixed issue with Standalone Framework in legacy IE where click event wouldn't work on line series, and hovering didn't preserve the state of the tooltip. Closes #2265.Fixed JS error on adding VML styles in old IE in pages with more than 32 style sheets. Closes #2153.Fixed issue with waterfall columns starting at the wrong place with certain values on the Y axis. Closes #2241.Fixed issue with stacks not being cleared after updating a series. Closes #2229.Fixed issue with error number 19 firing on stock charts with ordinal axis when not needed. Closes #2228.Fixed positioning problem with tooltips on flags. Closes #2211.Fixed issue with addPoint() on waterfall charts. Closes #2209.Fixed issue with wrong animation between lines of different length. Related to #1325 and #1386.Fixed issue when having no data in stacking chart. Closes #2207.Fixed issue with removing points in funnel charts. Closes #2206.Fixed issue with Point.update removing the selected state when applied with an object configuration. Closes #1909.Fixed issue where running addPoint with an X value not being able to insert the point into the middle of a sorted series. Closes #1109.Fixed issue with percentage stacked area series adding up negative values incorrectly. Closes #2197.Fixed issue with overlapping X axis labels and maxStaggerLines not taking effect on dynamically added series. Closes #2186.Fixed error on redrawing chart after applying a plot line with zero width. Closes #2189.Fixed issue with data labels of hidden series attracting mouseover and tooltips in IE10. Closes #2185.Fixed issue with connectNulls not taking effect on stacked areas. Closes #1836.Fixed regression where the lower stacked series in an area stack would not display. Closes #2181.  Highcharts v3.0.5 (2013-08-23) # Added Standalone Framework for using Highcharts without jQuery, MooTools or Prototype.Added error message on adding too many ticks to an axis. Closes #2174.Implemented better sharpening logic for columns and bars. Closes #1188. Closes #2091.Improved axis line, plot line and grid line positioning so that a 2px line series along the X axis shows up as exactly 1 pixel, half inside and half outside the visible plot area. Closes #1687.Added error message on exceeding the turboThreshold. Closes #2107.  Bug fixes Fixed issue with non-aligned axes after multiple setExtremes with internal redraws. Closes #2169.Fixed regression in IE8 where an error occured on fading out the tooltip in older jQuery versions. Closes #2161.Fixed issue with series.linkedTo not working when added in non-source order. Closes #2166.Fixed issue with missing textShadow on HTML datalabels.Fixed issue with tooltip not displaying on scatter points lying on the edge of the chart, when moving the mouse in from the outside. Removed limitation of only showing tooltips for points lying inside the plot area. Closes #2147.Fixed problem with tracking mouse movements on lines near the edge of the chart because the line tracker was not clipped. Clipped the tracker and added tracking to the marker group also. Closes #1894.Fixed regression with stacked columns on a log axis not displaying. Closes #2104.Fixed issue on older Chrome versions on mobile where pinch zooming was broken. Closes #2143.Fixed regression with log X axis affecting the calculated data extremes. Closes #2117.Fixed issue with point markers not being updated from Point.update method. Closes #2130.Fixed regression that appeared when fixing #2005, where tooltips didn't display in IE8 after scrolling down a page. Closes #2129.Fixed issue with area stacks containing negative values. The stacks are now treated differently between columns and areas. In column stacks, negative points always extend from the trheshold and down. For area stacks however this is counterintuitive. Instead, negative points are substracted from the stack. Closes #1910.Fixed regression where a pie slice with value zero would show up as a quarter of a circle. Closes #2103.Fixed hanging browser on pie charts where all values were 0 or null.  Highcharts v3.0.4 (2013-08-02) #   Bug fixes Fixed issue with plot bands or lines not being removed after Axis.update(). Closes #1975.Fixed regression from 3.0.3 where redrawing a chart containing stacked points within the same series would cause the single stack to redraw badly. Closes #2095.Fixed regression with resizing a stacked chart containing negative values. Closes #2089.Fixed JS errors in polar chart when instanciated with no data. Closes #2093.Fixed regression with staggered X axis labels on reversed axis. Closes #2081.  Highcharts v3.0.3 (2013-07-31) # Added automatic stagger lines for colliding labels on horizontal axis.Added support for automatic text wrapping in long title names. Closes #776.Added new option, legend.itemDistance, to allow control over the distance between items of a horizontally laid out legend. Closes #832.Added context and event information to click handlers on touch devices. Closes #1830.Added useHTML option for plot line and plot band labels. Closes #1916.Added support for multidimensional series (arearange, ohlc, box plot etc.) in data module.Added automatic default alignment of axis labels based on which side of the chart and the label's rotation.Added automatic line-wrap of titles and subtitles if the text exceeds the chart width. This change includes changing the default Y position of the subtitle to allow it to depend on the title height.Increased performance of Series.addPoint on large series by preventing looping over all data points on each call. Closes #1937.  Bug fixes Fixed #2017 where the browser would freeze when xAxis.min equals xAxis.max on a datetime X axis.Fixed legend box size browser issue.Worked around issue in Chrome 28 where numberFormatting would round all values to whole numbers after running for a while. Closes #2043. Closes #2052.Fixed issue with point.name being applied to the wrong category label. Closes #2046.Optimized merge function by moving a check out of the loop. Closes #2045.Fixed issue with wrong calculation of areas when a negative color was used on an inverted chart with non-zero threshold. Closes #2011.Fixed issue in Highcharts 3.0.2 where data labels for null points were rendered as 0. Closes #1997.Fixed issue with click events on columns not firing on touch devices until the second touch. Closes #1551.Fixed issue with mouse and tooltip offset inside frameset when running IE10 in compatibility mode. Simplified mouse position detection. Closes #2005.Fixed issue with percentage stacked area and missing values. Closes #1991.Fixed issue with unexact position of columns where minPointLength applies. Closes #1166.Fixed problem with setting area series fillOpacity to 0. Closes #1983.Fixed issue with export menu displaying outside the chart at the top of the button. Closes #1985.Fixed issue with double xmlns attributes created in IE9 and IE10. Closes #1978.Fixed issue with pie slices animating from center on first call to Point.update. Closes #959.Fixed issue with updating shadow positions on bubbles. Closes #1977.Disallow JavaScript execution from formatted category labels.Fixed issue with percentages not being available for pie chart legend. Closes #897.Fixed issue with visible:false not taking effect on pie chart data labels. Closes #876.Fixed issue with updating an element's dashstyle programmatically. Closes #874.Fixed issue with stack labels not appearing in other series types than column. Closes #1383.Fix for error while converting to SVG file in phantomjs, missing character in XML.Added event to hide the tooltip on touch devices when touching outside the plot area. Closes #1203.Fixed issue with stacked columns within a single series. Closes #1959.Fixed issue with useHTML labels not cleaning up their parents when destroyed. This would leave a lot of empty divs inside the container after updating for example axes. Closes #1960.Fix for error while downloading SVG files, missing character in XML doctype.Fixed issue with point markers not being aligned to columns. Closes #1843.Fixed PDF cropped and split on 2 pages issue #1957.Fixed issue with IE8 and exporting with old look. Closes #1964.Fixed issue with no legend symbol on areaspline series when line and markers were hidden. It now uses the rectangular legend symbol like regular area series. Closes #602.Fixed issue with area legend taking the marker fill color instead of the area fill color when different. Closes #585.Fixed issue with legend box not reserving space for legend title. Closes #1717.Fixed issue where switching from log to linear scale caused the threshold of columns to become lower than zero. Closes #1791.Fixed issue with legend symbols not being centered in text when font size increased. Closes #1804.Fixed tooltip order and naming of quartiles in box plot.Fixed issue with rotated labels along a vertical axis becoming wrongly positioned based on bounding box. Closes #1951.Better detection for showing or hiding the data labels based on whether the entire bounding box is inside the plot area. Closes #1788.Fixed issue with dynamically modified data being lost after Series.update. Closes #1780.PhantomJS JavaScript files are automatically unzipped to java.io.tmpdir.Fixed issue where calling Point.select(true) on a pie slice would toggle it, not select it. Closes #1823.Fixed issue with removing plot band or line and reflecting it in export. Closes #1114.Fixed issue with adding X axis dynamically. Closes #1827.Fixed funnel chart issues with center Y not taking effect, and points disappearing when neckHeight is equal height. Closes #1866.Fixed issue when using rotation on a particular point's data label, the next point's data label would be rotated. Closes #1883.Fixed issues with legend items not reflecting updates to pie slices. Closes #1831. Closes #1885.Fixed issue with wrong alignment of labels on the X axis of a rotated polar chart. Closes #1942.Fixed issue with too tight ticks on X axis on column charts with only a few columns. Closes #1943.Fixed issue with bubble series not working at all when number of points exceed the turboThreshold. Removed the turboThreshold option for bubble series. Closes #1898.Fixed issue with spline animation of lower part when negativeColor is used and running addPoint. Closes #1899.Moved the warning on unsorted data to catch unsorted data in the middle of the data set in addition to the first two values. Closes #1900.Fixed issue with X axis not redrawing after Point.update. Closes #1906.Fixed issue with tooltips not accounting for the startAngle of a polar chart. Fixed issue with tooltips not being wrapped around from the last point to the first point at the top of a polar chart. Closes #1915. Closes #1469.Fixed issue with Safari crashing when displaying tooltips with nested HTML tags. Closes #1596.Fixed issue with negativeColor and logarithmic Y axis. Closes #1726.Fixed issue with negativeFillColor not taking effect unless a negativeColor is also set. Closes #1907.Fixed issue with multiple class names added to tracker objects. Related to #1918.Fixed wrong position of dials in IE7 and IE8 Quirks mode. Closes #1873.Fixed issue with inconsistent xAxis label width on bar charts. Closes #1931.Fixed issue with click events not being handled on flag series in IE9 and IE10. Fixed support for hovering stacked flags in old IE. Closes #1924.Fixed regression with wrong higher path on arearange series on inverted chart. Closes #1930.Fixed position of rotated X axis labels to prevent overlapping with the element below. Closes #1764.Fixed JS error on setting new data on initially empty series. Closes #1920.Fixed issue with datetime axes not using intervals greater than 10 years. Closes #1913.  Highcharts v3.0.2 (2013-06-05) # Added stackLabels.format option analogous to dataLabels.format. Closes #1837.Added localized number formatting to data labels. Related to #1637.Removed php-phantomjs, this will not be supported any longer.Partially fixed issue with blurred legend contents in PDF export. Issue #1782.Don't neglect sum points in positive bar calculations, issue #1653.  Bug fixes Fix a bug related to updating existing StackItem instead of creating a new one after calling Point.update().Fixed error on exporting from IE8.Fixed handling of connectNulls on area range series so that null values in either low or high positions are also connected. This allows filling the area between lines with different X values. Closes #1404.Adding ability to define pointPlacement numerically.Fixed JS error on certain operations with jQuery 1.10. Closes #1881.Fixed regression with exporting.chartOptions not taking effect. Closes #1759.Fixed issue with setting medianWidth, stemWidth or whiskerWidth to 0 on box plots and error plots. Closes #1833.Fixed issue with errors on running point click event after the same point was destroyed from a series click event. Closes #1844.Fixed issue with stacks and series.index option. Closes #1722. Closes #1689.Fixed JS error on touching pie charts in iOS Safari. Closes #1861.Fixed touch zooming and panning problems from Highcharts 3.0.1. Closes #1860.Fixed JS error on iPad with disabled tooltip. Closes #1857.Fixed issue with pie slice not reverting to original position after slicing when animation is disabled. Closes #1767. Closes #1846.Fixed issue with last marker missing in certain withs of dual axis charts. Closes #1858.Fixed issue with error on custom exporting buttons containing no symbol. Closes #1822.Fixed issue in MooTools and Prototype adapters when used with highcharts-more.js. Closes #1834.Fixed issue with mispositioned pies in inverted charts after resizing. Closes #1795.Fixed pointer to error message for wrong axis binding. Closes #1800.Fixed issue with pie wrong chart data label connectors disappearing when hiding slice. Closes #1810.Fixed issue with wrong min and max in selection events on categorized axis. Closes #1207.Fix a bug when stacks wasn't updated after extremes change.Fixed issue with plot background image not being used in exported images. Closes #1765.Fixed issue with higher ranks X axis labels not being applied to the last label. Closes #1760. Related to #1649.Fixed exception after destroying a chart while the tooltip is still visible. Closes #1728.Fixed missing tooltips on flags when data grouping was disabled. Closes #1730.Fixed issue with missing text decoration on data labels in export. Closes #1729.Fix error related to waterfall positive bar starting at negative value, close #1653 and #1732.Fixed JS error when a pie series is present in an inverted chart. Closes #1736.Fixed issue with click events not being fired unless the mouse hasn't moved a pixel.Fixed JS error issue in bubble charts when first series is hidden. Closes #1737.Fixed issue with wrong sized bubbles when one series contains no points. Closes #1735.Fixed IE8 issue with mislocated bubbles after hiding and showing a series.Fixed issue with the smallest bubbles in a bubble chart occasionally disappearing. Closes #1710.Fixed issue with missing markers on negative points when explicit color was set. Closes #1702.Fixed issue with toolip appearing in printed chart when tooltip.shared was enabled. Closes #1707.Fixed issue with chart axes and chart options getting out of sync on Axis.remove. Closes #1706.Fixed issue with wrong tooltip date header format on single points. Related to #568.Fixed issue with negativeColor not taking effect on area and similiar series types when lineWidth is 0. Closes #1705.Fixed issue with null higher value in area range plots being interpreted as 0. Closes #1703.  Highcharts v3.0.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.  Bug fixes Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Made loading mask use the current chart size, not the initial one. #1601.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts v3.0.0 (2013-03-22) # See the release announcement.  Highcharts v2.3.5 (2012-12-19) # Added pie.startAngle option.Added a delay before hiding exporting menu to prevent the menu from hiding in IE when hovering over neighbour elements and button title. #1357.Implemented warning on unsorted data for line charts and stock charts. #725. Also throw a Highcharts error on unsorted column data, because the column distance and width logic relies on sorted data. Related to #987.Added line.step options: "left", "center", "right". Fixed issue with step in area ranges. #1330.Added a global lookup array, Highcharts.charts, holding all available chart instances in the page. This prevents issues with writing multiple charts to the same div.Implemented better animation for donuts. #779.Reorganized event assignment so that devices with touch support not only observe the touch events, but also the corresponding mouse events. This prepares for the new generation of browsers with both mouse and touch support. #1305.Prevented getTimeTicks from creating corrupted array. Related to #1301.Improved rendering speed of data labels by not adding a rectangle for labels without border or background.Better detection for repeating gradients. Instead for checking for the same object, the actual gradient definition is now used as the key. #1282.  Bug fixes Fixed problem with gauge dial overlapping data label. #1403.Fixed issue with data labels of hidden series being visible after exporting from IE8. #1407.Fixed IE6 and IE7 issue with image symbol markers not always being displayed after page reload. #292.Fixed endless loop in Highstock JavaScript and SVG errors in all charts when setting a negative chart width. #1393.Fixed issue with wrong tooltip position in Android 4.0. #1385.Fixed issue with bottom checkboxes in a legend being hidden after cancelling legend scroll by resize.Fixed issue with series-level image markers not being visible in exported charts.Fixed issue with pie slices not being added to the legend after the first redraw. #1329.Fixed wrong Y axis extremes on stacked line series chart. #1376.Fixed issue with wrong placement of image backgrounds on labels, specifically image shapes in flag charts. #1378.Fixed problem with multiple buttons with menu items in exporting module.Fixed issue with visible borders in exported chart when borderWidth = 0 on column charts in Firefox. #1369.Fixed issue with tooltip remaining visible after hiding its series. #1361.Fixed issue with reflowing in IE < 9, as well as frozen pivot on resizing gauges in IE < 9. #1235.Fixed issue with backgrounds on multiple gauges within the same chart. #1244.Fixed JS error in IE8 when trying to assign a gradient color to image markers. #1336.Fixed issue with squished X axis labels on column charts with one single point. Now if the series only contains one value, only one tick is shown. #1337.Fixed issue with tick labels using useHTML and step being slightly visible. #1338.Fixed issue with legend items not responding to mouse interaction when legend.useHTML is true. Fixed positioning of legend items in Chrome when legend.useHTML is true. #1249.Fixed issue with wrong positioning of bars in a bar chart when grouping was set to false. #1251.Fixed issue with useHTML, fixed width and word wrapping in Firefox. #1254.Fixed issue with legend checkbox position not being updated in navigatable legends. #1253.Fixed issue with wrong placement of minor grid lines on datetime axes. #1314.Fixed issue with Highcharts.dateFormat only replacing the first occurence of a pattern. #953.Fixed issue with wrong dial rotation in angular gauges when used with logarithmic axes.Fixed memory leaks in IE7 releated to SVGRenderer.label and MooTools. Refering to #1298.Fixed issue with blinking column animation on extremely large columns. #1303.Fixed issue with data label alignment not being updated after point update. #1306.Fixed broken height detection of rotated labels in IE9. #1307.Fixed line graph tracker objects so that the stroke-linejoin is round. This ensures better tracking around spikes in the data. #1225.Fixed issue with placement of data labels on a column chart with reversed Y axis. #1308.Fixed issue with visible gray marker objects appearing after Batik export from IE10.Fixed error on exporting an empty chart due to labels with y attribute of NaN. #1300.Fixed issue with setting tooltip.valueDecimals to 0. #1248.Fixed JavaScript error on redrawing chart after series removal in IE < 9. #1258.Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.  Highcharts v2.3.3 (2012-10-04) # Refactored data label alignment logic for better maintainabilit. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Worked around Safari 6 bug causing disappearing pie slices. #1208.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed gauge series data labels after regression testing.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed orphaned marker after Point.update to null. #1269.Fixed issue with text wrapping and bounding boxes in Android 2. #1140.Fixed wrong positions of polar column chart data labels. #1199.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with tooltip spilling out to the left in inverted chart. #1231.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed issue with colors and borderWidth not being applied to individual dials in gauges.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts v2.3.2 (2012-08-31) # Added support for rotation of text when useHTML = true in modern browsers. #916.Added new option, ignoreHiddenPoint, for pies.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.  Bug fixes Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. <ahref="https://github.com/highcharts/highcharts/issues/1209">Issue #1209.Fixed issue with data labels appearing outside plot area on initial load.Fixed 2.3 regression regarding unstable sorting in Chrome. #337.Fixed auto connect calculation in polar charts when category values are skipped. #1197.Fixed issue with alternateGridColor placement not adhering to tickmarkPlacement setting. #949.Fixed issue with config objects for data skipping a place in the color rotator in export. #868.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts v2.3.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts v2.3.0 (2012-08-24) # Added radial gauges.Added polar projection for cartesian chart types.Added range series types: area range, area spline range and column range.Added radial gradients for pies.Fixed bugs.  Highcharts v2.2.5 (2012-06-08) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. 1027.Reverted fix for #904 where a line with lineWidth of 0 became visible in hover state. 1016.Added legend.maxHeight option for paging.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. 864.  Bug fixes Fixed Android 2 compatibility problem. 1034.Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. 1021.Fixed broken minRange after the #878 fix.Fixed issue with chart title and subtitle responding too late to chart resize. 1012.Fixed JS error on quickly changing range selection in Highstock in column charts. 1004.Fixed issue with clipping of legend after resize to a greater width. 1001.Fixed issue with size detection of rotated text in exported charts legacy IE. 997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. 4. 992.Fixed issue with the series.pointRange option not affecting the width of columns.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. 974.Fixed JS error on setting categories with fewer items before the chart was redrawn. 970.  Highcharts v2.2.4 (2012-05-31) # Added paging for the legend. Added legend.navigation options set.Added tooltip.positioner option.Refactored major parts of Highcharts by splitting the Chart object into separate prototypes. This eases extendability as the objects are available from the outside, and individual methods and properties can be overridden.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Worked around compatibility issue with jQuery 1.8 preview.Removed warnings on accessing layerX and layerY in Chrome.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.  Bug fixes Fix bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed JS error in Firefox on destroying chart with data labels using MooTools adapter. #958.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.  Highcharts v2.2.3 (2012-05-07) #   Bug fixes Fixed issue with ticks and gridlines not being aligned after chart redraw.  Highcharts v2.2.2 (2012-04-26) #   Bug fixes Fixed bugs.  Highcharts v2.2.1 (2012-03-15) # Added box options like borderWidth, backgroundColor and more for data labels.  Bug fixes Fixed bugs.  Highcharts v2.2.0 (2012-02-16) # Better performance with thousands of points.Improved useHTML feature on labels to skip SVG text generation and use true HTML bounding box.Added configuration options to the Reset button.Added support for logarithmic axes.Numerous bug fixes.Added partial support for Android 2.x. See the compatibility page for limitations.  Highcharts v2.1.9 (2011-11-11) #   Bug fixes Fixed memory leaks in legacy IE.  Highcharts v2.1.8 (2011-11-05) #   Bug fixes Fixed compatibility issue with jQuery 1.7.  Highcharts v2.1.7 (2011-10-19) # Added useHTML option for most text related configuration objects.Added softConnector option for pie data labels.Added chart.selectionMarkerFill option.Worked on memory leak issues.  Bug fixes Fixed issues with data label positioning for pies.Fixed issue with tooltips covering point in certain cases.Fixed issues with latest MooTools.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.6 (2011-07-08) # Rewrote data label positioning for pies.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.5 (2011-06-22) # Added shadows for pies.Exported charts now respect user set min and max after zoom and visibility option.Added option series.connectNulls to connect line graphs through null points.Added support for exporting image symbols in charts.Added data labels for stack totals and improved positioning of column and bar data labels.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.4 (2011-03-02) # Updated MooTools adapter to work with MooTools 1.3.  Bug fixes Fixed issue with charts not displaying in IE on pages with large background images or external resources.Fixed issue Safari Mobile crashing after removing a series dynamically.Fixed minor issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.3 (2011-02-07) # Added soft line breaks for long category labels.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.2 (2011-01-12) # Added adapter for the Prototype JavaScript framework.Added vertical centering logic for data labels on bars when y not given.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.1 (2010-12-03) # Added Highcharts.version property.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.0 (2010-11-23) # Implemented resizing and reflowing of charts.Added automatic margin adjustment.Added shared tooltip and crosshair.Added more animation options.Added category label anti collision options.Added groups and stacks combination.Added data label connectors for pies.Optimized for iPad.Added dashed lines.Added labels for plot bands and plot lines.Added a separate MooTools adapter.  Upgrade notes Legend positioning: Since version 2.1 Highcharts is aware of the size of the titles and legend and will try to make room for these in the chart's margins. When upgrading from older versions, this may lead to too great margins depending on where your legend is positioned. To prevent this, set a new option, floating to true in your legend options. Furthermore, the x and y values of the legend position is now relative to the chart.spacingTop and chart.spacingLeft etc. properties instead of the chart's outer edge.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.5 (2010-09-17) # Optimized for IE9 Beta 1. Highcharts is now running beautifully under IE9 Standards mode, but quirks mode is slower than IE8.Added second parameter, callback, for Highcharts.Chart().Added text parameter for showLoading().  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.4 (2010-09-07) #   Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.3 (2010-08-07) #   Bug fixes Fixed JS error on destroying chart with events in IE.  Highcharts v2.0.2 (2010-08-06) # Added linked axes.  Bug fixes Fixed minor bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.1 (2010-07-18) # Removed chart.updatePosition method. Recalculating the position after moving the container is no longer necessary.Fixed some minor bugs from 2.0.0.Release notes:.chart.updatePosition is deprecated.  Bug fixes Fixed some minor bugs from 2.0.0.  Highcharts v2.0.0 (2010-07-13) # Completely rewritten rendering layer based on SVG and VML.Excanvas no longer needed.Added exporting module for exporting to PNG, JPG, PDF and SVG as well as printing the charts.Added donut charts.Better positioning options for legends.Dramatic speed improvements in Internet Explorer for series with many points.Release notes:.series.dataURL and series.dataParser are deprecated. Use jQuery ajax instead. Example can be seen at the ajax loaded data example.  Bug fixes Fixed memory build-up issues.Fixed some minor bugs reported since 1.2.5.  Highcharts v1.2.5 (2010-04-13) # Added chart.updatePosition and chart.container.Added possibility for initially empty charts.Added options.chart.showAxes.Added series.pointWidth for column series.Added step property to lines.Added legend.reversed option.  Bug fixes Fixed zooming issues on inverted charts.Fixed error on stacking of only null points.Fixed issue with excanvas not being initialied before Highcharts.Fixed tickInterval issue.Fixed image symbols not removed on zooming.Fixed issue with datalabels not removed on zoom.Fixed mouse events like click and mouseover not working when tooltip was disabled.Fixed roundoff issues on axis labels on Firefox/Mac.Fixed issues with setData in pies.  Highcharts v1.2.4 (2010-03-10) # Added resetZoom and resetZoomTitle to the lang object.Added the global.useUTC option.  Bug fixes Fixed error message in IE on window unload.Fixed tooltip width detection issue in IE7.  Highcharts v1.2.3 (2010-03-08) #   Bug fixes Fixed error messages appearing in some cases after hiding all series.Fixed issue with toggling the visibility of stacked columns.  Highcharts v1.2.2 (2010-03-05) # Added lang.decimalPoint and lang.thousandsSep options.Added chart.destroy method.Added axis.setCategories method.  Bug fixes Fixed memory leaks.Fixed two error messages.Fixed pie slice border issue with WebKit.Fixed minor issue with maxZoom and min/max values.Fixed issues with null values.Fixed rectangle redrawing issue with column and bar plots.  Highcharts v1.2.1 (2010-02-25) #   Bug fixes Fixed issue on initially hidden series.Fixed issue with hover area on bars.Fixed addPoint for pies.  Highcharts v1.2.0 (2010-02-23) # Added methods and properties for working with charts, axes, series and points dynamically after render time.  Highcharts v1.1.3 (2010-02-03) #   Bug fixes Fixed a bug in the MooTools adapter.  Highcharts v1.1.2 (2010-01-22) #   Bug fixes Fixed some minor bugs and issues.  Highcharts v1.1.1 (2010-01-06) # Added individual color for column and bar plots.  Bug fixes Fixed stacked charts in Safari 4.Fixed spline series crashing when only one point defined.Fixed tooltip borders not responding to changes in content height.Fixed wrong placement of zero plane for area series.  Highcharts v1.1.0 (2009-12-18) # Added support for multiple axes with options to place the axis on opposite side and offset from the plot area.Added support for events.Added explicit chart width and height.Added plotLines.  Bug fixes Fixed some bugs.  Highcharts v1.0.2 (2009-12-09) #   Bug fixes Fixed warnings in SSL mode in IE.Fixed minor display issues.  Highcharts v1.0.1 (2009-12-06) #   Bug fixes Fixed zooming for splines.Fixed legend symbols disappearing on zoom.Fixed area and bar stacking issue.Fixed zooming in stacked areas.Fixed issue with single point column plots.Fixed issue with zero level in column and bar charts.  Highcharts v1.0.0 (2009-11-27) # First release.Highcharts Stock  Highcharts Stock v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Stock 12.2.0.Added support for chart options in standalone navigator. See #22212.  Bug fixes Fixed #22135, setting ellipsis annotation options via annotationOptions did not work as expected.Fixed #21299, scrollbar and navigator margin settings were incorrect.Fixed #22557, navigator series was missing after reenabling navigator.Fixed #21879, control point option was not working for measure annotation.Fixed #21642, mousewheel zoom was not triggering zoom on standalone navigator.  Highcharts Stock v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Stock 12.1.2.  Highcharts Stock v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Stock 12.1.1.  Bug fixes Fixed #22262, a regression since v12.1.0 causing range selector buttons not to be responsive if the inputEnabled was false.  Highcharts Stock v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Stock 12.1.0.  Bug fixes Fixed #22311, calendar date picker was missing for the rangeSelector inputs.Fixed #21945, a regression since v11.3 causing the rangeSelector.align option not to work properly when set to right.Fixed #21220, resizing panes with multiple axes was resulting in incorrect axis height.Fixed #22269, select element didn't update the selected index when range changed in rangeSelector.  Highcharts Stock v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Stock 12.0.2.  Bug fixes Fixed #22262, a regression causing range selector buttons not collapse on narrow screens when there was no input.  Highcharts Stock v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Stock 12.0.1.  Highcharts Stock v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Stock 12.0.0.Added new series type, Point and Figure.Added new series type, Renko.Implemented new flow for update for RangeSelector.  Bug fixes Fixed #21524, in some cases panning to axis minimum was impossible in data grouped ordinal column chart.Fixed #21884, rendering issues with the borders of the Measure annotation.Fixed #20662, keyboard focus with Tab key was not working when rangeSelector dropdown was focused.Fixed #17890, timeline series didn't work correctly with stock chart.Fixed #21916, pixel-to-value axis calculations with ordinal and data grouping were incorrect.Fixed #21683, the first candle color in the hollow candlestick series was incorrect.Fixed #21584, navigator series was not removed correctly, causing chart.update to fail under some conditions.Fixed #20482, crosshair's label was cut off in certain label config.Fixed #21268, standalone navigator container height did not adjust correctly when a custom height was set.  Highcharts Stock v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Stock 11.4.8.  Bug fixes Fixed #21316, panning on axes with overscroll was not possible.Fixed #21660, navigator handles were not updated if they had URL symbols.Fixed #21483, zooming out on ordinal axes was not working correctly.Fixed #20359, scrollbar was not working when x-axis extremes were the same.  Highcharts Stock v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Stock 11.4.7.  Bug fixes Fixed #21274, plotBands were assigned to the wrong yAxis when there was no series in the navigator.Fixed #21507, removed annotation was still visible in exported chart.  Highcharts Stock v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Stock 11.4.6.  Highcharts Stock v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Stock 11.4.5.  Bug fixes Fixed #17945, colors lost on a color axis after going back to grouped state with data grouping enabled.Fixed #20354, navigator's grid lines were too long in a chart with a scrollable plot area.  Highcharts Stock v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Stock 11.4.4.  Bug fixes Corrected bad rendering of the navigator outline, a regression since v11.4.3.Fixed #21319, a regression since v11.4.0, resetZoomButton was visible while panning on non-ordinal axes.Fixed #21043, series references from navigator.baseSeries were not removed entirely after original series removal.Fixed #16915, the navigator should inherit the base x-axis padding when ordinal is false.Fixed #21064, Stock Tools buttons active state wasn't toggling correctly.Fixed #20877, panning using one finger on touch devices didn't work correctly with a dispersed dataset.Fixed issue with accessibility proxy element for navigator being present even without a navigator.  Highcharts Stock v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Stock v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Stock 11.4.2.Added new option, series.cumulativeStart. See #19050.Added new option, navigator.handles.borderRadius.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20549, empty string in flag title resulted in default 'A' assigned.Fixed #20214, RangeSelector#render was unnecessarily called 3 times on each chart render.Fixed #20829, added styled mode support for advanced annotations.Fixed #20382, custom id on navigator axis returned undefined with get().Fixed #20877, a regression in v11.3.0 causing mobile touch panning not to work correctly.Fixed #20936, boosted navigator was not included in inverted chart's clipRect.Fixed #20529, range selector not working with chart constructor.Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Stock 11.4.1.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Stock 11.4.0.Added #20275, possibility to set xAxis.overscroll in pixels or percentage.Improved implementation of attractToPoint to make use of KD-tree.Improved semantics of Stock Tools and popups to for better accessibility, specifically use <button> elements rather than spans.  Bug fixes Fixed #20318, navigator series data wasn't set with dataSorting enabled on initial run.Fixed #19808, the range selector week button behaved weirdly after using the scrollbar.Fixed #20430, mousewheel zoom with overscroll stuck.Fixed #20327, rangeSelector allowed to set range larger than possible extremes.  Highcharts Stock v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Stock 11.3.0.  Bug fixes Fixed #19861, series.searchPoint returned undefined after annotation redraw.Fixed #19243, if the last point in the dataset was from a scatter series, it was invisible.Fixed #20284, a combination of scatter, boost and ordinal axis threw error about processedXData.Fixed #19715, chart update failed with dataGrouping and dataSorting.Fixed #19743 and #19742, data grouping anchor positions weren't working correctly if there was only one point. Also tooltip didn't take into consideration the anchors.Fixed #19851, the rangeSelector button state was not preserved after adding data to a series.Fixed #19816, incorrect zooming with multiple series and ordinal axis.Fixed #19922, the range selector All button is now auto-selected if the data range is smaller than the selected range.Fixed #19926, click event wasn't bound correctly for annotations with HTML labels.Fixed #19793, trendline was not working for duplicate x values.Fixed #19892, HeikinAshi and Hollow Candlestick were not working with certain dataGrouping periods.  Highcharts Stock v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Stock 11.2.0.Added fibonacci.reversed option. Closes #19367.Added accessibility support for navigator handles.Added keypress (ESC) action to popup and sidebar.  Bug fixes Fixed #19736, mouseWheel zooming prevented scrolling in Stock Tools popups.Fixed #19992, xAxis ticks on broken axes were displayed incorrectly.Fixed #19779, mouse wheel zoom was not working when zooming on empty space without any points.Fixed #10073, flags were clumped together on the left side of the chart when allowOverlapX was false and the flags were dense.Fixed #19632, spacebar char couldn't be typed into input element.Fixed #16368, axis breaks caused points to overlap in stock charts.Fixed #16686, yAxis extremes were incorrect with VBP indicator compare.Fixed #16769, tunnel annotations had incorrect height on logarithmic axes.Fixed #17212, first grouped point in navigator was incorrect.Fixed #16784, calculations in extended ordinal position were wrong.Fixed #19505, label connector for the callout shape was not rendered in certain label positions.Fixed #19233, dragging annotations on chart with null points was inconsistent.Fixed #15569, at rapid mouse movements outside the chart, zoom didn't work properly.Fixed #19264, flag positioning on the spline series.Fixed #19493, zero values in Stock Tools popup fields were missing.Fixed #18251, range selector should consider all series extremes.Fixed #19121, Measure Annotation went back to its initial position after update.  Highcharts Stock v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Stock 11.1.0.  Upgrade notes For Highcharts Stock, the ordering of series and axes in the chart.series, chart.xAxis, chart.yAxis and chart.axes arrays were changed. Previously the navigator series and axes were last of the initial items, and when adding items they were appended. From now on, the internal navigator series and axes are always last, so the index of items now corresponds to that of the current options.  Bug fixes Fixed #18459, dragging annotations on chart with ordinal axes was inconsistent.Fixed #19042, text of annotation label was missing after updating it.Fixed #16068, panning on ordinal axis was inconsistent.Fixed #19024, wrong position and size of stockTools rectangle after resizing it on second y-axis.Fixed #18863, last point in zoomed ordinal axis was not visible.Fixed #18974, wrong approximation set for cumulative sum when dataGrouping was enabled.Fixed #17007, VBP indicator did not update correctly.  Highcharts Stock v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Stock 11.0.1.  Bug fixes Fixed #17977, disabling global animation did not affect scrollbar.Fixed #18922, scrollbar track did not catch click events.  Highcharts Stock v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Stock 11.0.0.  Bug fixes Fixed #18710, trendline points were not recalculated after adding or removing a point to main series.Fixed #18643, indicator threw volumeSeriesID error on range selector click.Fixed #18584, vertical line annotation position was incorrect when saved to options after drag and drop.Fixed #18689, indicator linked to another indicator should update after adding points.Fixed #16940, wrong cross label positions on multiple axes.Fixed #18528, last inside point was incorrectly calculated for lastVisiblePrice.Fixed #18276, annotations touch was not captured on mobile devices.Fixed #16841, Slow Stochastic Indicator was missing %D line when the K value was NaN.Fixed #18238, VBP indicator was not throwing an error when volume series had no data, or didn't exist.Fixed #17790, lastPrice and lastVisiblePrice labels were not destroyed during redraw.  Highcharts Stock v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Stock 10.3.3.  Bug fixes Fixed #18176 and #18178, indicators didn't work with an empty dataset.Fixed #18025, grid lines were rendered across panes.Fixes #17190, indicator linked to another indicator didn't update when data was added to main series.Fixed #17114, chart with data grouping had errors if the plot width was zero.Fixes #16753, when adding a custom indicator, if the parameter name contained any digits, the stock tools pop-up did not display it.Fixed #18088, color for Heikin-Ashi candles was set incorrectly.Fixed #17995, measure's control points were positioned incorrectly when yAxis.min wasn't equal to 0.  Highcharts Stock v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Stock 10.3.2.  Bug fixes Fixed #16487, Indicators button in Stock Tools GUI was active after popup close.  Highcharts Stock v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Stock 10.3.0.  Bug fixes Fixed #17814, the first point was not correctly removed for series with only one point when boost was enabled with ordinal.Fixed #17664, Ichimoku cloud was incorrectly positioned.  Highcharts Stock v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Stock 10.2.1.Added new option navigator.stickToMax, see #17539.  Bug fixes Fixed #17423, Stock Tools were unreachable when the container was wrapped.Fixed #17425, editing labels hid Elliott3 line.Fixed #17522, when the lastPrice label was enabled, there was an error in the console.  Highcharts Stock v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Stock 10.2.0.  Bug fixes Fixed #17305, the height of the Tunnel annotation wasn't overwritten in localStorage.Fixed #17405, zooming on boosted charts froze under certain conditions.Fixed #15799, offsetMin did not get applied by pre-selected range selector buttons.Fixed #15608, the MACD indicator did not have default colors.Fixed #17322, when axis was reversed, the tooltip overlapped flags.  Highcharts Stock v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Stock 10.1.0.  Bug fixes Fixed #17141, data grouping was not applied properly in charts with multiple series.Fixed #16901, navigator and range selector visibility was not inherited.Fixed #15735, axes were wrongly calculated when removing an indicator via Stock Tools GUI.  Highcharts Stock v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Stock 10.0.0.  Bug fixes Fixed #16970, Rectangle annotation didn't have a control point.Fixed #16759, range selector buttons overwrote series data grouping options when selected by default.Fixed #16670, Range Selector's buttons with dataGrouping setting caused error after adding an indicator using the Stock Tools GUI.Fixed #16492, Navigator did not stick to the max when adding a point and an additional, empty series was existing on the chart.  Highcharts Stock v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Stock v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Stock 9.3.2.Added fillColor option to create area fill between lines in multi-line indicators. See #15653.  Highcharts Stock v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Stock 9.3.1.  Bug fixes Fixed #16532, performance regression in ordinal axis.Fixed #16397, the VBP indicator was not recalculated after adding the point.Fixed #16371, incorrect Stock Tools button state after deselecting.  Highcharts Stock v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Stock 9.3.0.Added new annotation, Ellipse. See #15008.Added new annotation, Time Cycles. See #15826.Added new annotation Fibonacci Time Zones. See #15825.VBP indicator now follows the main series when the compare mode is on and compareToMain is false. See #16277.Added new feature Cumulative Sum. See #15361.Added Disparity Index average parameter as a dropdown in the Stock Tools popup. See #16159.Removed requiredIndicators info and added EMA to the default indicators master. See #15409.Added new series type: HLC, see #15346.  Upgrade notes Changed the default SMA index parameter from 0 (open) to 3(close). This also has an impact on the other indicators where SMA is being used, namely MACD, Price Envelopes and the Linear regression family.Renamed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.  Bug fixes Fixed #16158, the Stock Tools indicator popup had wrong series selected by default in some cases.Fixed #15727, the annotation popup was hidden when dragging from input to outside popup.Fixed #16316, #16370 the positions of annotations were not calculated properly on ordinal axes.Fixed #16319, grouped positions were not calculated correctly after clicking the range selector's All button multiple times.Fixed #16447, a separate axis was not visible after adding the Chaikin oscillator through Stock Tools.Fixed #14055, ordinal axis and data grouping didn't work with the boost module.Fixed #16449, the rectangle annotation added via Stock Tools was rendering without one side.Fixed #16513, the navigator was shrinking after adding points when stuck to axis minimum.Fixed #16451, unable to add annotation through Stock Tools on a logarithmic axis.Fixed #16415, changed default SMA index parameter, added an index to Keltner channels indicator.Fixed #16234, the popup of basic annotation shapes displayed label options.Fixed #16390, a regression in a documentation article and demo. Multiple lines indicator didn't work after changes related to migrating MultipleLines mixin to composition.Fixed #16041, long flag labels were not distributed properly which resulted in removing them.Fixed #16139, changed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.Fixed #16318, corrected the langKey property in Stock Tools gui for the Crooked Line 5 annotation.Fixed #13868, #16085, hovering over a pie series in a stock chart generated errors in the console.Fixed #16255, error after setting new extremes in a chart with ordinal axis and invisible series.  Highcharts Stock v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Stock 9.2.2.  Bug fixes Fixed #16238, a regression causing data grouping information not to reset when zooming in, both in the tooltip and in internal properties.  Highcharts Stock v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Stock 9.2.1.  Bug fixes Fixed how the color is applied for bullish hollow candlestick line.  Highcharts Stock v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Stock 9.2.0.Added Heikin Ashi series type. See #15348.Added Hollow Candlestick series type. See #15347.Added support for declaring an indicator series before the main series. See #15892.Added support for creating a custom indicator on an additional axis through the Stock Tools popup. See #15804.  Bug fixes Fixed how the ordinal axis is being calculated after grouping.Fixed the CSS fill property of bullish candlestick and the hollow candles.Fixed #16055, after adding a point to an ordinal axis, panning was impossible.Fixed #15970, annotation positions were not accurate with an ordinal axis.Fixed #16087, stock tools threw in IE.Fixed #15867, comparing an indicator with multiple lines (eg Bollinger Bands) was not possible.Fixed #16036, VBP indicator graphic did not update correctly with volumeDivision enabled.Fixed #15729, annotation did not stay selected after dragging.Fixed #16011, some labels/shapes disappeared when updating annotation with multiple labels/shapes and not passing in any labels/shapes.Fixed #15725, adding annotations with multiple steps used the wrong axis coordinates when moving the cursor to a different pane.Fixed #15726, rectangle annotations were not clipped.Fixed #15730, toolbar popup did not get hidden when hiding the selected annotation.Fixed #15952, annotation afterUpdate event did not fire when using control point.Fixed #15864, a regression in the navigator. When rangeSelector.selected was set, the navigator had the wrong position after adding a series to an empty chart.Fixed #15733, missing 'Periods' label in Stock Tools pop-up for some indicators.Fixed #15849, candlestick fill was wrong when updating point data from rising to falling.Fixed #6765, changed how and when the dataGrouping should be fired for multiple series when one of them doesn't require grouping.Fixed #2406, fixed val2lin method to correctly calculate positions outside the visible plotArea in ordinal axis.  Highcharts Stock v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Stock 9.1.2.  Bug fixes Fixed #15728, indicator popup columns did not have separate scrollbars.Fixed #13238, panning on mobile devices with ordinal axis didn't work correctly.  Highcharts Stock v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Stock 9.1.1.  Bug fixes Fixed #15803, navigator positioned using navigator.xAxis.left flickered when dragging.Fixed #15740, error in some cases when destroying elements of the chart and Stock Tools were present.Fixed #15491, range selector button text vertical centering did not work well and paddingLeft and paddingRight in buttonTheme were not supported.Fixed #15706, lastVisiblePrice label color class did not always match the series color class.Fixed #15508, the measure annotation's label wasn't correctly rendered inside the annotation.Fixed #14742, the axis range property was ignored when there were fewer data points.Fixed #15593, Stock Tools overflowed the chart container when the class chart was not set on the container.Fixed #15400, clipping was wrong after calling setSize in load event with stock loaded.  Highcharts Stock v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Stock 9.1.0.Added new feature, series.dataGrouping.anchor, for controlling where grouped points are rendered within the group. See #12455.Added new technical indicator, Disparity Index. See #15139.Added new technical indicator, Directional Movement Index (DMI). See #15140.Added new technical indicator, Chande Momentum Oscillator (CMO). See #15142.Added new technical indicator, On-Balance Volume (OBV). See #15138.Added currentPriceIndicator and lastPrice for multiple series (also to indicators and volume), see #14888.Added line series as available type for the RSI Indicator. See #14930.  Upgrade notes The data grouping smoothed property has been deprecated and has been changed to firstAnchor, anchor and lastAnchor.The default value of linearregression.params.xAxisUnit has been changed from undefined to null.  Bug fixes Fixed #13807, adding a technical indicator in the Stock Tools when multiple axes were predefined would break the chart.Fixed #15218, scrollbar.liveRedraw defaulting to true in modern browsers did not work when scrollbar was set in chart options instead of axis options.Fixed #3825, when ordinal axis and dataGrouping were enabled, panning worked unevenly in one direction.Fixed #14192, disabled stock tools GUI buttons when all series were invisible.Fixed #15157, replaced the hex, and string colors in the stock tools with the colors defined in the palette.Fixed #15222, className was not applied to lastPrice crosshair.Fixed #6332, split tooltip didn't work correctly with flag series type with empty text property.Fixed #15512, dynamically added series did not use range selector data grouping.Fixed #13847, data labels in navigator should be disabled in the default configuration.Fixed #15362, corrected API and Stock Tools popup list of indicators' params.Fixed #15435, clipping was sometimes wrong after update with stock loaded.Fixed #15524, dragging annotation after updating label threw and labels.overflow set to justify did not work correctly.Fixed #15502, vertical counter annotation did not work.Fixed #15424, fibonacci annotation lineColor and lineColors options did not work.Fixed #15445, options got mutated when creating stock chart.Fixed #15383, indicators did not recalculate when updating series type.Fixed #15384, updating flag shape did not work.Fixed #15005, point dataGroup start was not calculated correctly.Fixed #12116, boosted stacked chart with range selector enabled and a partial range selected threw.Fixed #15324, elements such as legend and title sometimes had the wrong position when using stock tools.Fixed #15178, console warning when using states in rangeSelector.buttonTheme options.Fixed #15170, added lang options for indicators parameters in Stock Tools popup.Fixed #8603, dynamically added stock axes missed forced options, addition to #15164.Fixed dynamically added axis defaults in stock, axes dynamically added to stock charts got different defaults than the ones added through the chart constructor.Fixed #15029, improved currentPriceIndicator button functionality.Fixed #15060, range selector text input was too short when inputBoxWidth was not set, especially in IE.Fixed #13858, clipping was wrong after plot height had been changed by a responsive rule firing during chart load with stock loaded.Fixed #15075, some Stock Tools annotations were being drawn incorrectly when yAxis.top was set.Fixed #15155, some line drawing tools of the Stock Tools package didn't work correctly.Fixed #15005, when groupAll was set to true, group start was badly calculated.Fixed #13247, getTimezoneOffset got called with NaN timestamp when rendering stock chart with at least one empty series.Fixed #15074, lastPrice color was not applied properly.Fixed #14197, after changing shortPeriod in MACD, points were missing.Fixed #14879, currentPriceIndicator label was not always visible when navigating the data set.Fixed #9671, updating stock chart axes through Chart.update with oneToOne set to true did not work correctly.Fixed #15128, parts of the series disappeared when redrawing a regular chart with series.clip set to false and stock loaded.Fixed #12100, unable to scroll using mousewheel inside Stock Tools popups when mapNavigation was enabled.Fixed #9738, groupAll did not work correctly with OHLC-based series.Fixed #10296, navigator leaked event handlers into series and x-axis on Series.update.Fixed issue mentioned in #15060 and #15062, it was not possible to enter months starting with 1 into the range selector date input under certain conditions. When typing the extremes now only update on blur and when pressing enter, which is the same behaviour the text inputs have.Fixed #11930, removing dynamically added y-axes did not work correctly with navigator enabled, causing the removed axis to show in exported charts.Fixed #13876, toggling currentPriceIndicator button threw error.  Highcharts Stock v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Stock 9.0.1.  Bug fixes Fixed #15124, range selector with inputs wider than the plot and no buttons threw.Fixed #14977, MACD indicator index param did not work.Fixed #13473, it was not possible to scroll back down to the threshold after scrolling up with yAxis.scrollbar enabled and no explicit yAxis.min set.Fixed #15042, IKH indicator lines changed color on the first redraw.Fixed #14063, an error was thrown when scrolling an inverted chart with a flag series.Fixed #14280, Stock Tools GUI popup - clicking on the 'x' button didn't call the closePopup event.Fixed #14932, #13251, updating compare through plotOptions did not work.  Highcharts Stock v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Stock 9.0.0.Added new feature, rangeSelector.dropdown. This feature allows the range selector button row to be collapsed into a dropdown when space is limited. The new behavior may be forced, disabled or responsive (default).New graphic design for the range selector date inputs. Simplified visual appearance and flexible width based on the rendered content.Added native browser date pickers to the range selector. Supported browsers are Chrome, Firefox, Edge and Safari for mobile. Other browsers fall back to text inputs.Added rangeSelector.buttons.title option for assistive technology and general accessibility (#14437), and assistive technology announcement on range selector button click (#14438).  Upgrade notes The range selector date input fields have a new visual appearance. See this fiddle on how to revert to the old design.Range selector inputs will now be of type date, datetime-local or time, depending on the required granularity. For supporting browsers, date picker widgets will be presented. For non-supporting browsers, it falls back to the legacy text input functionality.Indicators no longer inform about missing dependencies in the browser console.  Bug fixes Fixed #14495, the lastVisiblePrice label in price-indicator module overwrote the crosshair.label.backgroundColor property.Fixed #14416, range selector ignored the time.timezoneOffset setting.Fixed #14826, the tooltip border color did not reflect the upColor of OHLC and candlestick series.Fixed #9744, stock toolbar overlapped left-aligned title and legend.Fixed memory leak in range selector, chart load event listeners leaked on update.Fixed #11669, enabling range selector with update did not work properly.Fixed #14292, right-aligned range selector buttons were positioned outside the chart after animating in.Fixed #14691, incorrect order of annotation subtitles in pop-ups in Firefox.Fixed #14193, scrollbar did not work on touch devices.Fixed #14698, issue with how the EMAPercent was calculated in the DEMA and TEMA indicator.Fixed #14544, range selector did not fully support slashes in date inputs.Fixed #14505, when one of the chart series had a single point, the navigator handles could be dragged beyond the default xAxis.minRange. The computed minRange was NaN.Fixed #14436, range selector styling with keyboard navigation.Fixed #13934, chart crashed when dataGrouping was disabled and axis extremes were set outside the data range.  Highcharts Stock v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Stock 8.2.2.  Bug fixes Fixed #14060, navigator's yAxis did not match the chart.Fixed #14254, the plotBands.acrossPanes option had no effect.Fixed #13751, wrong clip path after adding/removing series.Fixed #13950, in StockTools, adding technical indicators to column-type series did not use the same dataGrouping.approximation.  Highcharts Stock v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Stock 8.2.0.  Bug fixes Fixed #13205, range selector showed wrong values ​​after update.Fixed #13664, measure had wrong position when used on a positioned Y axis.Fixed issue with range selector buttons text color, see #13798.Fixed #13788, adding data to an empty chart and updating rangeSelector.selected altogether did not render new series.Fixed #13813, hiding series when dataGrouping was enabled and legend.layout was set to "proximate" used to render legend item at the wrong position.  Highcharts Stock v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Stock 8.1.2.  Highcharts Stock v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Stock 8.1.1.  Bug fixes Fixed #13392, the navigator had wrong top position when legend.layout was proximate.Fixed #12696, calling series.setData() after series.update(options, redraw=false) on a cropped or grouped dataset would update the wrong points.Fixed #13334, panning an ordinal axis with equal spaced data did not work correctly.  Highcharts Stock v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Stock 8.1.0.  Bug fixes Fixed #13287, incorrect position of the vpb (volume by price) series after the initial animation.Fixed #12054, problem saving and loading simple annotations (label, rectangle and circle) from localStorage added via Stock Tools.Fixed #12391, zones were broken when series was updated.Fixed #13184, dynamically disabling scrollbar and decreasing number of points in chart.update() caused wrong extremes on xAxis.Fixed #13025, legend was overlapping range selector when they were both vertically aligned to the top.Fixed #11480, error with crosshair labels after enabling the Stock Tools' current price indicator and changing the timeframe of the chart.Fixed #12834, hidden series applied wrong extremes on X axis when scrolling.Fixed #13176, Stock Tools' fullscreen button did not work.Fixed #13114, the navigator did not update without a base series and scrollbar.  Highcharts Stock v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highstock 8.0.4.  Bug fixes Fixed issue with rangeSelector buttons alignment, see #13014.  Highcharts Stock v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highstock 8.0.3.  Highcharts Stock v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highstock 8.0.2.  Highcharts Stock v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highstock 8.0.1.  Bug fixes Fixed issue with axis labels outside plot range when ordinal enabled, see #12716.Fixed #7204, OHLC ticks were rendered incorrectly with higher series.lineWidth values.Fixed issue with navigator overlapping when axis labels width change, see #12573.  Highcharts Stock v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highstock 8.0.0.Added Slow Stochastic indicator.  Bug fixes Fixed regression which prevented from panning to the left side when dataGrouping and xAxis.ordinal were enabled.Fixed #12216, Stock Tools UX was not working optimal on mobile devices.Fixed #12145, missing option supertrend.color.Fixed #12298, enabling crosshair label while a point was hovered rendered crosshair labels for all axes.  Highcharts Stock v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highstock 7.2.2.  Highcharts Stock v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highstock 7.2.1.  Bug fixes Fixed #12266, applying zones on macd when the main series had no data produced an error.Fixed #11471, updating chart with new series and oneToOne set to true used to throw errors when data was grouped.Fixed #12215, VWAP technical indicator added via StockTools was added to the wrong pane.Fixed #11426, arearange series had disabled dataGrouping by default.Fixed #1172, handles positions and xAxis extremes were incorrect when using column type series in navigator.Fixed #12099, panning to the left did not work properly after zooming in when data grouping was enabled.Fixed #11716, basic annotations (rect, circle and label) were missing options in StockTools' popup.Fixed #12058, compare with one single data value failed. It now behaves like when comparing to data points of the same value - it renders on the 0 line.  Highcharts Stock v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highstock 7.2.0.  Highcharts Stock v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highstock 7.1.3.Added new technical indicator, trendline, showing price trend.  Bug fixes Fixed #11483, lastPrice indicator was incorrect with dataGrouping.Fixed #11415, vertical scrollbar was visible in annotation popup.Fixed #11175, navigation.bindings.rectangleAnnotation did not resize it's width/height according to xAxis/yAxis extremes.Fixed #11174, size of measure annotation was not recalculated in redraw.Fixed #10980, defining just one item in stockTools.gui.definitions[name] threw errors.Fixed #11191, dataGrouping.approximation.average did not correct floating point precision errors.Fixed #10745, sometimes old points were not removed after updating data with enabled dataGrouping.Fixed #11366, annotationOptions did not work for some of the bindings[annotationName].Fixed #11351, gapSize and multiple dataGroupings sometimes hide series line with lower granularity.Fixed #11344, some icons were not loaded from custom url. Added new general option, navigation.iconsURL that takes over from the more specific stockTools.gui.iconsURL.Fixed #11206, editing technical indicators in stock tools did not select correct series.Fixed #11079, stock-tools were not working correctly in inverted charts.Fixed #11005, X axis line width affected clipping of the series graph or columns, even when the Y axis did not extend to the X axis.Fixed #10827, issues with the TEMA indicator's tooltip and boost module. Caused by a method name collision.Fixed #10932, xAxis.minPadding didn't work when plotOptions.series.dataGrouping was enabled.  Highcharts Stock v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highstock 7.1.2.Added new options plotBands.acrossPanes and plotLines.acrossPanes to control rendering lines across all panes. See #6644.  Bug fixes Fixed #10404, range selector inputs overlapped exporting menu.Fixed macd series wrong rendering issue after point update with data cropped (see #10774).Fixed issue with incorrect scrollbar if axis extremes were the same (#10733).Fixed #10290, ordinal xAxis in lazy loading sometimes did not render all xAxis labels after zooming out.Fixed #10618, different yAxis.opposite settings caused scrollbars to overlap.Fixed #10605, simple annotations (label, circle, rectangle) added using stock-tools were misplaced in exported chart.  Highcharts Stock v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highstock 7.1.1.  Bug fixes Fixed #10460, updated options in annotations prevented updates from stock tools popup.  Highcharts Stock v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highstock 7.1.0.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10015, chart update did not reserve space for rangeSelector.Fixed #10015, chart update did not reserve space for rangeselector.Fixed #10144, delete button in GUI did not work for flags.Fixed #10183, Elliot waves did not render last line when added through GUI.Fixed #10192, technical indicators added via stock tools for a volume series were rendered on a wrong yAxis.Fixed #10193, wrong navigator series indexes after addSeries().Fixed #10196, plotOptions.<indicator>.params did not update default values in inputs.Fixed #10201, stochastic indicator did not open it's pane from GUI.Fixed #10261, mouse event arguments should be passed to range selector button click handler.Fixed #10332, After drawing a segment line and moving end point whole chart area was selected.Fixed #1289, wrong extremes on second pane yAxis when zoomed the first one.Fixed #4606, range selector inputs did not blur and jQuery UI datepicker didn't close.Fixed #7067, Navigator was not added by chart update.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9994, navigator.xAxis.min was wrong with main xAxis.min set and ordinal enabled after addPoint.  Highcharts Stock v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highstock 7.0.3.Added new property compareToMain to certain indicators. See #7773.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10001, pointer events were missing after hide stock toolbar.Fixed #8430, Series data in navigator was reset after update unrelated series.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9209, rangeSelector.selected and rangeSelector.options.selected were not cleared when all buttons were unchecked.Fixed #9493, indicators were badly updated when data was cropped. Closed #8572, #9822.Fixed #9913, useOhlcData did not work when datagrouping enabled.Fixed #9915, price indicator had error when no points.Fixed #9928, xAxis label was incorrect when point had declared name.  Highcharts Stock v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highstock 7.0.2.  Bug fixes Fixed #6989, require data to be sorted for dataGrouping instead of for all series in a Highstock chart.Fixed #7083, improved pane clipping for column type series.Fixed #9235, option Axis.scrollbar.liveRedraw did not block events and redraw.Fixed #9693, added default groupPixelWidth when dataGrouping options were set to all series through plotOptions.series.Fixed #9724, wrong position of range selector on init when all series were hidden.Fixed #9740, calling chart.update() removed all stockTools bindings.Fixed #9767, annotations' dynamic updates (update, remove, resize, drag and drop) were not applied in the exported chart.Fixed positioning of flags when attached to a yAxis with pane information.Fixed #8544, series keys were not applied with turboThreshold and dataGrouping.Fixed #9787, set supertrend cropThreshold equal to main series one on init.Fixed #9847, stocktools gui and popup did not support touch events.Fixed #9854, correct compareValue for OHLC series.  Highcharts Stock v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highstock 7.0.1.  Bug fixes Improved layout in Stock Tools toolbar.Fixed issue in Stock Tools where separate yAxes should be created for certain indicators.Fixed missing translation of measure key in lang.navigation.popup.Fixed #10214, stocktools bindings referred to wrong chart container.Fixed #10351, ichimoku - remove was broken in iE11.Fixed #10387, verticalCounter in stockTools was broken.Fixed #10392, stocktools popup was not compatible with IE.Fixed #9938, added annotation options in stocktools.  Highcharts Stock v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highstock 7.0.0.Added new technical indicators: Arroon, Arroon Oscillator, Absolute Price Oscillator, Williamis %R, NATR (Normalized Average True Range), Linear regression indicator, Linear regression intercept, Linear regression angle, Linear regression slope, Keltner channels, Price Channel, Acceleration Bands, Triple EMA, Double EMA, TRIX, Percentage Price oscillator, Super trend, Chaikin oscillator, Awesome Oscillator, Detrended price.Added depth chart demo.Added Stock Tools, a new range of features moving Highstock in the direction of full featured trading dashboards. The module adds a toolbar with controls for:Add, update or remove indicators for the chart series.Drawing custom annotations like text, lines, arrows etc.Parallel channel, pitchfork annotations, Elliot waves and Fibonacci retracements.A measure tool, displaying information about the measured area, including things like the amount of points, time range etc.Infinity line, controlled by two points, allowing projection of a trend forward in time.Full screen mode.Chart type toggle (OHLC, candlestick, line etc.).Current price indicator with label.  Upgrade notes Indicators that depend on another indicator now require the depencency to be loaded manually. Otherwise an error will be thrown. For example MACD requires EMA, that means the EMA indicator should be loaded first.  Bug fixes Fixed #4710, range selector didn't update on clicking the chart after changing input.Fixed #8951, improved ema efficiency, index changed.Fixed #9102, hardcoded stochastic series name.Fixed #9160, xAxis.overscroll rendered too many labels.Fixed #9285, reset zoom button was permanently disabled by navigator or rangeSelector despite dynamic updates.Fixed #9299, avoid hiding flags with box position equal to 0.  Highcharts Stock v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highstock 6.2.0.  Bug fixes Fixed #9020, columnrange bottom dataLabels were not rendered when dataGrouping was enabled.Fixed #9075, adding a point used to reset zoom when series had different ranges.Fixed #9077, a regression causing disappearing points in some cases related to data grouping.  Highcharts Stock v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highstock 6.1.4.Added feature to preserve non-data point options inside data-grouped points. The options from the first point are copied over to the group. Closes #8999.  Bug fixes Fixed #8440, keyboard navigation in stock charts throwing errors.Fixed #7051, dataGroupInfo.start was indicating wrong point when points were grouped weekly.Fixed #8335, setting xAxis.min did not change extremes when points were grouped.Fixed #8546, flags were not clipped.Fixed #8812, regression in inverted navigator caused wrong extremes on when navigated to data extremes.Fixed #8817, setting stacking option for OHLC and Candlestick series threw errors.Fixed #8847, MACD used to crash when provided amount of points was insufficient.Fixed #8848, removing empty MACD technical indicator used to throw errors.Fixed #8889, corrected demo for approximation.Fixed #8899, setting chart.style.zIndex prevented RangeSelector's inputs from receiving focus.Fixed #8938, advanced stock demo threw errors when changing from Demo 2 to Demo 1.Fixed #8965, Stochastic indicator %D value was calculated incorrect.Fixed #8968, SMA technical indicator threw errors on updating last point in the dataset.Fixed issue with presentational attributes leaking through styled mode in range selector.  Highcharts Stock v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Stock v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highstock 6.1.2.  Upgrade notes Fixed performance issues with default settings and the Boost module. Now xAxis.ordinal is turned off if one of the series are in boost mode, and scrollbar.liveRedraw is turned off by default if boosting.  Bug fixes Fixed #8733, range selector was unable to update to enabled: true.Fixed #3777, candlestick series on a reversed yAxes was rendered incorrectly.Fixed #8196, updating a chart with oneToOne with the same options caused errors and disappearing X and Y axes.Fixed #8433, added option rangeSelector.buttons.preserveDataGrouping to keep dataGrouping on extremes change.Fixed #8542, crosshair was not working for logarithmic axes.Fixed #8562, errors in console when legend covers plot area.Fixed #8572, technical indicators' data was not updated when adding a point with shift.Fixed #8573, flags were not hidden.Fixed #8595, toggling navigator caused plotting area to shrink.Fixed #8715, error on destroying navigator series after the parent series had already destroyed it internally.Fixed #8769, rangeselector position forgotten when updating chart margins.Fixed graphical issue with scrollbar animating on first drag in the navigator handles.  Highcharts Stock v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highstock 6.1.1.  Bug fixes Fixed #7828, browsers were crashing when panning million of points on a chart.Fixed #8031, columns overlapped xAxis - correction.Fixed #8196, navigator series interfered with series order when running chart.update.Fixed #8200, reset zoom button did not hide after resetting extremes.Fixed #8212, improved API reference of dataLabel.y and added API reference of pointValKey for ohlc series.Fixed #8374, navigator's series did not inherit visible option from linked series.Fixed #8376, PSAR and MACD technical indicators were throwing errors when main series did not have enough points.Fixed #8445, Rate of Change (RoC) had wrong tooltip when params were set.  Highcharts Stock v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highstock 6.1.0.Added dataGrouping.groupAll option to prevent columns value change on scrolling when dataGrouping is active. Closes #5344.Created advanced stock chart demo to showcase dashboarding.  Bug fixes Fixed #4960, wrong position of flags on inverted chart.Fixed #5308, negative timestamps threw errors with enabled rangeSelector.Fixed #5581, navigator was broken after removing all series.Fixed #6423, dynamically added axes had wrong indexes after axis.update().Fixed #6994, zoom out on mobile devices did not select correct rangeSelector buttons.Fixed #7823, technical indicators caused dataGrouping issues.Fixed #7827, sometimes forced dataGrouping by year didn't render all points and xAxis labels.Fixed #7945, zones in MACD technical indicator broke rendering signal line.Fixed #7995, chart threw errors when initialized with xAxis: [].Fixed #8023, point.update() threw exceptions when not defining options.Fixed #8038, dynamic change of navigator.adaptToUpdatedData did not work.Fixed #7684, spacingBottom was ignored after chart update.  Highcharts Stock v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highstock 6.0.7.  Bug fixes Fixed #7802, incorrect EMA calculation when series had points with zero values.Fixed #7788, MACD did not display calculated points.  Highcharts Stock v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highstock 6.0.6.  Bug fixes Fixed #5457, incorrect flag placement in pane layout.Fixed #7686, series was not visible with dataGrouping and gapSize combined.Fixed #7690, yAxis array options ignored when using setOptions.  Highcharts Stock v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highstock 6.0.5.Made showLastLabel default for category yAxes. See #6104 and #7546.  Bug fixes Fixed #6379, scrollbar.liveRedraw was not respected on mobile devices.Fixed #7219, crosshair label was incorrect when using multiple panes.Fixed #7547, a regression causing grouped data points to remain visible after zooming in to non-grouped data.Fixed #7563, drag-panes module triggered zoom.Fixed #7576, navigator handles rendered wrong extremes when xAxis was reversed.Fixed #7642, default technical indicator name was not based on parameters.Fixed #7648, Bollinger bands were not rendered when linked to an area series.Fixed #7713, reversed navigator xAxis didn't show new points.Fixed #7732, drag-panes module was changing navigator's yAxis size.  Highcharts Stock v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highstock 6.0.4.Added y value to flag points on a series. See #7440.  Bug fixes Fixed #7307, unable to set tooltip.split to false from setOptions.Fixed #7458, the 1M button in the range selector was not visually in pressed state even when initially selected when the data range crossed DST.Fixed #7509, calling chart.destroy() after setData with redraw false caused JS error.  Highcharts Stock v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highstock 6.0.3.  Bug fixes Fixed #3482, using direction rtl caused various labels to be mispositioned.Fixed #4674, overlapping flags when next to each other.Fixed #4798, white pixel visible next to the chart on init.Fixed #6612, the "Reset Zoom" button always returned to previous zoom.Fixed #6984, strange animation when zooming between data grouping levels.Fixed #7256, redundant redraws when toggling a series with linked navigators.Fixed #7275, X axis labels were gone in a scatter chart with X axis breaks.Fixed #7378, removing base series with only scrollbar enabled caused errors.  Highcharts Stock v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highstock 6.0.2.  Bug fixes Fixed #7246, tooltips not working on flags with the default split option.Fixed #7256, redraw event was triggered when calling Series.setVisible with the redraw argument set to false.  Highcharts Stock v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highstock 6.0.1.  Highcharts Stock v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highstock 6.0.0.Added built-in technical indicators.Added drag-and-drop pane resizing.Added support for positioning of the range selector.Added support for max range and handle customization in the navigator.Added support for scrolling past the data.Added compareStart to define which point should be the base for calculations. See #1613.Added rangeSelector.buttons.offsetMin and offsetMax to control button range extremes. See #1613.Added xAxis.maxRange to limit maximum allowed range for navigator.Added xAxis.overscroll.Added new options to navigator.handles.  Bug fixes Fixed #6655, flag series with showInNavigator set to true caused error and missing graph.Fixed #7109, stack size exceeded when using responsive rules.Fixed navigator updating issues. Closes #7110 and #5846.  Highcharts Stock v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highstock 5.0.14.  Highcharts Stock v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highstock 5.0.13.Added option, series.gapUnit, to allow greater control of gapSize. Closes #6645.Allow relative length for axis.width and axis.left. See #6836.  Bug fixes Fixed #5846, #5936, #6193 and #6251. Rewritten Navigator update logic.Fixed #6546, gapSize with stacking didn't work.Fixed #6734, linkedTo was wrongly applied to Navigator series.Fixed #6771, ensure events are handled on same document as chart elements.Fixed #6830, RangeSelector button loses focus on adding points in chart.load event.Fixed #6930, scrollbar was rendered with wrong extremes when Axis had not any data.Fixed minor Navigator issues.  Highcharts Stock v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highstock 5.0.12.  Bug fixes Fixed #6683, inverted chart rendered scrollbar outside the container.Fixed #6709, Chart.get(id) caused errors when at least one series was hidden with grouped points.Fixed #6716, dataGrouping in arearange series did not reserve space for null points.Fixed #6720, zAxis gridLines were incorrectly rendered.Fixed #6725, navigator mask was black in old IE.Fixed #6725, navigator's outer masks rendered as black in IE6/7/8.  Highcharts Stock v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highstock 5.0.11.  Bug fixes Fixed #2914, dataGrouping approximation wasn't checked properly.Fixed #5479, added averages option for approximation in dataGrouping.Fixed #6445, function getSelectedPoints did not find points outside of cropThreshold.Fixed #6537, month buttons were not setting correct extremes when the current month had more days than previous months.Fixed #6562, crosshairs always drawn relative to high value in OHLC and candlestick charts.Fixed #6573, scrollbar was rendered on xAxis labels, when using chart.scrollbar option.Fixed #6590, dataGrouoping wasn't wokring correctly with keys set on data.Fixed #6590, dataGrouping wasn't working correctly with keys set on data.Fixed #6615, enabling Chart.scrollbar by chart.update() caused errors.  Highcharts Stock v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highstock 5.0.10.  Bug fixes Fixed #1716, navigator handles were not moving if the range was very small.Fixed #3517, yAxis.top caused flags on xAxis to be rendered outside the view.Fixed #3763, stable sort was not used for flags.Fixed #6303, events didn't work for flags when useHTML was set to true.Fixed #6453, scrollbars for multiple yAxes were positioned incorrectly.Fixed #6478, flags on OHLC were unable to have onKey set to low or high.  Highcharts Stock v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Stock v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highstock 5.0.8.  Bug fixes Fixed #6276, a regression which broke x-panning.Fixed #5493, performance regression with data grouping for a hidden series.Fixed #5800, outline position was wrong when outlineWidth was wider.Fixed #6071, Axis.update() changed default settings.Fixed #6262, vertical scrollbar on an inverted chart was positioned incorrectly when used without navigator.Fixed #6266, dragging navigator with full range caused points to disappear.Fixed #6327, flags series tooltip position.Fixed #6334, scrollbar called afterSetExtremes event twice.Fixed #6363, series.remove() ignored redraw param if series had a related series in the navigator.Fixed #6383, adding point after series.update() reset xAxis extremes.Fixed #6421, errors after destroying a chart with multiple scrollbars.  Highcharts Stock v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highstock 5.0.7.Added support for navigator in inverted charts.Created new module stock.src.js so Highstock can be loaded as a module for Highcharts.  Bug fixes Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5602, issues with setting range by inputs.Fixed #6012, navigator handles couldn't be moved after hiding and updating series.Fixed #4114, navigator didn't respond to mouse events when xAxis was reversed.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed #5979, wrong column width when the X axis contained breaks.Fixed #6140, candlestick hover state didn't respect lineWidth.Fixed #6156, a regression causing poor performance with forced dataGrouping when dealing with hundreds of thousands of data groups.Fixed #6162, series.update() didn't update all series.Fixed #6166, events were not bound to all plotBands.Fixed #6191, navigator dropped too early when encountering minRange.Fixed #6192, unwanted clipping when used with gauge series.  Highcharts Stock v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highstock 5.0.6.Added new option, series.compareBase, to allow percentage comparison to start at 100%.  Bug fixes Fixed #2685, xAxis.offset didn't work for navigator's xAxis.Fixed #5924, wrong extremes on dynamically added axes.Fixed #6057, setting correct series clip-path for polar charts.Fixed #4988, navigator.enabled, rangeSelector.enabled, scrollbar.enabled ignored when setOptions was used.  Highcharts Stock v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highstock 5.0.5.  Bug fixes Fixed #2944, title.style.fontSize ignored when setOptions was used.Fixed #5904, navigator series were using wrong clipPath.Fixed #5923, columns were not rendered correctly with linked axes.Fixed #5978, fillColor was not applied for flags, when was set on in the point config.  Highcharts Stock v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highstock 5.0.4.  Highcharts Stock v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highstock 5.0.3.  Bug fixes Fixed #5884, optimizing addSeries.Fixed #5918, navigator handles were blurry when navigator height was an odd number.Fixed #5930, selected range selector button was unselected if redrawing before doing manual selections.Fixed #5971, eternal loop on setting general minor grid lines that applied to the navigator.  Highcharts Stock v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Highcharts Stock v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Bug fixes Fixed issues with Highstock keyboard navigation in the Accessibility module.Fixed #5602, issues with setting range by inputs.Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5088, marker states on flags were ignored.Fixed #5706, wrong series visualization when using compare.Fixed #5814, one all-zero series caused others to fail with compare.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed issue where removing and re-adding navigator via chart.update caused errors.Fixed issue with range selector inputs not hiding or showing correctly when setting chart size with animation.  Highcharts Stock v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highstock 5.0.0.Added support for multiple series in the navigator, see series.showInNavigator and series.navigatorOptions.Added new option, plotOptions.flags.textAlign.Deprecated the baseSeries option, now replaced by showInNavigator.  Highcharts Stock v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highstock 4.2.7.Added Series.dataGroupInfo to allow accessing data grouping information from the approximation function.Added warning on trying to update grouped point.  Bug fixes Fixed #5635, regression causing background images on flags to fail.Fixed #5493, hidden series with data grouping caused wrong extremes on xAxis.Fixed #2049, flags were misplaced when using more than one column-type series.Fixed #3228, inputs in range selector didn't allow to view the historical data in lazy loading.Fixed #3961, bubble series caused JavaScript errors in Highstock.Fixed #3111, column series were clipped off when resizing chart during initial animation.Fixed #3112, compare for candlestick.Fixed #5231, input fields not receiving focus after showing hidden chart.Fixed #5600, YTD button was disabled when all the data was within the same year.Fixed #5686, scrollbar.minWidth option causes misplacement for a scrollbar bar.Fixed #5699, column series dissapeared when added after chart initialization and using navigator.Fixed #5702, crosshair label's anchor was misplaced during mouse move.  Highcharts Stock v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highstock 4.2.6.Added new option set, yAxis.scrollbar, to allow scrollbars on Y axis (or in fact any axis) in Highstock. Read announcement.Refactored sideways graph animation to allow smooth navigation when clicking scrollbar buttons, adding multiple points etc.  Bug fixes Fixed #687, first value of compare chart should be the last of the previous range.Fixed #5316, wrong columns and ticks after toggling ordinal setting with axis update.Fixed #5323, regression causing JS error on redrawing empty stock chart.Fixed #5330, JS error when enabling range selector in Chart constructor.Fixed #5395, animation mixed up on navigator and range selector.Fixed #5414, navigator series updated wrong on addPoint when data grouping was disabled.Fixed #5453, unresponsive first drag on navigator.Fixed #5477, error on first mouse hover with crosshairs.Fixed #5485, setCompare did not affect exported chart.Fixed #5489, a regression causing data grouping on range selector buttons to fail.Fixed #4222, flag's title wasn't updated with Point.update.Fixed #5388, performance hit when running a forced data grouping with a lot of empty groups.Fixed #5390, navigator series wasn't updated when chart initialized without series.  Highcharts Stock v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highstock 4.2.5.Refactored scroller redraw to prevent chart from redrawing twice.  Bug fixes Fixed #2266, series didn't animate when running addPoint.Fixed #3452, zoomed range didn't move when adding points to stock chart without a navigator.Fixed #5193, browser crash in Chrome 49+ when updating candlestick points frequently.Fixed #5231, input fields not receiving focus after showing hidden chart.  Highcharts Stock v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highstock 4.2.4.Added new Point property, dataGroup, that holds information of what raw data points are included in a grouped point.  Bug fixes Fixed #3477, range selector did not update axis extremes after pressing enter in IE.Fixed #4747, gapSize did not apply to each series independently.Fixed #5041, scroller.zoomedMin was bigger than zoomedMax, which caused error due to negative width.Fixed #5165, space was reserved for the exporting button even when disabled.Fixed #5172, scroller threw error with empty series data and an X axis minimum setting.  Highcharts Stock v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highstock 4.2.3.  Bug fixes Fixed #5008, failure on gaps in navigator series under certain conditions.  Highcharts Stock v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highstock 4.2.2.Added new option to flag series, onKey, to configure what key the flag should be placed on. Closes #4873.  Bug fixes Fixed #4907, data grouping didn't give correct distance to points immediately outside the plot area.Fixed #4922, range series didn't work with compare mode.Fixed #4926, axis breaks on Y axis failed.Fixed #4935, error with shifting multiple series in edge case.  Highcharts Stock v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highstock 4.2.0.  Bug fixes Fixed #4798, single pixel from range selector input visible on chart border.Fixed #951, compare not displaying a graph when first value was 0.  Highcharts Stock v2.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highstock 2.1.10.Some improvements on crosshair labels (#4722).  Bug fixes Fixed #2908, navigator xAxis sometimes covered drag handles.Fixed #1195, scrollbar breaking after hiding all series when navigator disabled.Fixed #2822, wrong column distribution on ordinal axis in a multi-series chart if the series points had different spacing.Fixed #3238, format strings not replaced in header and footer.Fixed #3375, range selector button state was sometimes set to selected when it overlapped with other buttons.Fixed #4661, negative starting point in compare series caused series not to display.Fixed #4696, srollbars didn't work on Android in some cases.Fixed #4703, navigator window jumped back and forth while touch-dragging.  Highcharts Stock v2.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highstock 2.1.9.Added new option, rangeSelector.height, to reserve space for buttons and input.  Bug fixes Fixed #2920, dataGrouping.smoothed made graph extend to series extremes.Fixed #4501, X axis range larger than data broke the chart.Fixed #4520, JS errors on setting extremes outside the navigator's range.Fixed #4602, navigator line color was not affected by color setting.  Highcharts Stock v2.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highstock 2.1.8.Added new lang option, invalidDate, determining what to display in invalid range selector input. Closes #4384.  Bug fixes Fixed #3119, flag on first point didn't render.Fixed #4147, first column not initially shown in month view.Fixed #4324, tooltip not displayed on image flags in IE.Fixed #4335, setDataGrouping was wrong with multiple series.Fixed #4403, zones caused JS error with separate and empty navigator series.Fixed #4452, range selector did not appear after adding data.Fixed #4457, tabbing away from range selector input did not hide the input.Fixed #4466, setTitle caused overlapping title and range selector buttons.  Highcharts Stock v2.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highstock 2.1.7.  Bug fixes Fixed #3013, top X axis was not considered when placing range selector.Fixed #4226, individual line color on candlestick up-points didn't take effect.Fixed #4229, errors on scrolling on an axis containing breaks with breakSize.Fixed #4244, data labels on area range broke on JS error when labels were outside viewable area.Fixed #4285, a regression causing flags to be shaped like squares in some cases.Fixed #4314, running Axis.update caused label alignment to shift.Fixed #4317, X axis update affected the selected range.  Highcharts Stock v2.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highstock 2.1.6.  Bug fixes Fixed #1317, clipping not correctly applied to multi-pane charts when highcharts-more.js was loaded.Fixed #1417, linked ordinal axes.Fixed #4196, axis update from ordinal to non-ordinal failed.Fixed #4202, scrollbar created for empty chart.Fixed #4209, breaks crashed navigator on long series.Fixed #4252, anchor line of flags was skewed. Made all flags crisp as well as in line with tick marks of the same value.  Highcharts Stock v2.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highstock 2.1.5.Added feature, forced data grouping tied to range selector buttons. View demo.  Bug fixes Fixed #3983, plot band labels outside axis range were visible.Fixed #4042, column series disappearing if another column series is updated and data grouping enabled. Also affects series types derived from columns. Closes #4040.Fixed #4053, min and max in the navigator.xAxis options were not respected if the data exceeded the setting.Fixed issue with the range selector input boxes not being able to focus after first focusing, then clicking on the chart outside the input.  Highcharts Stock v2.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highstock 2.1.4.  Bug fixes Fixed #2998, reflow during initial series animation caused clipped chart.Fixed #3865, range selector not working in IE.Fixed #3897, point up/down colors not redrawing after updating point value.  Highcharts Stock v2.1.3 (2015-02-27) # Most issues listed under Highcharts 4.1.3 above also apply to Highstock 2.1.3.  Bug fixes Fixed #3857, issue with setExtremes and axis breaks causing Highstock scrolling not to work across breaks.  Highcharts Stock v2.1.2 (2015-02-27) # Most issues listed under Highcharts 4.1.2 above also apply to Highstock 2.1.2.  Bug fixes Fixed #3882, plot bands not displayed if they were clipped on the edge of the plot area.Fixed #3543, scrolling passed data extremes threw off navigator.  Highcharts Stock v2.1.1 (2015-02-17) #   Bug fixes Fixed #3818, ordinal axis not working.Fixed #3821, tooltip error with flags.Fixed #3816, tooltip not working after series data or extremes changed.Fixed #3817, JS errors with pies generated by highstock.js.  Highcharts Stock v2.1.0 (2015-02-16) # Most issues listed under Highcharts 4.1.0 above also apply to Highstock 2.1.0.  Bug fixes Fixed #3755, resize cursor set on scrollbar.Fixed #3706, point.color not working when series.upColor was set.Fixed #3647, missing markers in scatter chart because of auto-marker logic.Fixed #3639, flags don't shifting position after removing one in a stack.Fixed #3539, navigator outline one pixel off at the left side.Fixed #3519, markers showing outside a clipped pane.Fixed #3524, multipane plot line logic interfering with grid lines in heatmap.Fixed #3487, JS error on creating stock chart with empty series.Fixed #3451, clipped data series when changing chart size and series animation was disabled.  Highcharts Stock v2.0.4 (2014-09-02) # Most issues listed under Highcharts 4.0.4 above also apply to Highstock 2.0.4.Added buttonPosition to RangeSelector, issue #3395.Regard "startOfWeek" option in data grouping.  Bug fixes Fixed #3274, range selector not working in IExx because of issue with floats and Element.blur.Fixed #3211, stuck tooltip and crosshair when touch-panning.Fixed #3359, higher ranked time labels not showing with negative timezoneOffset.Fixed #3125, overlapping extreme X axis labels on ordinal axis in certain cases.Fixed #3339, ordinal axis crashing on updating too quickly.Fixed #3299 where Y axis labels on subsequent panes would be drawn outside the plot area when they should be inside like the first pane.  Highcharts Stock v2.0.3 (2014-07-03) # Most issues listed under Highcharts 4.0.3 above also apply to Highstock 2.0.3.Added new option, rangeSelector.allButtonsEnabled to force auto-disabled buttons on inadequate range to be clickable. Closes #2418.  Bug fixes Fixed #3150 causing error when setting dataGrouping options for flag series.Fixed #3146 causing auto alignment of axis labels to fail.Fixed #1326 causing parts of candlesticks not to print from Chrome's printing dialog.Fixed #3040 where the scrollbar would be mispositioned when setting the extremes of a chart outside the data range.Fixed #3018 causing JS errors on negative height rectangle in low-height plot area.  Highcharts Stock v2.0.0 (2014-04-22) # See the release announcement.The default design has been updated with Highstock 2, but all aspects of design can be reverted to the Highstock 1.3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts Stock v1.3.10 (2014-03-10) # Most issues listed under Highcharts 3.0.10 above also apply to Highstock 1.3.10.  Bug fixes Fixed #2708 where panning on an ordinal axis containing candlesticks, OHLC or column series would cause the zoomed range to decrease.Fixed #2696 where a single point outside the visible X range would be grouped within the first data group.Fixed issue with data grouping not being reset when zooming in and multiple series were present. Closes #2692.Fixed issue with first point being left out in data grouping when grouped to an earlier time. Closes #2533.Fixed issue with percentage stacking in combination with data grouping. Closes #2445.Fixed issue with navigator not reflecting the limitations of the minRange. Closes #2618.Fixed issue with scrollbar giving the wrong results in the chart when the axis was padded with axis.max. Closes #2611.Fixed issue with compare mode breaking down when at least one series had empty data. Closes #2601.Fixed issue with candlestick not aligning with crosshairs.  Highcharts Stock v1.3.9 (2014-01-15) # Most issues listed under Highcharts 3.0.9 above also apply to Highstock 1.3.9.Highstock: Fixed regression with missing tooltip on flag series. Closes #2573.  Bug fixes Fixed broken panning in Highstock 1.3.8. Closes #2590.  Highcharts Stock v1.3.8 (2014-01-09) # Most issues listed under Highcharts 3.0.8 above also apply to Highstock 1.3.8.  Bug fixes Fixed issue with flags being clipped away when connected to the last X value. Closes #2543.Fixed scrollbar issue with low precision and sometimes the scrollbar not moving at all when it was too small. Closes #1468.Fixed issue with adding the first series dynamically to Highstock when the range selector was enabled. Closes #624.Fixed issue with selected state range selector button not reflecting the real selection in exported charts. Closes #2458.Fixed issue with the navigator not spanning the full width of the main data when the base series did not fill it. Closes #2436.Fixed issue with non-sync data grouping on ordinal axis when X distribution differs. Closes #2416.Fixed regression with data grouping getting stuck when zooming in. Closes #2110.Fixed issue with ordinal axis and selected range being normalized to selected button even when time span doesn't allow it. Closes #2290.Fixed issue with range selector inputs not allowing to set date to the actual data extreme when the extreme had higher precision of the input format. Closes #2438.  Highcharts Stock v1.3.7 (2013-10-24) # Most issues listed under Highcharts 3.0.7 above also apply to Highstock 1.3.7.Added options to control the size of range selector input boxes, Closes #2353.Enabled data grouping by default on navigator series, so that turning off data grouping in the main series doesn't automatically turn it off in the navigator.  Bug fixes Fixed issue with scrollbar never going fully back to the axis max after clicking the scrollbar buttons. Closes #2293.Fixed regression where series got truncated after hiding another series i a chart with data grouping enabled. Closes #2373.Fixed issue with scatter points showing on the edge of the chart and taking up an ordinal position even when they are well outside the axis range. Closes #2342.Fixed problems with panning or scrolling back to max last value when the navigator was previously zoomed to an earlier time span. Closes #2341.  Highcharts Stock v1.3.6 (2013-10-04) # Most issues listed under Highcharts 3.0.6 above also apply to Highstock 1.3.6.Added upLineColor option to candlestick.  Bug fixes Fixed Highstock issue with stacks not being properly cleared when moving between non-grouped and grouped data, leaving artefacts in a stacked area chart. Closes #1651.Fixed issue with min and max on the navigator X axis not being settable. Closes #2277.Fixed Highstock issue with the axis maximum changing when dragging the handle to change the axis minium, and vice versa. Closes #2163.Fixed Highstock error messages when initiating a chart with set X axis min and max and empty series data. Closes #2238.Fixed Highstock issue where data grouping would stick and be applied when not necessary after showing a time range where it was necessary. Closes #2110.Fixed Highstock issue with tooltips displaying for points outside the X axis range and crosshairs displaying in the wrong position. Closes #1149.Fixed issue in Standalone Framework where event were triggered in reversed directions, causing JS errors in Highstock. Closes #2220.Fixed Highstock issue with flags not being correctly positioned on an axis if the X axis line width is zero. Closes #2032.Fixed Highstock issue with flags showing on the edge of the zoomed area on ordinal axes. Closes #2198.Fixed Highstock issue with fake columns appearing just outside the plot area on an ordinal axis. Closes #1260.  Highcharts Stock v1.3.5 (2013-08-23) # Most issues listed under Highcharts 3.0.5 above also apply to Highstock 1.3.5.Disables range selector buttons which range is below the X axis automatic or explicit minimum range.Make sure Highstock zoomed range is moving at least one pixel when clicking scrollbar buttons. Closes #1716.Improved range selector buttons by rendering them disabled when the associated range is not available. Closes #2050.  Bug fixes Fixed Highstock issue with range selector buttons becoming unselected after scrolling and panning. Highcharts now attempts to keep the range selector button pressed even in ordinal axes, as long as it is scrolling within a relatively linear-scaled area. Closes #2041.Fixed Highstock issue with the Y axis tick label not being shown when there is only one singe value and one tick. Closes #2100.  Highcharts Stock v1.3.4 (2013-08-02) # Most issues listed under Highcharts 3.0.4 above also apply to Highstock 1.3.4.  Bug fixes Fixed Highstock regressen with column grouping not working across Y axes on either side of the chart. Closes #2086.Fixed Highstock regression after fixing #460, where animating candlestick would give JS errors if it had no whiskers before. Closes #2094.Fixed Highstock regression on adding an empty series next to a series with data grouping enabled. Closes #2090.  Highcharts Stock v1.3.3 (2013-07-31) # Most issues listed under Highcharts 3.0.3 above also apply to Highstock 1.3.3.Implemented shadow option for candlesticks. Closes #1955.Reorganized and improved link between scroller and its data. It now allows the base series to be added async. Related to #624.New default value for scroller.liveRedraw to prevent redrawing the chart while scrolling the navigator on slower mobile devices. Closes #1926.Added new Highstock option, rangeSelector.inputDateParser.  Bug fixes Fixed #2068 where Highstock export failed with navigator disabled specifically for the export.Fixed JS errors in Highstock when resizing a window after a chart's container is hidden. Closes #1998.Fixed error message in Highstock. Closes #872.Fixed Highstock issue with range selector button becoming unselected when updating data. Closes #690.Fixed Highstock issue with range selector buttons not responding to hover in IE9 and IE10. Closes #667.Fixed Highstock issue with columns in different panes reserving space for eachother. Stack groups are now tied to the Y axis. Closes #642.Fixed Highstock issue where panning fully to the right didn't dock the zoomed area. Made the sticking more tolerant. Closes #570.Fixed crosshairs position when series.compare is set. Closes #1205.Fixed Highstock issue with long series being grouped and short series not being grouped. Closes #1634.Fixed Highstock issue with navigator handles disappearing when zooming on hidden data set. Closes #1946.Fixed Highstock issue with gapSize and switching from ordinal to non-ordinal axis. Closes #1794.Fixed issue with dynamically added events being removed from axis after Axis.update. In Highstock, this caused the scrollbar not to be updated to base axis zooming after running setCategories. Closes #1842.Fixed issue with running setCompare when the compare option was initially unset. The setCompare method now also works on the Navigator yAxis. Closes #1891.Fixed Highstock issue on touch devices where pinch zooming a chart with multiple panes would result in the lower pane moving up to the top of the chart. Closes #1701.Fixed "Invalid date" appearing in range selector input when opening date was 0. Related to #1878.Fixed Highstock issue with changeDecimals of 0 not taking effect. Closes #1904.Fixed issue with extra lines in the middle of candlesticks when open values are equal to high values. Closes #460.Fixed Highstock issue with JavaScript errors and disappearing charts on scrollbar click when there is only one point present in the chart. Closes #1851.  Highcharts Stock v1.3.2 (2013-06-05) # Most issues listed under Highcharts 3.0.2 above also apply to Highstock 1.3.2.Additional fix in Highstock to ensure fixed scrollbar width when dragging scrollbar.Added information on DOM event to setExtremes handlers from navigator in Highstock. Closes #1838.  Bug fixes Fixed Highstock issue with updating zoomed range by the range selector when all series are hidden. Closes #1568.Fixed Highstock issue with mispositioned xAxis when a floating legend was present. Closes #1816.Fixed issue in Highstock where data labels on the navigator would cover the navigator handles and shades. Closes #1839.Fixed Highstock errors with two points with the same X value. Closes #1588.Fixed Highstock regression with scatter series not displayed. Closes #1853.Fixed Highstock issue with wrong up day calculation in OHLC and candlestick. Reverts the fix for #1395. After discussion among our users, there seems to be a consensus that an up day is a day where the close value is higher than the open value. As opposed to a day where the close value is higher than the previous trade day's close value. The functionality is now reverted to what it was before. Closes #1489.  Highcharts Stock v1.3.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.Made loading mask use the current chart size, not the initial one. #1601.  Bug fixes Fixed Highstock issue with OHLC and candlestick charts on logarithmic Y axis. #1697.Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed Highstock issue with flag image backgrounds changing size after panning in and out of view. #1630.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed Highstock 1.3 issue in Firefox where the page would scroll all the way up when clicking the range selector inputs. #1645.Fixed issue with unsynchronized data grouping when one series is shorter than the other on an ordinal axis. #1675.Fixed Highstock issue with columns and derived series types being cut off on an ordinal axis. #988.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highstock regression with disappearing points for data prior to 1970 on an ordinal axis. #1666.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts Stock v1.3.0 (2013-03-22) # Highstock 1.3 is built on Highcharts 3.0, and shares the same new features for cartesian series types. See the release announcement for 3.0.  Highcharts Stock v1.2.5 (2012-12-19) # Applied fixes for Highcharts Basic version 2.3.5.Added scrollbar.minWidth option in Highstock. #1246.  Bug fixes Fixed JS error on quickly scrolling a chart with image markers. #1390.Fixed issue with wrong Y axis min/max detection on updated OHLC points. Partially solves #1374.Fixed issue when adding points to hidden OHLC or candlestick series. #1377.Fixed issue with zoomed range increasing when moving the range without resizing it. #1370.Fixed issue with Exporting dropdown menu being covered by the range selector inputs.Made the range selector inputs visible in exported charts. Added rangeSelector.inputPosition option.Fixed Highstock issue with YTD button when not using UTC. #941.Fixed Highstock issue with unresponsive range selector buttons by applying clipping to the mouse tracker. #484.  Highcharts Stock v1.2.4 (2012-10-08) #   Bug fixes Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.Fixed regression with pie charts not working when loading highstock.js. #1284.  Highcharts Stock v1.2.3 (2012-10-04) # Refactored data label alignment logic for better maintainability. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Highstock: Fixed buggy navigator when point distribution is smaller than minRange. #1056.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed JS error on moving reset button in Highstock. #1278.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed JS error message in Highstock when destroying a chart after zoom. #1267.Fixed regression with plotOptions.series.dataGrouping not being respected since Highstock 1.2. #1228.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed JS error on rendering a Highstock chart with an empty series array.Fixed Highstock issue where the reset zoom button would not show when the navigator and rangeSelector were hidden, and the scrollbar was visible. Related to #979.Fixed issue with stacks becoming inverted after update, caused by recursive redrawing. #1119.Fixed issue with tooltip animation timer running constantly instead of only when the tooltip is moving.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts Stock v1.2.2 (2012-08-31) # Added demonstration of async data loading in Highstock.Added support for rotation of text when useHTML = true in modern browsers. #916.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.Worked on zoomType for stock charts, allowing the reset button to work more intuitively (#979).  Bug fixes Fixed issue with IE7 trying to load "ew-resize" when dragging the scrollbar in Highstock.Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. #1209.Fixed issue where flags on an X axis with an offset, height or top option defined, were not placed correctly on the axis.Fixed issue with data labels appearing outside plot area on initial load.Fixed 1.2 regression regarding unstable sorting in Chrome. #337.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts Stock v1.2.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts Stock v1.2.0 (2012-08-24) # Added range series types: area range, area spline range and column range.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.6 (2012-08-24) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. #1027.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. #864.Worked around compatibility issue with jQuery 1.8 preview.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Added scrolling for the legend. Added legend.navigation options set.Removed warnings on accessing layerX and layerY in Chrome.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.Updated fix for #608 to work around JS error in Firefox.Prevented trying to set extremes on empty axes when using selection zoom. #859. #906.Don't create multiple title nodes on subsequently setting attr title. #891.Worked around issue with tooltips for stacked bar chart were not visible in IE7. #863.Added smooth animation when adding multiple points. #860.Changed zIndex on the range selector buttons in order for the tooltip to show above them. #852.Prevented error on exporting in Prototype by setting default border radius for data labels to 0. #853.Adding enctype to the exporting post to allow it to work in HTTPS in Firefox. #839.Set xAxis.labels.overflow option to null by default in Highcharts, while 'justify' in Stock charts only. #841.Allow the tooltip and the point hover state to survive a chart redraw. #349.Worked on data labels for range series.  Bug fixes Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. #1021.Fixed issues with grouped data points not being destroyed after zooming on Y axis only. #622.Fixed error message in Firefox when using jQuery UI datepicker against range selector inputs. #1020.Fixed stuck tooltip, crosshairs and state marker after zooming in Highstock. #1003.Fixed JS errors in Highstock when trying to pan a chart with no series. #1017.Fixed JS error on quickly changing range selection in Highstock in column charts. #1004.Fixed issue with size detection of rotated text in exported charts legacy IE. #997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. #4. #992.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. #974.Fixed JS error on setting categories with fewer items before the chart was redrawn. #970.Fixed bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed issue in protofy branch that choked on setting extremes in Highstock.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.Fixed issue with stack columns' position after redrawing chart. #936.Fixed issue where a line with lineWidth of 0 wouldn't show in hover mode. #940.Fixed issue with lang.decimalPoint option not being applied to axis labels. #939.Fixed float rounding error that caused extra tick position on logarithmic Y axes. #934.Fixed issue with alignTicks not being respected after a chart redraw. #842.Fixed JS error when adding points to a series before redraw. #927.Fixed JS error message on running Axis.setTitle before axis is first rendered. #922.Fixed NaN in attributes in export in Firefox 3.5. #912.Fixed test size detection bug in bar charts with line-broken labels. #909. #882.Fixed issues with setData for pies. #542.Fixed error message on setSize without navigator in Highstock. #904.Fixed Highstock error on accessing Navigator series.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with scrollbar without navigator didn't respond to Chart.setSize. Partial fix for #955.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed errors and crashes on resize. #905.Fixed so stack totals are updated after point.update. #787.Fixed issue with position of stack total labels. #506 and #516.Fixed error on forced grouped series with no data. #885.Fixed problem with test size detection when rendering a chart within a container with an inherited display property. #883.Fixed problem with chart.click events firing after selection. #370.Fixed issue with wrong tooltip to point binding on bar charts containing null values. #833.Fixed problem with flags visible at the end of graph when zoomed off screen. #847.Fixed problem with range selector buttons not becoming unselected when clicking a new button. This happened only when the actual range wasn't changed because the buttons spanned a too wide range. #851.  Highcharts Stock v1.1.5 (2012-03-15) # Added feature for the first and last x axis label to stay within the plot area, or be hidden if there is no room.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.4 (2012-02-15) # Added temporary workaround for text rendering bug in Chrome 18 Beta.Added support for setting height in chart.setSize().  Bug fixes Fixed issue with Navigator not responding to selection zoom.  Highcharts Stock v1.1.3 (2012-02-03) #   Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.1.2 (2011-12-23) #   Bug fixes Fixed regression bug from 1.1.1 where touch events were not captured in iOS.  Highcharts Stock v1.1.1 (2011-12-22) # Made navigator.xAxis.ordinal inherit xAxis.ordinal.  Bug fixes Fixed display bug with ordinal axes in Chrome 16.  Highcharts Stock v1.1.0 (2011-12-14) # Added ordinal axis option for displaying non-linear data without gaps, typically intraday data withiout gaps for nights and weekends or daily data without gaps for weekends.Added a few advanced options for axis and legend object.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.2 (2011-11-08) #   Bug fixes Fixed compatibility issue with jQuery 1.7.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.1 (2011-10-25) # Added series.compare option to compare the development of values.  Bug fixes Fixed error on chart.addSeries.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.0 (2011-10-18) # First release.Highcharts Maps  Highcharts Maps v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Maps 12.2.0.  Highcharts Maps v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Maps 12.1.2.  Highcharts Maps v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Maps 12.1.1.  Bug fixes Fixed #17192, Proj4 threw an error, coordinates must be finite numbers, with certain combinations of Highcharts Maps and other charts in the same page..  Highcharts Maps v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Maps 12.1.0.  Highcharts Maps v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Maps 12.0.2.  Highcharts Maps v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Maps 12.0.1.  Highcharts Maps v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Maps 12.0.0.  Bug fixes Prevent mousewheel capture on maps if they are all zoomed out, so that the user can scroll normally down the page.Fixed #21546, specific color axis ranges broke map drilldown.  Highcharts Maps v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Maps 11.4.8.  Bug fixes Fixed #21581, the credits.href setting wasn't respected in Map charts.  Highcharts Maps v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Maps 11.4.7.  Highcharts Maps v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Maps 11.4.6.  Highcharts Maps v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Maps 11.4.5.  Highcharts Maps v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Maps 11.4.4.  Highcharts Maps v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Maps v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Maps 11.4.2.  Bug fixes Fixed #13049, hovering reordered DOM elements in maps and heatmaps, causing problems for screen readers.Fixed #20886, data labels mouse event tracking was broken after drill up.Fixed #20948, bubble legend created unexpected ticks in map charts.Fixed #20857, map zooming animation was broken after drilling down.  Highcharts Maps v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Maps 11.4.1.  Highcharts Maps v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Maps 11.4.0.  Bug fixes Fixed #20476, dataLabels were overlapping map navigation buttons.Fixed #20441, point visibility was reverted after interaction with a map.Fixed #18857, map animated from top left on any series.update.Fixed #20231, if mapPoint.name was given, point.name didn't take effect.  Highcharts Maps v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Maps 11.3.0.  Bug fixes Fixed #19551, patterns got scaled with their assigned map areas causing inconsistent rendering.Fixed #20086, a regression where hovering over mapbubble series points would show the tooltip for another point.Fixed #19676, after drilling up in certain cases the map zoom was inconsistent compared with the initial zoom.  Highcharts Maps v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Maps 11.2.0.Added support for GeoHeatmap interpolation.  Bug fixes Fixed #19373, map drilldown animation was impossible to disable.Fixed #19323, setData on Map Series threw an error with the PatternFill module.Fixed #19190, prevented map display error on drag out of valid coordinates.Fixed #19175, a regression causing selected points being lost after map zooming or panning.  Highcharts Maps v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Maps 11.1.0.Added support for tiled web maps.  Bug fixes Fixed #18017, animation should not change the positions of map points while quick scrolling on the touchpad.Fixed #18961, map drilldown didn't work with multiple series.  Highcharts Maps v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Maps 11.0.1.  Bug fixes Fixed #18925, map drill down was broken for GeoJSON maps.  Highcharts Maps v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Maps 11.0.0.Added geo heatmap series type for showing concentration of values on a geo map.Added flow map series type for showing flows or movements between points on a map.  Bug fixes Fixed #18647, when there was a single data point in the TileMap series, circle and diamond shape tiles didn't render properly.Fixed #18004 and #17261, map data labels were misplaced for some shapes.Fixed #18074, the Draggable Points module didn't work for mappoint series.Fixed #18542, panning in zoomed-in Orthographic projection didn't work.  Highcharts Maps v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Maps 10.3.3.Added new linecap option for maps.Added new option, mapView.fitToGeometry.  Bug fixes Fixed #18137, border width was not resetting after hover.Fixed #18166, border or line width set on point was not scaling on zoom in map and mapline series.Fixed #17925, zooming issues with Maps on mobile.Fixed #17238, panning on y axis was inverted in maps using custom SVG path as map data.  Highcharts Maps v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Maps 10.3.2.  Bug fixes Fixed #17355, keyboard navigation for map zooming and panning no longer worked.Fixed #18012, custom colorKey didn't work on mapbubble series.Fixed #17918, zooming to insets in TopoJSON maps was not working.Fixed #17734, offline exporting to PDF failed for maps.Fixed #17907, a regression causing data labels on the far side on an orthographic world projection to stick.  Highcharts Maps v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Maps 10.3.0.Better default value for legend.valueDecimals for color axis with data classes. Now it preserves the decimals of the from and to settings by default.Improved the UX on legend items when using a color axis with data classes. Hovering now renders other map areas as inactive, and clicking the legend item renders them as null rather than completely hiding them.  Highcharts Maps v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Maps 10.2.1.  Highcharts Maps v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Maps 10.2.0.  Bug fixes Fixed #17105, issues with mapline.lineWidth and map.borderWidth options and state settings.Fixed #17279, mappoint fill color didn't work with NaN values.Fixed #17012, toggling allAreas did not correctly update the bounds of the map.Fixed #17013, map view did not fit correctly to bounds after running Series.setData.Fixed #17205, the marker cluster of coinciding points was causing an infinite loop on click.  Highcharts Maps v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Maps 10.1.0.Added official support and API for the Spider Map (mapbubble series with line). See #17023.  Bug fixes Fixed #16598, addPoint() not adding point to map.Fixed #17139, chart.proj4 option didn't work.Fixed missing accessible description of map titles with TopoJSON maps.Fixed #17057, addPoint() wasn't working correctly after series.update({}, false);.Fixed #17082, zooming out to zoom level 0 didn't work (the view was bouncing back).Fixed #16782, point's joinBy was wrong when updating data with an unsorted order.  Highcharts Maps v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Maps 10.0.0.Added native support for TopoJSON in the chart.map and series.mapData options.Moved existing translation functions from Chart to MapView, and added new functions MapView.pixelsToLonLat and MapView.lonLatToPixels. Added lon and lat properties directly to mouse event arguments.Added new map series option, map.affectsMapView.  Bug fixes Default joinBy added for mapbubble.Fixed #16722, container size preventing map rotation.Fixed #16896, hovering over mapbubble with shared tooltip caused an error.Fixed #15782, export hamburger icon hiding behind mapNavButtons.Fixed #15374, maps series.joinBy update didn't work.Fixed #11636, updating series.mapData didn't work correctly.  Highcharts Maps v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Maps 9.3.3.  Highcharts Maps v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Maps 9.3.2.  Bug fixes Fixed #14267, tilemap.tileShape set to square threw an error into the console.Fixed #16549, a regression causing arrow navigation in map-like series types not to work.  Highcharts Maps v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Maps 9.3.1.Added LambertConformalConic projection, commonly used in national maps.  Bug fixes Fixed a regression in Highcharts Maps, geographic maps were not visible in exported images.Fixed #16541, the solid-gauge module was generating error with Maps.Fixed #16534, mappoint point didn't update its position when zooming.  Highcharts Maps v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Maps 9.3.0.Improved map geometry by removing axes and implementing a MapView class. The MapView includes, currently as a beta feature, client side projection. Part of the improved geometry is the new series.data.geometry option to make it easier working with GeoJSON.  Upgrade notes Programmatically zooming the map by running Axis.setExtremes() no longer works. Instead, use MapView.setView.  Bug fixes Fixed #15656, resolved broken mouse scroll on some browsers.  Highcharts Maps v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Maps 9.2.2.  Highcharts Maps v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Maps 9.2.1.  Highcharts Maps v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Maps 9.2.0.  Highcharts Maps v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Maps 9.1.2.  Highcharts Maps v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Maps 9.1.1.  Highcharts Maps v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Maps 9.1.0.  Bug fixes Fixed #15605, trackpad zooming in maps was too fast and unpredictable.Fixed #15406, responsive rule broke map navigation.  Highcharts Maps v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Maps 9.0.1.  Highcharts Maps v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Maps 9.0.0.  Bug fixes Fixed #13981, no map displayed when using marker clusters and empty data array.Fixed #14343, cluster marker image animation had wrong position.  Highcharts Maps v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Maps 8.2.2.  Highcharts Maps v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Maps 8.2.0.  Bug fixes Fixed #13302, marker cluster image symbol not displayed after zooming.  Highcharts Maps v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Maps 8.1.2.  Bug fixes Fixed #13426, reset zoom button appeared while panning maps and the chart was not zoomed in.  Highcharts Maps v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Maps 8.1.1.  Bug fixes Fixed #13195, tooltip was shown for points that were hidden by data classes.Fixed #9424, map navigation zoom buttons had [Object object] in DOM styles.  Highcharts Maps v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Maps 8.1.0.  Bug fixes Fixed regression in vertical panning.  Highcharts Maps v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highmaps 8.0.4.  Highcharts Maps v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highmaps 8.0.3.  Highcharts Maps v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highmaps 8.0.2.  Highcharts Maps v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highmaps 8.0.1.Added new option, chart.proj4, allowing the Proj4 library to be used without being available in the window context.  Bug fixes Fixed issue with map navigation buttons not being aligned to the plot area on initial rendering. See #12776.  Highcharts Maps v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highmaps 8.0.0.Added marker clusters  for scatter and map point series.  Highcharts Maps v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highmaps 7.2.2.  Highcharts Maps v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highmaps 7.2.1.  Bug fixes Fixed #12231, loading Highmaps as a module and using color axis thrown a reference error.Fixed #11924, using the addColorAxis method in Highmaps hid the map.  Highcharts Maps v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highmaps 7.2.0.  Bug fixes Fixed #11448, bubble legend in Highmaps caused unexpected grid lines.  Highcharts Maps v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highmaps 7.1.3.  Highcharts Maps v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highmaps 7.1.2.  Bug fixes Minor speed improvement for maps.Fixed #10617, a regression with updating series.  Highcharts Maps v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highmaps 7.1.1.  Highcharts Maps v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highmaps 7.1.0.  Bug fixes Fixed #10049, a regression causing data labels on null points not to show.Fixed #10057, setting borderWidth to 0 did not work.  Highcharts Maps v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highmaps 7.0.3.  Highcharts Maps v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highmaps 7.0.2.  Highcharts Maps v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highmaps 7.0.1.  Highcharts Maps v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highmaps 7.0.0.  Highcharts Maps v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highmaps 6.2.0.  Highcharts Maps v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highmaps 6.1.4.  Highcharts Maps v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Maps v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highmaps 6.1.2.  Highcharts Maps v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highmaps 6.1.1.  Bug fixes Fixed #7091, map drilldown failed after pinch zooming.Fixed #8442, working around a Chrome regression causing map strokes to draw too wide after animation.  Highcharts Maps v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highmaps 6.1.0.  Bug fixes Fixed #5837, null color was set by attribute in styled mode.  Highcharts Maps v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highmaps 6.0.7.  Highcharts Maps v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highmaps 6.0.6.  Highcharts Maps v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highmaps 6.0.5.  Highcharts Maps v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highmaps 6.0.4.  Bug fixes Fixed #7490, color axis marker remained when legend was disabled.Fixed #6242, issue where disabling the legend caused stray colorAxis ticks.  Highcharts Maps v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highmaps 6.0.3.  Bug fixes Fixed #7313, data labels didn't work with mapbubble series.  Highcharts Maps v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highmaps 6.0.2.  Highcharts Maps v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highmaps 6.0.1.  Highcharts Maps v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highmaps 6.0.0.Added new series type, tile maps, supporting honeycomb, diamond and circle layout.  Bug fixes Fixed #7166, map area borders got wider during animation after mouseover.  Highcharts Maps v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highmaps 5.0.14.  Highcharts Maps v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highmaps 5.0.13.  Bug fixes Fixed #5202, flickering on unhovering areas even when hover state was disabled. Removed the maps-specific color animation since it is now handled by animation the core setState.Fixed #5295, empty first series broke map.Fixed #5319, wrong label position for Netherlands in official map.Fixed issue with redundant labels on color axis containing data classes.  Highcharts Maps v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highmaps 5.0.12.  Highcharts Maps v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highmaps 5.0.11.  Bug fixes Fixed #5676, regression causing nullInteraction not to take effect.Fixed #6632, error when updating color axis with data classes.  Highcharts Maps v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highmaps 5.0.10.  Highcharts Maps v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Maps v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highmaps 5.0.8.New advanced demo for map pies.  Bug fixes Fixed #6025, color axis got misplaced after update then resizing chart.Fixed #6287, regression with panning on countries close to the edge.Fixed #6369, mapNavigation options were not applied on chart.update.  Highcharts Maps v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highmaps 5.0.7.  Bug fixes Fixed #4816, overlapped labels on color axis in legend.Fixed #6069, data class color was not properly represented in the tooltip in styled mode.Fixed #6134, a regression causing Series.addPoint to fail on map series.Fixed #6209, colorAxis range calculated from first series only.  Highcharts Maps v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highmaps 5.0.6.  Bug fixes Fixed #6049, colorAxis colors did not work in styled mode.  Highcharts Maps v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highmaps 5.0.5.  Bug fixes Fixed #6030, hover color not removed if using named colors.  Highcharts Maps v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highmaps 5.0.4.  Bug fixes Fixed #5991, jerky animation on map zoom.  Highcharts Maps v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highmaps 5.0.3.  Bug fixes Fixed #5881, a regression with colorAxis.update in v5.0.Fixed null-point issue with maplines.  Highcharts Maps v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Highcharts Maps v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Bug fixes Fixed #5785, map area class names only had the first space in the name replaced by a hyphen.  Highcharts Maps v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highmaps 5.0.0.Simplified the map configuration by setting a general chart.map option and allowing tuples in the data description.Added new option, chart.mapTransforms.  Highcharts Maps v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highmaps 4.2.7.Added new option, colorAxis.showInLegend.Added new option, series.nullInteraction to allow tooltips and mouse events on null points.  Bug fixes Fixed #5201, lineWidth ignored for mapline in IE11.Fixed #5685, axis padding was not included when zooming out.Fixed #5694, issue with line width on latlon mappoints.  Highcharts Maps v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highmaps 4.2.6.  Bug fixes Fixed #5011, mousewheel zoom also scrolled page.  Highcharts Maps v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highmaps 4.2.5.  Bug fixes Fixed #5050, setData with allAreas could cause SVG errors.Fixed #5249, doubleClickZoomTo caused error on null points.Fixed #5277, a regression causing maps to fail in IE8.  Highcharts Maps v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highmaps 4.2.4.Added mapNavigation.mouseWheelSensitivity option for zooming.  Bug fixes Fixed #4505, errors from crosshairs while dragging after zooming.Fixed #4740, realign zoom buttons after chart is rendered.Fixed #4981, dashStyle didn't work on IE.  Highcharts Maps v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highmaps 4.2.3.  Highcharts Maps v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highmaps 4.2.2.  Bug fixes Fixed #4821, setOptions not working with map credits.Fixed #4840, credits title set to undefined when map module is included.  Highcharts Maps v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highmaps 4.2.0.  Highcharts Maps v1.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highmaps 1.1.10.  Highcharts Maps v1.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highmaps 1.1.9.  Bug fixes Fixed issue with double clicking map zoom buttons. Closes #4444.  Highcharts Maps v1.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highmaps 1.1.8.  Bug fixes Fixed #4362, hidden data labels caused neighbouring areas to not receive mouse events.Fixed #4397, point color option should always take precedence over color axis.Fixed #4409, tooltips not working properly in combination maps.Fixed #4464, error on updating dataClasses of colorAxis when the legend was disabled.Fixed issue with animation not running on point.update of map areas.  Highcharts Maps v1.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highmaps 1.1.7.  Highcharts Maps v1.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highmaps 1.1.6.  Bug fixes Fixed #3207, issue with updating color axis with data classes.Fixed JavaScript errors on drilling when graphic is missing.  Highcharts Maps v1.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highmaps 1.1.5.Force correct aspect ratio when adding a "map" series without the Map constructor.  Bug fixes Fixed #3894, a regression causing setData on maps to fail.  Highcharts Maps v1.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highmaps 1.1.4.  Bug fixes Fixed #3917, wrong series Z index when combined with 3D module.  Highcharts Maps v1.1.2 (2015-02-27) # Some issues listed under Highcharts 4.1.2 above also apply to Highmaps 1.1.2.  Bug fixes Fixed #3871, marker for colorAxis not displaying in Highmaps 1.1.  Highcharts Maps v1.1.0 (2015-02-16) # Some issues listed under Highcharts 4.1.0 above also apply to Highmaps 1.1.0.Added hover with full copyright text to map credits.  Bug fixes Fixed #3789, dragging failed after zooming and setting size.Fixed #3613, problems panning a map when zoomed in close to its edges.Fixed #3627, map not repositioning on chart reflow.Fixed #3218, border gets wider on zooming in IE11.Fixed issue where removing point would not cause view to reset.Fixed #3314, negative coordinates in GeoJSON causing the map to be misaligned or drawn outside the plot area.Fixed #3190, reversed color axis displaying the wrong gradient.  Highcharts Maps v1.0.4 (2014-09-02) # Some issues listed under Highcharts 4.0.4 above also apply to Highmaps 1.0.4.Added true color animation for Highmaps and heat maps, so fills and strokes are animatable through SVGElement.animate. Closes #3311.  Bug fixes Fixed #3360 incorrect ticks on the colorAxis.Fixed #3209, the first map area missing when joinBy was null.Fixed #3219, wrong color when only one data class on color axis.  Highcharts Maps v1.0.1 (2014-06-12) # First release of Highmaps.Highcharts Gantt  Highcharts Gantt v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Gantt 12.2.0.  Highcharts Gantt v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Gantt 12.1.2.  Highcharts Gantt v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Gantt 12.1.1.  Highcharts Gantt v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Gantt 12.1.0.  Highcharts Gantt v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Gantt 12.0.2.  Highcharts Gantt v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Gantt 12.0.1.  Highcharts Gantt v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Gantt 12.0.0.  Bug fixes Fixed, #17738, gantt series did not support array-based points.  Highcharts Gantt v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Gantt 11.4.8.  Highcharts Gantt v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Gantt 11.4.7.  Highcharts Gantt v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Gantt 11.4.6.  Highcharts Gantt v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Gantt 11.4.5.  Highcharts Gantt v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Gantt 11.4.4.  Highcharts Gantt v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Gantt v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Gantt 11.4.2.  Bug fixes Fixed #20940, rangeSelector wasn't a part of fixed elements in Gantt.  Highcharts Gantt v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Gantt 11.4.1.  Highcharts Gantt v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Gantt 11.4.0.  Highcharts Gantt v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Gantt 11.3.0.Changed the default color of the Gantt axis grid, to a more lightweight presence. The associated options are xAxis.grid.borderColor and yAxis.grid.borderColor.Added width to data label in x-range and gantt series, allowing implementers to easily apply word-wrap or ellipsis within the tasks. See #17148.Added support for grid.columns on tree-grid axes.  Bug fixes Fixed #16626, secondary grid axis ignored xAxis.units set.Fixed #19845, grid axes had open-ended cells in some cases.Fixed #19657, grid axis column headers displayed inconsistently depending on how many rows were in the chart.Fixed #15196, gantt chart threw error when nodes in the data set were orphaned.  Highcharts Gantt v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Gantt 11.2.0.Added new option, gantt.connectors.radius, to allow curved connectors between task dependencies.  Highcharts Gantt v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Gantt 11.1.0.  Bug fixes Fixed #18947, better colors for arrows and top-level task title in dark mode in styled mode Gantt.  Highcharts Gantt v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Gantt 11.0.1.  Bug fixes Fixed #18945, dragging point to row with index of 0 didn't work in gantt/x-range.  Highcharts Gantt v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Gantt 11.0.0.  Bug fixes Fixed #18435, tooltip was misplaced outside the plot area when zooming in gantt and x-range series.  Highcharts Gantt v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Gantt 10.3.3.  Highcharts Gantt v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Gantt 10.3.2.  Bug fixes Fixed #17833, all gantt series connectors weren't redrawn/deleted when updating them.  Highcharts Gantt v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Gantt 10.3.0.  Highcharts Gantt v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Gantt 10.2.1.  Highcharts Gantt v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Gantt 10.2.0.  Highcharts Gantt v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Gantt 10.1.0.  Bug fixes Fixed #16550, the week dateFormat was not calculated correctly when useUTC: false.  Highcharts Gantt v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Gantt 10.0.0.  Bug fixes Fixed #16673, label icons in TreeGrid were not destroyed after an update.Fixed #16439, ticks were missing while scrolling the grid axis.  Highcharts Gantt v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Gantt v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Gantt 9.3.2.  Highcharts Gantt v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Gantt 9.3.1.  Highcharts Gantt v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Gantt 9.3.0.  Highcharts Gantt v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Gantt 9.2.2.  Highcharts Gantt v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Gantt 9.2.1.  Highcharts Gantt v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Gantt 9.2.0.  Bug fixes Fixed #15453, gantt grid axis tick labels disappeared when scrolling.Fixed #15896, scrollbar did not work with gantt.  Highcharts Gantt v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Gantt 9.1.2.  Highcharts Gantt v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Gantt 9.1.1.  Bug fixes Fixed #15742, rightmost gantt chart grid axis tick labels did not get shortened correctly.Fixed #15692, gantt chart grid axis did not update from months to years when resizing down.Fixed #15661, options got mutated when creating map or gantt chart.Fixed #15664, updating lineColor and lineWidth of gantt chart outer axis border did not work.  Highcharts Gantt v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Gantt 9.1.0.  Bug fixes Fixed #14904, drop-down icon on tree grid child disappearing after two clicks on parent.  Highcharts Gantt v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Gantt 9.0.1.  Bug fixes Fixed #12691, gantt connector disappeared when a task was partially visible.  Highcharts Gantt v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Gantt 9.0.0.  Bug fixes Fixed #14868, axis labels were positioned incorrectly in non-Gantt charts when the Gantt package was imported.Fixed #14808, Gantt with scrollbar and uniqueNames threw an error.Fixed #14147, in xrange/gantt series, the tooltip wasn't centered above the point if there were more than one series in the chart.  Highcharts Gantt v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Gantt 8.2.2.  Bug fixes Fixed #14166, currentDateIndicator ignored per-chart time options, default label formatter used global dateFormat.  Highcharts Gantt v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Gantt 8.2.0.  Bug fixes Fixed #10281, yAxis label adjustment for long text.Fixed #10779, yAxis max value occurred the wrong axis rendering.Fixed #13359, more than one scrollbar were visible when grid enabled.Fixed #13376, changed the default Gantt navigator series.  Highcharts Gantt v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Gantt 8.1.2.  Bug fixes Fixed #12012, collapse not working when chart had set height.  Highcharts Gantt v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Gantt 8.1.1.  Bug fixes Fixed #13246, gantt was not initialized when no series option was provided.  Highcharts Gantt v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Gantt 8.1.0.  Bug fixes Fixed #13221, grid axis labels rendered outside the cell if the cell width was 0.Fixed #12984, Gantt tasks not being collapsed when added by chart.addSeries.  Highcharts Gantt v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highcharts Gantt 8.0.4.  Highcharts Gantt v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highcharts Gantt 8.0.3.  Highcharts Gantt v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highcharts Gantt 8.0.2.  Highcharts Gantt v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highcharts Gantt 8.0.1.  Bug fixes Fixed #12617, when collapsing a parent node in the tree grid, its child tasks were still rendered.  Highcharts Gantt v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highcharts Gantt 8.0.0.  Bug fixes Fixed #11427, in certain date ranges, single years were displayed on both rows in the grid axis.Fixed #10324, regression with xAxis.grid.cellHeight.  Highcharts Gantt v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highcharts Gantt 7.2.2.  Highcharts Gantt v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highcharts Gantt 7.2.1.  Highcharts Gantt v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highcharts Gantt 7.2.0.  Highcharts Gantt v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highcharts Gantt 7.1.3.  Bug fixes Fixed #10887, regression with Axis.update() in Treegrid axis.Fixed #10942, progress indicator was not redrawn after collapsing and expanding nodes.Fixed #10804, navigator affected the positions of the gantt dependencies negatively.  Highcharts Gantt v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highcharts Gantt 7.1.2.  Bug fixes Fixed #10570 and #10580, setData was triggered on every render, causing treegrid failure when collapsing and problems with the navigator.Fixed #10129, regression with point.collapsed in treegrid. When set to true in the options, the point could never be expanded.Fixed #10470, grid axis tampered with tick positions.Fixed #10329, removed excessive path in gantt connectors, in the simpleConnect algorithm.Fixed #10539, rounding errors in gantt data labels.  Highcharts Gantt v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highcharts Gantt 7.1.1.  Highcharts Gantt v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highcharts Gantt 7.1.0.  Bug fixes Fixed #10350, compatibilty issue with IE11 and xrange.  Highcharts Gantt v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highcharts Gantt 7.0.3.  Bug fixes Fixed #9479, treegrid addSeries compatibility.  Highcharts Gantt v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highcharts Gantt 7.0.2.  Highcharts Gantt v7.0.1 (2018-12-19) # Added built-in support for Highstock's range selector and navigator for easier navigation within Gantt charts.Most changes listed under Highcharts 7.0.1 above also apply to Highcharts Gantt 7.0.1.  Bug fixes Fixed #10176, scrollbar error when collapsed treegrid.Fixed #10211, issue with treegrid show/hide series.  Highcharts Gantt v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highcharts Gantt 7.0.0.  Bug fixes Fixed #9216, larger default width for exported Gantt charts.Fixed #9496, exporting data to CSV/XLS did not work in Gantt.  Highcharts Gantt v6.2.0 (2018-10-17) # First release of Highcharts Gantt.Highcharts Dashboards  Highcharts Dashboards v3.2.0 (2025-03-26) # DataGrid has been renamed to Grid, and the DataGrid.dataGrid factory function is deprecated. Use Grid.grid instead.Implemented a loading indicator for the DataGrid, added the showLoading and hideLoading methods to manage the indicator's visibility, closes #22225.Added support for displaying calculated values in the KPI component, including sum, average, median, max, min, count, and product. Custom formulas can also be defined. See #21559.  Bug fixes Fixed #22720, component destroy mispositioned resize buttons.Fixed #22684, connector polling restarting based on assignment.Fixed #22676, Fullscreen case-sensitive naming.Fixed #22546, Firefox support for mouseenter when dragging.Fixed issue with missing overwrite option in cell format and formatter.Fixed #22624, lang was not applied on new row item in add-component section.Fixed, the newly added chart component had incorrect options in the sidebar.Fixed the time format in the DataGrid.Fixed #22301, cells could be misaligned in multi-row headers when a horizontal scrollbar was visible.Fixed #22492, updating HighchartsComponent with the new chartConstructor did not work.Fixed #22271, highlight was not removed when dragged new component.Fixed #22207, error was return when dragged new component.Fixed #22208, the edit mode button did not reflect the state of the mode.  Highcharts Dashboards v3.1.0 (2024-12-04) # DataGrid: Improved accessibility with more granular control via config options, including ARIA live announcements on e.g. cell editing and column sorting. Read more in the new docs on accessibility.EditMode: Added confirm/cancel events on button click in the sidebar. See #22131.  Bug fixes Fixed overlapped sorting icon with long headers in Datagrid.Fixed #21955, the nested group was rendered when empty options.Fixed #21862, incorrect behavior in component editor when option path points to an array element.  Highcharts Dashboards v3.0.0 (2024-10-16) # The DataGrid has been fully rewritten, introducing new features and establishing a foundation for future enhancements and additional functionality. This release includes several breaking changes, so please refer to the Upgrade Notes below for detailed guidance before upgrading.The sidebar in editMode is now sticky and always visible when scrolling through the page.The styledMode is now disabled by default for the Highcharts Component and KPI Component.Removed formerly deprecated responsiveBreakpoints option from the API.  Upgrade notes Please refer to the DataGrid migration article before upgrading, as DataGrid is rewritten and includes several breaking changes.  Bug fixes Fixed infinite classes when editing components in the sidebar.Fixed #21269, styling errors when forcing the light mode dashboard in the dark mode system.  Highcharts Dashboards v2.3.0 (2024-08-26) # Added the possibility of setting toolbar visibility for individual components, closes #20907.Removed column aliases from DataTable, API documentation, and affected samples. Closes #21485.Added methods (getLocalRowIndex & getOriginalRowIndex) for referencing between rows of original and modified data tables.Changed the layout element in the Add component sidebar to a row and improved the look when added.Added an HTML text field in the sidebar to control and edit the content of the HTML component.Added support for the beforeParse callback in the GoogleSheetsConnector options. Closes #21235.  Bug fixes Fixed some smaller issues with the HTML component.Fixed #21615, when the useHTML was enabled, content in a cell was not rendered correctly when scrolling.Fixed #21280, it was impossible to set the component active state, so added isAcitve flag.Fixed parseDate in DataConverter was private.Fixed, added missing DataConverter type in DataConnector.Added missing utility method to the Dashboards namespace.Fixed error when trying to sync with an invisible point.  Highcharts Dashboards v2.2.0 (2024-07-02) # Added the EditMode for dashboards declared with custom HTML, allowing users to modify the components inside.Added the methods getComponentById and getComponentByCellId to the Board class. Addressing feature request #21378.Renamed onEditModeToggle to toggleEditMode.Removed the setting icon from the row toolbar.Added edit mode events. Changed the way components are updated in edit mode. See #20756.Added isStandalone option to add non-nested options in the edit mode sidebar, #20793.Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.  Bug fixes Fixed #21310, updating values in the DataGrid did not update connected components.Fixed #21189, dragging and dropping elements from the sidebar and inside the dashboard was impossible in Firefox.Removed connector name from the HTML component sidebar.Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.  Highcharts Dashboards v2.1.0 (2024-05-22) # Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.Added affectedSeriesId option to the Highcharts Component's highlight sync.Added ability to set multiple connectors for the Highcharts Component.Added a vue example with custom layout.  Bug fixes Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed issue with synchronization not being stopping during component destroy.Added error handling for rendering components in the same cell.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.Fixed #20661, dashboards were broken when used non-unique ids of cells.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v2.0.0 (2024-03-13) # Added support for custom HTML layout. The use of gui is now optional.Dashboard, and charts, are now 100% stylable via CSS instead of JavaScript configuration.Include what you need, with Dashboards Core, Layout/EditMode and DataGrid as separate scripts. dashboards-plugin is removed and no longer needed.Improved chart synchronization options, and added additional options to highlight synchronization. highlight, tooltip and crosshair can now be set separately.Improved and simplified column assignment. Moved the option from component scope to component.connector.Added support for HTML as string in the HTML Component.  Upgrade notes Dashboards Core, Layout/EditMode and DataGrid are now seperate scripts, and needs to be explicitly included whenever needed. See respective documentation articles for details.The old columnAssignment logic is no longer supported, and needs to be refactored to the new one.Responsive layout should now be specified using CSS media queries.  Bug fixes Fixed synchronization was not stopping during component destroy.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v1.3.1 (2024-03-05) # Added cloud monitoring demo.  Bug fixes Fixed the wrong length of columns in JSONConverter, when x is the same.Fixed #20557, incorrect calculation of component content height when caption is defined.Fixed #20509, wrong type declarations in Dashboards ES modules.Fixed #20445, DataGrid column headers disabling.Fixed crossfilter sync with string data.  Highcharts Dashboards v1.3.0 (2024-01-24) # Internal optimizations and minor TypeScript enhancements.  Highcharts Dashboards v1.2.1 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.  Bug fixes Fixed, it was impossible to set KPI content flex-direction.  Highcharts Dashboards v1.2.0 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.Added closing sidebar, when clicking outside the box.Added the possibility to define a custom path in columnNames for JSON connector to parse complex data.Added the affectNavigator option allowing crossfilter to affect the contents of the other navigators.Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed issue with missing rows, when datagrid visibility was switched.Fixed, it was impossible to set KPI content flex-direction.Added unmount event to component options.Added missing type for the columnName parameter.Fixed missing update position of the context menu.Fixed syncs between different lengths of arrays of series.Fixed KPI component updating when new options include chart options.Fixed d.ts files for HighchartsTypes.Fixed #20046, there was an error when adding a new chart component.Improved accessibility by changing the context menu toggle into a button.  Highcharts Dashboards v1.1.3 (2023-11-29) # Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed #20046, there was an error when adding a new chart component.  Highcharts Dashboards v1.1.2 (2023-11-08) # Added closing sidebar, when clicking outside the box.Added demo that saving and loading dashboards in localStorage.Added the settings.enabled option. Closes #19707.Disabled add component button when the cell toolbars are disabled. Added options for disabling the add component and rwd buttons.Added aria-expanded for the context menu button.  Bug fixes Improved accessibility by changing the context menu toggle into a button.Added missing type for the columnName parameter.Added unmount event to component options.Fixed undefined id in row, cell and layout.Fixed zoom syncing when min or max stays the same.  Highcharts Dashboards v1.1.1 (2023-09-21) # Added aria-expanded for the context menu button.DataTable.aliases property replaces DataTable.getColumnAliases() and DataTable.setColumnAlias().  Highcharts Dashboards v1.1.0 (2023-09-19) # Added the aria-label for the context menu button.Added cellFormatter to the dataGrid module.Added NavigatorComponent for crossfilter of a connector table.Added custom sync demo.Added events to the EditMode state.Added docs about component's sync.Added KPI Component docs as extra article.Created additional docs of the Highcharts Component.Added loading indicator which turns on for a cell until a connector is loaded.Refactored component life cycle methods.Removed scaleElements option in the HTMLComponent.Added dashboard es-modules docs.Added styledMode into KPI component.Implemented usage of connectors and sync (extremes event) for KPI component.  Bug fixes Fixed, it was impossible to change the confirmation popup close button.Fixed reference translation in function arguments of MathModifier.Fixed, dataGridOptions were not applied to the DataGrid component.Removed double resize of DataGrid.Fixed mousewheel problem in the climate demo.Fixed broken reflow in the dashboards.Applied default connector to the dragged new element.Improved the edit mode sidebars and popup design.  Highcharts Dashboards v1.0.2 (2023-08-10) # Replaced blocklist with allowlist in columnAssignment option.RangeModifier will now intersect the results of multiple ranges by default. Use the additive option to concatenate results of multiple ranges.Implemented visibility sync handler.Implemented disabling of editing of the columns, which are created by Math Modifier.Added user-defined redraw event for dashboard components.  Bug fixes Fixed whitespaces not being removed from names when using CSVConnector with firstRowAsNames enabled.Fixed bug with disabling toolbars for cell or row.Fixed insufficient waiting for loading connectors on second request.Fixed missing reference to DOM element in the dataGrid, after dragging a point.Fixed, added TextOptions to documentation, changed gui.enabled as optional.Fixed, the data grid did not resize cells properly.Improved TypeScript-support of Dashboards.Fixed, sync was not preserved when the component updated its connector.  Highcharts Dashboards v1.0.1 (2023-07-19) # Added getOptions() method that returns config of dashboard.  Bug fixes Path to icons has changed to ./gfx/dashboards-icons/.Fixed problem in dataGrid  with visible unnecessary scrollbars on Windows.Fixed links in the API that were pointing to not existing URL's.Fixed, the DataGrid component was not rendered when data was fetched though the csvURL.Improved TypeScript declarations to support classic bundles (minified and as source).Fixed some URL's and indentation error in the *.md files.  Highcharts Dashboards v1.0.0 (2023-06-29) # First release of Highcharts DashboardsHighcharts Grid  Highcharts Grid v1.0.1 (2025-03-27) #   Bug fixes Grid: Fixed the errors resulting from not supporting innerHTML editing by AST.  Highcharts Grid v1.0.0 (2025-03-25) # First release of Highcharts Grid Lite\n\nChangelogView changelog for Highcharts, Highcharts Stock, Highcharts Maps, Highcharts Gantt, Highcharts Dashboards. Highcharts Grid.
 Go to the Download page to get the latest version.Highcharts  Highcharts v12.2.0 (2025-04-07) # Added support for native color-mix. This means colors don't have to be parsed and analyzed in order to allow tweening and modification. Which means full support for CSS variables, named colors and all color definitions known to the browser. Read more in the docs.Added experimental flag, HTMLElement.useForeignObject. When true, labels with the useHTML flag are rendered inside a <foreignObject> in SVG, instead of the traditional parallel div structure.Added ESM bundles for dynamic imports. Use highcharts/esm/highcharts.js or load from our CDN.Added new options, tooltip.fixed and tooltip.position, as a simple declarative way of keeping the tooltip fixed.Added the nullInteraction option for more series types than before. Null points will now support data labels and tooltips.Added language modules for some selected languages, as well as a structure to continue building on.Added level headers in treemap as separate cells through the dataLabels.headers option. Followed up with improved layout control with the new treemap.groupPadding and treemap.nodeSizeBy options.  Bug fixes Fixed #21913, sunburst data labels got stuck in top left corner after traversing.Fixed #21972, layoutAlgorithm.splitSeries for individual packed bubble series did not work.Fixed #22233, tooltip was not prioritizing correctly when multiple scatterpoints hovered.Fixed #22235, decimal lon/lat values were not handled correctly in geoheatmaps with interpolation.Fixed #22489, column series click events failed after enabling then disabling scrollable plot area.Fixed #22664, labels were accidentally being hidden when they should not.Fixed #22709, optional chaining threw a syntax error in dumbbell module.Fixed #22845, a regression causing choppy tooltip animation on pie charts and some other chart types where followPointer was set to true.Fixed #22764, a regression causing axis labels with useHTML to wrap when not needed.Fixed #22707, YYYY-MM date format was not parsed in Safari and Firefox.Fixed test for overlapping scatterpoints was failing on master.Fixed #22533, boosted scatter cropped original data on zoom.Fixed #22609, axis label with soft hyphen was not wrapping text correctly.Fixed #22543, added default vertical offset for all navigation buttons.Fixed #22617, a regression in waterfall data label alignment.Fixed #22380, circles were misaligned in a polar chart when pane.startAngle was set to a non-zero value.Fixed #22456, line wrapping regression in split tooltips with useHTML.Fixed #22516, prevented inactive state for series with shared markerGroup when hovering a boosted series.Fixed #22438, no shared tooltip appeared when zoomed in boost.Fixed various issues with packed bubbles - (partly) frozen point, frozen halo, clicking plot selecting last clicked point.Fixed #22455, series' plot line rendered on the bottom chart edge was sometimes fully clipped.Fixed #22450, ES5 build failed in legacy browsers due to Unicode property escape used in regex.Fixed #22526, disabled context button added extra tabfocus.Fixed #21994, legend a11y proxy elements not tracking legend items correctly.Fixed #21928, setting plot options for pie chart with multiple data labels did not work.Fixed #22295, shared tooltip anchor position was not animated correctly between a single and multiple points.Fixed #22317, removed Batik-specific rgba replacement on export.Fixed #22334, overscroll values were incorrect with rangeSelector enabled.Fixed #22194, Boost not rendering column series with a single point that was outside plot area.Fixed #21886, redraws were fired for every level when drilling up.Fixed #21743, minor grid lines rendered outside the axis plot area.Fixed #22296, missing tick after drill-up when parent series had a single point.  Highcharts v12.1.2 (2024-12-21) #   Bug fixes Fixed #22423, a regression in v12.1.1 causing Highcharts to crash when loaded from a script tag in the head section.  Highcharts v12.1.1 (2024-12-20) #   Bug fixes Fixed #22393, the global Highcharts.dateTime function didn't pick the locale from the html.lang attribute, fell back to browser default.Fixed #7873, min and max settings in exporting.chartOptions axis options were not respected if the user had interacted with the axis.Fixed #22402, a regression in v12 causing wrong number formatting with lang.decimalPoint and lang.thousandsSep set to , and . respectively (European style).Fixed #22394, a regression in v12.1.0 causing bad alignment of text inside the reset zoom button.  Highcharts v12.1.0 (2024-12-17) # Added new treemap feature, the grouping of small leaf nodes, configured by the treemap.cluster option.  Bug fixes Fixed #22329, a regression causing wrong tooltip header with plus sign in date formats.Fixed #22335, treemap data label padding was not respected.Fixed #22357, multiline text was not centered within data labels.Fixed #22316, some tooltip date formats were not correctly replaced.Fixed #22277, setting the time.timezone option explicitly to undefined didn't work as described.Fixed #21405, stickyTracking was broken for BubbleSeries.Fixed #21815, scatter series with Boost showed incorrect values in tooltip when zooming.  Highcharts v12.0.2 (2024-12-04) #   Bug fixes Fixed #22124, numeric font-size for labels didn't work as announced.Fixed #22258, v12 modules didn't work with highstock, highmaps and highcharts-gantt NPM bundles.Fixed #22052, drilldown breadcrumb showed the wrong label when scrollbar was enabled.Fixed #22088, tooltip could spill over at certain widths.Fixed #21897, missing points in scatter series with boost.Fixed #22169, only the first zone got shadow when shadow was true.  Highcharts v12.0.1 (2024-11-28) # Fixed #22243, compiled files were not available on npm.  Highcharts v12.0.0 (2024-11-27) # Refactored the Series class to organize its data in a DataTable instead of parallel arrays. Removed the internal Series properties xData, yData, processedXData and processedYData, as well as some additional series-specific data arrays, in favor of Series.dataTable.Added support for data.x values as date strings. These can now be defined for example as '2024-10-03' as a more human readable alternative to timestamps. Also allowed date string in other options referring to x values, like xAxis.min, xAxis.max, series.pointStart, plotLines.value, Gantt series start and end, Axis.setExtremes() etc.Refactored all internal time zone handling with functions powered by Intl.DateTimeFormat.Added new option, lang.locale, to determine in what language dates are rendered.Added support for locale-aware date formatting through the Intl.DateTimeFormat browser API. Changed all default datetime format strings to locale-aware formats.Added ucfirst template helper function to allow upper case first in strings.Added support for string parameters in template helper functions.Added support for textOverflow: 'ellipsis' with texts and labels spanning multiple lines, as well as the lineClamp CSS property. This allows better control over the layout of axis labels and data labels.Changed the default chart font-family to better match system fonts and improve legibility.Changed the default build system to webpack, allowing for tree shaking in the build process and smaller builds.Improved default alignment of title, subtitle and the context menu button. Added new option, title.minScale.Added option legendColor to set legend symbol color as distinct from series color, see #21776.Added tweening support for 4 and 8 digit hex colors.Use Point instances as context for tooltip and data label formatters and formats.Added support for individual whisker length for box plots and error bars. See #21648.  Upgrade notes When importing Highcharts as a node module, additional modules no longer require initialization. Previously modules would be first imported, then initialized:// Imports for Highcharts v11
import * as Highcharts from 'highcharts';
import addAccessibility from 'highcharts/modules/accessibility';

addAccessibility(Highcharts); // <== This no longer works!
Since v12, the module will not return a factory function, so above code will cause an error. Instead, import it like this:// Imports for Highcharts v12
import * as Highcharts from 'highcharts';
import 'highcharts/modules/accessibility';
See the elaborate article in the docs.All date and time strings are now by default rendered in the web page's default language as set in the html.lang attribute, or falls back to the browser default. Setting lang.locale to en-GB will restore the labels approximately as they were prior to v12. For exact backwards compatibility, set all the time format options (xAxis.dateTimeLabelFormats, tooltip.dateTimeLabelFormats etc) back to their v11 defaults in addition.The time.getTimezoneOffset function callback no longer works. Instead, use the timezone option.All time-related options in the global group were removed. Use the time options instead.The data handling of the Series class has been rewritten to use the DataTable class directly. As a consequence, the parallel arrays storing the series data are removed, and replaced by Series.getColumn().Series.xData is replaced by Series.getColumn('x')Series.yData is replaced by Series.getColumn('y')Series.processedXData is replaced by Series.getColumn('x', true)Series.processedYData is replaced by Series.getColumn('y', true)The "Download PDF" menu item was removed from the default exporting menu, in preparation for a future update where exporting is done on the client side by default. The future update will require PDF download to either run via the export server like before, or to load a third party script. To re-enable the PDF download in the menu, add downloadPDF in the contextButton.menuItems.The HighchartModuleLoaded window event is no longer supported as we moved to webpack builds with tree shaking capabilites. Instead, extensions must rely on events and wrapped methods.The title.widthAdjust option is removed. Instead, use contextButton.buttonSpacing to make space for non-default context button.Titles and subtitles now have adaptive alignment. To revert to the pre-v12 defaults, set title.align and subtitle.align to center, and title.minScale to 1.The Point instances are now used as context for tooltip and data label formatters and format strings, instead of an abstract context object. In most cases this will cause no changes as the properties of the context object are now moved to the Point itself, but some changes may occur. Specifically the {point.x} key for points on a category axes will no longer return the category name. Instead, use {category}.  Bug fixes Fixed #21793, templating did not correctly parse sub expressions inside nested if conditions.Fixed #22188, graphs were clipped at the left side when zooming on a series containing zones, and the x-axis was of type category.Fixed #20550, centerInCategory did not work with multiple stacks.Changed default exporting.url to a more stable server, dedicated to SVG export only.Fixed #22187, word wrap failed for SVG when a word with markup fell at the breaking point.Fixed #22100, pie data label was cut off in some cases when rendered at the bottom of the pie. Altered positioning logic by letting labels gravitate towards the sides when there is space available, which also leaves room for the pie to render larger in limited space.Fixed #19335, accessibility focus border was incorrectly positioned in some edge cases.Fixed #21863, a regression causing the Boost module to fail with treemap series.Fixed #21890, scrollablePlotArea was not supporting parallelCoordinates.Fixed #21684, tooltip with outside did not receive css themes assigned to container.Fixed #21924, custom sizes in marker states did not work.Fixed #21098, corrections for ie11 compatibility fix.Fixed #21136, pointer events were called on points outside of plot area with scrollablePlotArea enabled.Fixed #21267, a regression causing elements to disappear when zooming on an X-range chart.Fixed #21804, columns were crisped to full pixel width even when the crisp option was explicitly false.Fixed #16931, errors in Chrome when modifying chart before printing the page.Fixed #21745, click event was fired on drag for multiple charts.Fixed #21530, tick values were padded onto user-defined category axes.Fixed #18461, changes to options3d alpha and beta were not applied to pie body.Fixed #21534, mouseover point event broke drilldown.Fixed #20470, allow values from nested properties in exported data.  Highcharts v11.4.8 (2024-08-29) #   Bug fixes Fixed #21165, series didn't render properly when the chart height was very large.Fixed #21106, series clipped on boost disabled and increased the chart size.Fixed #21734, minor ticks were wrongly distributed with multiple axes or when tickAmount was set.Fixed #21521, plot band labels and plot line labels would overlap if positioned too close. Added inside and allowOverlap options to the Axis.plotBands.label options.Fixed #20499, data labels failed to apply width in styled mode.Fixed #21205, offline PDF exporting was broken by attempted erroneous child node removal when the chart contained text paths.Fixed #21241, accessibility could not be dynamically enabled or disabled.Fixed #21188 and #21510, hidden divs with special CSS styles increased chart height by firing ResizeObserver.Fixed #21650, the data module was not successfully updating the x-axis in some cases.Fixed #21255, tooltip with outside rendered outside viewport, making document.documentElement expand.Fixed #21605, legend text was not vertically aligned with the symbol.  Highcharts v11.4.7 (2024-08-14) #   Bug fixes Fixed #21554, tab navigation was trapped in a loop after printing the chart.Fixed #20456, boosted heatmaps were not rendering in some cases.Fixed #21501, #21547 and #21569, various tooltip and interaction issues caused by a temporary pointerEvents fix for older Chromium.Fixed #21277, version and other metadata was not being replaced after building esm-modules.Fixed #21429, the rounded solid gauge series was misaligned when close to 100%.Fixed #21281, hovering line with split tooltip, then scatter, caused tooltip animation to start in top-left.Fixed #17854 , fillOpacity was too strong in boosted series.Fixed #9748, the mouseup event was not respected after setting the event.Fixed #21315 inverted bubble point halos were not positioned correctly.  Highcharts v11.4.6 (2024-07-08) #   Bug fixes Fixed #21470, bad require tagging causing bad module references.  Highcharts v11.4.5 (2024-07-04) #   Bug fixes Fixed #21446, a regression causing broken imports of modules due to bad relative paths.Fixed #21445, generated TypeScript declarations for deprecated option series.events.legendItemClick.  Highcharts v11.4.4 (2024-07-02) # Refactored the series.turboThreshold option to be more forgiving. Instead of failing with a warning message, the Series class now silently skips the fast looping of raw numbers and processes the object configuration instead, at a slight performance cost.Introduced new event and option legend.events.itemClick, deprecated events.legendItemClick. See #3957.Added new option treemap.traverseToLeaf which allows to drill into last possible leaf of Treemap series.  Upgrade notes Text path support is no longer part of the highcharts.js main bundle, but requires loading the modules/textpath.js bundle. It is however built into those series that use text paths by default.  Bug fixes Temporarily fixed #21144, workaround for a Chromium bug while touching and scrolling chart.Fixed #21098, various minor fixes for IE11 compatibility.Fixed #21302, added the description to all arguments in the Tooltip constructor.Fixed #20525, in boosted charts, markers were not being hidden when zoomed in series was hidden.Fixed #21174, stack labels were wrongly positioned for multiple x-axes in inverted charts.Fixed #21341, updating the height of a SVGLabel didn't occur immediately.Fixed #19224, treegraph data labels did not hide when allowOverlap was false. Implemented overlap detection for labels with text path.Fixed #21177, setting data to a hidden packed bubble series would throw error.Fixed #21124, special character broke string label templating format.Fixed regression after fix #20435, updating of existing point event didn't remove the old event.Fixed #20969, tooltip did not dissappear when hovering from one chart to another.Fixed #21245, points were wrongly positioned for multiple boxplot series.Fixed #20494, chart did not switch back to default config upon exiting responsive conditions.Fixed #21176, in boosted charts, the halo was wrongly animated for multiple series with multiple axes.Fixed #19944, error message "getAttribute is not a function" appeared in certain edge cases in Firefox.Fixed #16925, stacked area series with null data produced bad animation.Fixed #11794, max rendered series.lineWidth for boost was 1.  Highcharts v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts v11.4.2 (2024-05-22) # Fixed #21109, tooltip animation was not smooth. Added the option to set tooltip.animation as an animation object, not just a boolean as previously.Added new options pane.background.borderRadius, and plotBands.borderRadius for gauges.  Bug fixes Fixed #20451, legend.symbolWidth and legend.symbolHeight didn't change color axis dimensions if colorAxis.width or colorAxis.height were not set.Fixed #20876, redraw and drillupall events were called too many times during chart drill up.Fixed #5334, pixel alignment issues between grid lines, column series, error bars and scatter points.Fixed #20585, gap in the border at the bottom of bubbles at some sizes.Fixed #20729, pressing "enter" on a tabbed point resulted in different event than clicking it with a mouse.Fixed chart height docs, updated 500px-sample title, and added new demo showing height inherited from container.Fixed #18776, the series colors were not found when boosting multiple series in a single canvas in styled mode.Fixed #21125, a regression causing wrong positioning of bubbles in an inverted bubble chart.Fixed #20564, minus sign was displayed for the number zero if it was rounded from a negative value.Fixed #20816, time zone wasn't respected in Templating in format strings.Fixed #20804, setOptions didn't change radial axis defaults.Fixed #20146, dragging didn't work for the errorbar series.Fixed #20988, exporting chart, then dragging an annotation and exporting again used to cause wrong annotation position in the subsequently exported charts.Improved the default padding of axis labels, and fixed their collision calculations.Fixed #20998, data labels overflowed the plot area when the axis position was different from default.Fixed #20405, a regression in network graph. When dragging a node, others didn't follow.Fixed #20560, destroyed points in the area range series were wrongly used during mouse hover.Fixed #20656, series with manipulated points were missing a11y description on initial load.Fixed #20965, unwanted animation of right-aligned label when only the text changed.Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.1 (2024-04-04) #   Bug fixes Fixed #20784, a regression in v11.4.0 causing wrong min and max extremes for the selection event in column charts.Fixed #20710, bubble legend with color-axis moved after redraw.Fixed #20792, plot lines' HTML labels rendered incorrectly.Fixed #18980, the highcharts.d.ts type definition file was too large and caused issues in editors. Moved majority of series options into separate definition files.Fixed #20871, a regression with resetting zoom across synchronized charts.Fixed #20586, plot line CSS classes were not concatenated with spaces, causing the className option to fail.Fixed #20548, chart not resizing after closing fullscreen.  Highcharts v11.4.0 (2024-03-05) # Added new option sankey.nodeDistance and the possibility of setting sankey.nodeWidth to auto. The same option pair is also supported by organization chart and treegraph series.Enhanced the pinch zoom behavior to redraw the axes and series continuously. Previously it created a preview by scaling the graphs, then did a full review at the end. Also a deeper refactor and unification of the whole zoom, pan and mousewheel logic.Added new option organization.hangingSide which allows nodes to hang from the right side in inverted organization charts. See #17240.  Bug fixes Fixed #20334, chart width exceeded container width on Windows when the chart itself caused page scrollbars.Fixed #20572, destroying a chart after point hover sometimes produced an error.Fixed #15921 by applying fillColor to series from highContrastTheme.colors if set.Fixed #20166, ticks and gridlines were visible outside the axis in some corner cases.Fixed code scan issues 56, incomplete string escaping or encoding in SVGRenderer, and 72, incomplete multi-character sanitization in SVGRenderer.Fixed code scan issue 73, incomplete multi-character sanitization in SVGElement node title.Fixed code scan issue 90, permissive regex in mapcharts.js.Fixed code scan issue 111, potential prototype pollution in Utilities.ts.Fixed code scan issue 112, potential prototype pollution in NavigationBinding.ts.Fixed #20329, detached elements and events in the Accessibility module produced a memory leak.Fixed #20394, series.color only initially impacted the color of x-range points.Fixed #20435, point events update didn't work.Fixed #20516, this was not bound to plot line or plot band object in event callbacks.Fixed #20429, toggling bellcurve visibility threw error.Fixed #20440 and #20569, multiple series zones broke graph.Fixed regression since v11.3, column range series had area-style legend marker.Fixed #20433, boosted scatter chart did not work without axis min/max-options.Fixed #20307 and #20301, alignment and overlap detection for rotated data labels didn't work correctly.Fixed #19730, centerInCategory on inverted column chart had incorrect series order.Fixed #20264, the packed bubble series was not rendered correctly in an inverted chart.  Highcharts v11.3.0 (2024-01-10) # Implemented native handling of the time.timezone option, making the dependency on moment.js redundant.Added new options colorAxis.width and colorAxis.height, allowing absolute or relative size. See #17870.Added new option chart.axisLayoutRuns. It allows opting in for more predictable axis tick and label layout, at the cost of performance. See #19794.Added new default legendSymbol for area series and its derivatives.  Upgrade notes The exporting.formAttributes no longer works because the internal post function was replaced by the fetch API. The formAttributes option can for some purposes be replaced with exporting.fetchOptions. See the fetch article on MDN for more information about possible options.  Bug fixes Fixed #19169, the focusBorder was not removed from SVGElement after the element had been unfocused.Fixed #20319, funnel point path not rendered properly when the point's top coordinates were within top boundaries of the funnel neck.Fixed #20291, y-axis crosshair was missing for 3d column.Fixed #20340, histogram bins x2 value was wrongly calculated.Fixed #20191, exporting a chart using the export module caused beforeunload event to fire.Fixed #20142, pie selected point was semi-transparent on legend hover in styled mode.Fixed #18744, a point covered by an area series should be fully clickable if the tooltip shows.Fixed #20129, the lack of root and window in the NX environment was causing an error on load.Fixed #20097, script errors and invisible series in error bar with certain extremes.Fixed #19857, short x-axis labels disappeared in some edge cases when labels.autoRotation was set.Fixed #18804, zooming in below boostThreshold didn't disable boost on scatter series.Fixed #20120, data labels in packed bubble series were misaligned after updating the series position.Fixed #16920, formalized and fixed the data.columnTypes option.Fixed #17545, misplaced funnel and pyramid data labels after legend item click when dataLabels.inside set to false.Fixed #19497, some points disappeared when changing extremes of the category axes in boost.Fixed #20098, multiple data labels were not rendered when enabled in plotOptions.Fixed #19895, removing a series while rendering in boost mode could cause a TypeError.Fixed #20002, stroke wasn't applied to annotations during offline PDF export.Fixed #19976, columns threw off center when using mouse wheel zoom.Fixed #19621, errors instead of expected behavior when using arrow-keys to navigate first and last items in legend.Fixed #19130, negativeColor was applied to positive graphs for the part of the line that extended below the threshold.Fixed #19604, ticks were sometimes differently calculated after a series update.Fixed #20007, contrast color setting for data labels did not respect their background colors.Fixed #19946, nodes in the organization chart weren’t centered while using node width or height options.Fixed #19917, setting options in a series without series.data would add default aria-label.  Highcharts v11.2.0 (2023-10-30) # Upgraded the build pipeline to benefit from new language features. Bundles are now compiled to ES2020 by the TypeScript compiler (*.src.js files), and minified by swc (*.js files).Added support for multiple data labels on pie slices.Added new option, sankey.nodeAlignment for the Sankey series to specify which side of the chart nodes should align.Added new option, sankey.linkColorMode.Added feature to allow different symbols for upper/lower markers in area range and dumbbell charts. See #14024.Set the default series.lineWidth of line graphs to 2px for better accessibility.  Bug fixes Fixed #19552, treegraph was losing node parent during export.Fixed #19885, axis.breaks didn't work with zooming.Fixed #13240, using default data labels alignment for bubble series.Fixed #19826, Lollipop grouping didn't work correctly.Fixed #19934, CSV export was broken in Safari.Fixed #19480, added missing TypeScript definitions for PlotLineOrBand properties.Fixed #17820, clip rect did not take into account boosted navigator.Fixed #17014, boostThreshold with null point threw an error.Fixed #19762, offline export PDF documents didn't scale.Fixed #19671, treegraph was throwing an error when setting legendSymbol to lineMarker.Fixed #14108, start and end dates in exported CSV data for X-range series.Fixed #19744, series' clip option was not working in polar charts.Fixed #19725, drilling between cartesian and non-cartesian series didn’t work properly.Fixed #19692, mouse wheel zoom was enabled even when general zoom was not.Fixed #19253, Offline Export did not work for boosted series.Fixed #18062, pinch to zoom didn't work on Android Mobile devices after any click on the chart.Fixed #19314, tooltip chevron was cut off when outside was enabled.Fixed #19616, breadcrumbs disappeared when invoking chart.update in sunburst and treemap.Fixed #19362, x-range series tooltip lost its correct default date and time formatting.Fixed #19148, NaN x value disabled area chart graphic elements.Fixed #19457, multiple dataLabels enabled/disabled threw render (console) error.Fixed #19524, treegraph links weren't disappearing after calling setData.Fixed #19343, tooltip positioning on xrange points lying on shifted axes.Fixed #19368, TreeGraph chart displayed extra node expander for hidden child when levels collapsed. Also fixed collapseButton visibility.Fixed #19341, null points could be hovered in the boost module.Fixed issue with missing points in boosted heatmap with interpolation set to true.Fixed #18988 and #17594, vertical and horizontal offsets for inverted Sankey and Organization charts didn't work correctly.Fixed #19516, read-only CSS properties weren't excluded during the export of the chart.Fixed #19217, mobile pinch on inverted charts flipped the chart.Fixed #19203, plotOptions.series.pointStart couldn't be updated more than once.Fixed #18815, boostThreshold set for one series boosted all series.Fixed #19374, disabled keyboardNavigation didn't remove the exit anchor.Fixed #19465, wrong property in numberFormatter API demo.Fixed #19412, chart.zooming.resetZoom position settings were overwritten by the deprecated parameter.Fixed #19110, chart's height, and minLinkWidth misaligned sankey links.Fixed #19178, some yAxis options were disappearing after mouse wheel zoom.Fixed #19200, styles were not applied to the annotation label when useHTML was enabled.Fixed #19202, excluded events.legendItemClick from item series API.Fixed #19179, changing the crop property on annotations through annotationOptions in the chart config did not work.Fixed #15441, auto-scroll did not follow tooltip when navigating with keyboard while zoomed in.Fixed #17170, data labels with outline or shadow were misplaced in PDF files exported using the offline exporting module.Fixed #19002, with a11y enabled < sign was stripped, causing issues with screen readers.Fixed #19027, a regression in v11 causing the chart to redraw twice on updates that triggered a resize of the container.Fixed #19078, proximate legend did not work after updating the legend.enabled property.Fixed #19093, SVG <filter> issue with shadow enabled on line series when points had the same x or y value.Fixed #19134, color and symbol changed constantly for the same series after every drill-up.Fixed #19127, centerInCategory was not working for column pyramid.Fixed #19035, tooltip tap or click stopped working after pinch zoom in iOS.Fixed #19143, a regression causing incorrect series name from CSV for packed bubble series.  Highcharts v11.1.0 (2023-06-05) # Added support for mouse wheel zooming through chart.zooming.mouseWheel. This feature is embedded in the Highcharts Stock bundle, but requires an additional module file for the Highcharts bundle.Added the heatmap.interpolation option for creating smooth heatmaps.Added new function, Chart.getOptions(), to get the current active configuration options for the chart.Added the treegraph.fillSpace option for treegraphs to fill the whole plot area even when some points are collapsed.Added borderRadius option support for funnel and pyramid series. See #18839.  Bug fixes Fixed #18869, redundant chart redraws on changing title, subtitle or caption font size, or top level chart font size.Fixed #19017, failure in parsing negative numbers with spaces in the data module.Fixed #19053, a regression since 10.3 causing item series update not to work correctly.Fixed #19051, axis crossing was not always correct.Fixed #18985, updating enableMouseTracking from true to false didn't work.Fixed #17589, update of multiple data labels didn't work in specific conditions.Fixed #17791, pointRange wasn't calculated for multiple series with single points.Fixed #19028, border radius was wrongly applied for negative column points when the zoneAxis option was x.Fixed #12063, packed bubble parent nodes had a bad position after width update.Fixed #18891, invisible data labels in treegraph series reacted to hover.Fixed #18960, a regression in v11, wrong placement for data labels in dumbbell series.Fixed #18110, yAxis.maxPadding was ignored when yAxis.softMin was set.Fixed #18956, a regression causing small sankey nodes rendering as circles.Fixed #18876, updating the tooltip didn't work when wasn't declared in the chart configuration.  Highcharts v11.0.1 (2023-05-08) # Added new option, xAxis.crossing and yAxis.crossing, making it easier to create axis layout for mathematical plots.Added new option, series.legendSymbol. See #18753.  Bug fixes Fixed #18884, sunburst circular labels did not work when the difference in value was small.Fixed #18928, a regression in v11 causing the tooltip to not display in subsequent charts when the first chart in the web page was hidden.Fixed #18821, hidden overlapped data labels with useHTML on were still active for the mouseover event.Fixed sonification issue where resuming after pause ignored the original onEnd argument.Fixed too low contrast for credits in High Contrast theme.Fixed #14602, arearange series.label.onArea was not implemented.Fixed #18856, the last point wasn't displayed while hovering in the boost module.  Highcharts v11.0.0 (2023-04-25) # Design facelift with clearer, more vivid palette, added contrast for text labels and many minor visual changes.Added new series type, treegraph. Read more in the docs.Added new series type, pictorial.Removed support for IE 8 and older.Changed the default builds to ECMAScript version ES2016.Replaced SASS files for styledMode with updated CSS files. Highcharts theming is now easier by supporting CSS variables as well as prefers-color-scheme. See style by CSS.Sonification module v2 with many new features for audio charts, now part of the official API.Changed default rotationMode to circular for sunburst data labels.Added minorTicksPerMajor option for axes, see #13338.Added the point.percentage property for gauge charts, see #18433.Added ResizeObserver to the chart so it could adjust reflow on container size change, closes #17924.  Upgrade notes To revert to the old design, use the theme defined in the v10 theme sample.Font sizes of the chart are now using rem by default. This may cause too small or too big fonts if your web page is using non-default root element font size. To avoid that, set chart.style.fontSize to 16px or any other values you see fit.The top-level labels option has been deprecated for a long time and is now removed. Use Annotations instead.Time-related settings on the global options structure are removed. Use the time options instead.The new version of the sonification module is not backwards compatible with the old, experimental module.The default builds were changed to ECMAScript version ES2016. See the system requirements on how to support IE11 and other legacy browsers.If you're using chart.styledMode, and your end users have prefers-color-scheme set to dark in their browsers, they may now be presented with dark-themed charts. The exception is if your CSS overrides the default coloring.Changed default rotationMode to circular for sunburst data labels.  Bug fixes Fixed #18790, custom symbols were incorrectly positioned in some cases.Fixed #18103, Y zoom while panning on top of the plot when chart inverted was not working.Fixed #18066, after updating the series data to one point with category xAxis there were unwanted labels.Fixed #17720, the tooltip with enabled outside and split properties was badly positioned for some series.Fixed #18693, tooltip.stickOnContact threw errors on hover between one series with followPointer set to true and the second series followPointer set to false.Fixed #18741, incorrect guide box behaviour while dragging stacked bars.Fixed #14080, bubble legend didn't work correctly if the legendItemClick event for one series was prevented.Fixed #18635, bad tooltip position in an inverted chart inside a scrollable container when tooltip.outside was true.Fixed #17614, timeline styled mode default colors.Fixed #18617, stack labels in inverted charts were mispositioned in the y axis.Fixed #18636, waterfall lines missing when there was a null point.Fixed #17168, the Sunburst series didn’t work properly when the chart was inverted.Fixed #17257, item chart points color wasn't updating.Fixed #17280, bubbles with z: 0 caused points to disappear.Fixed #16516, legend symbol height didn't accept 0 as a value.Fixed #18501, vertical alignment of stack labels didn't work with logarithmic axes.Fixed #18502, pointPadding for heatmap series wasn't working with reversed axes.Fixed #18444, a polar chart with type "bar" and data labels caused JavaScript error.Fixed #17912, column range points were not aligned with column points.Fixed #18443, the className property in guideBox didn't work for drag & drop.Fixed #10005, wrong series name and legend item by using data.seriesMapping property.Fixed #18422, stacked polar column chart with zero value rendered a wedge across the whole y axis.Fixed #16675, adding annotation from a custom button was not possible if the button had a custom SVG symbol.Fixed #18305, updating series marker size was not working if the initial size was not set.  Highcharts v10.3.3 (2023-01-20) # Added /es5 path for legacy script files on code.highcharts.com and in the npm package, see #18070.Added new option, exporting.allowTableSorting, to allow turning off sorting of the data table. See #18007.  Upgrade notes In Highcharts version 11, released at the earliest March 1 2023, the main script files at code.highcharts.com and npm will be compiled for evergreen browsers. This includes files like highcharts.js, modules/exporting.js, accessibility.js etc. Should you need to continue supporting browsers more than three years old, like IE11, we will provide legacy script files in the /es5 folder. These files are now available, and we recommend you do the switch before the release of version 11. See a live example, or read the details at #18070.Lollipop series data values should now be given as y, not as low. See live demo.  Bug fixes Inheritance refactor of Lollipop series, #14103.Fixed #17888, plot line labels with align: 'right' and textAlign: 'left' weren't displayed. Added clip option for labels to allow displaying outside the plot area.Refactored how the position of stack labels is calculated. Closed #16764, #12133, #15129 and #17116.Fixed #17998, setting linecap wasn't reflected in legend items.Fixed #14114, color axis marker color did not get applied to most series in styled mode.Fixed #16274, custom marker symbol size was not being updated.Fixed #18212, long treemap data labels with useHTML set to true were wrongly positioned.Fixes #18147, some data labels weren't rendered correctly in polar charts.Fixed issue with series label overlapping data labels.Fixed #16944, wrong tooltip position when using the positioner callback and outside: true.Fixed #18168, legend item was mispositioned if the related series was located at the top of the chart and proximate layout was enabled.Fixed #17948, the tooltip position was bad when yAxis.reversedStacks was set to false.Fixed #17314, chart.alignThresholds and stacking were not working correctly together.Fixed #18116, the central data label in sunburst series was too short.Fixed #18080, hovering over area range points after zoom reset was throwing errors.Fixed #18145, boost module couldn't render series with colour set to grey.Fixed #18127, a regression causing an unintended border on data labels when setting backgroundColor and borderColor but no explicit borderWidth.Fixed #17856, line color in hover state did not work as expected in heatmap.Fixed #17933, x axis labels had incorrect styling after drilling down.Fixed #17963, breadcrumbs' position and display were incorrect when scrollablePlotArea was enabled.Fixed #17970, wrong color on heatmap point when updating from null to a valid number.  Highcharts v10.3.2 (2022-11-28) # Refactored and simplified series group inversion logic. It is now simpler and more lightweight, and allows animating the transition between a non-inverted and inverted chart.  Bug fixes Fixed #17815, the tooltip didn't receive styling from series.options.className in styledMode.Fixed #17957, data labels disappeared on point hover when marker.enabled was set to false.Fixed #17991, adding an invisible series caused error upon attempted exiting of fullscreen, when pattern-fill was set.Fixed regressions with missing tooltip on organization chart and sankey chart nodes after v10.3.0.Fixed #17753, removed not allowed < symbol from attributes.Fixed #17902, in stacked waterfalls, the x value was not available for the context of stackLabels.formatter.Fixed #12133, stack labels alignment was wrong when scrollablePlotArea was enabled.Fixed #17878, column series cursor was incorrect after plotOptions update.Fixed #12416, tooltip did not update when scrolling scrollable plot area.Fixed #17952, added TypeScript support to package files in es-module/masters.Removed stroke/stroke-width workaround for older browser bug.  Highcharts v10.3.1 (2022-10-31) # Files of v10.3.0 were missing from npm.  Highcharts v10.3.0 (2022-10-31) # Added new feature, zooming on polar charts. See #16992.Added new feature, series.label.useHTML to support HTML formatting in series labels. See #17282.Made the legend items of venn diagrams list the names of points instead of the names of series, see #17113.Changed the default values for dependency wheel data label vertical positioning.  Bug fixes Fixed #17839, spacebar would not toggle items in the legend when using the accessibility module.Fixed #17538, export failed in Firefox using styled mode and CSS variables.Fixed #17315, item series custom marker was stretched after redrawing.Fixed #14226, auto rotation of tick labels didn't work when step set to 1.Fixed #17685, the tooltip sometimes got stuck when combining the useHTML and stickOnContact options.Fixed #17177, updating tooltip.followTouchMove didn't work.Fixed #17785, a regression causing drag and drop of bubbles between packed bubble groups to fail.Fixed #17630, making it possible to display percentage values when hovering over a boosted stacked point.Fixed #17288, pie chart shadows were not applied on update.Fixed #17639, exporting feature was removing duplicated points.Fixed #17677, a regression causing text and outline out of alignment for sunburst data labels.Fixed #17610, centerInCategory did not consider columns with the same x-value when centering them.  Highcharts v10.2.1 (2022-08-29) # Refactored zoom options, introduced new object structure as chart.zoom.Added Highcharts.Series.types and Series.registerType(type, class) for custom series, see #17551.  Bug fixes Fixed #17413, data labels contrast color omitted the chart background.Fixed #17547; if chart.zoomType option is set, boosted rendering will not be forced as long as threshold is not reached.Fixed #17627, single quoted attributes were not recognized and caused color style not to apply in tooltips.Fixed #15752, arearange didn’t work in parallel coordinates.Fixed #17442, color axis data classes were not keyboard navigable.Fixed #17438, updating points with the category axis gave the wrong x position.Fixed #17486, bubbleZExtremes was not removed when the bubble series was removed.Fixed #17481, zones clip was incorrectly calculated and the line was partially missing when scrollablePlotArea was enabled.Fixed #17484, changed the link opacity on hover in organization series.Fixed #17472, shared tooltip did not work in polar charts.Fixed #17359, stickyTracking was not respected correctly for polar charts.Fixed #17401, console error from accessibility module when using numeric point id.  Highcharts v10.2.0 (2022-07-05) # Added option to sort the chart data table by clicking the column headers. See #16972.Added RTL support for breadcrumbs, see #17340.Added new feature, series.onPoint, allowing to display some series types (e.g. pie) over a point with a given id. See #12526.  Bug fixes Fixed #17273, data labels did not always have enough contrast. Ensured maximum contrast according to W3C's relative luminance.Fixed #12206, xAxis.labels.y did not adapt to multiline labels when xAxis.opposite was true.Fixed #17281, an error in console when bubble with custom marker exceeded the zThreshold.Fixed #17285, made the opacity property work for different states in the sankey series.Fixed #17167, legend title didn't hide when chart data was empty.Fixed #17336, hover state was only applied once to buttons.Fixed #11816, in gauge series, added dial path into API documentation.Fixed #17352, the tooltip was not visible after updating scrollablePlotArea.Fixed #17381, generic class names in data table conflicted with commonly used classes in CSS.Fixed #17186, CSV rows were missing delimiters when data was missing at the end of a row.Fixed #17236, timeout for accessibility module warning caused test issues.  Highcharts v10.1.0 (2022-04-29) # Added allowMutatingData chart property to prevent data mutation while updating series or point. See #4259.Added new option, accessibility.point.describeNull.Added new fullscreen events, fullscreenOpen and fullscreenClose, callback functions to modify chart options during toggle fullscreen mode. See #16968.Added warning by default when the accessibility.js module is not loaded.Added new option, accessibility.series.descriptionFormat.Improved the theme colors for high contrast light and high contrast dark to show more hue variance.Reduced verbosity of accessibility information by default.Changed the default value of SVGElement.show's inherit argument to true.Added option to remember keyboard focus for points: accessibility.keyboardNavigation.seriesNavigation.rememberPointFocus.Added new option pie.thickness describing thickness ring of pie. This option takes precedence over pie.innerSize. See #6647.  Bug fixes Fixed #8324, an error was thrown when calling drillUp() after chart.applyDrilldown().Fixed #17188, an incorrect breadcrumbs list was generated when drilling down the axis category.Improved default behavior of accessibility module with axis descriptions as well as landmark roles.Fixed #15178, warning of invalid attribute for Reset Zoom button.Fixed #17146, a regression in v10 with parsing of HTML with inline style rules containing a colon.Fixed #14320, the table was not re-rendered after a data update.Part of #15863, the scrollbar is no longer initially rendered with y: -9999.Fixed #9687, vertical data label suppressed when close to the right edge of the plot area.Fixed #17100, excessive padding in some cases when tickAmount was set.Fixed #16921, regression causing the wrong size of a hovered heatmap cell after zooming in.  Highcharts v10.0.0 (2022-03-07) # Adde new series type, arc diagram.Added breadcrumbs functionality for drilldown charts as well as hierarchical series like treemaps and sunburst. This replaces the drill-up and traverse-up buttons.Added new feature chart.alignThresholds for aligning the thresholds in charts with multiple axes.Added new options hangingIndentTranslation and minNodeLength for Organization chart, for improving the layout of deep structures. See #13915.Added new option Highcharts.AST.bypassHTMLFiltering for disabling AST filtering.Added option, boost.pixelRatio, providing Retina and device pixel ratio support to the Boost module.Added areaspline series to the supported series in the Boost module, see #8288.  Upgrade notes In an organization chart, children of a parent with hanging layout will now inherit this layout. To prevent this, set layout = "normal" for these nodes.The drilldown.drillUpButton options set is deprecated and replaced by drilldown.breadcrumbs. Some but not all settings are backwards compatible. See our demo of mimicking the legacy button style with breadcrumbs. The same is true for treemap.traverseUpButton.The offline exporting module now requires version 2 of jsPDF and version 2 of svg2pdf when exporting to PDF. Our own CDN, downloads and packages are updated, but if you're loading old releases from elsewhere, it will fail.  Bug fixes Fixed #15133, data labels were missing the fade-in effect upon drilling down.Fixed #16470, setting custom drag handle cursor in options.Fixed #16873, Windows High Contrast Mode not detected in non-Microsoft browsers.Migrated global win to window. This will mask the global window object in every Highcharts bundle, so that always Highcharts.win === window.Fixed #16788, accessibility issue with some columns not being focusable because of wrong point.isInside flag.Fixed #16431, data points were trimmed due to axis floating-point rounding.Fixed #6884, console errors related to style attributes because of Content Security Policy.Fixed #16979, only one point per x value was shown when stacking set to percent.Fixed #16974, esc keypress keyboard focus issue with multiple charts on the same page.Fixed #16818, issue with keyboard navigation and legend.labelFormatter.Fixed #14175, enabling and disabling dataLabels.rotation misplaced data label's position.Fixed #16474, added missing click event callback on sides of the 3D pie slices.Fixed #16893, series.findNearestPointBy set to xy was not working well with Boost.Fixed #16791, exporting a chart in styled mode on Safari v15 produced a black image.Fixed #11712, in node-based series types like dependency wheel and network graph, calling node.update() in the afterAnimate event would throw errors.Fixed #16339, keyboard focus management issues with fullscreen change.Fixed #16884, smarter defaults for accessible point descriptions.Fixed #16045, tooltip with opacity was not fully hidden when hovering over a reset zoom button.Fixed #6417, added support for non-ASCII characters (Chinese, Russian etc) in exported PDF via the new exporting.pdfFont property.Fixed issues with data.enablePolling and Google Sheets.Fixed issue with data module updates when dataGrouping options were present.Fixed #16820, adding drilldown series on point mouseover threw an error.Fixed #16169, stack order was affected when centerInCategory enabled and reversedStacks set to false.Fixed #16479, resetZoomButton was not visible after drilling up to a level with zoom.Fixed #16568, setting data options with Highcharts.setOptions did not work.Fixed #16135, after drill-up, the series did not go back to its original state.Fixed #16589, SVG export broken when accessibility module was included.Fixed issue on mobile where a point would be highlighted visually after drilldown with a11y module loaded.Fixed keyboard nav issues #16633, #16634, #16625.Fixed legend keyboard navigation issues #16520, #16545, #16467.Fixed #16497, legend keyboard navigation caused page scroll with container scaling.Fixed #10525, setting tickPositions to undefined didn't clear options.Fixed #16697, legend item style changed when using the keyboard to focus it.Fixed #16596, the first column point of categorized x-axis wasn't draggable.  Highcharts v9.3.3 (2022-02-01) #   Bug fixes Fixed #16339, keyboard focus management issues with fullscreen change.  Highcharts v9.3.2 (2021-11-29) # Added support for Trusted Types, a browser standard for preventing cross-site scripting vulnerabilities.  Bug fixes Fixed #16398, spacing was incorrect for legend items without a name.Fixed issue with data module updates with firstRowAsNames enabled.Fixed #16665, a regression causing updating of dataLabels.useHTML not to take effect.Fixed #16562, Windows high contrast mode keyboard navigation issues.  Highcharts v9.3.1 (2021-11-05) # No changes for the basic Highcharts package.  Highcharts v9.3.0 (2021-10-21) # Added new offset options for nodes in Sankey and Organization chart, nodes.offsetHorizontal and nodes.offsetVertical. See #15225.Added new option, annotations.crop, allowing to hide annotations outside the plot area. See #15399.Allow removing accessibility information sections by setting section formats to null.Support series.accessibility.point options matching the top level accessibility.point options.Support pageUp/pageDown in legend keyboard navigation for scrolling between legend pages.Improvements to series keyboard navigation, now supporting End/Home/PgUp/PgDown keys.  Bug fixes Fixed #12169, allowing Blob offline export in Firefox.Fixed #16150, pyramid shape was incorrect for inverted charts when yAxis.width set.Fixed #16275, ticks on the axis weren't displayed when their value was too high.Fixed #16165, border radius disappeared after hovering a point in heatmap.Fixed #13780, tooltip was mispositioned when yAxis was reversed.Fixed #12828, click event on point wasn't working on IE with color axis.Fixed issue #15876, DOM order not following keyboardNavigation.order.Fixed #11756, adding image without optional parameters threw an error.Fixed #15480 and #16052, disabled point markers sometimes appeared on redraw with accessibility module loaded.Fixed #13683, the last row of items in a paginated legend was not fully visible in edge cases.Fixed #16004, a regression causing shared tooltip not to show for some axes with multiple differently positioned axes.Fixed #16245, automatic minRange did not consider floor/ceiling.Fixed #12961, the chart crashed when axis.tickInterval was negative.Fixed #15117, pointStart and pointInterval did not work with turboed 2d array data.Fixed #16143, offline exporting hidden boosted series threw error 28.Fixed #16176, funnel data labels with rotation set showed console error.  Highcharts v9.2.2 (2021-08-24) # Added internal support for Google Sheets API v4, fixing stability problems with loading data from spreadsheets.  Upgrade notes Existing setups with Google Sheets stopped working in August 2021 as Google phased out version 3 of their Google Sheets API. Highcharts has now been upgraded to version 4 of the API, but this will not work unless an API key is given in the data.googleAPIKey option. See the comprehensive tutorial from Hands-On Data Visualization on how to obtain the key. Additionally, data.googleSpreadsheetWorksheet is deprecated and replaced by data.googleSpreadsheetRange, which allows for more detailed instructions on what data to load.  Bug fixes Fixed #16231, a regresssion in v9.2 causing exporting not to work with styledMode enabled.  Highcharts v9.2.1 (2021-08-19) #   Bug fixes Fixed additional case for #15235, nested whitespace got removed in HTML.  Highcharts v9.2.0 (2021-08-18) # Improved ES module architecture with support for tree shaking of the most commonly used modules. See #8667.Added new feature, series.relativeXValue, allowing point X values to be relative to the series.pointStart and subject to series.pointInterval and series.pointIntervalUnit.  Bug fixes Fixed #15938, charts still crashed in some legacy browsers where Intl was missing.Fixed #15235, whitespace between HTML elements got removed.Fixed #15986, accessibility exit anchor disappeared on Chart.update.Fixed #15229, accessibility region labels were sometimes duplicated.Fixed #16119, touch scrolling was blocked after zooming when single-finger panning was not enabled.Fixed #16146, negative values broke sunburst chart.Fixed #16153, fontFamily reset when updating chart.style.Fixed #16126, printing chart in full screen with accessibility loaded threw.Fixed #16112, axis options set by setOptions were not picked up by polar chart when chart axis options were set as an array.Fixed #16104, chart warned about unsorted data when updating category names.Fixed #14143, #14434, #13310, tooltip with stickOnContact and useHTML or outside enabled did not work properly.Fixed #16080, #13705, sankey chart with self-referential points broke on redraw.Fixed #16084, #13671, updating timeline chart did not work properly in some cases.Fixed #15334, some waterfall data labels did not show for points below threshold.Fixed #16062, lines after the first line break in text with useHTML set to true were misaligned in exported charts when exporting.allowHTML was set to false.Fixed #16053, color axis disappeared after toggling legend.Fixed #16044, draggable point guide box was not big enough when the point was partially outside the end of the axis.Fixed #16042, 1px gaps showed between some xrange points when there was no gaps in the data.Fixed #1441, datetime axis ticks did not get date/time formatting applied when tickPositions were set.Fixed #15777, plot line labels were not clipped.Fixed #13840, 3d column chart with scrollbar showed points outside plot in upper left corner.Fixed #15983, event did not get removed when updating it to undefined.Fixed #15973, word cloud focus border position for rotated points was wrong in Firefox.Fixed #12015, linked series did not get inactive state applied when hovering legend item.Fixed #15946, unchanged markers set in options did not animate when updating data through update.Fixed #15449, HTML in exporting menu item text did not work.Fixed #15922, heatmap data labels with useHTML enabled and default formatter did not work, per-point borderColor and borderWidth did not work.Fixed #15902, legend proxy buttons did not update when updating series.Fixed 3d bug, z-axis updated twice on Chart.update.Fixed #15862, Chart.update with oneToOne attempting to remove pane threw.Fixed #9047, boosted series with null points showed warnings in some browsers.Fixed #5430, marker shown on hover with disabled markers missed CSS class.Fixed #15909, pie point with visible set to false and useHTML data labels threw.  Highcharts v9.1.2 (2021-06-16) # Exposed Point.doDrilldown and Axis.drilldownCategory as official API methods.  Bug fixes Fixed #15841, a regression causing charts to crash some browsers where Intl was missing.Fixed #15869, boosted rendering sometimes crashed with multiple different chart types.Fixed #15845, selection marker showed without mousedown after export.Fixed #15843, shared tooltip with stickOnContact enabled did not always update position.Made default pattern-fills more subtle and usable. Changed accessible-pie demo for better pattern handling.  Highcharts v9.1.1 (2021-06-04) # Added new option for bullet chart, targetOptions.borderRadius. See #15649.Improved legend accessibility by placing legend buttons in a list.  Bug fixes Fixed #15401, console warning when loading funnel 3D module, tableValues invalid attribute.Fixed #15757, heatmap.borderRadius did not work.Fixed #14780, offline exporting charts with HTML content to PNG or JPEG fell back to the export server even in browsers that supported it.Fixed issue with extraneous table caption HTML encoding in the export data module.Fixed #15701, tooltip text alignment broke when setting font size.Fixed #15811, setting title.verticalAlign to middle did not vertically center the title completely.Fixed #15667, scatter line showed on hover after updating lineWidth to 0.Fixed #15639, error when calling removePlotBand after destroying Axis.Fixed #9612, panning after zooming sometimes broke with pointPlacement set to on or between.Fixed handling of local time with Safari 14.1.Fixed #15771, drilldown failed when points were cropped from the start of the series.Fixed #14403, tooltip covered interactive elements like the legend, buttons or annotations. Added a CSS class, highcharts-no-tooltip that can be applied to elements to prevent the data tooltip covering them.Fixed #15746, heatmap select state color did not work correctly.Fixed #15708, heatmap null points missed highcharts-null-point class.Fixed #15698, Highcharts instance was accessed incorrectly on error.Fixed #15325, panning multiple axes did not work.Fixed #15685, boosted scatter chart with empty first series rendered ghost points.Fixed a scrollablePlotArea regression, tooltip did not show sometimes.Fixed #15646, zones with no color set were invisible in boosted chart.Fixed #15640, legend items lost disabled state on keyboard navigation.Fixed #15654, shadow offset did not get applied on inverted charts.Fixed #15636, draggable point guide box was not big enough when the point was not fully inside.Fixed #15607, random stack labels with the value 0 showed when zooming in.Fixed #15521, inactive state remained on points after exiting chart with keyboard navigation.  Highcharts v9.1.0 (2021-05-04) # Added text to axis label context, making it possible to insert the default formatting inside labels.format.Added additional item object context for lang.accessibility.legend.legendItem.  Bug fixes Fixed #14966, selected null points generated NaN values in the SVG.Fixed #9549, column drag handle was not visible with reversed Y axis.Fixed #15291, inconsistent addition of symbols definitions in the SVG renderer.Fixed #15528, labels.allowOverlap set to false stopped working for axis tick labels after update.Fixed #11493, #13095, tooltip showed outside axis and plot bounds.Fixed #15520, space key fired legend item click twice in Firefox.Fixed #15523, negativeColor did not work for lollipop series.Fixed #15525, clicking data label did not drill down line and area series.Fixed #15560, dumbbell connectors remained visible after changing series type when markers were not rendered.Fixed #15555, removing dependency wheel points during animation threw.Fixed #15547, bullet target disappeared when combined with rounded-corners plugin.Fixed #15537, some data updates while dragging point threw.Fixed #13943, split tooltip was rendered to wrong side on smaller charts.Fixed #15534, updating area series containing null data to no data threw.Fixed #15509, <u> tag not working with useHTML.Fixed a regression, area series with empty data caused SVG error.Fixed #15488, square shape did not support rounded corners.Fixed #15489, polar spline series with null data did not render path.Fixed #15416, #15413, heatmap keyboard navigation not working after mouse interaction, and backwards navigation not working as expected.Fixed #15343, regression with treemap and sunburst keyboard navigation.Fixed #15447, wordcloud keyboard navigation, and added support for making the chart container a separate tab-stop.Fixed #15463, legend symbolWidth did not correctly default to symbolHeight.Fixed #11336, no tooltip showed when hovering very small chart.Fixed #15436, previous legend items remained visible after dynamically adding color axis.Fixed #15434, plot band was not completely hidden when hiding series.Fixed #15438, polar chart with null data and accessibility module loaded threw.Fixed #15420, series with zones or negativeColor enabled leaked memory on update.Fixed #15412, some charts showed non-passive scroll-blocking warnings.Fixed #10464, halo position was wrong when using boost with multiple axes.Fixed #15392, boosted chart with empty data showed turbo warning.Fixed #15382, updating polar column to zero value did not work.Fixed #15377, inactive state with 0 opacity applied due to inactiveOtherSeries being true did not work for data labels and connectors.Fixed #15359, wrong BubbleLegend color in styledMode.Fixed #14882, stacked area and connectNulls sometimes did not work correctly together.Fixed #14906, split tooltip flickered with followPointer enabled.Fixed #15160, inactive state was not always cleared on touch devices when clicking outside the chart.Fixed #15188, added error display fallback to the most recently added chart for debugger module.Fixed event handler leaks in fullscreen module, flags series and scrollablePlotArea.Fixed #15018, tooltip split, outside and useHTML did not work together.Fixed #13449, updating dataLabels.allowOverlap did not work.Fixed reset zoom and drillup button alignment after plot size changes, button alignment did not update when the plot size changed due to hiding or showing elements such as legend or title.Fixed #15179, crisping did not work correctly for subpixel radius markers.Fixed #15260, networkgraph point className option did not work.Fixed #15162, in styled mode, the font-size of the subtitle was not used like defined in Sass file.Fixed #15234, #15213, #13492, #2022, axis options passed in when creating chart got mutated.Fixed #15217, bar chart tooltip position was wrong with centerInCategory enabled.Fixed #13646, the color option did not take effect in empty pie series.Fixed #13572, area series fill was not closed, making it hard to add a stroke for the area itself.Fixed #11687, drillUpButton did not have a fixed position when using scrollablePlotArea.Fixed #15134, updating networkgraph series color did not work.Fixed #14980, toggling stacking with centerInCategory enabled did not work.Fixed #15145, some data labels did not show in percent stacked bar or column charts when points were partially outside axis extremes.Fixed #9998, exporting menu was clipped below the chart.Fixed #10159, updating treemap data while traversed down threw.Fixed #11293, boosted chart rendered duplicate series when combined with responsive options.Fixed #15069, panning default type was missing.Fixed #14439, simulation of packedBubble stopping too early.Fixed #14448, #11614, drillup button disappeared when combined with a vertical scrollablePlotArea on inverted charts.  Highcharts v9.0.1 (2021-02-16) # Exposed Highcharts.AST and provided samples of overriding the HTML allow lists.Auto compute heading level for the pre-chart accessibility description.Added success callback for exportChartLocal, see #11403.  Bug fixes Fixed #12422 and #9124, un-boosted graphics remained visible after resetting zoom on boosted charts when using zones.Fixed #12517, resetZoomButton did not show when using scrollablePlotArea.Fixed #15045, centerInCategory did not work with columnrange series.Fixed #11909, updating boost options did not work.Fixed #12031, tooltip distance did not scale correctly with outside set to false.Fixed #12047, some columns were not completely vertical when using boost with useGPUTranslations set to false.Fixed #12061, stroke-width animation did not work when using zones.Fixed #13222, chart size was wrong after exiting fullscreen.Fixed #15022, vertical panning was limited to the first series extremes after zooming in.Fixed #15037, a regression causing failure with text parsing in PhantomJS.Fixed #8862, #12112, y-axis did not stay fixed after update when using scrollablePlotArea.Fixed #15009, setting className on points in venn series did not work.Fixed #12548, 3d scatter chart rendered no points when the first point had z set to null.Fixed #14973, pattern fill failed to render when <base> tag was present and window.location was manipulated via history.pushState.Fixed #14395, updating colorAxis legend layout did not work with non-cartesian series.Fixed #14954, offline export with styledMode enabled sometimes failed in IE.Fixed #14110, hovering labels with useHTML set to true threw in IE.  Highcharts v9.0.0 (2021-02-02) # Improved security by filtering all HTML configuration strings and abstract syntax trees through allow lists before inserting into the DOM.Added support for area series in 3D charts.Added new feature chart.zoomBySingleTouch to provide optional mouse-like selection zooming for touch devices. See #14775.Added accessibility support for legend title #(14872) and provided more intuitive legend item labels for assistive technology (#14837).  Upgrade notes Due to improved security, some tags or attributes may be removed from HTML configuration options like labels or tooltip formats and formatters. Read more in the docs on how to allow them.  Bug fixes Fixed #14138, tooltip was displayed outside plotArea for columns when they were exceeding yAxis extremes.Fixed #13490, point hovering effects such as tooltip stopped working after disabling chart.polar with update.Fixed #10322, limit local timezone to timestamps without timezone.Fixed #14910, centerInCategory broke after zooming twice.Fixed #8095, reset zoom button was not visible after drilldown.Fixed #14893, removed misleading default value in the labels.format docs.Fixed #11494, setting z-index on tooltip with outside set to true through chart options was not possible.Fixed #14351, solidgauge pane flickered on update.Fixed #14771, incorrect tooltip position on inverted chart with adjusted axis width.Fixed #14053, plot bands added before update with redraw set to false were not added when dynamically adding plot bands between the update and a redraw.Fixed #14148, waterfall chart with reversed yAxis rendered wrong stacking connectors.Fixed #14209, histogram after setData with empty array wasn't updated.Fixed #14876, minPointLength columns did not show for series with only zero values when combined with series with only negative values.Fixed #14834, colorAxis ignored reversed option set in chart config on update.Fixed #14793, Z axis broke on update.Fixed #14833, column series axis breaks did not render correctly.Fixed #14283, problems with dynamically updating the color axis visible property.Fixed #14858, left and right-aligned callout labels with the anchor above or below sometimes missed anchor lines when there was no room for a chevron.Fixed #13220, #12788, #12489, #11975, wrong pointer position after changing size or scale on a parent element. Chart.reflow now needs to be called after scale changes and Chart.updateContainerScaling has been removed.Fixed #14305, original chart options got mutated on update.Fixed #14830, exporting waterfall chart with stack labels and hidden series threw.Fixed #8635, zooming variwide chart did not work.Fixed #8742, some stackLabels did not render with dataLabels enabled.Fixed #8795, hovering the chart after zooming in and using setData with redraw set to false threw.Fixed #14549, incorrect clip-path for added axis.Fixed #13283, an issue with the data module's CSV parser. Hex colors (and any other strings following a hash) were treated as a comment and ignored.Fixed #14769, axis label formatter was called with NaN values when the axis was short and series consisted of only null values.Fixed #13996, #13488, pointer position was wrong after chart element was scrolled inside another element.Fixed #14773, styledMode pie series not updating color correctly second time.Fixed a11y issue with absolute positioning, touches #14090.Fixed the initialization of Time.variableTimezone, it caused Time to sometimes return the wrong time when useUTC was set to false.Fixed #14623, Point.colorIndex did not pick up Series.colorIndex updates.Fixed #14584, setting dataLabels.allowOverlap to false did not work properly for sankey series.Fixed #14624, panning.type enabled panning while panning.enabled = false.Fixed #14649, dynamically updating visual attributes on points in flag series did not work.Fixed #14637, setting pointPlacement to between placed line series points on ticks instead of between them.Fixed #14315, setting X axis extremes outside the chart series' data range threw.Fixed #14246, pie point stayed hidden after first legend item click when ignoreHiddenPoint was set to false.Fixed #14236, stacked area chart did not render correctly with the broken-axis module loaded and a gapSize greater than 0.Fixed #13948, exported PDFs containing linear gradients with multiple 0 offset stops had errors.Fixed #13961, datetime axis had missing ticks when Chart.time had half-hour timezone or timezoneOffset set.Fixed #13804, 3d pie animation in inactive tab threw.Fixed #13716, annotations added in responsive rules did not work.Fixed #14746, column chart with null data, datetime axis and useUTC set to false threw.Fixed #14765, Highcharts.patterns global was missing.Fixed #14444, boosted inverted chart had wrong clip-path.Fixed #14244, tooltip in column-based series with multiple xAxis had wrong position.Fixed #14362, no animation when a series was added dynamically.Fixed #14426, it was not possible to pan vertically to 0 after zooming.Fixed #14458, drilling down 3d chart points with the same name threw.Fixed #14425, last histogram bin sometimes had inaccurate x2.Fixed #14417, charts displayed parts of the data when min or max exceeded extreme values.Fixed #14397, networkgraph simulation restarted on series.update().Fixed #14078, all points rendered in all series with boost.usePreallocated on.Fixed #14428, enabling drilldown through Point.update() did not work.Fixed #14214, parliament chart (item series type) threw error on negative values. Negative values should be ignored like in the pie series.Fixed #14433, dependency wheel data labels had wrong position for items covering more than 180 degrees of the wheel.Fixed #14260, series graph color was affected by marker.fillColor in Boost.Fixed #14289, histogram series entered an infinite loop when passed certain data values.Fixed #14379, when scrollablePlotArea was enabled, gauge axis was not scrolling along.Fixed #14440, ColumnRangeSeries missed adjustForMissingColumns.Fixed #13277, event listener leakage in several series and export module.Fixed regressions with chart.update and chart.setSize, causing side effects like stacks not updating and series not.Fixed #14023, for small numbers and decimals argument set to zero, the numberFormater returned wrong values.Fixed #13957, added error handler while mixed series data in boost.Fixed #14883, prototype pollution was possible through the merge function.  Highcharts v8.2.2 (2020-10-22) #   Bug fixes Fixed #13811, Point.partialFill didn't override Series.partialFill.Fixed #14356, offline PDF export failed for larger datasets.Fixed #14352, wrong button text displayed when chart initialized with a table.Fixed #14349, first point being null broke the accessibility screen reader.Fixed #14366, error in boost module on older Windows installations.Fixed #14050, error when passing empty dataLabels array columnrange and related series.Fixed #14298, Chrome complained about touch events not being cancelable when calling preventDefault.Fixed #14310, addPlotBandOrLine didn't check if the axis was visible before rendering.Fixed #14278, first point was highlighted on long touch when the accessibility module was loaded.Fixed #13956, annotations had the wrong position for resized Y axis.Fixed #14230, chart.update failed to update time options in some cases.  Highcharts v8.2.0 (2020-08-20) # Internally reorganized source file structure and naming.Added defer as animation parameter, see #12901. This allows for granular deferring of series animation, labels etc.Added toggle feature for the data table in the export-data module. See #13690.Added support for configuring sonification options in the chart configuration, as well as support for disabling individual series, configuring master volume, and inverted polarity mapping. Note that chart configuration options are still considered experimental and may change.Added new option, time.moment, allowing the moment.js library to be used without being available in the window context.  Upgrade notes The file structure of ES modules has changed. This has no consequences when using master files as advised (like http://code.highcharts.com/es-modules/masters/highcharts.src.js), but may break when loading module files directly.  Bug fixes Fixed #13694, threshold wasn't respected when low was defined.Fixed #13553, exception on negative X values on logarithmic axis.Fixed #13737, a regression causing chart zoom to conflict with the browser's drag-and-drop behaviour.Fixed #13710, a regression causing errors on empty pie series.Fixed #13726, img and br tags in data labels not being proper XHTML on SVG export.Fixed #13538, softThreshold not working as expected when a threshold was set.Fixed #10555, scrollablePlotArea not rendering correctly on FireFox.Fixed #12959, #13937, drilldown did not work on treemap and sunburst series after update.Fixed #13789, incorrect arearange path on polar chart when the connectEnds option was set to false.[object Object].Fixed #13736, draggable annotations did not work on touch devices.Fixed #13707, view table link should be a button.Fixed #13864, better accessible legend item labels.Fixed #13729, focus issues with shift+tab.Fixed #13971, missing Series imports preventing some builds from the Download Builder to work.Fixed #13532, a regression in 8.1.0 causing annotations of type "label", "circle" and "rectangle" not to be editable.Fixed #13762, missing xAxis labels on a polar chart when the useHTML option was set to true.Fixed #13846, data labels were initially hidden in some pie chart instances due to overlapping detection.Fixed #12868, drag zoom was not working on multiple charts after scrolling.Fixed #13785, wrong CSV output for data without defined y value.Fixed #13771, polar chart tooltip was hidden when point value was equal to max.Fixed #13570, updating chart and networkgraph series simultaneously threw errors.Increased precision of sonification duration.  Highcharts v8.1.2 (2020-06-16) #   Bug fixes Fixed #13708, a regression breaking Highcharts.keys.Fixed #13680, chart.addSeries failed after calling chart.setSize on a chart with no data.Fixed #13698, a11y not working properly with user tabindex.Fixed #13674, a regression in v8.1.1 causing pie drilldown animation not to work.Fixed #13576, a regression causing drag and drop to fail for some values in the boxplot series.Fixed #13681, reference to global Highcharts scope in module mode made some modules crash when loaded as ES modules.Fixed #13608, a regression causing parallel axes to lose their positions after update.Fixed #13629, the innerSize of a pie series was set to 0 when there was also an additional gauge series.Fixed #13327, pattern fill was incorrect after chart export in Safari.Fixed #13641, legend click on mobile sometimes failed with accessibility module enabled.  Highcharts v8.1.1 (2020-06-09) # Added new option, plotOptions.column.centerInCategory. It centers columns within each category group, but avoiding gaps for null or missing points.Added deprecation error handling.Added support for selecting and dragging parentNode in the packed bubble series. See #11782.  Bug fixes Fixed #13559, no JavaScript execution should be allowed from chart configuration strings, except from callbacks like event handlers and formatters. This prevents JavaScript from being injected from forms and other inputs relaying directly to text properties in the chart config.Fixed #13541, chart.update with oneToOne failed when removing and adding series, if all series had explicit id's.Fixed issue with JS errors and malfunction on drill-up button on touch devices when the accessibility module was loaded.Fixed #12804, in sunburst charts, the drill-up button was visible after drilling up to the top level.Fixed #13554, a11y not supporting proximate legend layout.Fixed #13534, dragging points caused an error on iOS.Fixed #13369, edge case where ticks were different after changing series visibility.Fixed #13293, added the X value in exported data table if the point had defined name and xAxis was not a category type.Fixed #13590, CSS classes not being removed correctly, causing unwanted behaviour in pie chart hovering and unhovering.Fixed #13309, PDF exports always having landscape orientation when using the offline-exporting module.Fixed #13574, packed bubble size changed when other series were added.Fixed #13372, drilldown in horizontal item series was not allowed.Fixed #13420, adding annotation was not working on iOS devices.Fixed #13202, the lollipop series didn't work with all data formats.Fixed #13371, unable to display data labels in item series without setting series size.Fixed #12077, histogram long decimals crashed browsers.Fixed #13342, tooltip tracking was broken after height update.Fixed #13379, item series with no data threw an error.Fixed #12569, point hover state was lost when axis updated.Fixed #11501, 3D pie was not correctly exported to PDF with offline export.Fixed #13071, unnecessary network request in IE11.Fixed #13489, Chart.print() was not working correctly with highcharts-more.js (specifically network graphs) included.Fixed #13482, unable to disable markers in styled mode with a11y.Fixed #13463, closing export menu using ESC key should not move focus.Fixed #11750, series.opacity option was not respected when creating or updating series.Fixed #13308, empty space appeared on top and bottom of sankey chart when using the minLinkWidth option.Fixed #13375, events were not added to dynamically created plot bands and lines.Fixed #13421, animation was fired when zooming boosted series.Fixed #13353, item series - when rendered in a full circle, points overlapped.  Highcharts v8.1.0 (2020-05-05) # Added vertical panning to Highcharts. The chart.panning.type now accepts y directions.Added box options for yAxis.stackLabels: backgroundColor, borderWidth, borderRadius and borderColor. See #13330.Added new series label options, series.label.format and series.label.formatter.Added individual dash style settings for various parts of box plots. See #13065.Added language options for export-data table text, see #13166.Added ability to set markers of heatmap points to a custom shapes defined within SVGRenderer.prototype.symbols object, see #12508.  Upgrade notes The Axis class was refactored as part of the TypeScript migration. Axis extensions like log axis, broken axis, parallel axis, datetime axis and ordinal axis are now handled as compositions. Instead of adding multiple properties to the main axis instance, they now add a single object that holds all properties. This does not affect the options API, but it may affect implementations that are based on some of our samples that used the original properties. Our samples have been updated to use the new structure.For added type safety, we are now defining SVG path definition as two-dimensional arrays, or in TypeScript sense an array of tuples. So ['M', 0, 0, 'L', 100, 100] in the new implementation should be written [['M', 0, 0], ['L', 100, 100]]. We built in a converter for old paths, but there may be cases, like for example directly accessing SVGRenderer.crispLine, where it breaks.  Bug fixes Fixed issue with missing accessibility options in the API.Fixed #12767, exported data table had wrong points categories.Fixed #13305, focus border not updated with scrolling points.Fixed #11500, stack labels had a wrong position after moving X axis or Y axis.Fixed #13332, 3D column not working on IE browsers. Fixed fillSetter in cuboid methods.Fixed #13310, HTML tooltip did not stick on pointer contact when activated.Fixed #13136, couldn't set yAxis.tickAmount when the chart size was small.Fixed #13098, wordcloud animation options didn't work.Fixed #12656, drilldown points were wrong after click on axis label.Fixed #13204, multiple yAxis labels were not centered over the gridlines when rotation was set and alignTicks was enabled.Fixed #8280, 3D column zIndex was wrongly calculated on wide screens.Fixed #13101, pie with negative values threw error on drilldown.Fixed #13226, tooltip prevented interaction on other chart elements.Fixed #13169, a regression causing packed bubble's initial simulation not to work smoothly.Fixed #12163, width of button was not updated when the font weight changed. Also fixed #12165, errors on setting the button width to null.Fixed #13161, stacking was erroneously applied on xrange.Fixed #5999, point.color was not respected for boosted series.Fixed #13134, lollipop misaligned on errorbar series.Fixed #12979, console errors when updating an axis at the same time as updating a related annotation.Fixed #11928, 3D pie was misplaced after calling Series.update.Fixed #13110, chart.sonify was no longer working after v8.0.1.Fixed #13069, histogram produced the wrong number of bins when baseSeries was filled by points with negative values.Fixed #12027, print was not working correctly in packed bubble charts.Fixed #12991, scrollablePlotArea.minHeight was not responsive when changing window height.Fixed #13100, in organization charts, node data labels disappeared in some cases.Fixed #12883, legend pagination was not working correctly when the accessibility module was included.Fixed #13001, scrollablePlotArea not inheriting chart style. Also applied chart styles to tooltip container when tooltip.outside is true.Fixed #13070, annotation was not draggable when HTML label was used.Fixed #13077, the point.isInsidePlot method didn't handle polar charts.Fixed #11635, scrolling didn't trigger hiding of the tooltip when the cursor left the chart's container.Fixed #12091, could not update series shadows without disabling them first.Fixed #12994, tooltip.hideDelay of 0 was causing unexpected tooltip behavior.Fixed #11397, incorrect position of the focus border on text elements.Fixed issue with crosshair wrong position with shared tooltip, see #13002.  Highcharts v8.0.4 (2020-03-10) # Added new option, tooltip.stickOnContact, to allow the tooltip to stick when
 hovering it with the mouse or when touched.  Bug fixes Fixed #13042, getTimezoneOffset callback passed inconsistent value type.Fixed #13018, the vertical axis line and labels were incorrectly positioned when the pane.startAngle, xAxis.angle (inverted chart) or yAxis.angle (non-inverted chart) were set.Fixed #9682, touching legend prevented page scroll.Fixed #12870, hover point is not displayed when boost module is enabled.  Highcharts v8.0.3 (2020-03-05) #   Bug fixes Fixed #13053, a regression that removed the compatibility feature of calling Highcharts.Color without the new keyword.Fixed issue with wrong clipping during series animation when the chart was subject to responsive rules.  Highcharts v8.0.2 (2020-03-03) #   Bug fixes Fixed #13056, the highcharts-3d.js file was not compiled and distributed to code.highcharts.com and npm.  Highcharts v8.0.1 (2020-03-02) # Added new option for polar charts, pane.innerSize.Removed the experimental "Open in Highcharts Cloud" menu item of the export-data module.Added pie series dataLabel x and y position per point, see #12985.Added new option annotations.labelOptions.accessibility.description.Added accessibility functionality for annotations. Also added new option accessibility.point.valueDescriptionFormat.Added support for useHTML property to rotated data labels.Changed the default inactive.opacity for venn diagrams to ease perception, see #10663.Added new option pattern.patternTransform that allows SVG patternTransform functions on a pattern.Fullscreen module added. Allows using the chart.toggleFullscreen() method.Automatically dismiss popup content, such as tooltips, when user presses ESC key.Changed the behavior of keyboard navigation. It no longer opens export menu automatically, but sets focus to the button.Improvements to sonification.Introduced the new options plotOptions.series.custom, series.custom, and series.data.custom to store additional data for custom formatters and custom event callbacks.  Upgrade notes The Highcharts.Color constructor will not work without the new keyword. Use either new Highcharts.Color or the Highcharts.color factory.  Bug fixes Fixed wrong x-range drag handles issue with multiple series, see #12878.Fixed #12934, responsive rules didn't work for drill-up button initially.Fixed #12949, using multiple drilldown with data sorting threw an error.Fixed tooltip position on sankey diagram links and nodes when tooltip.followPointer was false.Fixed #12926, dumbbell marker was incorrectly colored after mouse out when series.marker.fillColor was defined.Fixed #11917, errors and failed rendering of sankey chart if the number of nodes was too great. Fixed by reducing the nodePadding below its setting to allocate space for all nodes.Added new option, annotations.shapes.src, see #12890.Fixed issues with tooltips and scrollable plot area. See #12416 and #12498.Fixed #11993, wordcloud looked incorrect after running setData().Fixed #12566, in the data module, empty points should be parsed to null instead of undefined.Fixed #12812, high contrast mode not detected in new Edge.Fixed #12666, node render to null increase the sum by set weight.Fixed #12514, data label position for column pyramid with 0 value.Fixed issue with wrong axis options after drilldown to treemap series, see #12326.Fixed #10162, RTL text was covered when using a text outline.Fixed issue with updating legend's font-size, see #12705.Fixed issue with pie series update to 3d, see #12714.Fixed #11148, a point should not be trackable when is out of his pane. Also, isInsidePlot() works for panes now.Fixed #12718, markers invisible on chart update from null points with a11y module.Fixed #12690, a11y module caused render issues for 3D funnel.Fixed issue with not visible column data label when a point has a small value, see #12688.Fixed #12711, missing border and background for split tooltip's header in styled mode.Fixed #12513, deselecting previously selected nodes did not work for networkgraph series.Fixed #12156, added series.inactive.enabled option to disable inactive state.Fixed #12453, node with 0 value was rendered on the Sankey and dependency wheel.Fixed #12424, enabling network graph series in legend used to throw errors.Fixed #12515, updating depth in 3D pie chart did not work.Fixed #4369, 3D columns had wrong zIndex with long charts.Fixed issue with disabled animation for empty pie, see #12619.Fixed issue with tooltip wrong position on a bar chart when xAxis top or height set, see #12589.Fixed #12648, datetime axis ticks were wrong in Indian time zone when close to the DST crossover.Fixed #12627, legend items in pie chart overlapped on drilldown.Fixed #5508, data labels were wrongly positioned on inverted 3D charts.Fixed #12484, drag markers for columns were not showing when highcharts-3d and draggable-points were loaded.  Highcharts v8.0.0 (2019-12-10) # Added new series type, radial bar chart. Under the hood, this is a column series in an inverted and polar chart.Added data sorting with animations on update.Added marker clusters  for scatter and map point series.Added new option accessibility.linkedDescription.Added new accessibility options with more flexibility for customizing the hidden screen reader regions. See #12095.Added flame chart demo.  Bug fixes Fixed #12053 and #12152, pattern fill issues. Introduced color.patternIndex option.Fixed #7255, trying to printing chart again, after cancelling in Safari, elements other than chart were not hidden.Fixed #12488, selection zoomed to wrong area in the Treemap series.Fixed issue with wrong extremes for bubble series when xAxis.max set, see #12543.Fixed #12549, disabling keyboard nav still added container tabindex.Fixed #12438, a regression causing the reset zoom button not to work with the a11y module on mobile.Fixed #12462, filename with forward slash (/) not being replaced with safe character when exported. Now replaced with -.Fixed issue with data labels visible despite point placed outside the plot area, see #12370.Fixed #12343, noData message was not visible with gauge series. Added 1 as default zIndex to render the message in front.Fixed #12500, updating dataLabel color from contrast to a different one was not working.Fixed #12459, annotation's control points were not draggable.Fixed #12425, updating sunburst series used to disable traversing.Fixed compatibility issues with menu navigation for screen readers.Fixed #12161, legend textDecoration hidden style not working on IE11 with accessibility module enabled.Improved handling of null point accessibility.Fixed #12090, a11y module broke legend navigation.Fixed minor bugs with keyboard navigation.Fixed #12434 and #12097, regression in venn series label positioning causing JavaScript error.Fixed #12445, updating borderColor and borderWidth didn't work for solid gauge series.Fixed #12421, high contrast mode used to throw errors when the colorAxis module was not loaded.Fixed #12390, not overlapping dataLabels after zoom in and zoom out were hidden.Fixed #12262, Sunburst did not use 100% of the plot area.Fixed #12374, sankey nodes were rearranged after redraw where the nodes.level option was used.Fixed #12295, null was used as event listener in drilldown module, which caused a JavaScript error when called.Fixed #12335, memory leaks in polar series after updating data set.Fixed #12333, setting data in treemap series with points with the same ID's did not render new points.Fixed #12289, sonification timeline issues with multiple charts.Fixed #11617, support tooltip.split with chart.scrollablePlotArea.Fixed #12267, error in waterfall chart when the series was invisible and the first value was below 0.Fixed #12248, the Y axis' range was disturbed on stacked (overlapping) waterfall chart.Fixed #11758, stackLabels in styled mode used to throw errors.  Highcharts v7.2.2 (2020-08-24) #   Bug fixes Backported the fix for #13559, JS execution allowed from chart config, to v7.  Highcharts v7.2.1 (2019-10-31) # Added feature to draw plot lines on radial axes from the inner to the outer radius of the main pane.Added support for combining tooltip.split and tooltip.outside.  Bug fixes Fixed #12222, empty pie series showing lineWidth after hover.Fixed #12223, animating halo for a slice in pie series used to throw errors.Fixed #12243, fill property on pattern fills was applied to the wrong element. Introduced new option, pattern.backgroundColor.Fixed #11644, extremes in color axis were incorrect when using tilemap series with very small values.Fixed #11738, updating treemap series with the same amount of points caused cells to disappear.Fixed #11650, added missing highcharts-tooltip-header classname to the tooltip's header.Fixed #12073, dragging an annotation used to change points' values too.Fixed #7559, error when updating a waterfall with first data value as sum or intermediate sum.Fixed #11776, data labels were not visible in 3D Column series.Fixed #12055, overlapping legend items when combining layout: 'proximate' and useHTML: true.Fixed #12064, redundant spaces separating class names in SVG class attributes.Fixed #12033, error when toggling stacking on area series with nulls.Improved screen reader compatibility for chart export menu.Fixed #11727, logarithmic yAxis with just one label sometimes was rendered with numerical errors.Fixed #11956, pointPlacement did not work for columns with just one category.Fixed #11955, incorrect point positions on inverted chart, when series.pointPlacement was set to between.Fixed #11966, using chart.setTitle() on a chart with scrollablePlotArea misplaced the title.Fixed #11510, points with a relatively very small z value were not displayed in a variwide chart.Fixed #11970, annotation's drag event was not fired.Fixed #11753, invalid label placement broke venn diagrams in certain scenarios.Fixed #11100, 3D columns were not animated on data update.Fixed #11476, inverted variwide chart with disabled X axis labels threw an error.Fixed #11801, dragging annotations did not prevent zooming in.Fixed #11897, combination of pie series and polar chart with panes threw an error.Fixed #11405, plotLines were rendered outside the bottom and left chart edge if the value was the same as the axis extreme.Fixed #11690, removed use of undefined global variable that broke support for ES modules.Fixed #11812, point colors were not changed if colorAxis was added in update.  Highcharts v7.2.0 (2019-09-03) # Added new top-level option, caption. The caption has similar structure to title and subtitle. It renders a chart description below the chart contents, supports reponsiveness and is part of exported charts.Added support for multiple color axes for almost all series.Added high-contrast-light and high-contrast-dark themes with 3:1 contrast against background.  Bug fixes Fixed #11792, error and invalid attributes in organization chart with one point.Fixed #11783, tooltip border and background disappeared when combining tooltip.outside and chart.styledMode.Fixed #7911, axis.reversed should not take effect on a linked axis if the parent axis had a different setting.Fixed #10962, stack labels were misaligned in variwide series.Fixed #11702, error in organization chart with certain relations, plus color was not always applied to nodes.Fixed #11717, loading network graph as ES6 module threw errors.Fixed #11609, prevented reflow of destroyed charts in IE and Edge.Fixed #11546, in packed bubble series parentNodes were missing after chart and series update.Fixed #11199, a regression causing wrong grid line placement in a single-item category axis.Fixed #11469, Series.remove() function didn't work properly with networkgraph and packedbubble series.  Highcharts v7.1.3 (2019-08-14) # Added new minLinkWidth option to sankey series.Added support for label.formatter callback for plot lines and plot bands.Made chart credits accessible to screen readers.Added support for number type in annotation.id, see #10648.Added crop and overflow options for stack labels.Added sensible defaults to plot lines and bands. A plot band can now be initialized with only a value, and a plot band with either from, to, or both.Added new option accessibility.pointNavigationThreshold.Improved keyboard navigation for inverted charts, including bar charts.Added support for Windows High Contrast Mode. A set of styling options are automatically set using chart/series/point update when WHCM is detected. The options automatically match the OS theme, but can be overridden with the new accessibility.highContrastTheme option.Added tooltip.className option for additional custom CSS class.Added support for layout around subtitles with verticalPosition bottom.  Upgrade notes Exact positioning of titles and subtitles with verticalPosition other than top may have changed since last version due to better layout handling.  Bug fixes Fixed #11632, using plotOptions.series.marker.radius for all nodes in a network graph did not prevent them from being cut off.Fixed #7650, hide hover points outside plot area. Fixed #11493, limit split tooltip to yAxis range.Fixed #11513, arearange failed to render when the data started with NaN.Fixed #7650 and #11493, points outside plot area were included as hover points, and were displayed in shared and split tooltip.Fixed #11505, gauge crashed when stacking options were present.Fixed #4024, stacking columns on different xAxis translated columns as in stacking on the same xAxis.Fixed #11329, tooltip transform/scaling issues.Fixed #11386, CSS filters were missing when chart.styledMode was enabled.Fixed #11388, error when applying empty data array to histogram series.Fixed #11389, inactive styles for dependency wheel series in styled mode were missing.Fixed #10542, showing and hiding series now also shows and hides them from assistive technology.Fixed #8608, bubble markers were hidden when Z value was missing.Fixed #11156, draggable did not work with group points and boost module.Fixed #11340, issue with exporting large amounts of data to CSV and XLS.Fixed #10561, issue with legend click on IE11 with a11y module.Fixed #11246, setting crosshair stroke-width in styled mode.Fixed #8735, gapSize did not work in boost mode.Fixed #10285, drag and drop module did not work with logarithmic axes.Fixed #10564, issue with tabbing to legend without chart height set.Fixed #11301, hovering legend item for a hidden series caused other series to get inactive state.Fixed #11169, undefined value was rendered in the loading label.Fixed #11244, series.update({ data }) did not preserve old options if data was passed as an array of objects.Fixed #10896, class name of series label was missing in styled mode.Fixed #11239, updating points in heatmap did not animate fill color.Fixed #11229, negative width and height were applied to heatmap shapes.Fixed #11212, selected state for a node in network graph was applied to all connected nodes.Fixed #11211, calling node.update() in networkgraph series caused errors in console.Fixed #10960, improved touch support on Windows devices.Fixed #11176, removing all nodes and links in a network graph would throw errors with circular data.Fixed #11095, updating data.switchRowsAndColumns worked only the first time.Fixed #11193, downloading the chart as image used to duplicate table created by exporting.showTable option.Fixed #11101, a regression causing crash on responsive chart when reverting to default options.Fixed #9377, added product tags in ES-modules.Fixed #11140, setting series.dataLabels.inside to true forced pie dataLabels to render as in contrast.Fixed #6657, inappropriate contrast color for first and last dataLabel in column/bar series.Fixed #11124, click on a node in networkgraph caused all nodes to reposition.Fixed #10597, issue with series type update after drilldown.Fixed #10861, a regression causing event handlers to pile up when running Chart.update or Series.update with new events options.Fixed #10518, rotation.orientations = 1 in wordcloud series resulted in rotation NaN, which made the SVG rendering of the word crash.Fixed #10498, a regression causing wrong chart width if a parent had transform style.Fixed #11015, removing an annotation did not deselect it, causing errors.Fixed #10522, series.colors was ignored in sunburst.Fixed #10941, null points with the same x-value in stacking were causing wrong offset for other points.Fixed #10984, networkgraph series did not render when loading data from CSV.Fixed #10993, in timeline series, points were visible outside the axis extremes.Fixed #10987, pareto series didn't refresh after updating baseSeries data with less than two points.Fixed issues #10510 and #10594 with pattern fills.Fixed #10930, sometimes data labels were not visible after zooming.Fixed #10961, annotations used to block mouseDown event.Fixed #10717, xAxis.reversed should reverse partialFill on xrange.Fixed #10671, a regression causing crash with responsive chart.spacing settings.Fixed #10699, inactive state was configured wrongly in venn series, causing bad opacity.Fixed #10952, plot background did not scale to scrollable plot area.Fixed #10791, disabled halo feature in Venn series. The docs said it was supported, though it didn't work well.Fixed #10909, subpixel precision caused unwanted space between the area series' area and baseline grid lines.Fixed #10943, TypeScript support for full-screen module (and other modules).Fixed #9099, getSelectedPoints did not include the currently selected or unselected point when called from inside series.point.events.select.Fixed #10874: tooltip wasn't formatted correctly for updated null points.Fixed #10670, heatmap points with zones and colorAxis did not restore colors after hover.Fixed #10323, on timeline series, data label's connector was hidden after setting extremes.Fixed #10524, wordcloud text with multiple words had different alignment than text with a single word.Fixed #10870, regression with Series.update updating marker symbol.Fixed issue with the data module failing on CORS resources.Fixed #10865, image markers in networkgraph used to throw errors in console.Fixed #10708, removed use of Array.prototype.findIndex which would cause Sankey series to break in IE.Fixed #10247, improved data label positions in venn series.  Highcharts v7.1.2 (2019-06-03) # Added new feature, vertically scrollable plot area. This adds native scrolling features vertically, and is enabled using the chart.scrollablePlotArea.minHeight setting.Deprecated the labels option in favor of annotations, see #10429.Added stack labels feature to waterfall series (#3165).Added auto alignment for solid gauges with two labels, see #10635.Improved performance for exporting packedbubble series.Added series.nodes[index].remove() method to networkgraph series to remove a node with all connected links. See #10565.Added support for percentage value in yAxis.labels.distance option for gauge series. See #10587.  Bug fixes Fixed #9269, problems with grid axis update. Modified the columns logic in GridAxis to only add one column (the master) to the public axes array, and the remaining to an internal columns array.Fixed issue with wrong clipping of inverted scrollable plot area (see #10786).Fixed #8607, tooltip was masked at the edges of the chart when chart.scrollablePlotArea was active. Changed the tooltip.outside option to default to true when using scrollable plot area.Fixed #10741, overlapping networkgraph points were dissappearing.Fixed #8417, stacked columns were overlapping after update to 3D.Fixed #9396, could not disable series label animation. Animation is now set to 20% of series.options.animation duration initially, and equal to chart.options.animation on updates.Fixed issue with sorting of events when addEvent was called with parameter options.order value of undefined.Fixed #3881, plotOptions.series trumped plotOptions[type] in chart instance options.Fixed #10669, sunburst didn´t show error when duplicate point id's were used.Fixed #8897, 3D columns were not visible when first series was initially hidden.Fixed #10491, responsive rules were ignored when `colorAxis` updated.Fixed #10737, exporting sunburst's data to CSV did not include points with the same name.Fixed #10713, initializing annotations in responsive rules didn't work.Fixed #9198, zones and negative color were not applied after series.setData.Fixed #10712, solid gauge data labels rendered below center by default. They are now vertically centered. Changed dataLabels.y default to 0.Fixed #10715, column collapsed after drilldown when the X axis labels became longer.Fixed issue with accessibility features not working for series without markers.Fixed #10696, sometimes series animation was missing when updating points via Series.setData().Fixed #10361, a regression causing clipping of the export menu below the chart.Fixed #10646, plotOptions.column.minPointLength drew zero points as negative.Fixed #10062, packed bubble series ignored lang.thousandsSep.Fixed #10630, null point was drawn in solid gauge.Fixed issue where accessible proxy buttons were wrongly positioned in some browsers.Fixed #10625, setData() in networkgraph series caused simulation to run from the initial state.Fixed #10637, the accessibility module increased the chart size.Fixed #10624, updating sankey while hovering a link caused errors.Fixed #10633, panning on mobile devices did not work when xAxis.max or xAxis.min options were set.Fixed #10628, adding annotations in chart's callback threw errors.Fixed #10572, dataRefreshRate didn't work properly for Google Spreadsheets.Fixed #10574, connectNulls could not be disabled in area with percent stacking.Fixed #10536, setting time on a chart instance altered global time.Fixed #10571, split tooltip didn't change stroke color while hovering when points in a single series had different colors.Fixed #10569, regression that caused missing series line after removing zones.Fixed #10516, extreme large zoom in Chrome did not render yAxis labels after zooming out.Fixed #10482, enhancement demo to adding points and lines.Fixed #10540, pie series did not animate slices when toggling legend items.Fixed #10545, networkgraph.dataLabels.linkTextPath did not remove artifical border around label.  Highcharts v7.1.1 (2019-04-09) # Added new option, chart.scrollablePlotArea.opacity, to control opacity of the scrollable mask. See #10416.  Upgrade notes Changed default states.inactive.opacity for map and mapline series to prevent dimming map shapes.  Bug fixes Fixed #10432, missing category name in tooltip when using boost module.Fixed #10466, reset zoom button moved offscreen when using scrollablePlotArea.Fixed #10471, pareto series wasn't rendering when baseSeries was set to first series by 0 number.Fixed #10496, data labels animated when series animation was turned off.Fixed #10504, after deselecting a column, inactive state was used instead of normal state.Fixed #10506, named colors did not work in boost mode.Fixed #4608, boost module highlighted wrong point on hover when chart was inverted. Added support for reversed axes in boost.Fixed #5268, series.threshold = null was ignored in boost mode.Fixed #6963, boost with enabled useGPUTranslations rendered incrorrectly when yAxis was logarithmic type.Fixed #9795, updating chart.spacing didn't reflow all elements.Fixed issue with range selector and time zones, test results were different depending on time zone.Fixed performance issue with sankey chart.  Highcharts v7.1.0 (2019-04-01) # Added Organization Chart series type.Added Item Chart series type for visualizing item counts and parliaments.Added Dependency Wheel series type.Added Timeline series type.Added 3D Pyramid and 3D Funnel series types.Accessibility - improved experience for screen reader users, support for dynamic data and drilldown, as well as support for voice input software.Added inactive states to series and points, allowing other series to be dimmed when the user is hovering the data or legend. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.Added levels to sankey series.Added annotation.events: add, afterUpdate and remove.Added full screen capabilities to exporting module.Added option series.treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.Added options plotOptions.sankey.borderWidth and sankey.borderColor for sankey nodes.Added force directed algorithm for improved packing of packed bubble charts.Added support for nested packed bubbles.Added Verlet integration for network graphs. Generally improved network graph algorithms.Added data labels to links in network graphs.  Upgrade notes Changed default X axis tickWidth option. Now tick marks are not rendered by default on category axes. Set the tickWidth to 1 to bring back the old behaviour.Renamed plotOptions.treemap.drillUpButton to traverseUpButton.The new inactive state makes other items dim when hovering a series. To bring back the old series dimming behavior, set plotOptions.series.states.inactive.opacity to 1.  Bug fixes Fixed #10009, wrong tooltip size with useHTML and varying text lengths.Fixed #10010, series.update destroyed points and lost their event handlers.Fixed #10031, long dataLabels for pie with useHTML: true, were generated with width less than 0.Fixed #10052, chart printing failed with error on IE11.Fixed #10055, exporting custom annotation did not work for other types than SVG.Fixed #10063, proximate legend layout did not account for axis top setting.Fixed #10081, chart with parallelCoordinates was not resizing properly after update.Fixed #10082, points below Y axis min in polar charts were drawn incorrectly.Fixed #10101, bubble legend was duplicated with map module.Fixed #10106, issue with the showEmpty feature.Fixed #10107, legend navigation required overly precise clicks/touches.Fixed #10115, vector and wind barb series didn't handle the clip option.Fixed #10127, treemap removed old classNames on update.Fixed #10131, error in draggable points after updating series.Fixed #10160, stacking null points from the same series threw unhandled exception.Fixed #10163, series.setData() did not remove old nodes for a networkgraph.Fixed #10167, a regression causing unwanted padding on top of legends in some cases.Fixed #10187, setData didn't update data when old data had null values and the same length.Fixed #10213, relative chart height didn't apply in responsive chart.Fixed #10220, visible parts on charts inside an element with visibility: hidden.Fixed #10225, histogram produced additional bin on the end.Fixed #10232, solid gauge series had wrong legend symbol.Fixed #10243, offline export failed with boost and hidden series.Fixed #10246, boost culling issue.Fixed #10265, class names were applied multiple times to elements, causing selected pies not to unselect after redraw.Fixed #10273, changing live data settings dynamically didn't take effect.Fixed #10282, overlap larger than smallest circle in venn diagrams.Fixed #10283, click events were not applied on scatter points with base tag present in Firefox.Fixed #10286, responsive setting of showInLegend failed.Fixed #10302, plot line events did not fire if the lines were initially outside visible range.Fixed #10312, keyboard navigation with no data.Fixed #10342, HTML split tooltip did not fade after series update if formatter returned a string.Fixed #10347, annotation-bindings were not compatible with IE11.Fixed #10352, replaced Math.sign() in networkgraph source code for IE compatibility.Fixed #10417, simulation for packed bubble series did not stop when exporting chart.Fixed #6234, some presentational options were not settable in zones in column series.Fixed #6404, plot band labels were not aligned correctly in gauge chart.Fixed #6894, yAxis.softMax didn't take effect on the other side of the zero plane.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7895, renamed and documented option in export-data module responsible for series data visibility in exported chart data - includeInDataExport.Fixed #8766, chart crashed when misconfiguring plotOptions.Fixed #8864, connectorColor didn't work for individual points.Fixed #9087, malformed exported SVG when SVG elements were added inside useHTML labels.Fixed #9128, #10025, histogram series had incorrect amount of free space between points.Fixed #9233, data labels and tooltip formatting was not supported for null points in heatmap.Fixed #9880, hover animation on xrange points was incorrect.Fixed #9917, chart.update with initial pane options did not change the pane.Fixed #9962, line series was not rendered in the boost mode, when all points were outside the extremes.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed #10161, wrong extremes in single category axis.  Highcharts v7.0.3 (2019-02-06) # Added option treemap.events.setRootNode.Added option xAxis.margin to ensure a distance between multiple axes on the same side.  Upgrade notes Renamed plotOptions.treemap.allowDrillToNode to allowTraversingTree to avoid confusion with the drilldown module that has a different behaviour.  Bug fixes Fixed #10006, wrong intersection position in venn.Fixed #10038, series labels didn't fit on area series when rendered on data extreme.Fixed #3417, label text-anchor with empty align attribute was set to undefined.Fixed #7048, tooltips didn't appear on null values in heatmap when in boost mode.Fixed #7872, pass proper parameters to animation step when animation is skipped. Resolved issue with wrong column chart placement when rendered in a hidden tab.Fixed #9823, disabled draggable triggered drop event.Fixed #9838, dissappearing traverseUpButton.Fixed #9930, warnings of deprecated e.returnValue in Chrome console.Fixed #9944, incorrect Y axis extremes after zooming X axis with a column series.Fixed #9964, title top margin applied when text was empty.Fixed #9978, horizontal scrollbar on RTL charts with a11y module.Fixed ARIA for show/hide legend items.Fixed draggable points capturing click events.Fixed endless recursion in sankey charts on circular data. See #8218.Fixed issue with series event handlers not surviving series.update. Partial fix for #10010.  Highcharts v7.0.2 (2019-01-17) # Added jitter feature to scatter plots.Added feature to set legend.width as a percentage, and restrain the default width to 50% for legends at the sides of the chart.Added overlap stacking to waterfall charts.  Bug fixes Fixed #6817, point click event didn't fire on the first touch.Fixed #7253, long legend titles were not wrapped, pushing the legend out of the chart.Fixed #7860, pointPlacement was not implemented for heatmap.Fixed #8160, treemap data labels overflowed on long words.Fixed #9617, chart update in responsive mode caused some of the responisve options noneffective.Fixed #9685, maximum call stack exceeded in venn diagrams in certain cases.Fixed #9694, tooltip was clipped when using the outside option and different series types.Fixed #9709, missing values when exporting data in venn.Fixed #9718 and #9768, incorrect overlap calculations in venn diagrams in some cases.Fixed #9728, incorrect handling of negative Z values in bubble chart styled mode.Fixed #9747, a regression causing upper area range data labels to get stuck after redrawing.Fixed #9749, memory building up and animation deferred on hidden pages.Fixed #9758, no-data module was ignoring boost points.Fixed #9761, X axis labels overlapped on polar chart with dense categories.Fixed #9762, series was referencing public object for userOptions and some updates were working in an unexpected way.Fixed #9779, rendering bug in svg2pdf.js caused filled rectangles in offline-exported PDF.Fixed #9794, wordcloud series didn't support state options.Fixed #9798, added ability to change options for particular link and improved nodes docs for networkgraph series.Fixed #9801, networkgraph was not compatible with no-data module.Fixed #9803, networkgraph throwing maximum call stack error with cyclical links.Fixed #9815, performance problem with series labels.Fixed #9818, bad rendering of sankey chart with unordered data.Fixed #9835, axis disappeared on rotating labels 180 degrees.Fixed #9841, a regression causing the Y axis to shrink in certain cases when setting xAxis.tickAmount.Fixed #9841, tickAmount axis option wasn't properly supporting false values for startOnTick and endOnTick.Fixed #9849, improved line height handling with non-pixel font-size units.Fixed #9861, error when updating the X value of data points that had an ID.Fixed #9869, tooltip on xrange series type was having misplaced point anchor due to some xAxis options. Closes #9727.Fixed #9871, a regression causing the chart width to be miscalculated when the container had a transform.Fixed an issue in series-label placement logic, labels gravitated to the right.  Highcharts v7.0.1 (2018-12-19) #   Bug fixes Fixed #4119, autogenerated series names were incorrect when index was used.Fixed #9572, chart with shared tooltip and boost module crashed when updating data and tooltip.Fixed #9636, boosted heatmap combination charts did not work.Fixed #9654, a regression causing charts to fail in old IE.Fixed #9678, a regression causing errors in bubble chart with all negative values.Fixed #9680, a regression causing chart generation to crash with wrong type on series config.Fixed #9690, a regression causing chart.scrollablePlotArea to fail in desktop browsers in v7.0.0.Fixed #9711, options argument was mutated after calling chart.update.  Highcharts v7.0.0 (2018-12-11) # Added sonification to the accessibility features.Added TypeScript support (Beta).Added bubble legends, legend items describing the scale of the bubbles.Added feature to match points by id when running setData.Added new series type force directed graph or network graph.Added new series type packed bubble.Added new series type 3D cylinder.Added new series type venn diagram.Added new series type column pyramid chart.Added editor features for annotations, allowing annotations to be added, updated and removed through a GUI.Added debug module for making chart errors visible in the chart.Default exported chart name is now based on the chart title.Added option chart.styledMode to replace the previous separate build of styled mode files.Added options to align pie chart data labels to the edges of the chart.  Upgrade notes If you use styled mode, the setup has changed. Instead of loading files from the code.highcharts.com/js folder, use the base JavaScript files, but set the chart.styledMode option to true.Polyfills are now needed for support in IE 6-8. Before including the highcharts.js file, load modules/oldie-polyfills.js in a conditional comment. Alternatively you can use your own polyfills or a third party library. See System Requirements.If the chart.height setting is higher than the CSS height of the container, the chart will now be clipped. This is a consequence of adapting the chart to table cells and flex layouts.  Bug fixes Corrected chart width for sub-pixel container width. Prevented overflow in flex-grids and table cells.Fixed #2617, wrong number of pages in legend with legend.maxHeight in some cases.Fixed #5293, pointBreak event for broken-axis module was not working for columnrange series type in case highcharts-more was loaded before broken-axis module.Fixed #5857, drilling down column charts to more than the cropThreshold caused lost categories on the X axis.Fixed #8105, split tooltip header couldn't be removed by options.Fixed #8680, responsive rules were not applied on annotations.Fixed #8818, shared tooltips in boost with column series.Fixed #9046, force boost check now takes plotOptions.series.visible into account.Fixed #9121, overlapping text labels with useHTML and styled mode.Fixed #9150, heatmap points were misplaced when using boost module without WebGL.Fixed #9156, export data download failed on iOS.Fixed #9197, no series animation on calling Chart.update with repeated options.Fixed #9200, errors in the console with small height and zones or negative colors.Fixed #9211, inverted heatmap in boost mode had wrong size when WebGL was disabled.Fixed #9226, Wrong number of series with indexex after update.Fixed #9247, console error on empty data labels in area range.Fixed #9248, on series hide/show yAxis extremes were not updated.Fixed #9252, added missing annotations.id documentation.Fixed #9258, remove use of id in default treemap data labels.Fixed #9270, series were removed from configuration options when invoking stock, map or gantt charts.Fixed #9278, drag and drop failing on mobile.Fixed #9289, avoid animating drilldown in wordcloud.Fixed #9291, correctly rounded default dataLablels for xrange series type.Fixed #9298, zooming problems with drag and drop.Fixed #9300, JS error when updating sankey series before it had been redrawn.Fixed #9301, regression in tooltip.headerFormat for xrange series.Fixed #9375, invalid attribute on SVG elements in solid gauge series.Fixed #9400, tooltip box border issues when defining font size inline.Fixed #9410, when using step in boost, the first point was wrong.Fixed #9481, annotations attached to hidden points were visible.Fixed #9485, selected state was not preserved after drilling down and up.Fixed #9487, category axis didn't update when more data than the cropThreshold. Closed #6926.Fixed #9504, some links rendered broken on inverted Sankey diagram.Fixed #9525, wrong number of points after update zoomed chart.Fixed #9533, printing chart via the export menu failed when scrollablePlotArea was active.Fixed #9537, ellipsis not applied to X axis labels when useHTML was true.Fixed #9562, wrong categories and data to axis mapping with uniqueNames and drilldown.Fixed #9565, dot delimiter on dates in CSV caused the format deduction to fail.Fixed #9618, setExtremes should trump axis.ceiling.Fixed #9623, 3D pie chart didn't hide when rendering inside a div with visibility: hide.Fixed #9166, off-screen markers clamped to plot width in boost.Fixed #9206, draggable points did not work with dynamic series.Fixed issue with a11y module sometimes throwing exception on init.  Highcharts v6.2.0 (2018-10-17) # Added support for multiple data labels on each single point.Added draggable points plugin as module.Added support for pointPlacement in X range charts, affecting the category Y axis. Closed #7419.  Bug fixes Fixed #2366, improved polar chart yAxis plotLines resize and animation.Fixed #4281, added information about point in tooltip's headerFormat.Fixed #6169. cropShoulder was inherited by column series, which set it to 0. Fixed by overriding to 1.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #9049, issue with lines to culled points in boost.Fixed #9052, conflict between settings boost.enabled and seriesThreshold.Fixed #9058, error when running chart tests in jsdom.Fixed #9088, updating a point in a pie chart threw errors when another slice was hovered.Fixed #9091, showCheckbox didn't work with layout proximate.Fixed #9097, chart.update error when removing axes and series.Fixed #9119, dataLabels sometimes overlapped stackLabels.Fixed animation of grid lines when changing axis extremes. Follow tick marks.  Highcharts v6.1.4 (2018-09-25) # Better polyfill for forEach in oldIE. See #8865.  Bug fixes Fixed #2165, legend.labelFormatter was not called when series' visiblity changed.Fixed #3495, export menu click was wrongly triggering chart's click event.Fixed #3739, changed rounding method to Math.foor for milliseconds dateFormat to match other date and time formats.Fixed #5009, performance problem with long text strings and word-wrap.Fixed #6405, Highcharts crashed when using category axis, small labels.step option and a large data range. Re-introduced error 19.Fixed #7484, followTouchMove didn't work properly on column series on mobile.Fixed #7815, data labels were visible even when points were hidden.Fixed #8652, replace max/min safe integer with max/min value in wordcloud to support IE11.Fixed #8865, wrong links in sankey chart if the columns didn't start from 0.Fixed #8874 and #8346, Highcharts.indexOfPolyfill wasn't supporting all required arguments.Fixed #8901, bubble chart calculated wrong extremes when either xAxis.min or xAxis.max was set.Fixed #8933, minPointLength squished all ranges to minimum length when xAxis was reversed.Fixed #8960, animation didn't run on Series.update() with new data.Fixed #8972, improved a way of assigning data to specific bins in histograms.Fixed #8994, a regression causing cropped legend items to become long after hover when useHTML was true. Regression since #8809.Fixed #8995, added support for duplicated x values for Series.setData.Fixed issue with tooltip header placement when scrollable plot area was activated.  Highcharts v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts v6.1.2 (2018-09-03) # Support for loading Highcharts as an AMD module.Added parameter to xAxis.labels.formatter in addition to scope, allowing arrow functions as formatters. Closes #8580.Adjusted the threshold for when a contrasted data label turns white or black.  Bug fixes Fixed #3589, inconsistent data label position in the waterfall series.Fixed #7097, rendering problem when animating 3D pie charts while hovering.Fixed #7484, update tooltip position when dragging and followTouchMove is enabled.Fixed #7649, error on 3d pie drilldown and drill up.Fixed #8024, empty gap in connector line in place of a null value.Fixed #8284, multiple markers did not follow points' positions when adding new points.Fixed #8355, error on running Series.setData on boosted series with the updatePoints parameter.Fixed #8506, refactored mapping data to appropriate bins in histograms. Closes #8646.Fixed #8529, not defining series in options for a 3D chart threw an error.Fixed #8532, hover color was ignored in sankey diagrams.Fixed #8561, legend keyboard navigation with useHTML.Fixed #8621, conditions extended in getSlotWidth wrap function.Fixed #8627, demo for legend navigation was not working correctly on Windows.Fixed #8633, implemented support for standard marker symbols in boost.Fixed #8638, legend with proximate layout was misplaced when all points were nulls.Fixed #8641, error on updating 3D chart when created empty.Fixed #8659, treemap child nodes were not clickable due to wrong animation of fill attribute to none.Fixed #8662, series names were random when seriesMapping object property had values more than 10.Fixed #8666, error in styled mode when trying to read a dataLabel style property.Fixed #8682, old sankey nodes were not destroyed when updating the series data.Fixed #8690, plotOptions.vector.rotationOrigin not working properly.Fixed #8699, flags were missing in current time frame.Fixed #8704, the useHTML option did not take effect on rotated data labels, specifically on the sunburst series.Fixed #8708, print chart sometimes showed empty chart in Chrome when Boost was enabled.Fixed #8713, setting cropThreshold on a windbarb series broke the chart.Fixed #8731, boosted area displayed beyond pane when threshold was outside pane.Fixed #8742, glitch in stack label overlapping detection.Fixed #8768, missing ticks at the end of datetime axes if local system was in a half-hour time zone.Fixed #8773, background color of scrollable plot are was not extended, caused page background to bleed through.Fixed #8777, IE7 didn't display pie chart due to badly named some function.Fixed #8789, a regression causing the axis labels to take up too much space in some cases when using HTML.Fixed #8791, solid gauge didn't respect updating colorIndex on points.Fixed #8795, console errors when zoomed in and using Series.setData with redraw set to false.Fixed #8797, scrolling not available when scrollablePlotArea was combined with responsive options.Fixed #8809, a regression causing misplaced HTML axis labels after drilling down and up.Fixed #8818, shared tooltip in boost mode didn't always pick up all points.Fixed #8820, chart.scrollablePlotArea option didn't play well with title.useHTML and other useHTML cases.Fixed #8824, make sure checkboxes stay fixed with chart.scrollablePlotArea enabled.Fixed #8830, orphaned data labels on points outside Y axis range on xrange series.Fixed #8834, exceptions on rendering stack labels on out-of-scale axis.Fixed #6794, 'cursor: pointer' wasn't working for data labels with 'useHTML: true'.  Highcharts v6.1.1 (2018-06-27) # Added new feature, proximate legend layout, to allow placing legend items close to the data series.Added new option, tooltip.outside, to allow the tooltip to render outside the confinement of the chart area. Closes #5784.Added clearer error reporting to offline exporting. Closes #8226.Added default for data.weight in Word Cloud.Added feature, event ordering for controlling what handler runs first when multiple modules are used.Added new default behaviour for sunburst data labels, rotationMode: 'auto'. Now the best fit will be calculated. See #8502.Added support for polar parallel coordinate charts (star plots).Added symbol for month number without leading zero. Closes #8150.  Bug fixes Fixed #4377, exporting context menu did not hide on button click.Fixed #8021, missing points after zoom in scatter 3d.Fixed #8031, columns overlapped xAxis.Fixed #8042, axis labels had the same slot width on 3d charts.Fixed #8140, series legend items didn't show up when colorAxis.showInlegend was false.Fixed #8159, useHTML caused that treemap data label was misplaced.Fixed #8163, added xAxis.reversedStacks option to control stacks order within a columns group.Fixed #8173, crosshair did not work properly with variwide.Fixed #8173, missing unit test.Fixed #8181, wordcloud missed large words.Fixed #8187, stackLabels in bar chart were misaligned.Fixed #8210, a regression causing axis labels to not expand after having ellipsis.Fixed #8214, missing space character before tracker class definition.Fixed #8234, a regression causing overlapping X axis labels on drilldown.Fixed #8241, use secure URLs in themes.Fixed #8243, the way of calculating axis slotWidth changed.Fixed #8245, regression causing data.parsed callback not being called on loading Google Spreadsheets.Fixed #8273, offline export bug due to nested function wrap.Fixed #8276, wrong z-index for halo in styled mode.Fixed #8277, missing top neck of reversed funnel.Fixed #8330, overlapping pie data labels due to a bug in the label distribution algorithm.Fixed #8358, export icon was not disabled using responsive rule.Fixed #8365, indicator calculated wrong values for long and short sma.Fixed #8377, chart disappeared after resizing a hidden chart inside a padded div.Fixed #8392, plotbands update zIndex issue.Fixed #8393, annotations are not exported when added dynamically.Fixed #8402, boost not rendering well with bubble chart and missing z values.Fixed #8406, colorAxis did not get new series extremes after chart update.Fixed #8407, scatter series added to a 3D chart via chart.addSeries was not converted to a scatter3d series.Fixed #8415, className option did not work on plot lines.Fixed #8428, pie chart slice did not show after visibility changes.Fixed #8438, combination charts from CSV didn't lay out properly without seriesMapping.Fixed #8444, axis title rendered a title tag when wrapped across two or more lines.Fixed #8456, improved 3d projection matrix property.Fixed #8467, regression causing long axis labels being clipped when using HTML in combination with whiteSpace: nowrap.Fixed #8477, plot line labels didn't work in browsers that support Array.prototype.flat.Fixed #8478, a regression causing duplicated legend items when using color axis and dynamically adding series.Fixed #8481, chart update with type: bar didn't work.Fixed #8494, incorrect assignment in data export for multiple pie charts.Fixed #8515, padding was not applied to data labels in sunburst series.Fixed #8531, random data labels in sunburst chart were hidden.Fixed #8181, regression with drilling up by clicking root node in Sunburst.Fixed build scripts which returned to early, instead of waiting for promise to resolve.Fixed disabling animation in pattern fills.Fixed export menu rendering below axis when scrollablePlotArea was used. See #8316.Fixed issue where image patterns could not have translucent opacity with default animation.Fixed issue with scrollablePlotArea being applied on exported charts. See #8316.Fixed issue with image patterns in IE not always being shown if images were cached.Fixed issue with initialValue was always supplied to reduce.Fixed scrollablePlotArea, the scroll jumped back to original scrollPositionX after toggling series. See #8316.Fixed stuck series labels.  Highcharts v6.1.0 (2018-04-13) # Added feature for loading data directly from a CSV URL or JSON resource, and keeping it dynamically updated through the data.enablePolling option.Added examples of themes with styled mode: dark-unica, sand-signika, grid-light.Added feature to animate the series when updating data through Series.setData, Series.update or Chart.update. The new logic looks for matching X values and can be disabled through setData's updatePoints option.Added Open in Cloud functionality in the export-data module.Added pattern fill module.Added new feature, chart.scrollablePlotArea, to provide smooth scrolling of data on small devices.Added animation parameter to Chart.update.Added default max-width for pie data labels to avoid long labels squeezing the pie itself.Added new option, data.beforeParse, to allow modifying the CSV when using the data.csvURL option.Added new option, legend.alignColumns, providing better default layout for multiline horizontal legends.Added support for Infinity and -Infinity values for plotOptions.area.threshold, to make the area extend towards either Y axis extreme. Closes #8139.Added support for nested series.keys.Added options minFontSize and maxFontSize to Wordcloud.  Bug fixes Fixed #7792 #7791, inverted charts not clipping correctly in Boost.Added max distance to the label distribution function, so pie data labels and flags are not drawn too far away from the anchor point.Fixed #4881, data labels with useHTML caused recursion error in Firefox on Windows.Fixed #7026, export-data did not work when the boost module was active.Fixed #7103, dataLabels not cropped outside extremes.Fixed #7186, added new build script to dist task. Build and includes es-modules in distribution.Fixed #7362, dataLabels were overlapping when rotation was set.Fixed #7383, SVG title tag not configurable.Fixed #7491, missing words in Wordcloud because of too small playing field.Fixed #7604, axes ticks were wrongly aligned when startOnTick or endOnTick were set to alse.Fixed #7639, wrong extremes after repeated zoom in scatter charts.Fixed #7798, stack labels weren't correctly positioned with multiple yAxis.Fixed #7850, legacy IE wasn't getting classes of DOM elements correctly.Fixed #7857, panning was not working when xAxis was reversed.Fixed #7862, connector lines were not visible in waterfall series when negativeColor was used.Fixed #7874, wrong legend item positions when using HTML after setting chart size.Fixed #7894, legend.verticalAlign top failed with no chart title.Fixed #7896, streamgraph rendering and tooltip issues with single series.Fixed #7898, drillup button with long text was not correctly aligned after multi-level drilldown.Fixed #7906, error in gauge chart if no yAxis.labels config was provided in styled mode.Fixed #7931, error in series-label module when animating while chart was destroyed.Fixed #7933, setting startPoint dynamically failed when data set was empty initially.Fixed #7942, yAxis ticks and title had wrong positions after toggling series visibility.Fixed #7957, custom buttons in exporting didn't rescale image symbols.Fixed #7965, could not toggle the chart.reflow option dynamically with chart.update().Fixed #7968, a regression causing ellipsis setting xAxis.labels.style not to work.Fixed #7975, long pie chart data labels were not correctly truncated, and could not be disabled.Fixed #7986, invalid exported CSS when using comma item delimiter and best-guess decimal point in European locales.Fixed #7991, treemap had wrong root on export.Fixed #7996, polar chart with particular values was rendered wrong.Fixed #8008, drilldown data points set as arrays with keys failed.Fixed #8014, Chart.setTitle didn't result in legend position updating.Fixed #8060, markers flickering after setData() when redraw was deferred.Fixed #8073, animation of graph with center step was distorted.Fixed #8075, adding and removing axes dynamically caused redraw error.Fixed #8083, wrong crosshair width and position for variwide chart.Fixed #8092, plotOptions.bubble.sizeByAbsoluteValue did not render bubbles when z-values were very close.Fixed #8100, arearange markers did not correctly support negativeColor and zones.Fixed #8101, wrong decimal separator in tooltip with multiple values.Fixed #8104, selected state attributes for a point were not applied in xrange series.Fixed #8106, context was not preserved inside lin2log and log2lin axis functions.Fixed #8119, point class name was not applied to the halo and connector.Fixed #8129, yAxis with tickPixelInterval=1 rendered tick close to zero instead of zero.Fixed Series.update to support soft series name without recreating series.Fixed data module failing to initialize chart when the data config was empty.Fixed errors in plugins when destroying a chart from its own callback.Fixed issue with legend navigation sometimes not focusing for single legend item charts.Fixed issues with resizing points with autocalculated pattern dimensions.  Highcharts v6.0.7 (2018-02-16) # Added internationalization support for the accessibility module. See lang.accessibility.  Bug fixes Fixed #150, grid lines did not always align to plot border and to other axis' grid lines.Fixed #1813, graphs and areas were not clipped when exceeding perimeter in polar charts.Fixed #7191, level options was applied to wrong level in treemap when levelIsConstant is false.Fixed #7729, highcharts-more.js couldn't be included multiple times without errors.Fixed #7787, a regression causing incorrect title alignment when useHTML was enabled in v6.0.5.Fixed #7800, error on hovering points in IE11 + compatibility mode.Fixed #7806, API reference had a wrong extend for bullet's targetOptions.Fixed #7812, a regression causing wrong initial position of text with useHTML.Fixed #7814, multiline axis title didn't reflow to chart resize.Fixed #7817, regression with categories in drilldown. Point names were not properly purged from Axis.names array.Fixed #7825, histogram threw error if the base series had equaled values.Fixed #7826, annotations were hidden if the points had disabled markers.Fixed #7850, legacy IE event for onContainerMouseDown wasn't provided properly.Fixed #7854, accessibility of datetime charts.  Highcharts v6.0.6 (2018-02-05) #   Bug fixes Fixed #7700, SVG offline export in styled mode in IE11 added length to styles.Fixed failing test on FireFox, getBBox() shouldn't be used on clipRect elements.Fixed issue with markers always being visible when using GPU translations in boost.Fixed syntax error causing missing sunburst.js file in distributions, see #7775.Fixed #7730, connectNulls in Boost failed with zooming.Fixed #7716, point padding caused extra points where there should be none. See.  Highcharts v6.0.5 (2018-01-31) # Added states.normal to allow disabling animation after point or series hover.Added chart-level time options.Added new sankey options, node.column and node.offset.Added option, series.marker.enabledThreshold, for setting the break point between enabling and disabling markers.Added support for connectNulls in the Boost module. See #7395 and #7631.  Bug fixes Fixed #4647, custom buttons from exporting can be created without tooltip.Fixed #4699, lines pass through data points in inverted waterfall.Fixed #6712, xAxis.scrollbar was not listed in the API docs.Fixed #6985, arearange didn't remove old markers on zoom.Fixed #7179, HTML entities were not escaped in title elements.Fixed #7273, disabled markers caused wrong offset on a point hover with image as symbol.Fixed #7281, streamgraph gave wrong Y axis extremes when yAxis.reversedStacks was false.Fixed #7388. added option sunburst.levelSize and sunburst.levels.levelSize to customize ring sizes.Fixed #7467, rangeSelector.selected didn't work on a year buttons with offsetMin.Fixed #7499, errors and bad redrawing on adding and removing series with Boost module.Fixed #7507, windbarbs immediately on the edge of a zoomed chart were mispositioned.Fixed #7515, null X values in all data points of one series caused all other series to hide.Fixed #7517, sunburst used wrong value to calculate size of root node.Fixed #7523, error on drilldown in styled mode.Fixed #7529, regression with label positioning and useHTML in Edge and IE.Fixed #7534, point.isInside was set to true in a cropped point - added extra check for a point's graphic prop.Fixed #7538, offline PDF export did not handle fonts with multiple charts.Fixed #7555, huge peak values caused smaller values not to render when zooming in on stacked area chart.Fixed #7557, arearange series in boost mode threw errors when zooming out from SVG mode.Fixed #7597, added property outerArcLength to sunburst as an alternative filter to innerArcLength.Fixed #7600, Chart.update with drilldown didn't work.Fixed #7602, error on calling chart.drillUp when chart was not drilled into.Fixed #7607, box plot whiskers and median appeared on hover if their width was set to 0.Fixed #7611, null pointer exception on destroying the chart from selection event.Fixed #7617, xrange series had mispositioned partialFill after zooming in.Fixed #7621, hourly datetime label was skipped instead of repeated when crossing DST change.Fixed #7633, style CSP error when using legend.useHTML.Fixed #7634, errors when using the Boost module in combination with non-boostable series types.Fixed #7646, tooltip didn't work on flags in boosted chart.Fixed #7656, major performance hits when using axis labels with useHTML = true.Fixed #7663, data labels in variablePie were wrongly positioned.Fixed #7667, waterfall caused errors when stacking null points.Fixed #7669, annotations not working in styled mode.Fixed #7677, after removing an annotation the chart threw errors.Fixed #7681, point halo stayed after pie resizing.Fixed #7696, improved documentation for tooltip.split and tooltip.shared options.Fixed #7709, a regression causing plot bands not to render if from or to was Infinity.Fixed #7725, slow performance when using xAxis.uniqueNames and lots of categories.Fixed #7726, synced charts failed with disabled xAxis.crosshairs.snap.  Highcharts v6.0.4 (2017-12-15) # Added feature, xAxis.labels.reserveSpace option only worked when setting it to false, could not be set to true to force reserved space. See #5286.Added new option on flag series, allowOverlapX, to be able to toggle the new feature of overlap avoidance. See #4674.Made keyboard navigation for points work more intuitively, highlights last/first point depending on direction, and wraps around at end.Added option data.sliced and slicedOffset in Sunburst.  Upgrade notes Highcharts now makes room for the legend in the layout if it has verticalAlign: 'top' with a horizontal legend. In existing charts using this layout, the layout of the legend and the plot area may be affected.Fixed #1019, right mouse button dragging should not #1344 trigger zoom**.  Bug fixes Moved accessibility of tables to export-data module. Fixes #7400 and #7486.Fixed #1019, right mouse button dragging should not trigger zoom.Fixed #3965, tickAmount was adding ticks only with bigger value than max for single value axis.Fixed #4939, null points in box plot caused the Y axis extremes to fail and all valid points were lost.Fixed #4958, the pointIntervalUnit option didn't handle the DST crossover correctly when set to 'days'.Fixed #6096, reset zoom button covered the tooltip.Fixed #7042, very small values were not respecting the decimals setting in numberFormat function.Fixed #7226, zooming was not possible when softMin and softMax were set.Fixed #7248, labels in polar charts were clipped when overflowing the chart edges.Fixed #7287, some nested HTML elements in SVG were updating wrong groups.Fixed #7314, Updated wordcloud to use font family sans-serif by default.Fixed #7363, a regression in animation logic causing sunburst data labels not to show after drilling.Fixed #7381, vector series points were visible outside current plot area.Fixed #7384, data label was not visible after drilling up in pie and column charts in Chrome.Fixed #7394, Infinity value broke heatmaps and potentially other charts. See also #3571.Fixed #7397, updating chart type changed rendered series Z index.Fixed #7404, data export from pie chart failed if the point name was an empty string.Fixed #7405, small numbers in exponential notation were wrongly interpreting decimals.Fixed #7406, heatmap was faded when hovering legend in styled mode.Fixed #7411, chart axis disappeared with hidden series in navigator.Fixed #7413, setting drilldown.animation.duration to 0 caused orphaned column shapes after drilling up.Fixed #7414, data label text color was wrong with rotated labels in styled mode.Fixed #7415, keyboard navigation not working with legend paging.Fixed #7418, event handling in iOS led to all series being faded out in styled mode after tapping close to legend items.Fixed #7420, a regression causing stacked column graphs to fail when threshold was null.Fixed #7421, added keyboardNavigation.mode option with serializing functionality.Fixed #7423, bad default behavior for accessibility skipNullPoints and pointDescriptionThreshold.Fixed #7428, legend overlapped title and subtitle when vertically aligned to top.Fixed #7432, ticks not correctly placed on midnight in some cases when the first tick was close to DST crossover.Fixed #7437, a regression causing 3d pie slices not to move on second update using Chart.setSize().Fixed #7439, errors on drilling down in styled mode treemap.Fixed #7448, CSV export problem with auto-detecting decimal points and item delimiters. Item delimiters now default to ; if the detected browser locale has , for decimal points.Fixed #7451, a regression causing panning out of data bounds on category axes.Fixed #7457, function was not accepted as binsNumber for histogram series.Fixed #7463, extra tick was inserted on zoom when using the xAxis.tickPositions option.Fixed #7475, a regression causing xAxis.label.overflow: false not to work.Fixed #7477, 3D line series moved as series visibility was toggled.Fixed #7478, plot border didn't redraw when animation was active.Fixed #7481, error in stacked chart with predefined axis bounds using boost.Fixed #7485, Mozilla Addons Linter found a bad word in the source code.Fixed #7489, sankey chart was not compatible with no-data module.Fixed #7493, stacked area chart didn't respect connectNulls: false after updating point to null.Fixed #7494, chart height increased on window resize in styled mode.Fixed #7495, small gaps were visible between the halo and the pie slices in pie charts due to SVG anti aliasing.Fixed #7507, visible and misplaced wind barbs when outside plot area.Fixed wrong context in animation complete callback when skipping animation due to equal attributes. See #7146.  Highcharts v6.0.3 (2017-11-14) # Added new option, dataLabels.filter, for a declarative way of filtering data labels without using the formatter.  Bug fixes Fixed #1841, bad animation when adding points in area ranges.Fixed #4994, improved documentation on loading Highcharts in ES6.Fixed #6183, small tick interval caused ticks to be merged to one.Fixed #6895, zoomed heat map wastn't clipped properly in boost mode.Fixed #6907, no focus indicator on some browsers.Fixed #7300, font-size in wordcloud was not set as pixels, causing Firefox to render all words equal size.Fixed #7311, minPointLength wasn't correct for some cases.Fixed #7315, marker was listed as a column series option.Fixed #7315, removed wrong docs for series.column.marker and for shadow in hover and select states in column.states.Fixed #7316, null text with useHTML was throwing an error on getBBox().Fixed #7320, a regression causing responsive options for axes and series not being unset.Fixed #7326, setData with equal data length caused badly drawn stacked area series with null points.Fixed #7332, X-range data labels were not hidden for off-screen elements.Fixed #7339, removed doubled axis ticks in case of too dense ticks.Fixed #7342, improved documentation for xAxis.Fixed #7351, dynamically added checkboxes didn't respect scrolling after update.Fixed #7357, a chart without a title threw an error when trying to export data.Fixed #7369, scatter chart with series containing points with null and negative X didn't render.Fixed #7371, sunburst chart failed in styled mode.Fixed #7377, approximation averages wasn't returning undefined values as it should.Fixed issue with date parsing error appearing when not necessary.Fixed issue with markup passing unfiltered into aria-label attributes, causing invalid SVG.Fixed jsdoc plugin. Load highcharts assembler from npm.Fixed keyboard navigation for maps and heatmaps.Fixed navigator update issue. See #5846.  Highcharts v6.0.2 (2017-10-20) # Added nodeFormatter property to data labels and tooltips in the sankey diagram. Closes #7284.Added center algorithm, square and rectangular spirals to Wordcloud. See #7241.  Bug fixes Fixed #7272, regression with columnStart in data module.Fixed #6103, reset zoom button not playing well with drill up button.Fixed #7224, legend item text not positioned properly when useHTML is enabled. Closes #7254.Fixed #7238, useHTML didn't have an effect with split tooltip.Fixed #7243, updating pie series point color didn't update connector color.Fixed #7260, a regression causing the legend box not being resized when dynamically adding and removing series.Fixed #7264, wordcloud did not support the no-data-to-display module.Fixed #7265, a regression with causing data.endRow to be offset by one.Fixed #7280, a regression causing mispositioned HTML data labels on pie charts.  Highcharts v6.0.1 (2017-10-05) #   Bug fixes Fixed #7223, regression in v6 causing stock charts and certain features to crash in IE.Fixed #7228, regression in v6 causing columns with only negative values not to render.  Highcharts v6.0.0 (2017-10-04) # Added Annotations module for annotating a chart with labels or shapes.Added the Boost module for WebGL rendering of millions of points.Added the Series labels module for organic positioning of labels next to the data.Decoupled old IE code into a separate module.Added new series type, bell curve.Added new series type, bullet chart.Added new series type, histogram.Added new chart layout, parallel coordinates chart.Added new series type, pareto chart.Added new series type, sankey chart.Added new series type, 3D scatter chart.Added new series type, stream graph.Added new series type, sunburst.Added new series type, variable pie.Added new series type, variwide.Added new series type, vector plot.Added new series type, wind barbs.Added new series type, word cloud.Added new series type, X range.Improved CSV parser of the data module.  Bug fixes Fixed #5909, plotband border on top was missing.Fixed #6005, selected pie slice had wrong color in styled mode.Fixed #6261, a regression causing charts to draw at small heights if container size was small.Fixed #6268, Chart.update() did not update parameters of the data module.Fixed #6302, chart was not rendered when xAxis.max and rangeselector.selected were defined.Fixed #6648, the redraw parameter in Series.setVisible was not respected when Boost module was loaded.Fixed #6679, a regression causing drilldown not to fire the second time in certain cases.Fixed #6957, when tooltip.useHTML was true on a map and other series types, the shape would flicker and tooltip hide in IE and Edge.Fixed #6992, error in data label positioning with really small pies.Fixed #7012, series group was wrongly translated when 3d columns were added to graph.Fixed #7021, cleared duplicated marker reference.Fixed #7024, regression causing charts not to show when preliminary rendering within a child of a detached node.Fixed #7025, treemap with color axis didn't work in styled mode.Fixed #7030, added highcharts.scss to distribution.Fixed #7031, could not set up Highcharts with a custom window object.Fixed #7034, color tweening from a named (unrecognized) color to a hex color failed.Fixed #7046, a zero value point using minPointLength was always shown as a positive value point.Fixed #7061, line was missing after zooming between points.Fixed #7080, JS error on adding rotated data labels with shadow applied.Fixed #7084, high or non-ASCII characters in CSV file were not exported correctly in IE.Fixed #7088, series didn't hide dynamically in Boost mode.Fixed #7090, offline generated PDF showed hidden series.Fixed #7112, pie chart data labels were visible for negative values.Fixed #7113, updating a pie chart to all negative values didn't clear the slices.Fixed #7115, version format not validated by yarn.Fixed #7117, plot line label had wrong position in polar charts with circular grid lines.Fixed #7126, less than sign followed by a space was interpreted as markup.Fixed #7127, exception in Pointer when updating a series from its own mouseOver event handler.Fixed #7128, data export with combined scatter and column series inserted too many rows.Fixed #7160, treemap should not display halo on hover.Fixed #7175, NaN in text position of plot band label after toggling series visibility.Fixed #7180, disabling tooltip caused event flooding.Fixed #7188, null points creates issues for shared tooltip, when there is more than one point with same x value.Fixed #7193, fixed #7159, hoverPoints in boost mode was not usable for Tooltip.Fixed #7028, axis label width style wasn't respected if there was enough space to render wider labels.  Highcharts v5.0.14 (2017-07-28) #   Bug fixes Fixed #7014, a regression causing JS error when writing a new chart to a node that was originally detached.Fixed JS error on inverted, bosted charts.  Highcharts v5.0.13 (2017-07-27) # Added pos, axis position, to axis label formats. Closes #6859.Added accessibility.keyboardNavigation.tabThroughPoints option, ref #6886.Added legend.keyboardNavigation.enabled option, ref #6838.Added color animation on state change for non-marker based series like columns and tree maps.Added feature to line-wrap long axis titles by default. Fixed #6893, causing multiline axis titles to overlap axis labels.Added new option, exporting.menuItemDefinitions, and allow string keys to be used in the menuItems instead of redefining full objects.Added new option, yAxis.stackLabels.allowOverlap, to prevent stack labels from overlapping. Closes #6876.Added new parameter oneToOne to the chart.update function. This allows for easier integration of Highcharts into dashboard solutions and wrapper APIs.Added markers to arearange and areapsplinerange series. Closed #6736.Removed error message 27 because of conflict when using highcharts-more with maps module. See #6686.  Bug fixes Fixes #6981, wrong layout on inverted heatmaps.Fixed #3946, stackLabels were not working in 3D column chart.Fixed #4853, legend's border wasn't respecting checkboxes.Fixed #5783, the chart width and text bounding boxes were not picked up when the chart was rendered to an element that was detached from the DOM.Fixed #6115, returning an array from tooltip formatter with false value didn't hide split tooltip item.Fixed #6342, class names were not updated on HTML elements.Fixed #6418, HTML data labels and refreshing and deleting caused JavaScript exceptions.Fixed #6616, the border was drawn in a full circle pie slice.Fixed #6695, cursor pointer was missing on drilldown line charts.Fixed #6708, 0 value bars were incorrectly drawn in 3D chart.Fixed #6740, tooltip not hidden when tabbing out of chart.Fixed #6746, events for legacy IE (6-8) didn't have unique keys.Fixed #6747, crosshairs in column charts caused flickering on mouse move in IE and Edge.Fixed #6752, activeDataLabelStyle used to override dataLabel's styles set on a point.Fixed #6760, tooltip.enabled: false did not respond to responsive configuration.Fixed #6761, scatter series data was not correctly exported in the export-data module.Fixed #6763, treemap was missing directTouch property, causing color axis marker to disappear.Fixed #6764, fixed #6791, fixed #6808, addition #6687. Series with noSharedTooltip was unaccessible when tooltip was shared.Fixed #6769, hidden series legend had invalid stroke-width attribute.Fixed #6773, updating xAxis.range didn't change extremes.Fixed #6774, exponential numbers were not correctly handled by number formatter.Fixed #6776, color animation was not working correctly for flags and 3D columns.Fixed #6778, new ellipsis functionality did not account for rotation.Fixed #6781, dataLabels were misaligned on inverted chart when configured xAxis.height.Fixed #6784, 3D draggable scatter demo didn't work on touch devices.Fixed #6792, updating point.marker.symbol to null didn't restore default point's marker.Fixed #6803, charts inside display:none divs became visible in Edge and IE.Fixed #6804, not able to touch-scroll the page on chart with zoom.Fixed #6831, tooltip border color was ignored by split option.Fixed #6835, columnrange disappeared when zooming too far in.Fixed #6838, consider hidden series in keyboard navigation.Fixed #6841, the dataLabels.crop option had no effect on pie charts.Fixed #6860, crosshairs on multiple axis was drawn on wrong position.Fixed #6879, shadow was not applied for split toolip.Fixed #6888, legend.update caused color axis to disappear in heat maps.Fixed #6897, prevented axis extremes change in case of a single point if multiple ticks are set.Fixed #6898, 3d pie chart had wrong color for sides in styled mode.Fixed #6900, column border radius was not respected in styled mode.Fixed #6912, responsive rules affecting series killed animation and data labels.Fixed #6956, improved colors and treemap for IE8.Fixed #6968, chart height didn't reflow when chart.width was set.Fixed #6970, flags were not filled in styled mode.Fixed #6971, rounding errors caused flickering of solid gauge backgrounds in semi circles.Fixed #6988, dataClass.color should be ignored in styled mode.  Highcharts v5.0.12 (2017-05-24) # Added core support for color animation.Added error message on trying to define the same series type twice. Fixes #6686.Let Series.update fall back to the optimized Series.setData if only the data is updated.  Bug fixes Fixed #223, pie chart data labels were not truncated to chart area when pie size was explicitly set.Fixed #3160, let the xAxis.offset option modify the clip area to avoid clipping line graphs.Fixed #4588, loading and "no data" labels overlapped.Fixed #4921, ignoreHiddenSeries caused wrong column position and width after hiding and showing all series.Fixed #6307, offline export issues with styled mode in IE and Edge.Fixed #6517, regression with shared tooltip and columns. Tooltip not following mouse move.Fixed #6659, long series name in legend broke the geometry of the chart. Added textOverflow and max width to default itemStyle.Fixed #6659, long series names made tooltip overflow the chart.Fixed #6664, no-data label remained in heat maps after adding points.Fixed #6670, visible: false didn't work correctly on funnel chart points.Fixed #6687, wrong hover points with columns and shared tooltip.Fixed #6700, axis label font size wrongly detected in styled mode.Fixed #6704, series names were not grouped for two series after drilldown.Fixed #6705, bubble chart click events and point select was broken.Fixed #6706, crash with heatmap and boost-canvas.Fixed #6721, area range fill was broken with null values and connectNulls: true.Fixed #6731, category axis allowed zooming outside range.Fixed AT announcing clickable for some a11y demos.Fixed Firefox issue with styled export, ref #6307.Fixed bug with inserting multiple data tables in export-data.Fixed issue where chart container height was not respected when initially hidden. See #6693.Fixed issue with data labels not appearing on exported charts in styled mode.Fixed issue with missing gridLines in 3D.Fixed issue with mouseOver event in column chart with shared tooltip.  Highcharts v5.0.11 (2017-05-04) # Added export-data as an experimental module in the main repo.  Bug fixes Fixed #1174, added dataLabels distance option for single pie point.Fixed #4743, updating 3D columns with z stacking failed.Fixed #5045, line series should be broken on axis breaks. Moved gapSize logic to the broken-axis module.Fixed #5297, 3D columns were overlapping.Fixed #5424, crosshairs overlapping when there is multiple axis with equal positions.Fixed #5863, panning didn't allow panning back to the extreme data values.Fixed #5911, inverted waterfall was rendered incorrectly.Fixed #6046, copy classes by reference in stead of a hard copy in merge.Fixed #6218, some tooltip options were not updated through chart.update().Fixed #6296, regression causing bubbles not to be clipped.Fixed #6350, solid gauge series did not have CSS point class.Fixed #6420, when multiple axes, show only one snapping crosshair at the same time.Fixed #6440, callout anchor was mispositioned in an inverted chart.Fixed #6441, callout animated to wrong position on point update.Fixed #6488, destroying colorAxis caused error and left legend.Fixed #6527, point.color of negative column was less important than series.negativeColor.Fixed #6549, Y-values of 0 caused the point to be skipped in boost mode.Fixed #6550, a regression causing sprites in meteogram sample not being clipped after animation, resulting in weather symbols all over.Fixed #6563, a regression causing flat integer data to draw on the X axis when allowDecimals was false.Fixed #6566, zAxis wasn't updated through chart.update().Fixed #6569, chart.exportChart() left undefined item in the Highcharts.charts array.Fixed #6574, subtitle was rendered outside the chart when setting subtitle.verticalAlign to 'bottom'.Fixed #6580, blending in boost caused barely visible markers in scatter charts.Fixed #6585, zero-value column's dataLabel was misplaced when using logarithmic yAxis.Fixed #6586, directTouch did not work with shared tooltip.Fixed #6589, pie chart didn't accept undefined values.Fixed #6597, PointerEvent was used unnecessarily, causing bad behaviour on Android.Fixed #6606, no legend keyboard navigation when heatmap module loaded.Fixed #6608, small maxHeight didn't hide all legend items.Fixed #6609, entities in the legend title were not translated.Fixed #6617, rendering a chart in a hidden container with box-sizing. Rewrote the functionality to avoid rendering in a hidden div, so that instead of cloning the div we make the current div temporary visible.Fixed #6627, marker symbol wasn't checked properly.Fixed #6636, a regression causing missing ticks with negative timezone offset.Fixed #6637, null point broke chart.Fixed #6639, accessibility issues with new export-csv versions.Fixed #6641, pane axis caused the error in defualt charts.Fixed #6646, item title was not wrapped in styled item.Fixed #6650, boost module failed with styled mode and heatmap.Fixed #6653, exporting error with IE8.Fixed #6660, changing colorIndex did not update all series styles.Fixed issue in tooltip-outside-box study with narrow windows. Touch #6658.Fixed merge problems with #6576.  Highcharts v5.0.10 (2017-03-31) # Added !default statement to SASS variables for easier configuration. Closes #6436.Added new option, plotOptions.column.crisp, to allow disabling crisp columns and subsequent rendering issues with densely packed items. Closes #5755Added new option, findNearestPointBy to declare how the tooltip searches for points. #6231.Refactored the Pane object to keep track of its own backgrounds, more decoupled from Axis.  Bug fixes Fixed #3481, title and subtitle were not resizing chart correctly when using useHTML on true.Fixed #3936, colorAxis was not updated through chart.update.Fixed #4964, missing plotband when small range.Fixed #6007, exporting after chart.update() threw errors.Fixed #6144, empty categories caused wrong render of tooltip.Fixed #6191, dead clip path references.Fixed #6203, yAxis extremes were wrong calculated for visible scatter points.Fixed #6258, text labels with ellipsis had inconsistent behavior.Fixed #6279, error when hiding series of line polar using data module.Fixed #6359, softMin/softMax didn't work in combination with floor/ceiling.Fixed #6430, areasplinerange polar curve path was wrongly rendered.Fixed #6431, addition to #6476, stickyTracking should default to true when there is a shared tooltip.Fixed #6433, updating Axis with plotBands rendered redundant nodes.Fixed #6437, 3D pie chart disappeared when drilling down after resize.Fixed #6444, exporting the second time failed with axis extremes.Fixed #6449, series with noSharedTooltip was inaccessible with shared tooltip.Fixed #6452, chart.update was not redrawing axes when setting alignTicks to false.Fixed #6456, tooltip didn't show on hovering outside candlestick and OHLC series.Fixed #6458, named color deduction was case sensitive.Fixed #6459, colors of boxplot series points would not update.Fixed #6463, missing closing sign in RegEx caused wrong handling of pseudo attributes.Fixed #6465, first data label in polar charts was not visible.Fixed #6469, series got lost when mixing category data in a dual axis chart.Fixed #6470, exporting failed in IE8 when data labels were enabled.Fixed #6473, wrong text wrapping with textOutline: none.Fixed #6474, custom CSS property was injected into the DOM. Added to blacklist.Fixed #6474, text outlines were not properly cleaned up on resizing.Fixed #6476, shared tooltip with disabled stickyTracking did not work.Fixed #6477, regression on crosshairs with snap in a bubble chart.Fixed #6479, responsive rules didn't apply to panes.Fixed #6481, offline export of pie charts to PDF not working in Firefox and Safari.Fixed #6487, contrast color was not applied for a justified label on a column.Fixed #6497, horizontal legend layout didn't respect spacing setting.Fixed #6499, offline export fails with allowHTML despite no HTML in chart.Fixed #6502, missing chart series and axis in combined logarithmic chart.Fixed #6518, wrong marker positions when hovering after redrawing in boost module.Fixed #6519, empty space caused overlapping in legend.Fixed #6521, missing label for narrow plot band.Fixed #6089, chart.update not taking effect on panes. Also closes #6438.  Highcharts v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts v5.0.8 (2017-03-08) # Added a refactored Boost module based on WebGL. Details and API to be announced.Added animation on graph mouse over and mouse out.Added hooks so that users can define their own log axis conversion functions, and can advertise that the log axis should allow negative values.Added new option, solidgauge.rounded.Added support for relative chart.height as a percentage of the width. This allows for fixed aspect ratio.  Bug fixes Fixed #223, pie chart data labels overflowed after pie reached minimum size.Fixed #2322, updating series type caused remnants of the original series type after multiple updates.Fixed #4916, data values were lost in export after updating a point from a numeric or array configuration to an object configuration.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #6087, minPointLength shifted next points rendering.Fixed #6173, another case of unwanted inline CSS in style mode.Fixed #6187, navigator jumped back after dragging on touch devices.Fixed #6254, Point.update did not apply new class names.Fixed #6264, enabling individual bubble markers did not work.Fixed #6272, inverted stack area chart was badly drawn when containing nulls.Fixed #6274, allowDecimals: false was ignored with flat data.Fixed #6278, missing ticks before DST crossover in some cases.Fixed #6282, text-align did not take effect on data labels with useHTML.Fixed #6291, multiple responsive rules were applied an unapplied in wrong order when resizing.Fixed #6301, legend width option caused wrong alignment when aligned right.Fixed #6305, accessible keyboard navigation in polar charts not working correctly.Fixed #6314, treemap series failed with error in styled mode.Fixed #6321, bubbles were hidden when close and marker.enabled set to null.Fixed #6322, legend navigation arrows did not update correctly on responsiveness.Fixed #6328, issue with disabled tooltip in accessibility module.Fixed #6330, minor ticks affecting the computed extremes of Y axes in some cases.Fixed #6330, minor ticks were not applied outside major ticks on a logarithmic axis.Fixed #6347, error on applying responsive rules where series or axis length was greater than the existing chart.Fixed #6356, legend.maxHeight not respected after chart update.Fixed #6361, accessibility failing for IE8 and older.Fixed #6370, category axis with breaks was rendered incorrectly.Fixed #6384, Point.update didn't work with slice: false.Fixed #6387, graph and area rendered differently on area splines next to null points.Fixed #6399, treemap legend item had incorrect color after point was hidden.Fixed #6401, point.states didn't work for maps.Fixed #6402, treemap ignoreHiddenPoint is now true by default.  Highcharts v5.0.7 (2017-01-17) # Added Legend keyboard navigation to accessibility module.Added chart render and predraw events needed by the new Boost module.Added new option, global.timezone, as a convenient shortcut to timezones defined with moment.js.Added optional redraw to drillToNode, related to #6180.Added support for marker.symbol setting on bubble charts.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Changed the Highcharts.error function to handle strings.  Bug fixes Fixed compliance with Checkmarx security checker.Fixed #6108, issue with big data in offline exporting.Fixed #5672, X values in tooltip in Boost module was wrong.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5757, empty chart throws error with accessibility module.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5835, exported SVG didn't validate, width and height attributes were set on group elements.Fixed #5837, could not style null points with CSS.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles were hidden in small charts when maxSize was percentage.Fixed #5884, optimizing addSeries.Fixed #6085, floating point errors on Y axis labels.Fixed #6088, rounding issue in tooltips.Fixed #6107, error with negative width in xrange study.Fixed #6112, issue and regression with swapping series indexes.Fixed #6113, long legend items were unresponsive due to heavy HTML parsing in SVG. Implemented caching.Fixed #6127, pie chart data label overlapped after drill up.Fixed #6128, tooltip caret was not drawn after updating from shared to non-shared.Fixed #6130, Chart.update didn't trigger responsive rules to be re-evaluated.Fixed #6138, reset colorCounter and symbolCounter when all series are removed.Fixed #6147, error in Chart.get when called between redraws.Fixed #6157, offline exporting was not working for Edge.Fixed #6158, duplicate ID of navigator series.Fixed #6171, drawDataLabels did not use updated options when data label already existed.Fixed #6173, no inline CSS should be allowed in styled mode.Fixed #6180, treemap crashed when the root node did not exist.Fixed #6184, polar arearange was misshaped when connectEnds was not set.Fixed #6196, dead clip path references.Fixed #6200, modified treemap setPointValues to only add crisping correction when needed.Fixed #6202, legend icons overflowed legend with large radius.Fixed #6207, when point X was given, point names did not show on category axis after hiding and showing series.Fixed #6208, error on responsive rules for plotOptions.series and series.xAxis.Fixed #6213, wrong text bounding box reported in Chrome for Windows, resulting in asymmetric label padding.Fixed #6217, container sizes below 20px height needed explicit chart height to be set.Fixed issue in offline exporting where libURL option was not picked up.Fixed issue with duplicate highcharts-negative class. Ref #6114.  Highcharts v5.0.6 (2016-12-07) # Added a common hook, Highcharts.error, for user defined error handling.  Bug fixes Fixed #4175, missed ticks when xAxis.reversed was used.Fixed #4507, 3D scatter points were not rendered if z-value was not set.Fixed #5950, broken axis module caused errors when rendering funnel series.Fixed #6003, regression with pie chart selection border width.Fixed #6016, zones weren't applied for point elements in styled mode.Fixed #6018, 3D column not rendered in styled mode.Fixed #6020, stacked waterfall didn't render any points.Fixed #6021, chart.alignTicks on logarithmic axis should not be applied.Fixed #6045, multiple charts exporting demos failed with other width/height settings.Fixed #6054, regression which disabled selecting bubble points.Fixed #6055, halo sometimes animated to another point when hiding.Fixed #6062, minPointLength was applied for null points in a waterfall series.Fixed #6065, text outline was off with multiline text.Fixed #6067, bubble halo stayed forever per series.Fixed #6068, JS error on destroying chart from its own callback.Fixed #6077, legend title disappeared after legend update.Fixed #6080, stray data labels for empty points in column and bar series.Fixed #6094, a regression causing allowPointSelect not to work with 3D pies.Fixed JS errors on path animations in pies. Related to #6051.Fixed border issue on hovered points in map and heatmap. Related to #6064.Fixed issue with split tooltip anchors and panes.  Highcharts v5.0.5 (2016-11-29) #   Bug fixes Fixed #5997, panning not working with reversed axes. Also closes #3278.Fixed #3398, click event for dataLabels when useHTML was set to true didn't work.Fixed #4338, incorrect minPointLength for negative values in waterfall series.Fixed #5860, bubble series in styled mode caused errors.Fixed #5892, errors in console on animating in splines as they are added.Fixed #5947, HTML dataLabels didn't show tooltip on mouseover.Fixed #6014, issue with zooming out of bounds.Fixed #6033, threshold ignored when chart.reflow was used.Fixed issue with build settings of Highcharts themes, and added a minimum of test.Fixed regression related to animation, where the complete step was not executed. This specifically affected drilldown, solid gauge and color axis updates. Closes #6017, 6032, #6023.Fixed wrong product name in license headers.  Highcharts v5.0.4 (2016-11-22) # Refactored animation and attr logic to always stop the single property being set. This prevents an animation from continuing after the same property has been set either through .attr or .animate.  Bug fixes Fixed #5788, artifacts when animating splines before previous animation was done.Fixed #5982, additional series options were not set in exporting.Fixed #5985, issue with allowHTML in offline exporting.Fixed #5989, tooltip did not hide on touch.Fixed #6008, regression causing rotated data labels to break chart in Firefox.  Highcharts v5.0.3 (2016-11-18) # Added new option, lang.numericSymbolMagnitude, to support numeric symbol shortening in Japanese, Korean and certain Chinese locales.Added new option, threshold, for solid gauge series.Added new CSS custom property, textOutline, and at the same time removed the textShadow shim. Closes #5849.Better implementation of the chart.pinchType option. Allow pinchType and zoomType to be set independently. When tooltip.followTouchMove is true, pinchType only applies to two-finger touches. Closes #5840.Changed the Highcharts.addEvent function to return a callback to be used to remove the same event.Implemented bubbles in the Boost module.Improved alignment of ticks on multiple axes by allowing ticks to be placed at less strict intervals.Refactored split tooltip connectors to use common callback shape instead.  Bug fixes Fixed #3802, yAxis.opposite ignored when setOptions was used.Fixed #3949, added zIndex calculation for scatter in 3D chart.Fixed #5838, split tooltip ignored style options.Fixed #5859, tooltip display problems in styled mode.Fixed #5868, dataLabels.softConnector was always set to true.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5873, bubbles hidden in small charts when maxSize is percentage.Fixed #5889, pointPlacement did not respect individual series pointRange.Fixed #5895, Axis.update failed with solid gauge Y axis.Fixed #5897, Series.pointAttribs ignored some lineWidth options.Fixed #5899, HTML label bounding box was cached when a width was set in inner HTML.Fixed #5903, a regression causing the halo to cover bubbles so the bubbles weren't clickable.Fixed #5909, plotBand border was only drawn on three out of four sides of the rectangle.Fixed #5912, legend clipping was not removed after resizing to larger size.Fixed #5915, returning false from tooltip formatter only hid the tooltip when it was present from before.Fixed #5919, default exporting.libURL used insecure HTTP.Fixed #5921, horizontal legend has height limit even when floating.Fixed #5922, Tooltip.refresh crashed when formatter returned undefined.Fixed #5926, more unique id's for clipping and other internal defs. Prevents conflicts when SVGs from different sources are pasted in the same page.Fixed #5928, first tick disappeared when redrawing chart with type category and uniqueNames = false.Fixed #5931 and #5957, refactured updateButtonStates to fix issues with states of Rangeselector buttons.Fixed #5932, line height was wrong in tooltip with nested em units.Fixed #5934, series.className was missing a trailing space in the legend item.Fixed #5935, a regression when axis was crossing DST in a timezone west of UTC.Fixed #5938, dynamic inversion didn't work without setting certain other properties at the same time.Fixed #5940, disabling the legend via Legend.update did not reclaim legend space.Fixed #5944, offline exporting and styled mode resulted in unstyled, black chart.Fixed #5951, responsive.rules.condition.callback did not work according to documentation.Fixed #5959, hidden series affecting axis closest point calculation.Fixed #5960, incorrect series order after removing and adding series.Fixed #5968, xAxis labels did not have ellipsis when rotation was set to 0, in Firefox and Edge.Partially fixed #5047. Workaround with was given static width and height.  Highcharts v5.0.2 (2016-10-26) # Fixed two regressions.  Bug fixes Fixed #5887, a regression causing bubbles to move on hover.Fixed regression in v5.0.1 where the halo would be mispositioned in inverted charts.  Highcharts v5.0.1 (2016-10-26) # Added new options, axis.softMin and axis.softMax. Closes #5824.Added Legend keyboard navigation to the accessibility module.Added animation on hovering point markers.Added offline PDF export support.  Bug fixes Refactored tooltip delay the generation of the empty label container. This prevents the empty label from being present in exported SVG.Fixed #1880, individual column borderColor.Fixed #4951, issue with placing tick marks on round times when using getTimezoneOffset.Fixed #5427, JS error on async destroy when triggered from custom exporting menu.Fixed #5483 without breaking #5823.Fixed #5538, pie series was not redrawn after modifying title and other elements.Fixed #5553, disabled trackByArea did not hide tooltip, when moving mouse out of the area shape.Fixed #5736, zooming in multiple X axes with crosshairs and snap false caused JS error.Fixed #5745, a regression causing chart.style not to apply to the container.Fixed #5750, null points on categorized axis caused blank chart when drilldown module was present.Fixed #5757, empty chart throws error with accessibility module.Fixed #5764, drilldown not working with Highstock.Fixed #5765, a regression causing 3D pie slices not to update on show/hide when animation was set.Fixed #5766, halo was not rendered for shared tooltip when density of points was high.Fixed #5768, regression since v4.2.7 causing setData with xAxis.type = category to break categories.Fixed #5770, regression causing individual box plot fill not to apply.Fixed #5773, a regression causing axis events not to be called after axis update.Fixed #5777, selected class name remained after unselecting a point by selecting another.Fixed #5779, zoom-out button not working on first touch on touch devices.Fixed #5787, a regression causing the chart.reflow option to never take effect.Fixed #5790, zoom button appeared on swiping already zoomed-out line chart.Fixed #5794, header on tooltip.split was cut off near the ends of the axis.Fixed #5801, artefacts when updating series with tooltip.split.Fixed #5817, a regression causing point-specific marker radius not to be applied. Refactored point sizing logic for initial render, updates and states.Fixed #5818, render halo in a series group, not under all of the groups.Fixed #5819, crosshair width can now be set on category axes also.Fixed #5822, a regression causing drilldown to fail the second time when allowPointDrilldown was false.Fixed #5832, shared tooltip failed with points of the same X value but different pointPlacement.Fixed #5833, split tooltip tried to remove series tooltip again after destruction.Fixed #5837, could not style null points with CSS.Fixed #5839, errors on touch-dragging on mobile devices after dynamically adding a series with visible false.Fixed #5842, image marker symbols were misplaced and missing from exported charts.Fixed #5850, hideLoading didn't work right after calling showLoading in styled mode.Fixed #5855, split tooltip was not destroyed properly.Fixed #5862, wrong hover point, when tooltip was shared.Fixed #5866, treemap point.isNull was always true.Fixed duplicate setting of halo path since HC5. Added animation to hiding halo.Fixed eternal loop when setting a new chart.height in a responsive rule.  Highcharts v5.0.0 (2016-09-29) # Added styled mode for optional separation of SVG and CSS.Added responsive option set.Added accessibility option set.Added new function, Chart.update in order to update the chart options after render time.Added new function, Chart.addCredits.Added new function, Chart.title.update.Added new function, Chart.credits.update.Added new function, Legend.update.Added new option, Renderer.definition.Added new option, exporting.error for catching errors in offline exporting.Added new option, exporting.libURL for use with offline exporting.Added new option, pane.background.className.Added new option, xAxis.className.Added new option, xAxis.crosshair.className.Added new option, plotOptions.series.dataLabels.className.Added new option, plotOptions.series.className for styling individual series.Added new option, xAxis.plotBands.className.Added new option, xAxis.plotLines.className.Added new option, plotOptions.series.zones.className.Added new option, chart.colorCount for use in styled mode.Added new option, defs for defining reusable elements in styled mode.Added new option, tooltip.padding.Added new option, series.data.colorIndex for coloring points in styled mode.Added new option, tooltip.split.Added new option, chart.description for use with the accessibility module.Added new option, chart.typeDescription for use with the accessibility module.Added new option, xAxis.description for use with the accessibility module.Added new option, plotOptions.series.description for use with the accessibility module.Refactored build system to use ES6 imports and node-based build script.Changed all default colors (except series data colors) to a simplified color scheme based on just a few shared colors.  Highcharts v4.2.7 (2016-09-21) # Added new feature, yAxis.angle, allowing positioning the axis line and labels in polar chart Y axes. This makes it practical to use multiple axes in polar charts.Added option, xAxis.nameToX, allowing points to have the same name but different axis positions on an axis of type category.  Bug fixes Fixed #1011, ignoreHiddenSeries with ordinal axis caused artefacts on a chart.Fixed #1041, gaps in the area fill of stacked areasplines.Fixed #3169, error on drilldown from a null point.Fixed #3341, exceeded stack size on mutually linked series.Fixed #3571, NaN in the beginning of data broke series.Fixed #4778, wrong rendering waterfall series, when yAxis.max was set.Fixed #5186, gaps in the fill of areasplinerange.Fixed #5383, mouse position detection with pointPlacement.Fixed #5528, a regression causing polar arearanges to fail.Fixed #5533, stickyTracking when set to false caused highlighting wrong point.Fixed #5552, linejoins in boost module lines.Fixed #5556, JS error on polygon with empty data.Fixed #5563, JS error in treemap with zero values.Fixed #5568, pointIntervalUnit broke when using more data points than turboThreshold.Fixed #5569, generic options set on the yAxis affected the colorAxis.Fixed #5570 and #5590, regression causing blank export on Batik based export servers.Fixed #5572, pie slices were not hidden in 3D pie charts on legend click.Fixed #5595, HTML tooltip did not hide on point mouse out via the tooltip.Fixed #5605, error on async onload of destroyed chart.Fixed #5618, updating master series caused wrong visibility on linked series.Fixed #5619, the Series remove event was fired when updating a series.Fixed #5620, text was mispositioned when loading a chart in a hidden iframe in certain browsers.Fixed #5622, click event for line series point was not called when column was rendered below.Fixed #5631, zeroes in logarithmic chart made the whole graph crash.Fixed #5632, gaps were broken in arearange and areasplinerange.Fixed #5646, waterfall did not work correctly with logarithmic axis.Fixed #5647, xrange points disappeared if x was outside plot but x2 inside.Fixed #5647, xrange points disappeared when x was outside visible range.Fixed #5655, animation: true on a series config caused animation to jump from the middle.Fixed #5658, error on updating series from its own mouseOver event.Fixed #5662, setExtremes on polar chart caused padded max value.Fixed #5665, addPoint animation parameter was not used.Fixed #5679, handle isArray for ES6 iterator.Fixed #5681, JS error on adding custom group to points.Fixed #5689, text had soft line wraps when white-space: nowrap was used in combination with text-overflow: ellipsis.Fixed issue #4133, error bar data labels positions failing on redraw.Fixed issue #5205, color axis changed colors when legend was disabled.Fixed issue #5567, wrong clipping of offline exported SVG in IE11/Edge.Fixed wrong handling of minRange on logarithmic axis, related to #1227.  Highcharts v4.2.6 (2016-08-02) # Added crisp correction for crisper treemap points.Added support for animating graphs to the right when updating data or setting axis extremes. Related to #5294.Refactored sideways animation logic for graphs to better reflect shifting data. Closed #5294.  Bug fixes Fixed tick animation when showFirstLabel or showLastLabel were set to false.Fixed #2522, point names should fill up categories when X is not set.Fixed #2597, data labels remained visible even though container was hidden.Fixed #3571, treat NaN in data as null.Fixed #4204, hover.brightness wasn't used for positive bars in waterfall.Fixed #4216, connectEnds with null as first point failed.Fixed #5052, wrong placement of ticks on opposite axis on 3D charts.Fixed #5197, JS error on hovering chart after setData before redraw.Fixed #5215, JS error when legend configuration object was set to false.Fixed #5280, stacked area was wrong with non-zero Y axis threshold and data points at 0.Fixed #5287, unsnapped crossshair was hidden after adding points.Fixed #5298, empty cells in Google Spreadsheet made the graph disappear.Fixed #5302, dateFormat didn't handle Date objects like before.Fixed #5310, global stacking affected polygon series.Fixed #5311, JS error when setting an event config to null.Fixed #5322, negative values in pie series was rendered incorrectly.Fixed #5324, calling Renderer.label with a shape of rect failed.Fixed #5332, last axis label was stuck when doing repetetive redraws.Fixed #5337, tooltip for polygon should not behave like scatter points.Fixed #5339, plot area disappeared when categories were too long.Fixed #5348, error in arearange series when trackByArea was false.Fixed #5350, 3D pies failed redraw when animation was off.Fixed #5352, treemap tooltip did not format point value.Fixed #5354, noSharedTooltip was undefined for gauge and solid gauge, which caused errors when shared tooltip was enabled.Fixed #5376, axis title position was wrong with font-size text values.Fixed #5396, drilldown activeDataLabelStyle color contrast did not work.Fixed #5417, regression causing HTML axis labels to misbehave with useHTML and rotation.Fixed #5442, incorrect clipRect counter causing points to disappear on series update.Fixed #5480, axis showed 0k or 0M. Suffix not needed for zero.Fixed #5486, threshold null caused wrong fill on all-negative axis.Fixed #5495, shared tooltips not always working because of rounding error.Fixed #5500, pyramid height caused wrong position.Fixed #5504, exporting module default settings was not compatible with https.Fixed #5513, Chart.setSize required both width and height to be set.Fixed #5519, issues with setting null colors in drilldown.Fixed #5522, 3D charts scale differently first time versus subsequent redraws.Fixed #5523, marker radius was incorrect when values were of type string.Fixed issues with PNG/JEPG in IE and Edge in offline exporting, ref #5410.Fixed issue #5410, offline exporting in IE/Edge failed with embedded images for PNG/JPEG.  Highcharts v4.2.5 (2016-05-06) # Added new option, exporting.printMaxWidth, to prevent printed charts cut off on the right side. Closes #2088.Added new option, title.widthAdjust and subtitle.widthAdjust, to prevent titles from flowing over elements.Added support for JPEG in offline download module, ref #5157.  Bug fixes Fixed #3070, verticalAlign didn't work with rotated data labels on column series.Fixed #4087, error 11 was not described on the website.Fixed #4670, zones colors were not applied for markers on hover.Fixed #5211, titleSetter in combination with buildText added duplicate content to the title.Fixed #5220, a regression causing JS error when resizing polar charts.Fixed #5221, support for minPointLength in xrange study.Fixed #5226, polar chart with no data failed with error.Fixed #5228, scroller.getUnionExtremes did not consider navigation axis min and max.Fixed #5230, a horizontal and opposite axis used to have wrong alignment for its title.Fixed #5234, x value of null cancelled rendering of all points.Fixed #5236, last point was not always visible due to rounding errors.Fixed #5237, inverted should not have an effect on polar charts.Fixed #5250, columns were not visible in IE10.Fixed #5254, data labels were not aligned to the point box in heatmaps.Fixed #5259, crosshair prevented point hover when drawn above points.Fixed #5261, break at the end of a label caused wrong bounding box.Fixed #5266, pinchDown was sometimes empty on Android.Fixed #5269, crosshairs on wrong point with multiple series and non-shared tooltip.Fixed #5274, dataLabels.overflow not always respected on heatmaps.Fixed issue in the xrange study with axis extremes when there were other, more extended series in the same chart.  Highcharts v4.2.4 (2016-04-14) # Added support for polar columnrange series.Added e.originalEvent to drilldown event in order to catch modifier keys and other properties. Closes #5113.Added new drilldown event, chart.events.drillupall, that is triggered after multiple single drillup events. Closes #5158. Closes #5159.Added new option, chart.options3d.fitToPlot to fit 3D charts into the available plotting area. This may affect the layout of existing 3D charts if the layout was adjusted by chart.margin. The chart.margin setting can now normally be removed. Closes #4933.Added new option, lang.shortWeekdays, to specify short weekdays other than the first three letters of the weekday.Added new value, day, for pointIntervalUnit.Added option, legend.navigation.enabled, to allow disabling legend scroll.  Bug fixes Fixed #3450, tooltip did not display after zooming on Android.Fixed #3916, halo and tooltip visible for points outside the plot area.Fixed #4552, mouse interaction and tooltip positions didn't match on 3D scatter chart.Fixed #4631, treemap series displayed no data even when data existed.Fixed #4679, when series are overlapping, the tooltip should show the topmost point.Fixed #4700, users can set and modify opacity on parent nodes in treemap.Fixed #474, vertical label alignment on top axis was off when labels were on multiple lines.Fixed #4751, inconsistent data label behaviour after redraw.Fixed #4784, setting allAreas to false does not center map.Fixed #4812, dataLabels which was supposed to be hidden were still visible.Fixed #4856, zooming did not work in Treemap.Fixed #4866, space was not reserved for tick marks, allowing ticks to overflow the chart when axis labels were not present.Fixed #4868, axis breaks were not applied for a range series.Fixed #4891, pie slice's graphics were not fully hidden, when slice was hidden.Fixed #4954, corrected floating values with isSum and isIntermediateSum in Waterfall series.Fixed #4961, placement of tooltip on flags for inverted charts.Fixed #4984, tooltip jiggling on arearange even when followPointer was true.Fixed #5007, JS error from tooltip when running in strict mode.Fixed #5010, stacked areas didn't work with Date objects as X values.Fixed #5029, runtime error on empty data set.Fixed #5030, bars were shaking on initial animation.Fixed #5034, a regression causing axis labels on vertical axis not to wrap.Fixed #5053, regressions related to chart callbacks firing async.Fixed #5060, date format for %e was not consistent with docs.Fixed #5063, solid gauge tooltip showed wrong series the first time.Fixed #5066, crosshair with snap: false only appeared when hovering a point.Fixed #5075, display was not deferred on data labels with useHTML.Fixed #5079, a regression causing vertical axis title to disappear in IE8.Fixed #5084, wrong Heatmap Intro was set in parts.js, which made the Download Builder fail.Fixed #5085, tooltip showed for points immediately outside the plot area on the X axis.Fixed #5086, X axis labels overlapped when added via Chart.addSeries.Fixed #5087, container with padding caused error with printing in IE8.Fixed #5099, single point marker was not displaying when surrounded by null points.Fixed #5101, click events did not fire on pie slices after Point.update.Fixed #5112, returning false from event handlers didn't cancel default function.Fixed #5133, data labels disappeared on chart redraw when defer was explicitly set to true.Fixed #5134, a regression causing wrong aniation on pie labels when moving from one side to the other.Fixed #5137, boost module threw JS error when doing mouse interaction after removing series.Fixed #5144, problem with percentage stack with null points.Fixed #5146, columns with zero value and no border on negative chart were visible even though they shouldn't.Fixed #5156, funnel did not respect the color set for selected state.Fixed #5160, data grouping and boost module did not play well together.Fixed #5167, wrong padding in bubble charts made point disappear after setting axis extremes.Fixed #5171, log scale transformation functions were not accessible from the outside.Fixed #5174, invalid CSS because of division by zero.  Highcharts v4.2.3 (2016-02-08) #   Bug fixes Fixed #4989, Chart.getSVG function produced invalid SVG.Fixed #4999, a regression causing JS error on hovering columns having a shadow.Fixed #5001, a regression causing empty arearange series to fail with JS error.Fixed #5004, a regression causing stacked step areas to render incorrectly.Fixed #5015, a regression causing splines with null points and connectNulls: true not to render.Fixed #5016, a regression where a spline with equal X values failed to show.  Highcharts v4.2.2 (2016-02-04) # Added new option, linecap, to allow round corners on solid gauge.Changed chart.load event to wait for external symbol images, so that their size is set correctly in the SVG. This comes in handy for export and server generated images.  Bug fixes Fixed #1977, bubble series shadow was not moved when moving bubbles.Fixed #4077, panning was not supported on inverted charts.Fixed #4086, tick marks and labels were not trimmed to axis extremes when tickPositions option was used.Fixed #4573, wrong number rounding in some cases.Fixed #4622, updating point didn't change legend's item.Fixed #4759, a regression which did not update point markers in point.update().Fixed #4779, data labels were not cropped when rotated.Fixed #4859, no easy way to catch offline export failed exception.Fixed #4861, where offline export would fail in some cases with embedded images.Fixed #4870, column width calculation not correct on logarithmic X axis.Fixed #4886, pie slicing failed and tooltip disappeared too quickly on Windows phone.Fixed #4888, fillOpacity of 0 did not take effect on area charts.Fixed #4889, plotLine and plotBand should be rendered with higher zIndex than frames in 3D view.Fixed #4890, originalEvent was missing from selection event since 4.2.0.Fixed #4898, rounding issues with Y axis causing columns to exceed threshold value, and plot lines to be filtered out.Fixed #4904, async loading of points kept running after chart was destroyed in boost module.Fixed #4905, pie data labels were not hidden when scaling down.Fixed #4906, chart did not zoom when drag and drop was dropped on a different chart.Fixed #4911, false detection of overlapping data labels in multiple panes.Fixed #4912, specific export data label style didn't take effect for pies.Fixed #4913, regression in box size detection causing chart to overflow the container in some cases.Fixed #4914, boost module loadingDiv was destroyed before redraw was finished.Fixed #4918, spline curved wrongly when plotX or Y had a value of 0.Fixed #4920, polar X axis labels misaligned after chart redraw.Fixed #4927, crosshair only worked for one Y axis.Fixed #4928, HTML label lengths were not reset on resize.Fixed #4929, halo covered point and disallowed point click in IE8.Fixed #4938, HTML elements were missing visibility and opacity setters.Fixed #4951, X axis daily ticks did not render on midnight around a DST crossover when the getTimezoneOffset callback was used.Fixed #4955, export button was hidden by category crosshair.Fixed #2069, null points in stacked areas were rendered as zero instead of gaps.  Highcharts v4.2.0 (2015-12-15) # Included the Standalone Framework in Highcharts and removed the concept of adapters.Removed global properties in Highcharts and modules. Closes #4389.Added new constructor, Highcharts.chart, that allows instanciating a chart without the new keyword.Added an option to set the renderTo div as the first argument to the constructor, like Highcharts.chart(renderTo, options);.Added support for fill-opacity and stroke-opacity attributes on VML renderer. Support semi-transparent fill with named colors on area series.Breaking change: Easing functions from jQuery UI no longer work. They will fall back to the default "swing" easing. With Highcharts 4.2, the easing function must be defined on the Math object itself.Breaking change: The sparkline demo has some changes in the constructor.  Bug fixes Fixed #3372, tooltip for columnrange series was misplaced.Fixed #4667, column was left semi-opaque after drill up with the Standalone Framework.Fixed #4782, marker image width and height didn't apply to legend.Fixed #4799, wrong position of columns when setting grouping:false in charts with multiple columns.Fixed #4801, setting visibility by series.update() didn't update series group.Fixed #4811, legend checkbox position was wrong with legend title present.  Highcharts v4.1.10 (2015-12-07) # Added new feature, borderColor: null for pies, which inherits the slice color. This allows a simple workaround for antialiasing gaps between slices when not using a real border (#1828).Added new option, xAxis.labels.reserveSpace, to control whether the labels should take up space in the layout. Closes #3479.Added new option, treemap.sortIndex.Better animation on 3D pie drilldown (#3534).  Bug fixes Fixed #2409, allowing x/yLow and y/yHigh in range charts to work across orientation.Fixed #2597, in Firefox, some elements stayed visible even when the container was hidden by visibility: hidden.Fixed #2995, series color with gradient was not correct in tooltip.Fixed #3140, wrong placement and axis margin when using rotated labels on a vertical axis.Fixed #3737, column/bar order inside group did not match the xAxis.reversed setting.Fixed #3745, added missing right shape of the slice when using startAngle.Fixed #4088, proper shapes and dataLabels positions for 3D pie chart. Minor refactoring and commenting.Fixed #4184, tickInterval not taking precedence over auto point range.Fixed #4267, updated points didn't update negativeColor until hover.Fixed #4309, crash in Firefox inside hidden iframe using standalone framework.Fixed #4369, yAxis.reversedStacks rendered wrong order for 3D columns.Fixed #4374, ticks became misaligned after updating the chart, even when chart.alignTicks was set to true.Fixed #4388, axis titles sometimes overlapping with axis labels in 3D charts.Fixed #4391, white areas in area stacks with multiple points on same X value.Fixed #4415, X axis label overlapped when step was set to 1.Fixed #4453, tooltip was sometimes visible in printed charts.Fixed #4533, pointBreak event was not called for xAxis and different series types than column.Fixed #4584, 3d pie with null data slices getting plotted.Fixed #4605, data labels were not shown if a column or column range extended far outside the plot area.Fixed #4638, bubble legend icon not tolerating relative font size units.Fixed #4640, exporting failed in IE7.Fixed #4641, pie slices with null values should not have a data label.Fixed #4645, shared tooltip did't show all of the points.Fixed #4652, wrong alignment of labels in the left side of pies.Fixed #4656, bar border was visible on zero values for reversed Y axis.Fixed #4660, regression caused missing last alternate plotBand when using categorized xAxis.Fixed #4663, treemap drillUp button is now visible when the chart has no titles.Fixed #4671, switching from normal to boost mode left duplicate graph.Fixed #4675, boost module did not remove tracker path after zooming out from SVG renderer.Fixed #4678, resetting zoom didn't reapply ellipses to all axis labels.Fixed #4681, memory leak on dynamic charts due to increasing bounding box cache.Fixed #4686, halo was not centered on the point.Fixed #4691, wrong default text alignment of axis title on opposite side when the title was in low or high position.Fixed #4694, xAxis labels were improperly positioned with opposite xAxis and staggerLines.Fixed #4701, Point.update changed types of items in series.options.data, causing issues with turboThreshold.Fixed #4704, setting new data on a pie chart didn't update color of the slice.Fixed #4721, hyphenated attribute names were not correctly animated.Fixed #4732, halo opacity not taking effect with named colors.Fixed #4736, tooltip x position was NaN when zooming in certain cases.Fixed #4737, crosshair's stroke-width should be updated after chart's resize.Fixed #4738, funnel chart not rendered correctly when center was specified.Fixed #4749, data.decimalPoint didn't work with negative values.Fixed #4756, wrong position of rotated axis labels on left side.Fixed #4768, hidden data labels visible in tall charts.Fixed #4769, plot bands didn't animate properly.Fixed #4789, dynamically added gauge dial was drawn on top of pivot.Full drilldown functionality for 3D pies. Closes #3534.  Highcharts v4.1.9 (2015-10-07) # Added new option, axis.visible.Added new option, bubble.sizeByAbsoluteValue, to allow negative bubbles sizes to be based on the absolute value rather than a scalar difference from smallest to greatest. Closes #4498.Added new series option, softThreshold, to prevent showing subzero axis ticks for line series that consist of positive data only.Added support for legendType: 'point' on more series types than just pie and its derivatives.  Bug fixes Fixed #2473, allowHTML should not affect the forExport flag.Fixed #2711, set proper order of data labels inside columns.Fixed #2854, SVG images in symbol URL's did not display in IE11.Fixed #3529, selected point changed color after updating.Fixed #3542, tooltip with useHTML did not fade out smoothly.Fixed #3632, pie inner size shouldn't be allowed to be greater than outer size.Fixed #3636, negativeColor wasn't set for marker on hover.Fixed #3801, pie chart radial gradient position did not update on chart resize.Fixed #3971, X axis label step was not honoured when rotation was set.Fixed #4136, treemap did not export correctly after drillToNode.Fixed #4298, treemap did not update axis extremes after updated data.Fixed #4431, tooltip was broken when changing from column series to a different type.Fixed #4442, alignTicks forced axes to align, even when only one of them contained data.Fixed #4465, tooltip disappeared on point when stickyTracking was false.Fixed #4482, line disappeared during animation when series.step was enabled.Fixed #4485, ticks were added inside axis break on datetime axis.Fixed #4502, wrong bounding box detection of rotated labels caused overlapping text in old IE.Fixed #4504, bars were misplaced when using reversed yAxis.Fixed #4510, point search along X axis failed in boost module.Fixed #4511, tooltip was not displayed, when yAxis.max cut off top part of the column.Fixed #4519, updatating pie data immediately failed with Standalone Framework.Fixed #4525, errors in exported SVG when allowHTML was true.Fixed #4526, series used the same clip-paths, which caused wrong clipping when using different axes.Fixed #4529, boost module produced error with pie charts.Fixed #4530, heatmap with single point and large colsize caused the point not to display.Fixed #4532, stack ID's as strings caused JS error in Highcharts 3D.Fixed #4536, unable to zoom in closely on first category when minRange was less than closest point range.Fixed #4543, null value bubbles should not be drawn.Fixed #4546, pie and flag series not showing tooltip correctly when displayed in a chart with shared tooltip.Fixed #4558, when resizing chart during addPoint animation cause error in stacking.Fixed #4562, logarithmic zAxis for 3D scatter did not render properly points.Fixed #4586, some markers moved by 1px after hovering.Fixed #4594, errors when stacking two series with different data lengths on a log axis.Fixed #4599, cropThreshold should be ignored when getExtremesFromAll is enabled.Fixed #4615, labels on color axis were wrongly positioned when useHTML.Fixed #4627, data labels exported twice in IE and Edge. Text shadows not rendered in Edge.Fixed issue with duplicated pane backgrounds after the #3176 fix.Fixed issue with offline export in Firefox. Closes #4550.Fixed regression with global animation and timing of calls.Fixed #2801, whiskerLength for boxplot can be set in pixels.Fixed #3323, 3d pie parts have better zIndexes, out part of slice crossing sides created, normalization of alpha and beta to (-360, 360) range.Partly fixed #1686, tooltip not hiding when mouse enters over it then out from series.Refactored columns. Separated the crisping logic from the rest of the translation logic. Related to #4179.  Highcharts v4.1.8 (2015-08-20) # Added experimental support for using HTML in exported charts through the exporting.allowHTML option. Discussed in #2473.Added new option, maxPointWidth, to the column chart type and its derivatives.Add %k, hours with no padding, in dateFormat.Don't cache undefined bounding box key. Closes #4328.  Bug fixes Fixed #4448, which causes duplicated event calls for column series.Fixed #1498, minor ticks were missing when using column series.Fixed #1655, where setExtremes event could be called with undefined extremes.Fixed #2775, click on custom button propagated and caused JS errors when destroying chart.Fixed #3379, minPadding and maxPadding was wrong on color axis.Fixed #3737, points within a group were not reversed in a reversed bar chart X axis.Fixed #3879, where linked series didn't inherit initial visibility from a parent.Fixed #3909, HTML data label was invisible after drilling up.Fixed #4149, tooltip went off plot area when data was clipped.Fixed #4189, wrong position of the legend in IE7.Fixed #4219, enconding problem with ellipsis. Better fix for #4079.Fixed #4246, pie slices with null values should not be rendered.Fixed #4313, setting one of the extremes removed both, min and max, axis paddings for bubble series.Fixed #4320, stack items building up and creating memory leak when adding and removing points.Fixed #4333, data label overlapping detection was too aggressive. Don't handle padding when the label doesn't have a border or background.Fixed #4339, touch-dragging in IE11 on a zoom enabled chart caused JS errors.Fixed #4343, axis lines missing when 3D was loaded.Fixed #4347, legend item click of heatmap with data classes should hide items.Fixed #4349, updating point.x prevented point from being hidden from legend.Fixed #4350, pie chart failing with StockChart constructor.Fixed #4356, pointBreak wasn't called for values below the threshold.Fixed #4356, series with null threshold now calls breakPoint correctly.Fixed #4359, drilldown pie selected slices had wrong color.Fixed #4360, float error on logarithmic axis label.Fixed #4364, chart click event fired when clicking menu items in the export menu.Fixed #4365, pie chart connectors were not hidden when data labels used HTML and hiding the series.Fixed #4371, where negative Axis offset miscalculated clip-path for series.Fixed #4390, JS error in some cases on updating a series with no data.Fixed #4396, different minSize and maxSize per separate series didn't work.Fixed #4401, better handling categories based on a point.name.Fixed #4410, a regression causing incorrect mouseover events in column charts.Fixed #4411, setting axis.labels.step to 1 didn't result in 1:1 labels.Fixed #4420, generic X axis gridline width with 3d columns.Fixed #4421, overlapping upper data labels on arearange series.Fixed #4430, point color was not set on positive points when negativeColor was set.Fixed #4434, regression causing failure with reversed solid gauge.Fixed #4443, auto rotation was not reset after widening chart when labels used HTML.Fixed #4449, a regression causing wrong alignment on legend items when rtl was combined with useHTML.Fixed #4477, too dense ticks when setting staggerLines, caused browser crash.Fixed #4313, setting one of the extremes removed both, min and max, paddings.Fixed #4351, setSize with standalone adapter didn't resize inner container.Fixed animation on updating map colors.Fixed issue with displayNegative not working with all data. Closes #4419.Fixed issue with pie and data labels producing JS error in IE6.Fixed issue with updating mapbubble point to null.Fixed regression with JS error on updating pie slice value to null.Improve logic for pointBreaks, touch #4356.Partial fix for #3861, bubble series not working with logarithmic axes. It now displays, but the bubbles are clipped unless the user sets a padding.  Highcharts v4.1.7 (2015-06-26) # Added new option, drilldown.allowPointDrilldown, that can be set to false to allow only drilling to categories. Closes #4295.Added support for useHTML in legend navigation.Added useHTML option to no-data-to-display module. Closes #4316.  Bug fixes Fixed #2911, JS error when drilldown and allowPointSelect were enabled at the same time.Fixed #3318, gauge background altered background on polar charts in the same page.Fixed #3650, updating a point from zero in 3d pies.Fixed #3709, crash when showing/hiding linked series and setting data at the same time.Fixed #3941, added option to turn off axis label ellipsis through text-overflow style.Fixed #4130, errors when running Series.update from the series' own events.Fixed #4170, halo was still visible after hiding pie slice.Fixed #4233, columns and areas ascended from botton when threshold was null and all values negative. Closed #4282.Fixed #4275, when null points were present inside an axis break, connectNulls: false did not have an effect.Fixed #4280, 3D for inverted charts was disabled.Fixed #4284, a regression causing columns to disappear after Point.update with an object argument.Fixed #4291, number suffixes like k and M was applied to non-round tick labels.Fixed #4301, point update on solid gauge gave wrong animation.Fixed #4308, graphs were clipped to axis line even when it was offset.Fixed #4309, JS error in Firefox when rendering chart inside an iframe with display:none.Fixed #4310, point hovering was unstable when stickyTracking was false and point markers disabled in normal state.Fixed #4318, ignoreHiddenPoint didn't take effect for funnels.Fixed #4319, tooltip was broken on canvas heatmap demo.Fixed bad translation from broken axis pixels to values. Part of #4229.Fixed issue with Batik powered exporting and IE8. Invalid SVG tag.  Highcharts v4.1.6 (2015-06-12) # Added new option, series.getExtremesFromAll, that tells the y axis to be scaled to the whole series range, not only the visible part.Added scaling support for Z axis on 3D charts.Added xAxis.title.x and xAxis.title.y options for positioning.Export: Added missing treemaps.js, fixes #4092.Export: Added support for Map constructor.Export: Added treemaps for serverside rendering.Export: Enable loading of maps.js.  Bug fixes Fixed issue with wrong data label being hidden on overlap in columns.Fixed issues with ellipsis on first and last label on X axis. Closes #3975.Fixed #4160, 3D should be disabled for inverted charts.Fixed #4160, 3D should be disabled for inverted charts.Fixed #1457, columnrange did not render with reversed Y axis.Fixed #182, browser hangs when updating chart from series mouseOut event.Fixed #2077, innerSize of pies was not correct when size was dynamic.Fixed #2088, crosshair shown on multiple axes.Fixed #3923, crash in Chrome when extending a dashed line to extreme length.Fixed #3974, duplicated data labels on Retina displays when text-shadow is applied.Fixed #3977, tooltip content sometimes displayed outside tooltip.Fixed #4069, slow updating of multiple pie slices.Fixed #4108, line wrap dataLabels in tree maps.Fixed #4116, cannot disable tooltip on polar chart.Fixed #4117, broken tooltips in pie charts when useHTML was enabled.Fixed #4124, treemap click on legend item returned error.Fixed #4128, tooltip only looked at X value for line series.Fixed #4146, point marker stayed after updating point to null when connectNulls was true.Fixed #4161, a regression causing wrong position of tooltip in top row of heatmap.Fixed #4163, tooltip broken on pie in combo chart.Fixed #4166, resetting point state was coupled to tooltip, resulting in state not reset when the tooltip was empty.Fixed #4167, chart crashed on Y axis breaks in stock chart.Fixed #4177, X axis label ellipsis overlapped when in the middle of the axis.Fixed #4197, ignoreHiddenPoint didn't work.Fixed #4200, unresponsive tooltip on tight column chart with shared tooltip.Fixed #4201, redundant tick alignment to empty axes.Fixed #4203, radial gradient rendered wrong in 3D Pies.Fixed #4208, click events did not bubble.Fixed #4210, touch scroll was trapped when zoomType enabled.Fixed #4217, tickInterval on linked axis did not follow that of parent.Fixed #4221, negative color and zones not working with logarithmic axis.Fixed #4223, tooltips showed year when data resolution was less than 1 millisecond.Fixed #4247, X zooming within an Y axis break resulted in empty chart.Fixed #4256, summary columns on waterfall, including data labels, extended below the plot area if an Y axis minimum was set.Fixed #4261, added namespace to drillToNode on click event in tree maps.Fixed #4264, column in stacked chart was mispositioned in some cases.  Highcharts v4.1.5 (2015-04-13) # Added new option, series.keys.Added now option, autoRotationLimit, as an upper limit for when to apply auto rotation. Closes #3941.Added options to solidgauge, radius and innerRadius on individual points.Changed tooltip behaviour in line charts and derivatives. This made swithching between series easier when the other series was covered by the tooltip.  Bug fixes Fixed #2922, redundant drilldown event on clicking data label.Fixed #3355, causing misaligned bars around the threshold value.Fixed #3758, setData on heatmap caused X axis to lose point range.Fixed #3839, axis labels not using available space after resize.Fixed #3867, errors on drill up on multi-series multi-level chart.Fixed #3912, shared tooltips not working well with pointPlacement.Fixed #3935, time axes got wrong extremes in rare cases.Fixed #3951, drilldown activeLabelStyle was lost after setting extremes.Fixed #3962, tooltip covered stacked columns near edges of the chart.Fixed #3967, shared tooltip not working with two datetime axes.Fixed #3969, legend indicator not displayed on colorAxis for 0 values.Fixed #3976, one legend item's height influenced all subsequent boxes.Fixed #3985, clicks registering incorrectly on column charts.Fixed #3988, column legend markers were not aligned to baseline.Fixed #3990, drilldown failed after destroying and re-initialising chart.Fixed #3995, all points were black after drilling in treemap with a coloraxis.Fixed #3996, font-style not taking effect with useHTML.Fixed #4001, errors thrown on area with a single point and zones.Fixed #4003, text replacement in export replaced content in label.Fixed #4006, wrong rendering of zones with values less then the minimum.Fixed #4014, touch scrolling not working on charts since the default followTouchMove changed.Fixed #4015, solid gauge color not updating in IE8.Fixed #4035, lineWidthPlus adding to states.hover.lineWidth.Fixed #4046, treemap issue with drillToNode and redraw of the chart.Fixed #4051, minPointLength gave wrong position on reversed Y axis.Fixed #4055, unable to set borderWidth to 0 for 3d columns.Fixed #4056, stack labels on reversed axis not vertically aligned correctly.Fixed #4062, 3d zIndex incorrect on chart resize.Fixed #4067, 3d columns datalabels not aligned.Fixed #4068, null colors rendered as black in columns and white in pies.Fixed #4069, setVisible was very slow on pies with many legend items.Fixed #4070, label ellipsis lost on vertical axis after redraw.Fixed #4075, zone elements were not destroyed on series update.Fixed #4079, bullets in tooltips had wrong encoding in IE8 on non-UTC pages.Fixed #4082, series with zones didn't apply hover line width.Fixed #4083, series with zones animated wrong on addPoint.Fixed #4085, wrong usage of momentjs in demo.Fixed #3832, bundled PhantomJS scripts not copied to filesystem on Windows.  Highcharts v4.1.4 (2015-03-10) # Added originalEvent to wrapped event argument for point and series click. Closed #3913.Changed description for error 23 (related to #3920).Fixed data.parseDate callback.  Bug fixes Fixed #1093, chart was resized after cancelling print.Fixed #3890, errors on box plots and error bar series when stacking was set in general plot options.Fixed #3891, axis label rotation not working outside -90 to 90.Fixed #3899, tooltip on column range only working on one point per X value.Fixed #3901, tooltip displaying for null points.Fixed #3904, shared tooltip gave errors with null points.Fixed #3911, data label duplication on WebKit with Retina displays.Fixed #3919, click event always triggered on the same point with a shared tooltip.Fixed #3920, color tweening with gradient fills caused black result.Fixed #3926, tooltip not showing when entering the plot directly on a column.Fixed #3932, shadow was not applied when negativeColor was used.Fixed #3934, pie chart did not update when legend was hidden.Fixed #3937, pointer events not reset after chart destroy.Fixed #3945, tooltip did't work afer resize.Fixed regression causing mouseover to not work with a single series.  Highcharts v4.1.3 (2015-02-27) #   Bug fixes Fixed #3900, duplicated Y axis in exported charts. Made export module more testable so it would have caught this error.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, error in title setter when setting a non-string value.  Highcharts v4.1.2 (2015-02-27) # Added new option to tree maps: interactByLeaf.Added new dataLabel option, shape, in order to allow callouts and connectors on data labels.  Bug fixes Fixed #3567, Safari failed at exporting charts with images.Fixed #3898, zones incorrectly applied if outside axis range.Fixed #3895, JS error when setting element title to a non-string value.Fixed #3886, wrong rendering of waterfall with a non-zero Y axis minimum.Fixed #3873, series.points array order was modified when building the k-d tree.Fixed #3866, data labels not re-appearing in remaining series after hiding another series.Fixed #3875, eternal loop and crash in Chrome when using minorTickInterval on an axis with very close data points.Fixed #3842 and #3872, data labels with text shadow are mispositioned in Firefox and modern IE.Fixed #3849, duplicated text on data labels in export. Closes #3864.Fixed #3868, setData broke tooltip.Fixed issue with tooltip not hiding after hiding a series from a floating legend.Hide tooltip on mouse leaving the plot area, also when a hoverSeries is not defined.Fixed #3860, a regression causing onMouseOver event not to work on line series.Fixed #3856, shared tooltip in polar charts.Fixed #3863, pointer with data grouping and addSeries.Fixed #3844, colorByPoint not working on tree maps.Fixed #2202, chartOptions.xAxis options not added in export.Fixed #3852, a regression causing logarithmic axis on gauges to fail.Fixed #3845, problems with addPoint on 3D pies.Fixed #3841, 3d column layering issue.Fixed #3793, charts with huge numbers fail at Number.toFixed.Fixed #3841, issue with multiple columns in 3d.Fixed #3830, point names in category axis were lost after Axis.update.Fixed #3836, a regression causing plot band labels to always be visible.Fixed #3840, isIntermediateSum miscalculation.Fixed drilldown issue with labels having both drilldown and static points.Fixed #3839, a regression causing columns not to be clipped while animating in.Fixed #3837, too aggressive data label collision detection in heat maps.Fixed #3834, crosshair drawn incorrectly on dynamically added yAxes.Fixed #3806, JS errors on clicking on non-drillable axis label after drilldown.  Highcharts v4.1.1 (2015-02-17) #   Bug fixes Fixed #3826, a 4.1 regression causing markers to be clipped after setSize.  Highcharts v4.1.0 (2015-02-16) # Added polygon series type.Added e.category event argument in drilldown events to make it clear when a category is clicked. Related to #3771.Added new option to the data module, firstRowAsNames.Added new option, pointIntervalUnit, in order to allow months and years as point intervals. Closes #3329.Added beforePrint and afterPrint events. Related to #2284 and #3729.Added new method, Series.removePoint, to allow removing points that are not instanciated on demand.Added new option, global.getTimezoneOffset, to allow integration with third party timezone libraries like moment-timezone.js.Added new Axis option, tickAmount. Refactored alignTicks on multi-axis charts to first compute a tickAmount, then make all axes comply with that.Added new Axis option, autoRotation as an array of possible values.Added new callback option, tooltip.pointFormatter.Added polar support for arearange. Issue #3419.In solid gauges, added support for initial animation as well as setting animation object for updates. Closes #3135.Made the entire numberFormat method settable and wrappable from the outside.Made tooltip.followTouchMove true by default, and allowed page scroll at the same time.Implemented support for "contrast" color setting in data labels. When the data label is inside a shape (like a column), this will ensure the best readability.On category axes, let the crosshair width cover the whole category like a band.Refactored zIndex handling on SVGElements so that the zIndex can also be modified after the element is first added.Changed the Axis.tickPositioner callback so that the default tick positioning logic runs first, to allow modification in the tick positioner instead of creating positions from scratch. Closes #3538.Made the legend draw below or above the plot area in cases where it is placed in a corner and the layout is horizontal.Implemented algorithm for setting precise tooltip xDateFormat when needed, but general format like year, month, day etc. when the time falls on midnight and the closest point range dictates it. Related to #3329.New default behaviour for the xAxis.minTickInterval option on datetime axis. It now goes to the closest point range by default.Implemented silent degradation instead of error 19 when user options dictate too many ticks on an axis.Removed overflow:justify logic. Instead, move labels and add ellipsis in case of overflow.Export server: Adapted to PhantomJS 2.Export server: Implemented XSS filter.Fixed error on applying stacking to area range series.Partly fixed #3506, overlapping axis labels on polar chart.Fixed waterfall issue where the upColor stayed after updating point to negative. Related to #3710.Don't allow decimals on yearly X axis.  Bug fixes Fixed #3724, JS error on preventing the selection event and running setExtremes immediately.Fixed #3728, Point.update not updating category name.Fixed #3743, minor ticks rendered outside plot area.Fixed #3778, redundant legend paging visible after redraw.Fixed #3197, drilldown with hidden series.Fixed #3719, updating areaspline to area failed.Fixed #3703, show no-data message on hidden series also.Fixed #3679, no-data label not realigning after showing hidden container.Fixed #3710, update point did not update sum in waterfalls.Fixed #3712, checkboxClick not handled for pie charts.Fixed #3708, color disappearing on redraw of solid gauge.Fixed #3702, JS error when running setData on a hidden series.Fixed #3670, funnel ignored point specific border settings on init.Fixed #3648, data label posision for column incorrect when using custom positioned Y axis in inverted chart.Fixed #3654, millisecond ticks not placed correctly.Fixed #3652, minor grid lines sometimes rendering outside the plot area to the right.Fixed #3201, crashes when zooming too far in on a dashed series.Fixed data module issue with blank chart when using forced categories with data longer than turboThreshold.Fixed #3635, markers overlapping in cases where they should not, according to the default behaviour.Fixed #2361, plot bands disappearing under certain conditions when zooming in so that parts are clipped.Fixed #3636, negative colors not applied on hover.Fixed #3623, negative values in pies causing bad drawing after running setData.Fixed #3575, huge columns not rendering on Chrome.Fixed #3608, reversed Y axis in gauges causing arcs to be drawn inside out.Fixed #3600, errors raised in modules when a chart was destroyed in its own callback.Fixed #3346, tooltip failed for two Y axes side by side.Fixed #3579, mixed up levels in multidimensional drilldown.Fixed #3569, reset zoom button disappeared after multiple zoom operations in empty area.Fixed #3390, single heatmap point getting huge size and causing rendering defects. Better axis metrics for single points. Closes #2515.Fixed #3544, drilling up failed when top series data was added dynamically.Fixed #3536, implemented error message on wrong color definitions in heat maps.Fixed #3525, error 12 in master-detail demo.Fixed #3295 and #3514 label box not rendered correctly with 0 values.Fixed #3507, fixed width tooltip with a single word on the last line was clipped horizontally.Fixed #3501, long axis labels taking up too much space instead of wrapping in drilldown charts.Fixed #3500, monthly and yearly X axis ticks having the wrong distribution when using timezoneOffset.Fixed #3449, export menu not working on touch devices when zoomType was set.Fixed #3391, halo not hidden on hiding a pie slice from legend.Fixed #2889, tooltip not displayed on line series when followPointer was true. Closes #3258.Fixed #3176, updating gauge axis caused background to disappear.Fixed #2919, errors and wrong behaviours on multi-level drilldown.Fixed #3445, pie charts showing wrong bullet color in tooltip.Fixed #2919, errors on drilldown with multiple axes.Fixed #2912, JS error on drawing hidden waterfall.Fixed #3437, data module failing with numeric data in first column.Fixed #3436 causing round linecaps on median lines in box plots. Reverted fix for #1638, a workaround for a Firefox bug regarding linecaps. Newer Firefox versions don't have the bug.Fixed #3431, regression causing error 16 not to be triggered.Fixed #3434, error 10 throwed with null values on logarithmic axis.Fixed #3380, a regression causing Series.update not to honour updated zIndex.Fixed #3240, 3d pie labels with 0 values.Fixed #3418, wrong default tooltip header date format when passing points every two days, two months etc.Fixed #3416, broken tooltip on colorAxis.Fixed #3152, tooltip didn't display on the far left of a zoomed axis with categories.Fixed #3382, line series disappering when a negativeColor was applied and the threshold was way beyond the chart.Fixed #3411, align ticks fails without ticks.Fixed #3402, redundant halo on heatmap.Fixed #3404, regression causing canvas heatmap to white out.Fixed #3402, issue with updating bar to pie.Fixed #3389, JS error when drilling up multi-level too quickly.  Highcharts v4.0.4 (2014-09-02) # Added more date parsing logic to the data module. Now integrates with Date.js, and uses Date.parse. Tries to parse all dates, but falls back to categories if dates are not sorted (which may be a sign that parsing went wrong).Added support for setting marker image dimensions. Closes #1807. Closes #1817.Added a better default value for xAxis.allowDecimals. Don't allow decimals in X value ranges that look like years. Closes #3363.Added warning on trying to plot negative points on a logarithmic axis.Allow changing "Date" class used to support other calendars. Added new option global.Date.Allow overriding Highcharts.numberFormat from the outside. Closes #3284.Made point.click event work in combination with drilldown charts.  Bug fixes Fixed #3381 3D pies, wrong z index applied to sides.Fixed #3279, column z issues in 3d.Fixed #3397, footerFormat does not replace variables.Speed optimization of Series.setData, related to #3260.Fixed #2909, a regression causing chart click event not to fire when zoom enabled on touch devices.Fixed #3334, missing animations in 3d pies.Fixed issue causing markers to show even on dense line series, in spite of new logic in 4.x where it should depend on series density.Fixed #3202, tick marks being drawn in unwanted positions when tickInterval was set on categorized axis.Fixed #424, wrong tooltip position for column series in a pane position.Fixed #3352, JavaScript errors on clicking category labels on async drilldown.Fixed #3344, drilldown axis label style inconsistent after redraw.Fixed #3353, wrong axis minimum and maximum on thresholded series when switching from linear to logarithmic axes type.Fixed #3342, memory leaks in jQuery 2.x when repeatedly reinstanciating charts or destroying and recreating renderer primitives.Fixed memory leak on addPoint caused by adding empty names to the Axis.names lookup table.Fixed #3328, 3D Columns and null values.Fixes #3317, extra tick added when there are only two ticks (start and end).Fixed #3315 by disallowing duplicate ids in drilldown.Fixed #3182, three level drilldown broken when drilling up and down again on the same series.Fixed #3276 with HTML markup in element titles when a label is shortened by ellipsis.Fixed #3088, tooltip blocking new mouse interaction after hiding when useHTML is true.Fixed #3285, funnel and pyramid center option not working for vertical dimension.Fixed #3300 where data labels would remain semi-transparent when chart updated in the middle of labels fading in.Fixed #3295, labels do not render 0 as value.Fixed #3282, plotBorder width changed sign, causing a strange animation.Fixed #3245, waterfall series failed when first element was Sum or IntermediateSum.  Highcharts v4.0.3 (2014-07-03) # Added 3d options edgeColor and edgeWidth to distinguish from borders that have different defaults.Added option, chart.panKey, to allow panning and zooming on the same chart. The chart can now be configured so the user can pan by holding down the shift key while dragging.Added features zMin and zMax for bubble series, to set the Z value corresponding to minSize and maxSize independently from the data.Changed default top position for loading label to 45%, which results in a vertically centered label.Better handling of data label heights on pie charts, related to #2630.Better handling of dynamic font sizes. Adjust tooltip text-wrapping. Apply dynamic font size (em) on line breaks. Fixed placement of title and axis labels when using ems for font size. Added support for em font-size in legend.itemStyle.  Bug fixes Fixed #2251, a regression since 3.0.8 causing text and graphic elements to become selected while zooming in old IE.Fixed #3195 where a short axis with startOnTick and endOnTick set to false would display no ticks at all.Fixed #2694 causing columns to overlap by one pixel in some cases when pointPadding is 0.Fixed #2227, waterfall breaking with more than one intermediate sum.Fixed #3163, pie chart data labels displaying outside plot area.Fixed #1991, a regression causing area stacks with null or missing values to draw incorrectly.Fixed #3158 causing wrong line wraps on text containing markup.Fixed #3151, waterfall columns not displaying a border when the rendered height was 0.Downloadbuilder missing metatags in SVG, added filterset, fixes #3106.Fixed #3072 causing unexpected borders after hover on column series when borderWidth was 0.Fixed #3132 causing wrong line breaks in SVG text (pseudo HTML) containing markup.Enabled mouse tracking on data labels for some series types where it had been mistakenly disabled.Fixed #2697, JavaScript error in IE11 on destroying a chart containing useHTML elements after the chart container has first been emptied.Fixed #3126, waterfall graph getting wider on hover. Introduced new options, lineWidthPlus, radiusPlus for hover state of graphs and markers.Fixed #3116, halo failing to animate when a point was updated to a new position. Removed redundant pointer.reset call on Axis.redraw because Chart.redraw also calls the same method.Fixed #3113, roundoff error throwing off calculations of extremes on log axis.Fixed #3104, touch panning not being able to pan outside the data range even if the axis min and max options were outside the range.Fixed #3098, plot area size of a pie chart not being recalculated after the legend size changed.Fixed #3090 causing default 3d options not to be interpreted correctly.Fixed #3094 causing series Z index to change after Series.update.Fixed regression issue #3095, semi-transparent fills coming out as black in exports created by Batik.Fixed #3082, positioning of 3d pie datalabels.Fixed #3080 causing JS error on low chart due to negative height of the legend clip rectangle.Fixed #3051 causing wrong Z indexes for slices in 3d pie charts.Fixed #3075 causing touch panning on a categorized axis to alter range.Fixed #3039, series options was not read for 3D.Fixed #2893 causing heatmap point colors not to update after updating the color axis coloring.Fixed #1080, loading text not reflowing to changed chart size.Fixed #3056 with tooltip chevron not pointing exactly on the right point of the graph when animating between close positions.Fixed #3044 causing JS errors in some cases when axis label formatter returned null or undefined. Closes #3050.Fixed #3053 causing series to be cropped too tight on logarithmic X axis when the number of points exceeded the crop threshold.Fixed #2240 causing the point mouse out event not to fire when the tooltip is shared.Fixed #2997, solidgauge issue with points past ±360° or below yAxis.min.Fixed #3028 causing the last series to become unlinked when calling Series.update on several linked series in succession.Fixed #3027 causing truncation of axis labels when the axis title offset is set and the axis title is shorter than the labels.Fixed #3023 causing defered data labels to show even if series was hidden in the meantime while animating.Fixed #3003 causing rotated data labels to be misaligned after redraw when using Standalone Framework.Fixed #3017 causing centering of data labels on inverted range series not to work.Fixed #3007, with halo showing on invisible points in pies.Fixed #3016 causing halo on sliced pie series to diplay incorrectly.Fixed #3000, labels wrongly aligned on plot lines with multiple axes.Fixed #3014 causing wrong tooltip position in waterfall charts in Highcharts 4.Fixed #3006, prevent null and 0 points from rendering in 3D Pies.Fixed #2982 by returning the added plot line or plot band object after Axis.addPlotLine or Axis.addPlotBand.Fixed #2977, set mimimum view point distance for 3D.Fixed #2975 with clipping not being updated on column series and derived series types after chart resize.Fixed #2968, 3d columns not drawn correctly when equal to max.Fixed #2963 where columns were badly drawn in Chrome due to a rendering bug.Fixed #2962 causing data labels on gauges not to display unless defer is set to true.Fixed #2954 that caused invalid SVG attributes on animating in and out grid lines when running older jQuery versions or the Standalone Framework.  Highcharts v4.0.0 (2014-04-22) # For news, see the release announcement.The default design has been updated with Highcharts 4, but all aspects of design can be reverted to the Highcharts 3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts v3.0.10 (2014-03-10) # Improved performance by 35% in our benchmark suite.Added new option, plotOptions.gauge.overshoot, that takes a value in degrees for how much the dial should overshoot when the value is off the chart.Added smarter logic to Series.setData, where instead of re-creating all the data points, existing points are updated. This allows animation, performs faster and is less prone to memory issues.Added option, yAxis.reversedStacks, to choose whether to stack from the top down or from the bottom of the stack and up.Added support for drilldown on multi-series column charts. Closes #2604.Added 'pyramid' type of series.Added 'reversed' option to funnel series.  Bug fixes Fixed #2755 where attributes in pseudo-HTML were applied outside elements.Fixed #2753 which caused errors and broken behaviour on drilldown containing null points.Fixed #2770 where data labels on error bars were not displayed.Fixed #2681 where the Pointer object leaked memory after Chart.destroy.Fixed #2763 where series on log axes would disappear alltogether when the axis became too short.Fixed #2760 where the ignoreHiddenSeries setting had no effect on bubble sizes.Fixed issue with Chart.setTitle not causing the chart to redraw to adapt to changed size of the title. Closes #2719. Closes #2744.Fixed #2738 where legend navigation would add one page too many when the last page had two items.Fixed #2722 where pie slice data label connectors would have the wrong Z index after hiding and showing the slice.Made chart.style option take effect on chart instances, not only globally. Closes #2723.Fixed #2713 where series connected to a dynamically added X axis would fail.Fixed issue with horizontal axis labels being clipped instead of justified into chart area. Closes #2703.Fixed #2700 causing data labels to not render inside columns if the actual value of the column was cropped.Fixed #2693 with drilling up from drilldown caused interference between charts.Added sparkline demo.Fixed memory leaks in IE11 due to implementation of touch support. Closes #2691.Export server: Fixed jar location lookup on Windows, closes #2869.Fixed issue with disappearing bar chart data labels in certain chart widths. Closes #2683.Fixed issue with showLoading not displaying in IE9. Closes #2686.Fixed issue with Axis.update not removing all associated series. Closes #2687.Fixed failure in updating stacking from percent to normal. Closes #2682.Fixed issue with misalignment of rotated axis labels with useHTML in IE11. Closes #2684.Fixed issue with wrapping horizontal legends not taking the x option into account. Closes #2680.Fixed issue with JS errors on hovering chart when running IE11 in combination with the Standalone Framework. Closes #2672.Fixed issue with wrong rotation of polar charts when X axis was reversed. Closes #2570.Fixed issue with tooltip position and hover point on polar chart where startAngle was < 0. Closes #2665.Fixed issue with empty tooltip boxes visible in tall pages in IE10.Fixed issue with showLoading not working in Standalone Framework. Closes #2653.Fixed issues with pie slices and data labels remaining visible after hiding the pie series itself. Closes #2315. Closes #2656.Fixed issue with automatic line height on labels with em font sizes. Closes #2651.Fixed issue in 3.0.9 where wrong vertical axis labels would be skipped when they were of varying height. Closes #2642.Provided reasonable default column width and group width for column charts with only one X value when minRange was set. Closes #2610.Fixed issue with too many pages in the legend when using legend navigation. Closes #2617.Fixed unexpected effects of zooming outside the data range. Closes #1734.Fixed issue with line graphs not being vertically centered when there was only one value which exceeded the upper limit of 44bit values. Closes #2619.Worked around Firefox 26 drawing issue where legend items would not redraw after resizing the chart. Closes #2580.Fixed issue with mispositioned data label on single pie slice with certain pie sizes, caused by JavaScript rounding error. Closes #2650.Fixed issue with text bounding boxes not being correctly computed when the chart was added to a container with display:none !important. Closes #2631.Fixed issue with gauge pane background color not taking effect on multiple panes, or respecting changes. Closes #2257. Closes #2649.Fixed error in Standalone Framework where calling destroy on an animating element would result in endless error messages. Caused errors when a chart was destroyed while fading out the tooltip. Closes #2616.Fixed pie chart issue with messed up data labels with certain combinations of start and end angle. Closes #2645.Fixed issue with pies ignoring endAngle when it was set to 0.Performance improvement for updating tick labels. Closes #2640.Fixed issue with tooltip header not displaying relevant time resolution when points where added at minute or hour resolution with a day between them. Closes #2637.Fixed issue with wrong bounding box detection of numeric texts when they were of number type instead of strings. Closes #2316.Fixed issue with JS errors and failing to activate charts in pages that are saved to disk from the browser. Closes #2609.Fixed issue with followPointer not working correctly for line charts.Fixed issue with numerical legend items crashing chart when navigation was enabled. Removed unsafe internal use of elemWrapper.bBox, used elemWrapper.getBBox() instead. Closes #2605.Fixed regression with pie slice hover color becoming increasingly brightened after repeated redraws. Closes #1619.Fixed issue with positioning of markers in oldIE in inverted charts. Closes #1111.Fixed oldIE issue with box plots and error bars not showing in inverted charts. Closed #1680. Closed #1806.Fixed missing stack percentage in normal stacks. Closes #2551.Fixed issue in Standalone Framework with getting the right mouse position inside a scrollable div. Closes #2205.Fixed JS error on hovering over a chart after running Chart.setData without redrawing. Closes #2594.Fixed issue with tooltip position if data is NaN.  Highcharts v3.0.9 (2014-01-15) # Added bower.json file. Closes #2244.  Bug fixes Fixed JS error on quickly moving the mouse out of a chart. Related to #2499.Fixed issue with text positioning in modern IE when CSS line height was much smaller than font size. Closes #2444. Closes #2568. Closes #2569. Affects #2591.Fixed issue with crosshairs not exactly following the tooltip, mostly visible ou touch devices. Closes #2582.Fixed issue with categorized Y axis on gauges being positioned wrong. Closes #2593.Reverted optimization that skipped individual handling of point attributes. Closes #2549. Closes #2587.Fixed issue with adding a point in the middle of a line series failing. Issue #1109.Fixed regression with datetime tooltip header format falling back to full years. Closes #2581.Fixed rounding error in stack labels. Closes #2576.Implemented new option, switchRowsAndColumns, in the data module.Fixed regression in 3.0.8 with hover color of columns having individual color option. Closes #2579.Fixed issue with fillColor on box plots not honored when colorByPoint is true. Closes #2574.  Highcharts v3.0.8 (2014-01-09) # Export: Streamlined and removed unnecessary properties in maven pom.xml.Export: Cleaning up overlap in maven dependencies for java export server.Added handling of white-space: nowrap in styles for SVG text.Implemented logic that removes overlapping axis labels just before they are rendered.  Bug fixes Fixed issue with unexpected arc rendering in VML. Closes #168.Added multitouch support for IE10/11. Closes #2536.Added default date format for the headerFormatter. Closes #2546.Fixed issue with categorized Y axis overflowing the plot area because category padding weren't applied. Closes #1784.Fixed issue with negative color being clipped in a series with all negative values.Optimized performance by caching results for getBBox for numbers, since numbers are monospaced and the same bounding box applies to any number of the same character length and the same font family and font size. Also, don't delete cached bounding box on word wrap when there is only one word. These two optimizations improved rendering times by 15% on Chrome and Firefox using our benchmark tests. Relates to #2525.Fixed JS errors in IE11 workaround when destroying a chart in the same thread as creating it. Closes #2030.Prevented memory build-up in datetime axes by avoiding unnecessary use of the Axis.names array for categories. Closes #2523.Fixed issue with hidden pie slices affecting the positions of data labels. Closes #2510.Prevent timeout when calling chart.reflow as an API call. Closes #2224.Fixed issue with disappearing data labels in gauges when center is outside plot area. Closes #2415.Fixed issue with clipped chart when resizing down. Closes #2503.Fixed typo in series sorting causing series to change order when updating series type in IE9. Closes #2501.Fixed issue with point state marker graphic staying in its previous position after a zoom operation on mouse or touch devices. Closes #2500.Fixed issue on iOS where selection of columns and pie slices needed two touches except on the very first run. Closes #2499.Fixed JS errors on empty series on secondary axis when tickPositions were defined. Closes #2482.Added formattributes to exporting to allow setting custom attributes.Removed line running setting event.returnValue, which causes a warning in Chrome. Closes #2251.Fixed a couple of minor issues related to legend navigation.Fixed regression on running Point.update with null value. Closes #2481.Export: Refined code on waiting for images loaded.Export: Missing images fallback gracefully, closes #2474.Fixed regression with stack order not being affected by series.index. Closes #2456.Fixed issue with bubble chart not displaying when displayNegative was false.Fixed issue with data label styles not updating from Point.update. Closes #2468.Improved setOptions by copying new objects into existing instead of creating new defaultOptions structure. Improves performance and keeps internal pointers. Closes #2469.Fixed SVG errors on exporting SVG from IE8, causing Batik not to render the SVG. Closes #2463.Fixed JavaScript error when firing a series click event in IE8 using the Standalone Framework. Closes #2465.Removed thousands separators from numbers below 10,000 in the default X axis label formatter. This prevents commas to be inserted in years when applied to a linear axis. Closes #2466.Data module: Update itemDelimiter option to default to tab character if a tab is found within the CSV string. This makes CSV parsing work with content copied directly from Excel.Fixed issue with clipped legend items when navigation is enabled. Closes #2098.Fixed issue with document events set in exporting not being destroyed when destroying chart. Closes #2407.Fixed issue with tooltip options not taking effect on certain series types where the same options were defined in series specific defaults. Closes #907.Fixed issue with markers on inverted charts. Closes #2450.Fixed issue with shared tooltip showing wrong category when pointPlacement was used. Closes #2434.Performance improvement by not listening to document mousemove when the tooltip is hidden.Added symbolHeight and symbolRadius options for legend.Fixed issue with orphaned stack labels after Series.destroy and Series.update. Closes #2440.Fixed issue with updating the visibility of a pie slice causing it to go invisible. Closes #2430.Added new option, global.timezoneOffset, to allow setting which timezone the data is displayed in even though the input data is defined as UTC.Fixed bad positioning of rotated elements when useHTML was true. Closes #2404.Added error message on trying to add an object literal point configuration on a series with more data points than the turboThreshold.Fixed issue with flags on the last point dropping down to the X axis when the main series enters data grouping. Closes #2374.Fixed regression where legend would disappear when the linkedTo option was set to null. Closes #2414.Fixed regression causing JS errors after updating an axis title when useHTML is set. Closes #2402.Fixed issue with NaN tick positions being applied to empty axis, causing wrong number of ticks in chart with multiple axes. Closes #1741.Export: Beans from export-convert-module are now configurable from the export-web-module.  Highcharts v3.0.7 (2013-10-24) # Performance improvement by moving color parsing regexes out of the Color class to a global definition in order to be instanciated only once.Made new option, linecap, for line series. Closes #2358.Allow disabling the hover state for a specific point marker. Closes #1610.Made showInLegend option overridable for linked series.Worked around Firefox/Win issue with median lines on box plot spilling over the edges of the box. Closes #1638.Made the data labels inherit the series' cursor setting.Improved fix for #2030 to work with IE11 quirks mode.Reverted fix for #1651, which introduced an error with stack data labels not being moved on update. Closes #2336.Added new option, sizeBy, to bubble charts to set whether the area or the width should reflect the data value.Improved workaround for IE11 text positioning issue by not applying it to exported charts, closes #2030.  Bug fixes Fixed issue with useHTML legend items not drawing after removing all and adding again. Closes #2393.Fixed regression after fixing #2153, related to assigning styles in VML browsers. Fixes #2368 and #2368.Fixed issue with plot band label not being hidden when zooming out of view. Closes #2328.Fixed wrong calculation of point.percentage in percentage stacked tooltips. Closes #2375.Fixed issue with yearly ticks being computed wrong, causing stagger lines where not necessary. Closes #2360.Fixed issue with IE8 not being able to add soft line breaks in text in export.Fixed issue with only first series' point names being used for categories. Now all series are inspected. Closes #2357.Fixed issue with broken export menu in IE9 compatibility mode. Closes #2335.Fixed JavaScript error on updating a point value to null. Closes #2359.Fixed issue with response of PhantomJS server in export-server that lead to StringIndexOutOfBoundsException, fixes #2367.  Highcharts v3.0.6 (2013-10-04) # Added new option, chart.spacing, to set spacing as an array.Added round linejoins and linecaps to line graphs for better look in prints.Added support for negative values in stacked percentage columns. Closes #2197.Added new option to pie charts, endAngle, to allow semi-circle donuts and pies.Added experimental support for axis.labels.ellipsis. Not implemented for VML renderer.Adapted Java exporting server to PhantomJS saving files locally.PhantomJS running as server can save files to filesystem, closes #2137.Fixed issue with too high axis max tick on very small charts where the height of the plot area was much smaller than the tickPixelInterval setting.Implemented Async download from export server.Added CORS filter for Cross-Origin requests to export server.Adapted Java exporting server to PhantomJS saving files locally.Add event handler to close context menu from touching outside the menu. Improves user experience on touch devices. Closes #2258.Forced disabling of startOnTick and endOnTick when navigator is enabled in Highstock. Closes #1090.Exposing the reflow method on chart objects.Added no-data-to-display plugin.Worked around bug in IE11 with rendering text in horizontal legends. Closes #2030.Added new option, dataLabel.overflow: 'justify'. Closes #1789, #1859, #1962, #1984 and #2190.  Bug fixes Fixed issue with scatter series not displaying in polar charts. Closes #2060.Fixed issue on touch devices with click events not firing on series, points or chart when chart.zoomType was set. Closes #2275.Fixed regression issue with slow running updates on gauges. Closes #2320.Fixed regression with vertical crosshair not working in Highstock with series compare. Closes #2316.Fixed issue with hide/show series in some versions of Android. Closes #2269.Fixed error message in PHP/Batik exporting stack when called without posting width. Closes #2303.Worked around InkScape bug where the hidden empty tooltip would display as a square in exported SVG. Closes #2301.Fixed issue with updating min and max using Axis.update() after running setExtremes. Closes #2306.Fixed issue with bubbles not resizing in IE8. Closes #2294.Fixed issue with unsorted data labels for funnels. Closes #2289.Fixed issue with JS errors in IE8 when trying to animate a rotated data label. Closes #1821.Fixed issue with disabling data label for a specific point not taking effect. Closes #2282.Fixed issue with Highcharts error 19 triggering with a hidden or very small chart. Closes #2272.Fixed issue with exporting button's menus being shared between multiple buttons. Closes #1908.Fixed issue with bubbles and other marker points not taking the "color" property of the point. Closes #2219.Fixed compatibility issue with the Standalone Framework and Dojo. Closes #2268.Fixed issue with updating to line series when starting with a spline. Closes #2270.Fixed issue in gauges with ticks disappearing or being badly laid out after resizing. Closes #1262.Fixed issue with Standalone Framework in legacy IE where click event wouldn't work on line series, and hovering didn't preserve the state of the tooltip. Closes #2265.Fixed JS error on adding VML styles in old IE in pages with more than 32 style sheets. Closes #2153.Fixed issue with waterfall columns starting at the wrong place with certain values on the Y axis. Closes #2241.Fixed issue with stacks not being cleared after updating a series. Closes #2229.Fixed issue with error number 19 firing on stock charts with ordinal axis when not needed. Closes #2228.Fixed positioning problem with tooltips on flags. Closes #2211.Fixed issue with addPoint() on waterfall charts. Closes #2209.Fixed issue with wrong animation between lines of different length. Related to #1325 and #1386.Fixed issue when having no data in stacking chart. Closes #2207.Fixed issue with removing points in funnel charts. Closes #2206.Fixed issue with Point.update removing the selected state when applied with an object configuration. Closes #1909.Fixed issue where running addPoint with an X value not being able to insert the point into the middle of a sorted series. Closes #1109.Fixed issue with percentage stacked area series adding up negative values incorrectly. Closes #2197.Fixed issue with overlapping X axis labels and maxStaggerLines not taking effect on dynamically added series. Closes #2186.Fixed error on redrawing chart after applying a plot line with zero width. Closes #2189.Fixed issue with data labels of hidden series attracting mouseover and tooltips in IE10. Closes #2185.Fixed issue with connectNulls not taking effect on stacked areas. Closes #1836.Fixed regression where the lower stacked series in an area stack would not display. Closes #2181.  Highcharts v3.0.5 (2013-08-23) # Added Standalone Framework for using Highcharts without jQuery, MooTools or Prototype.Added error message on adding too many ticks to an axis. Closes #2174.Implemented better sharpening logic for columns and bars. Closes #1188. Closes #2091.Improved axis line, plot line and grid line positioning so that a 2px line series along the X axis shows up as exactly 1 pixel, half inside and half outside the visible plot area. Closes #1687.Added error message on exceeding the turboThreshold. Closes #2107.  Bug fixes Fixed issue with non-aligned axes after multiple setExtremes with internal redraws. Closes #2169.Fixed regression in IE8 where an error occured on fading out the tooltip in older jQuery versions. Closes #2161.Fixed issue with series.linkedTo not working when added in non-source order. Closes #2166.Fixed issue with missing textShadow on HTML datalabels.Fixed issue with tooltip not displaying on scatter points lying on the edge of the chart, when moving the mouse in from the outside. Removed limitation of only showing tooltips for points lying inside the plot area. Closes #2147.Fixed problem with tracking mouse movements on lines near the edge of the chart because the line tracker was not clipped. Clipped the tracker and added tracking to the marker group also. Closes #1894.Fixed regression with stacked columns on a log axis not displaying. Closes #2104.Fixed issue on older Chrome versions on mobile where pinch zooming was broken. Closes #2143.Fixed regression with log X axis affecting the calculated data extremes. Closes #2117.Fixed issue with point markers not being updated from Point.update method. Closes #2130.Fixed regression that appeared when fixing #2005, where tooltips didn't display in IE8 after scrolling down a page. Closes #2129.Fixed issue with area stacks containing negative values. The stacks are now treated differently between columns and areas. In column stacks, negative points always extend from the trheshold and down. For area stacks however this is counterintuitive. Instead, negative points are substracted from the stack. Closes #1910.Fixed regression where a pie slice with value zero would show up as a quarter of a circle. Closes #2103.Fixed hanging browser on pie charts where all values were 0 or null.  Highcharts v3.0.4 (2013-08-02) #   Bug fixes Fixed issue with plot bands or lines not being removed after Axis.update(). Closes #1975.Fixed regression from 3.0.3 where redrawing a chart containing stacked points within the same series would cause the single stack to redraw badly. Closes #2095.Fixed regression with resizing a stacked chart containing negative values. Closes #2089.Fixed JS errors in polar chart when instanciated with no data. Closes #2093.Fixed regression with staggered X axis labels on reversed axis. Closes #2081.  Highcharts v3.0.3 (2013-07-31) # Added automatic stagger lines for colliding labels on horizontal axis.Added support for automatic text wrapping in long title names. Closes #776.Added new option, legend.itemDistance, to allow control over the distance between items of a horizontally laid out legend. Closes #832.Added context and event information to click handlers on touch devices. Closes #1830.Added useHTML option for plot line and plot band labels. Closes #1916.Added support for multidimensional series (arearange, ohlc, box plot etc.) in data module.Added automatic default alignment of axis labels based on which side of the chart and the label's rotation.Added automatic line-wrap of titles and subtitles if the text exceeds the chart width. This change includes changing the default Y position of the subtitle to allow it to depend on the title height.Increased performance of Series.addPoint on large series by preventing looping over all data points on each call. Closes #1937.  Bug fixes Fixed #2017 where the browser would freeze when xAxis.min equals xAxis.max on a datetime X axis.Fixed legend box size browser issue.Worked around issue in Chrome 28 where numberFormatting would round all values to whole numbers after running for a while. Closes #2043. Closes #2052.Fixed issue with point.name being applied to the wrong category label. Closes #2046.Optimized merge function by moving a check out of the loop. Closes #2045.Fixed issue with wrong calculation of areas when a negative color was used on an inverted chart with non-zero threshold. Closes #2011.Fixed issue in Highcharts 3.0.2 where data labels for null points were rendered as 0. Closes #1997.Fixed issue with click events on columns not firing on touch devices until the second touch. Closes #1551.Fixed issue with mouse and tooltip offset inside frameset when running IE10 in compatibility mode. Simplified mouse position detection. Closes #2005.Fixed issue with percentage stacked area and missing values. Closes #1991.Fixed issue with unexact position of columns where minPointLength applies. Closes #1166.Fixed problem with setting area series fillOpacity to 0. Closes #1983.Fixed issue with export menu displaying outside the chart at the top of the button. Closes #1985.Fixed issue with double xmlns attributes created in IE9 and IE10. Closes #1978.Fixed issue with pie slices animating from center on first call to Point.update. Closes #959.Fixed issue with updating shadow positions on bubbles. Closes #1977.Disallow JavaScript execution from formatted category labels.Fixed issue with percentages not being available for pie chart legend. Closes #897.Fixed issue with visible:false not taking effect on pie chart data labels. Closes #876.Fixed issue with updating an element's dashstyle programmatically. Closes #874.Fixed issue with stack labels not appearing in other series types than column. Closes #1383.Fix for error while converting to SVG file in phantomjs, missing character in XML.Added event to hide the tooltip on touch devices when touching outside the plot area. Closes #1203.Fixed issue with stacked columns within a single series. Closes #1959.Fixed issue with useHTML labels not cleaning up their parents when destroyed. This would leave a lot of empty divs inside the container after updating for example axes. Closes #1960.Fix for error while downloading SVG files, missing character in XML doctype.Fixed issue with point markers not being aligned to columns. Closes #1843.Fixed PDF cropped and split on 2 pages issue #1957.Fixed issue with IE8 and exporting with old look. Closes #1964.Fixed issue with no legend symbol on areaspline series when line and markers were hidden. It now uses the rectangular legend symbol like regular area series. Closes #602.Fixed issue with area legend taking the marker fill color instead of the area fill color when different. Closes #585.Fixed issue with legend box not reserving space for legend title. Closes #1717.Fixed issue where switching from log to linear scale caused the threshold of columns to become lower than zero. Closes #1791.Fixed issue with legend symbols not being centered in text when font size increased. Closes #1804.Fixed tooltip order and naming of quartiles in box plot.Fixed issue with rotated labels along a vertical axis becoming wrongly positioned based on bounding box. Closes #1951.Better detection for showing or hiding the data labels based on whether the entire bounding box is inside the plot area. Closes #1788.Fixed issue with dynamically modified data being lost after Series.update. Closes #1780.PhantomJS JavaScript files are automatically unzipped to java.io.tmpdir.Fixed issue where calling Point.select(true) on a pie slice would toggle it, not select it. Closes #1823.Fixed issue with removing plot band or line and reflecting it in export. Closes #1114.Fixed issue with adding X axis dynamically. Closes #1827.Fixed funnel chart issues with center Y not taking effect, and points disappearing when neckHeight is equal height. Closes #1866.Fixed issue when using rotation on a particular point's data label, the next point's data label would be rotated. Closes #1883.Fixed issues with legend items not reflecting updates to pie slices. Closes #1831. Closes #1885.Fixed issue with wrong alignment of labels on the X axis of a rotated polar chart. Closes #1942.Fixed issue with too tight ticks on X axis on column charts with only a few columns. Closes #1943.Fixed issue with bubble series not working at all when number of points exceed the turboThreshold. Removed the turboThreshold option for bubble series. Closes #1898.Fixed issue with spline animation of lower part when negativeColor is used and running addPoint. Closes #1899.Moved the warning on unsorted data to catch unsorted data in the middle of the data set in addition to the first two values. Closes #1900.Fixed issue with X axis not redrawing after Point.update. Closes #1906.Fixed issue with tooltips not accounting for the startAngle of a polar chart. Fixed issue with tooltips not being wrapped around from the last point to the first point at the top of a polar chart. Closes #1915. Closes #1469.Fixed issue with Safari crashing when displaying tooltips with nested HTML tags. Closes #1596.Fixed issue with negativeColor and logarithmic Y axis. Closes #1726.Fixed issue with negativeFillColor not taking effect unless a negativeColor is also set. Closes #1907.Fixed issue with multiple class names added to tracker objects. Related to #1918.Fixed wrong position of dials in IE7 and IE8 Quirks mode. Closes #1873.Fixed issue with inconsistent xAxis label width on bar charts. Closes #1931.Fixed issue with click events not being handled on flag series in IE9 and IE10. Fixed support for hovering stacked flags in old IE. Closes #1924.Fixed regression with wrong higher path on arearange series on inverted chart. Closes #1930.Fixed position of rotated X axis labels to prevent overlapping with the element below. Closes #1764.Fixed JS error on setting new data on initially empty series. Closes #1920.Fixed issue with datetime axes not using intervals greater than 10 years. Closes #1913.  Highcharts v3.0.2 (2013-06-05) # Added stackLabels.format option analogous to dataLabels.format. Closes #1837.Added localized number formatting to data labels. Related to #1637.Removed php-phantomjs, this will not be supported any longer.Partially fixed issue with blurred legend contents in PDF export. Issue #1782.Don't neglect sum points in positive bar calculations, issue #1653.  Bug fixes Fix a bug related to updating existing StackItem instead of creating a new one after calling Point.update().Fixed error on exporting from IE8.Fixed handling of connectNulls on area range series so that null values in either low or high positions are also connected. This allows filling the area between lines with different X values. Closes #1404.Adding ability to define pointPlacement numerically.Fixed JS error on certain operations with jQuery 1.10. Closes #1881.Fixed regression with exporting.chartOptions not taking effect. Closes #1759.Fixed issue with setting medianWidth, stemWidth or whiskerWidth to 0 on box plots and error plots. Closes #1833.Fixed issue with errors on running point click event after the same point was destroyed from a series click event. Closes #1844.Fixed issue with stacks and series.index option. Closes #1722. Closes #1689.Fixed JS error on touching pie charts in iOS Safari. Closes #1861.Fixed touch zooming and panning problems from Highcharts 3.0.1. Closes #1860.Fixed JS error on iPad with disabled tooltip. Closes #1857.Fixed issue with pie slice not reverting to original position after slicing when animation is disabled. Closes #1767. Closes #1846.Fixed issue with last marker missing in certain withs of dual axis charts. Closes #1858.Fixed issue with error on custom exporting buttons containing no symbol. Closes #1822.Fixed issue in MooTools and Prototype adapters when used with highcharts-more.js. Closes #1834.Fixed issue with mispositioned pies in inverted charts after resizing. Closes #1795.Fixed pointer to error message for wrong axis binding. Closes #1800.Fixed issue with pie wrong chart data label connectors disappearing when hiding slice. Closes #1810.Fixed issue with wrong min and max in selection events on categorized axis. Closes #1207.Fix a bug when stacks wasn't updated after extremes change.Fixed issue with plot background image not being used in exported images. Closes #1765.Fixed issue with higher ranks X axis labels not being applied to the last label. Closes #1760. Related to #1649.Fixed exception after destroying a chart while the tooltip is still visible. Closes #1728.Fixed missing tooltips on flags when data grouping was disabled. Closes #1730.Fixed issue with missing text decoration on data labels in export. Closes #1729.Fix error related to waterfall positive bar starting at negative value, close #1653 and #1732.Fixed JS error when a pie series is present in an inverted chart. Closes #1736.Fixed issue with click events not being fired unless the mouse hasn't moved a pixel.Fixed JS error issue in bubble charts when first series is hidden. Closes #1737.Fixed issue with wrong sized bubbles when one series contains no points. Closes #1735.Fixed IE8 issue with mislocated bubbles after hiding and showing a series.Fixed issue with the smallest bubbles in a bubble chart occasionally disappearing. Closes #1710.Fixed issue with missing markers on negative points when explicit color was set. Closes #1702.Fixed issue with toolip appearing in printed chart when tooltip.shared was enabled. Closes #1707.Fixed issue with chart axes and chart options getting out of sync on Axis.remove. Closes #1706.Fixed issue with wrong tooltip date header format on single points. Related to #568.Fixed issue with negativeColor not taking effect on area and similiar series types when lineWidth is 0. Closes #1705.Fixed issue with null higher value in area range plots being interpreted as 0. Closes #1703.  Highcharts v3.0.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.  Bug fixes Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Made loading mask use the current chart size, not the initial one. #1601.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts v3.0.0 (2013-03-22) # See the release announcement.  Highcharts v2.3.5 (2012-12-19) # Added pie.startAngle option.Added a delay before hiding exporting menu to prevent the menu from hiding in IE when hovering over neighbour elements and button title. #1357.Implemented warning on unsorted data for line charts and stock charts. #725. Also throw a Highcharts error on unsorted column data, because the column distance and width logic relies on sorted data. Related to #987.Added line.step options: "left", "center", "right". Fixed issue with step in area ranges. #1330.Added a global lookup array, Highcharts.charts, holding all available chart instances in the page. This prevents issues with writing multiple charts to the same div.Implemented better animation for donuts. #779.Reorganized event assignment so that devices with touch support not only observe the touch events, but also the corresponding mouse events. This prepares for the new generation of browsers with both mouse and touch support. #1305.Prevented getTimeTicks from creating corrupted array. Related to #1301.Improved rendering speed of data labels by not adding a rectangle for labels without border or background.Better detection for repeating gradients. Instead for checking for the same object, the actual gradient definition is now used as the key. #1282.  Bug fixes Fixed problem with gauge dial overlapping data label. #1403.Fixed issue with data labels of hidden series being visible after exporting from IE8. #1407.Fixed IE6 and IE7 issue with image symbol markers not always being displayed after page reload. #292.Fixed endless loop in Highstock JavaScript and SVG errors in all charts when setting a negative chart width. #1393.Fixed issue with wrong tooltip position in Android 4.0. #1385.Fixed issue with bottom checkboxes in a legend being hidden after cancelling legend scroll by resize.Fixed issue with series-level image markers not being visible in exported charts.Fixed issue with pie slices not being added to the legend after the first redraw. #1329.Fixed wrong Y axis extremes on stacked line series chart. #1376.Fixed issue with wrong placement of image backgrounds on labels, specifically image shapes in flag charts. #1378.Fixed problem with multiple buttons with menu items in exporting module.Fixed issue with visible borders in exported chart when borderWidth = 0 on column charts in Firefox. #1369.Fixed issue with tooltip remaining visible after hiding its series. #1361.Fixed issue with reflowing in IE < 9, as well as frozen pivot on resizing gauges in IE < 9. #1235.Fixed issue with backgrounds on multiple gauges within the same chart. #1244.Fixed JS error in IE8 when trying to assign a gradient color to image markers. #1336.Fixed issue with squished X axis labels on column charts with one single point. Now if the series only contains one value, only one tick is shown. #1337.Fixed issue with tick labels using useHTML and step being slightly visible. #1338.Fixed issue with legend items not responding to mouse interaction when legend.useHTML is true. Fixed positioning of legend items in Chrome when legend.useHTML is true. #1249.Fixed issue with wrong positioning of bars in a bar chart when grouping was set to false. #1251.Fixed issue with useHTML, fixed width and word wrapping in Firefox. #1254.Fixed issue with legend checkbox position not being updated in navigatable legends. #1253.Fixed issue with wrong placement of minor grid lines on datetime axes. #1314.Fixed issue with Highcharts.dateFormat only replacing the first occurence of a pattern. #953.Fixed issue with wrong dial rotation in angular gauges when used with logarithmic axes.Fixed memory leaks in IE7 releated to SVGRenderer.label and MooTools. Refering to #1298.Fixed issue with blinking column animation on extremely large columns. #1303.Fixed issue with data label alignment not being updated after point update. #1306.Fixed broken height detection of rotated labels in IE9. #1307.Fixed line graph tracker objects so that the stroke-linejoin is round. This ensures better tracking around spikes in the data. #1225.Fixed issue with placement of data labels on a column chart with reversed Y axis. #1308.Fixed issue with visible gray marker objects appearing after Batik export from IE10.Fixed error on exporting an empty chart due to labels with y attribute of NaN. #1300.Fixed issue with setting tooltip.valueDecimals to 0. #1248.Fixed JavaScript error on redrawing chart after series removal in IE < 9. #1258.Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.  Highcharts v2.3.3 (2012-10-04) # Refactored data label alignment logic for better maintainabilit. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Worked around Safari 6 bug causing disappearing pie slices. #1208.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed gauge series data labels after regression testing.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed orphaned marker after Point.update to null. #1269.Fixed issue with text wrapping and bounding boxes in Android 2. #1140.Fixed wrong positions of polar column chart data labels. #1199.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with tooltip spilling out to the left in inverted chart. #1231.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed issue with colors and borderWidth not being applied to individual dials in gauges.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts v2.3.2 (2012-08-31) # Added support for rotation of text when useHTML = true in modern browsers. #916.Added new option, ignoreHiddenPoint, for pies.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.  Bug fixes Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. <ahref="https://github.com/highcharts/highcharts/issues/1209">Issue #1209.Fixed issue with data labels appearing outside plot area on initial load.Fixed 2.3 regression regarding unstable sorting in Chrome. #337.Fixed auto connect calculation in polar charts when category values are skipped. #1197.Fixed issue with alternateGridColor placement not adhering to tickmarkPlacement setting. #949.Fixed issue with config objects for data skipping a place in the color rotator in export. #868.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts v2.3.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts v2.3.0 (2012-08-24) # Added radial gauges.Added polar projection for cartesian chart types.Added range series types: area range, area spline range and column range.Added radial gradients for pies.Fixed bugs.  Highcharts v2.2.5 (2012-06-08) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. 1027.Reverted fix for #904 where a line with lineWidth of 0 became visible in hover state. 1016.Added legend.maxHeight option for paging.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. 864.  Bug fixes Fixed Android 2 compatibility problem. 1034.Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. 1021.Fixed broken minRange after the #878 fix.Fixed issue with chart title and subtitle responding too late to chart resize. 1012.Fixed JS error on quickly changing range selection in Highstock in column charts. 1004.Fixed issue with clipping of legend after resize to a greater width. 1001.Fixed issue with size detection of rotated text in exported charts legacy IE. 997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. 4. 992.Fixed issue with the series.pointRange option not affecting the width of columns.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. 974.Fixed JS error on setting categories with fewer items before the chart was redrawn. 970.  Highcharts v2.2.4 (2012-05-31) # Added paging for the legend. Added legend.navigation options set.Added tooltip.positioner option.Refactored major parts of Highcharts by splitting the Chart object into separate prototypes. This eases extendability as the objects are available from the outside, and individual methods and properties can be overridden.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Worked around compatibility issue with jQuery 1.8 preview.Removed warnings on accessing layerX and layerY in Chrome.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.  Bug fixes Fix bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed JS error in Firefox on destroying chart with data labels using MooTools adapter. #958.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.  Highcharts v2.2.3 (2012-05-07) #   Bug fixes Fixed issue with ticks and gridlines not being aligned after chart redraw.  Highcharts v2.2.2 (2012-04-26) #   Bug fixes Fixed bugs.  Highcharts v2.2.1 (2012-03-15) # Added box options like borderWidth, backgroundColor and more for data labels.  Bug fixes Fixed bugs.  Highcharts v2.2.0 (2012-02-16) # Better performance with thousands of points.Improved useHTML feature on labels to skip SVG text generation and use true HTML bounding box.Added configuration options to the Reset button.Added support for logarithmic axes.Numerous bug fixes.Added partial support for Android 2.x. See the compatibility page for limitations.  Highcharts v2.1.9 (2011-11-11) #   Bug fixes Fixed memory leaks in legacy IE.  Highcharts v2.1.8 (2011-11-05) #   Bug fixes Fixed compatibility issue with jQuery 1.7.  Highcharts v2.1.7 (2011-10-19) # Added useHTML option for most text related configuration objects.Added softConnector option for pie data labels.Added chart.selectionMarkerFill option.Worked on memory leak issues.  Bug fixes Fixed issues with data label positioning for pies.Fixed issue with tooltips covering point in certain cases.Fixed issues with latest MooTools.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.6 (2011-07-08) # Rewrote data label positioning for pies.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.5 (2011-06-22) # Added shadows for pies.Exported charts now respect user set min and max after zoom and visibility option.Added option series.connectNulls to connect line graphs through null points.Added support for exporting image symbols in charts.Added data labels for stack totals and improved positioning of column and bar data labels.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.4 (2011-03-02) # Updated MooTools adapter to work with MooTools 1.3.  Bug fixes Fixed issue with charts not displaying in IE on pages with large background images or external resources.Fixed issue Safari Mobile crashing after removing a series dynamically.Fixed minor issues as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.3 (2011-02-07) # Added soft line breaks for long category labels.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.2 (2011-01-12) # Added adapter for the Prototype JavaScript framework.Added vertical centering logic for data labels on bars when y not given.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.1 (2010-12-03) # Added Highcharts.version property.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.1.0 (2010-11-23) # Implemented resizing and reflowing of charts.Added automatic margin adjustment.Added shared tooltip and crosshair.Added more animation options.Added category label anti collision options.Added groups and stacks combination.Added data label connectors for pies.Optimized for iPad.Added dashed lines.Added labels for plot bands and plot lines.Added a separate MooTools adapter.  Upgrade notes Legend positioning: Since version 2.1 Highcharts is aware of the size of the titles and legend and will try to make room for these in the chart's margins. When upgrading from older versions, this may lead to too great margins depending on where your legend is positioned. To prevent this, set a new option, floating to true in your legend options. Furthermore, the x and y values of the legend position is now relative to the chart.spacingTop and chart.spacingLeft etc. properties instead of the chart's outer edge.  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.5 (2010-09-17) # Optimized for IE9 Beta 1. Highcharts is now running beautifully under IE9 Standards mode, but quirks mode is slower than IE8.Added second parameter, callback, for Highcharts.Chart().Added text parameter for showLoading().  Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.4 (2010-09-07) #   Bug fixes Fixed bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.3 (2010-08-07) #   Bug fixes Fixed JS error on destroying chart with events in IE.  Highcharts v2.0.2 (2010-08-06) # Added linked axes.  Bug fixes Fixed minor bugs as listed at GitHub under dates since the last maintenance version.  Highcharts v2.0.1 (2010-07-18) # Removed chart.updatePosition method. Recalculating the position after moving the container is no longer necessary.Fixed some minor bugs from 2.0.0.Release notes:.chart.updatePosition is deprecated.  Bug fixes Fixed some minor bugs from 2.0.0.  Highcharts v2.0.0 (2010-07-13) # Completely rewritten rendering layer based on SVG and VML.Excanvas no longer needed.Added exporting module for exporting to PNG, JPG, PDF and SVG as well as printing the charts.Added donut charts.Better positioning options for legends.Dramatic speed improvements in Internet Explorer for series with many points.Release notes:.series.dataURL and series.dataParser are deprecated. Use jQuery ajax instead. Example can be seen at the ajax loaded data example.  Bug fixes Fixed memory build-up issues.Fixed some minor bugs reported since 1.2.5.  Highcharts v1.2.5 (2010-04-13) # Added chart.updatePosition and chart.container.Added possibility for initially empty charts.Added options.chart.showAxes.Added series.pointWidth for column series.Added step property to lines.Added legend.reversed option.  Bug fixes Fixed zooming issues on inverted charts.Fixed error on stacking of only null points.Fixed issue with excanvas not being initialied before Highcharts.Fixed tickInterval issue.Fixed image symbols not removed on zooming.Fixed issue with datalabels not removed on zoom.Fixed mouse events like click and mouseover not working when tooltip was disabled.Fixed roundoff issues on axis labels on Firefox/Mac.Fixed issues with setData in pies.  Highcharts v1.2.4 (2010-03-10) # Added resetZoom and resetZoomTitle to the lang object.Added the global.useUTC option.  Bug fixes Fixed error message in IE on window unload.Fixed tooltip width detection issue in IE7.  Highcharts v1.2.3 (2010-03-08) #   Bug fixes Fixed error messages appearing in some cases after hiding all series.Fixed issue with toggling the visibility of stacked columns.  Highcharts v1.2.2 (2010-03-05) # Added lang.decimalPoint and lang.thousandsSep options.Added chart.destroy method.Added axis.setCategories method.  Bug fixes Fixed memory leaks.Fixed two error messages.Fixed pie slice border issue with WebKit.Fixed minor issue with maxZoom and min/max values.Fixed issues with null values.Fixed rectangle redrawing issue with column and bar plots.  Highcharts v1.2.1 (2010-02-25) #   Bug fixes Fixed issue on initially hidden series.Fixed issue with hover area on bars.Fixed addPoint for pies.  Highcharts v1.2.0 (2010-02-23) # Added methods and properties for working with charts, axes, series and points dynamically after render time.  Highcharts v1.1.3 (2010-02-03) #   Bug fixes Fixed a bug in the MooTools adapter.  Highcharts v1.1.2 (2010-01-22) #   Bug fixes Fixed some minor bugs and issues.  Highcharts v1.1.1 (2010-01-06) # Added individual color for column and bar plots.  Bug fixes Fixed stacked charts in Safari 4.Fixed spline series crashing when only one point defined.Fixed tooltip borders not responding to changes in content height.Fixed wrong placement of zero plane for area series.  Highcharts v1.1.0 (2009-12-18) # Added support for multiple axes with options to place the axis on opposite side and offset from the plot area.Added support for events.Added explicit chart width and height.Added plotLines.  Bug fixes Fixed some bugs.  Highcharts v1.0.2 (2009-12-09) #   Bug fixes Fixed warnings in SSL mode in IE.Fixed minor display issues.  Highcharts v1.0.1 (2009-12-06) #   Bug fixes Fixed zooming for splines.Fixed legend symbols disappearing on zoom.Fixed area and bar stacking issue.Fixed zooming in stacked areas.Fixed issue with single point column plots.Fixed issue with zero level in column and bar charts.  Highcharts v1.0.0 (2009-11-27) # First release.Highcharts Stock  Highcharts Stock v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Stock 12.2.0.Added support for chart options in standalone navigator. See #22212.  Bug fixes Fixed #22135, setting ellipsis annotation options via annotationOptions did not work as expected.Fixed #21299, scrollbar and navigator margin settings were incorrect.Fixed #22557, navigator series was missing after reenabling navigator.Fixed #21879, control point option was not working for measure annotation.Fixed #21642, mousewheel zoom was not triggering zoom on standalone navigator.  Highcharts Stock v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Stock 12.1.2.  Highcharts Stock v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Stock 12.1.1.  Bug fixes Fixed #22262, a regression since v12.1.0 causing range selector buttons not to be responsive if the inputEnabled was false.  Highcharts Stock v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Stock 12.1.0.  Bug fixes Fixed #22311, calendar date picker was missing for the rangeSelector inputs.Fixed #21945, a regression since v11.3 causing the rangeSelector.align option not to work properly when set to right.Fixed #21220, resizing panes with multiple axes was resulting in incorrect axis height.Fixed #22269, select element didn't update the selected index when range changed in rangeSelector.  Highcharts Stock v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Stock 12.0.2.  Bug fixes Fixed #22262, a regression causing range selector buttons not collapse on narrow screens when there was no input.  Highcharts Stock v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Stock 12.0.1.  Highcharts Stock v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Stock 12.0.0.Added new series type, Point and Figure.Added new series type, Renko.Implemented new flow for update for RangeSelector.  Bug fixes Fixed #21524, in some cases panning to axis minimum was impossible in data grouped ordinal column chart.Fixed #21884, rendering issues with the borders of the Measure annotation.Fixed #20662, keyboard focus with Tab key was not working when rangeSelector dropdown was focused.Fixed #17890, timeline series didn't work correctly with stock chart.Fixed #21916, pixel-to-value axis calculations with ordinal and data grouping were incorrect.Fixed #21683, the first candle color in the hollow candlestick series was incorrect.Fixed #21584, navigator series was not removed correctly, causing chart.update to fail under some conditions.Fixed #20482, crosshair's label was cut off in certain label config.Fixed #21268, standalone navigator container height did not adjust correctly when a custom height was set.  Highcharts Stock v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Stock 11.4.8.  Bug fixes Fixed #21316, panning on axes with overscroll was not possible.Fixed #21660, navigator handles were not updated if they had URL symbols.Fixed #21483, zooming out on ordinal axes was not working correctly.Fixed #20359, scrollbar was not working when x-axis extremes were the same.  Highcharts Stock v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Stock 11.4.7.  Bug fixes Fixed #21274, plotBands were assigned to the wrong yAxis when there was no series in the navigator.Fixed #21507, removed annotation was still visible in exported chart.  Highcharts Stock v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Stock 11.4.6.  Highcharts Stock v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Stock 11.4.5.  Bug fixes Fixed #17945, colors lost on a color axis after going back to grouped state with data grouping enabled.Fixed #20354, navigator's grid lines were too long in a chart with a scrollable plot area.  Highcharts Stock v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Stock 11.4.4.  Bug fixes Corrected bad rendering of the navigator outline, a regression since v11.4.3.Fixed #21319, a regression since v11.4.0, resetZoomButton was visible while panning on non-ordinal axes.Fixed #21043, series references from navigator.baseSeries were not removed entirely after original series removal.Fixed #16915, the navigator should inherit the base x-axis padding when ordinal is false.Fixed #21064, Stock Tools buttons active state wasn't toggling correctly.Fixed #20877, panning using one finger on touch devices didn't work correctly with a dispersed dataset.Fixed issue with accessibility proxy element for navigator being present even without a navigator.  Highcharts Stock v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Stock v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Stock 11.4.2.Added new option, series.cumulativeStart. See #19050.Added new option, navigator.handles.borderRadius.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20549, empty string in flag title resulted in default 'A' assigned.Fixed #20214, RangeSelector#render was unnecessarily called 3 times on each chart render.Fixed #20829, added styled mode support for advanced annotations.Fixed #20382, custom id on navigator axis returned undefined with get().Fixed #20877, a regression in v11.3.0 causing mobile touch panning not to work correctly.Fixed #20936, boosted navigator was not included in inverted chart's clipRect.Fixed #20529, range selector not working with chart constructor.Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Stock 11.4.1.Added support for borderRadius on flag series with the squarepin symbol.  Bug fixes Fixed #20807, annotations didn't get proportionally resized when dragging a control point. Ordinal axis' getExtendedPositions didn't take dataGrouping options into account.Fixed #20809, panning to extremes caused jumping to incorrect extremes.Fixed #20856, a regression in v11.4.0 causing wrong crosshair label position on the right side of the chart.  Highcharts Stock v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Stock 11.4.0.Added #20275, possibility to set xAxis.overscroll in pixels or percentage.Improved implementation of attractToPoint to make use of KD-tree.Improved semantics of Stock Tools and popups to for better accessibility, specifically use <button> elements rather than spans.  Bug fixes Fixed #20318, navigator series data wasn't set with dataSorting enabled on initial run.Fixed #19808, the range selector week button behaved weirdly after using the scrollbar.Fixed #20430, mousewheel zoom with overscroll stuck.Fixed #20327, rangeSelector allowed to set range larger than possible extremes.  Highcharts Stock v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Stock 11.3.0.  Bug fixes Fixed #19861, series.searchPoint returned undefined after annotation redraw.Fixed #19243, if the last point in the dataset was from a scatter series, it was invisible.Fixed #20284, a combination of scatter, boost and ordinal axis threw error about processedXData.Fixed #19715, chart update failed with dataGrouping and dataSorting.Fixed #19743 and #19742, data grouping anchor positions weren't working correctly if there was only one point. Also tooltip didn't take into consideration the anchors.Fixed #19851, the rangeSelector button state was not preserved after adding data to a series.Fixed #19816, incorrect zooming with multiple series and ordinal axis.Fixed #19922, the range selector All button is now auto-selected if the data range is smaller than the selected range.Fixed #19926, click event wasn't bound correctly for annotations with HTML labels.Fixed #19793, trendline was not working for duplicate x values.Fixed #19892, HeikinAshi and Hollow Candlestick were not working with certain dataGrouping periods.  Highcharts Stock v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Stock 11.2.0.Added fibonacci.reversed option. Closes #19367.Added accessibility support for navigator handles.Added keypress (ESC) action to popup and sidebar.  Bug fixes Fixed #19736, mouseWheel zooming prevented scrolling in Stock Tools popups.Fixed #19992, xAxis ticks on broken axes were displayed incorrectly.Fixed #19779, mouse wheel zoom was not working when zooming on empty space without any points.Fixed #10073, flags were clumped together on the left side of the chart when allowOverlapX was false and the flags were dense.Fixed #19632, spacebar char couldn't be typed into input element.Fixed #16368, axis breaks caused points to overlap in stock charts.Fixed #16686, yAxis extremes were incorrect with VBP indicator compare.Fixed #16769, tunnel annotations had incorrect height on logarithmic axes.Fixed #17212, first grouped point in navigator was incorrect.Fixed #16784, calculations in extended ordinal position were wrong.Fixed #19505, label connector for the callout shape was not rendered in certain label positions.Fixed #19233, dragging annotations on chart with null points was inconsistent.Fixed #15569, at rapid mouse movements outside the chart, zoom didn't work properly.Fixed #19264, flag positioning on the spline series.Fixed #19493, zero values in Stock Tools popup fields were missing.Fixed #18251, range selector should consider all series extremes.Fixed #19121, Measure Annotation went back to its initial position after update.  Highcharts Stock v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Stock 11.1.0.  Upgrade notes For Highcharts Stock, the ordering of series and axes in the chart.series, chart.xAxis, chart.yAxis and chart.axes arrays were changed. Previously the navigator series and axes were last of the initial items, and when adding items they were appended. From now on, the internal navigator series and axes are always last, so the index of items now corresponds to that of the current options.  Bug fixes Fixed #18459, dragging annotations on chart with ordinal axes was inconsistent.Fixed #19042, text of annotation label was missing after updating it.Fixed #16068, panning on ordinal axis was inconsistent.Fixed #19024, wrong position and size of stockTools rectangle after resizing it on second y-axis.Fixed #18863, last point in zoomed ordinal axis was not visible.Fixed #18974, wrong approximation set for cumulative sum when dataGrouping was enabled.Fixed #17007, VBP indicator did not update correctly.  Highcharts Stock v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Stock 11.0.1.  Bug fixes Fixed #17977, disabling global animation did not affect scrollbar.Fixed #18922, scrollbar track did not catch click events.  Highcharts Stock v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Stock 11.0.0.  Bug fixes Fixed #18710, trendline points were not recalculated after adding or removing a point to main series.Fixed #18643, indicator threw volumeSeriesID error on range selector click.Fixed #18584, vertical line annotation position was incorrect when saved to options after drag and drop.Fixed #18689, indicator linked to another indicator should update after adding points.Fixed #16940, wrong cross label positions on multiple axes.Fixed #18528, last inside point was incorrectly calculated for lastVisiblePrice.Fixed #18276, annotations touch was not captured on mobile devices.Fixed #16841, Slow Stochastic Indicator was missing %D line when the K value was NaN.Fixed #18238, VBP indicator was not throwing an error when volume series had no data, or didn't exist.Fixed #17790, lastPrice and lastVisiblePrice labels were not destroyed during redraw.  Highcharts Stock v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Stock 10.3.3.  Bug fixes Fixed #18176 and #18178, indicators didn't work with an empty dataset.Fixed #18025, grid lines were rendered across panes.Fixes #17190, indicator linked to another indicator didn't update when data was added to main series.Fixed #17114, chart with data grouping had errors if the plot width was zero.Fixes #16753, when adding a custom indicator, if the parameter name contained any digits, the stock tools pop-up did not display it.Fixed #18088, color for Heikin-Ashi candles was set incorrectly.Fixed #17995, measure's control points were positioned incorrectly when yAxis.min wasn't equal to 0.  Highcharts Stock v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Stock 10.3.2.  Bug fixes Fixed #16487, Indicators button in Stock Tools GUI was active after popup close.  Highcharts Stock v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Stock 10.3.0.  Bug fixes Fixed #17814, the first point was not correctly removed for series with only one point when boost was enabled with ordinal.Fixed #17664, Ichimoku cloud was incorrectly positioned.  Highcharts Stock v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Stock 10.2.1.Added new option navigator.stickToMax, see #17539.  Bug fixes Fixed #17423, Stock Tools were unreachable when the container was wrapped.Fixed #17425, editing labels hid Elliott3 line.Fixed #17522, when the lastPrice label was enabled, there was an error in the console.  Highcharts Stock v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Stock 10.2.0.  Bug fixes Fixed #17305, the height of the Tunnel annotation wasn't overwritten in localStorage.Fixed #17405, zooming on boosted charts froze under certain conditions.Fixed #15799, offsetMin did not get applied by pre-selected range selector buttons.Fixed #15608, the MACD indicator did not have default colors.Fixed #17322, when axis was reversed, the tooltip overlapped flags.  Highcharts Stock v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Stock 10.1.0.  Bug fixes Fixed #17141, data grouping was not applied properly in charts with multiple series.Fixed #16901, navigator and range selector visibility was not inherited.Fixed #15735, axes were wrongly calculated when removing an indicator via Stock Tools GUI.  Highcharts Stock v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Stock 10.0.0.  Bug fixes Fixed #16970, Rectangle annotation didn't have a control point.Fixed #16759, range selector buttons overwrote series data grouping options when selected by default.Fixed #16670, Range Selector's buttons with dataGrouping setting caused error after adding an indicator using the Stock Tools GUI.Fixed #16492, Navigator did not stick to the max when adding a point and an additional, empty series was existing on the chart.  Highcharts Stock v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Stock v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Stock 9.3.2.Added fillColor option to create area fill between lines in multi-line indicators. See #15653.  Highcharts Stock v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Stock 9.3.1.  Bug fixes Fixed #16532, performance regression in ordinal axis.Fixed #16397, the VBP indicator was not recalculated after adding the point.Fixed #16371, incorrect Stock Tools button state after deselecting.  Highcharts Stock v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Stock 9.3.0.Added new annotation, Ellipse. See #15008.Added new annotation, Time Cycles. See #15826.Added new annotation Fibonacci Time Zones. See #15825.VBP indicator now follows the main series when the compare mode is on and compareToMain is false. See #16277.Added new feature Cumulative Sum. See #15361.Added Disparity Index average parameter as a dropdown in the Stock Tools popup. See #16159.Removed requiredIndicators info and added EMA to the default indicators master. See #15409.Added new series type: HLC, see #15346.  Upgrade notes Changed the default SMA index parameter from 0 (open) to 3(close). This also has an impact on the other indicators where SMA is being used, namely MACD, Price Envelopes and the Linear regression family.Renamed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.  Bug fixes Fixed #16158, the Stock Tools indicator popup had wrong series selected by default in some cases.Fixed #15727, the annotation popup was hidden when dragging from input to outside popup.Fixed #16316, #16370 the positions of annotations were not calculated properly on ordinal axes.Fixed #16319, grouped positions were not calculated correctly after clicking the range selector's All button multiple times.Fixed #16447, a separate axis was not visible after adding the Chaikin oscillator through Stock Tools.Fixed #14055, ordinal axis and data grouping didn't work with the boost module.Fixed #16449, the rectangle annotation added via Stock Tools was rendering without one side.Fixed #16513, the navigator was shrinking after adding points when stuck to axis minimum.Fixed #16451, unable to add annotation through Stock Tools on a logarithmic axis.Fixed #16415, changed default SMA index parameter, added an index to Keltner channels indicator.Fixed #16234, the popup of basic annotation shapes displayed label options.Fixed #16390, a regression in a documentation article and demo. Multiple lines indicator didn't work after changes related to migrating MultipleLines mixin to composition.Fixed #16041, long flag labels were not distributed properly which resulted in removing them.Fixed #16139, changed Arrow Infinity Line lang name from lang.arrowLine to lang.arrowInfinityLine.Fixed #16318, corrected the langKey property in Stock Tools gui for the Crooked Line 5 annotation.Fixed #13868, #16085, hovering over a pie series in a stock chart generated errors in the console.Fixed #16255, error after setting new extremes in a chart with ordinal axis and invisible series.  Highcharts Stock v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Stock 9.2.2.  Bug fixes Fixed #16238, a regression causing data grouping information not to reset when zooming in, both in the tooltip and in internal properties.  Highcharts Stock v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Stock 9.2.1.  Bug fixes Fixed how the color is applied for bullish hollow candlestick line.  Highcharts Stock v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Stock 9.2.0.Added Heikin Ashi series type. See #15348.Added Hollow Candlestick series type. See #15347.Added support for declaring an indicator series before the main series. See #15892.Added support for creating a custom indicator on an additional axis through the Stock Tools popup. See #15804.  Bug fixes Fixed how the ordinal axis is being calculated after grouping.Fixed the CSS fill property of bullish candlestick and the hollow candles.Fixed #16055, after adding a point to an ordinal axis, panning was impossible.Fixed #15970, annotation positions were not accurate with an ordinal axis.Fixed #16087, stock tools threw in IE.Fixed #15867, comparing an indicator with multiple lines (eg Bollinger Bands) was not possible.Fixed #16036, VBP indicator graphic did not update correctly with volumeDivision enabled.Fixed #15729, annotation did not stay selected after dragging.Fixed #16011, some labels/shapes disappeared when updating annotation with multiple labels/shapes and not passing in any labels/shapes.Fixed #15725, adding annotations with multiple steps used the wrong axis coordinates when moving the cursor to a different pane.Fixed #15726, rectangle annotations were not clipped.Fixed #15730, toolbar popup did not get hidden when hiding the selected annotation.Fixed #15952, annotation afterUpdate event did not fire when using control point.Fixed #15864, a regression in the navigator. When rangeSelector.selected was set, the navigator had the wrong position after adding a series to an empty chart.Fixed #15733, missing 'Periods' label in Stock Tools pop-up for some indicators.Fixed #15849, candlestick fill was wrong when updating point data from rising to falling.Fixed #6765, changed how and when the dataGrouping should be fired for multiple series when one of them doesn't require grouping.Fixed #2406, fixed val2lin method to correctly calculate positions outside the visible plotArea in ordinal axis.  Highcharts Stock v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Stock 9.1.2.  Bug fixes Fixed #15728, indicator popup columns did not have separate scrollbars.Fixed #13238, panning on mobile devices with ordinal axis didn't work correctly.  Highcharts Stock v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Stock 9.1.1.  Bug fixes Fixed #15803, navigator positioned using navigator.xAxis.left flickered when dragging.Fixed #15740, error in some cases when destroying elements of the chart and Stock Tools were present.Fixed #15491, range selector button text vertical centering did not work well and paddingLeft and paddingRight in buttonTheme were not supported.Fixed #15706, lastVisiblePrice label color class did not always match the series color class.Fixed #15508, the measure annotation's label wasn't correctly rendered inside the annotation.Fixed #14742, the axis range property was ignored when there were fewer data points.Fixed #15593, Stock Tools overflowed the chart container when the class chart was not set on the container.Fixed #15400, clipping was wrong after calling setSize in load event with stock loaded.  Highcharts Stock v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Stock 9.1.0.Added new feature, series.dataGrouping.anchor, for controlling where grouped points are rendered within the group. See #12455.Added new technical indicator, Disparity Index. See #15139.Added new technical indicator, Directional Movement Index (DMI). See #15140.Added new technical indicator, Chande Momentum Oscillator (CMO). See #15142.Added new technical indicator, On-Balance Volume (OBV). See #15138.Added currentPriceIndicator and lastPrice for multiple series (also to indicators and volume), see #14888.Added line series as available type for the RSI Indicator. See #14930.  Upgrade notes The data grouping smoothed property has been deprecated and has been changed to firstAnchor, anchor and lastAnchor.The default value of linearregression.params.xAxisUnit has been changed from undefined to null.  Bug fixes Fixed #13807, adding a technical indicator in the Stock Tools when multiple axes were predefined would break the chart.Fixed #15218, scrollbar.liveRedraw defaulting to true in modern browsers did not work when scrollbar was set in chart options instead of axis options.Fixed #3825, when ordinal axis and dataGrouping were enabled, panning worked unevenly in one direction.Fixed #14192, disabled stock tools GUI buttons when all series were invisible.Fixed #15157, replaced the hex, and string colors in the stock tools with the colors defined in the palette.Fixed #15222, className was not applied to lastPrice crosshair.Fixed #6332, split tooltip didn't work correctly with flag series type with empty text property.Fixed #15512, dynamically added series did not use range selector data grouping.Fixed #13847, data labels in navigator should be disabled in the default configuration.Fixed #15362, corrected API and Stock Tools popup list of indicators' params.Fixed #15435, clipping was sometimes wrong after update with stock loaded.Fixed #15524, dragging annotation after updating label threw and labels.overflow set to justify did not work correctly.Fixed #15502, vertical counter annotation did not work.Fixed #15424, fibonacci annotation lineColor and lineColors options did not work.Fixed #15445, options got mutated when creating stock chart.Fixed #15383, indicators did not recalculate when updating series type.Fixed #15384, updating flag shape did not work.Fixed #15005, point dataGroup start was not calculated correctly.Fixed #12116, boosted stacked chart with range selector enabled and a partial range selected threw.Fixed #15324, elements such as legend and title sometimes had the wrong position when using stock tools.Fixed #15178, console warning when using states in rangeSelector.buttonTheme options.Fixed #15170, added lang options for indicators parameters in Stock Tools popup.Fixed #8603, dynamically added stock axes missed forced options, addition to #15164.Fixed dynamically added axis defaults in stock, axes dynamically added to stock charts got different defaults than the ones added through the chart constructor.Fixed #15029, improved currentPriceIndicator button functionality.Fixed #15060, range selector text input was too short when inputBoxWidth was not set, especially in IE.Fixed #13858, clipping was wrong after plot height had been changed by a responsive rule firing during chart load with stock loaded.Fixed #15075, some Stock Tools annotations were being drawn incorrectly when yAxis.top was set.Fixed #15155, some line drawing tools of the Stock Tools package didn't work correctly.Fixed #15005, when groupAll was set to true, group start was badly calculated.Fixed #13247, getTimezoneOffset got called with NaN timestamp when rendering stock chart with at least one empty series.Fixed #15074, lastPrice color was not applied properly.Fixed #14197, after changing shortPeriod in MACD, points were missing.Fixed #14879, currentPriceIndicator label was not always visible when navigating the data set.Fixed #9671, updating stock chart axes through Chart.update with oneToOne set to true did not work correctly.Fixed #15128, parts of the series disappeared when redrawing a regular chart with series.clip set to false and stock loaded.Fixed #12100, unable to scroll using mousewheel inside Stock Tools popups when mapNavigation was enabled.Fixed #9738, groupAll did not work correctly with OHLC-based series.Fixed #10296, navigator leaked event handlers into series and x-axis on Series.update.Fixed issue mentioned in #15060 and #15062, it was not possible to enter months starting with 1 into the range selector date input under certain conditions. When typing the extremes now only update on blur and when pressing enter, which is the same behaviour the text inputs have.Fixed #11930, removing dynamically added y-axes did not work correctly with navigator enabled, causing the removed axis to show in exported charts.Fixed #13876, toggling currentPriceIndicator button threw error.  Highcharts Stock v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Stock 9.0.1.  Bug fixes Fixed #15124, range selector with inputs wider than the plot and no buttons threw.Fixed #14977, MACD indicator index param did not work.Fixed #13473, it was not possible to scroll back down to the threshold after scrolling up with yAxis.scrollbar enabled and no explicit yAxis.min set.Fixed #15042, IKH indicator lines changed color on the first redraw.Fixed #14063, an error was thrown when scrolling an inverted chart with a flag series.Fixed #14280, Stock Tools GUI popup - clicking on the 'x' button didn't call the closePopup event.Fixed #14932, #13251, updating compare through plotOptions did not work.  Highcharts Stock v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Stock 9.0.0.Added new feature, rangeSelector.dropdown. This feature allows the range selector button row to be collapsed into a dropdown when space is limited. The new behavior may be forced, disabled or responsive (default).New graphic design for the range selector date inputs. Simplified visual appearance and flexible width based on the rendered content.Added native browser date pickers to the range selector. Supported browsers are Chrome, Firefox, Edge and Safari for mobile. Other browsers fall back to text inputs.Added rangeSelector.buttons.title option for assistive technology and general accessibility (#14437), and assistive technology announcement on range selector button click (#14438).  Upgrade notes The range selector date input fields have a new visual appearance. See this fiddle on how to revert to the old design.Range selector inputs will now be of type date, datetime-local or time, depending on the required granularity. For supporting browsers, date picker widgets will be presented. For non-supporting browsers, it falls back to the legacy text input functionality.Indicators no longer inform about missing dependencies in the browser console.  Bug fixes Fixed #14495, the lastVisiblePrice label in price-indicator module overwrote the crosshair.label.backgroundColor property.Fixed #14416, range selector ignored the time.timezoneOffset setting.Fixed #14826, the tooltip border color did not reflect the upColor of OHLC and candlestick series.Fixed #9744, stock toolbar overlapped left-aligned title and legend.Fixed memory leak in range selector, chart load event listeners leaked on update.Fixed #11669, enabling range selector with update did not work properly.Fixed #14292, right-aligned range selector buttons were positioned outside the chart after animating in.Fixed #14691, incorrect order of annotation subtitles in pop-ups in Firefox.Fixed #14193, scrollbar did not work on touch devices.Fixed #14698, issue with how the EMAPercent was calculated in the DEMA and TEMA indicator.Fixed #14544, range selector did not fully support slashes in date inputs.Fixed #14505, when one of the chart series had a single point, the navigator handles could be dragged beyond the default xAxis.minRange. The computed minRange was NaN.Fixed #14436, range selector styling with keyboard navigation.Fixed #13934, chart crashed when dataGrouping was disabled and axis extremes were set outside the data range.  Highcharts Stock v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Stock 8.2.2.  Bug fixes Fixed #14060, navigator's yAxis did not match the chart.Fixed #14254, the plotBands.acrossPanes option had no effect.Fixed #13751, wrong clip path after adding/removing series.Fixed #13950, in StockTools, adding technical indicators to column-type series did not use the same dataGrouping.approximation.  Highcharts Stock v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Stock 8.2.0.  Bug fixes Fixed #13205, range selector showed wrong values ​​after update.Fixed #13664, measure had wrong position when used on a positioned Y axis.Fixed issue with range selector buttons text color, see #13798.Fixed #13788, adding data to an empty chart and updating rangeSelector.selected altogether did not render new series.Fixed #13813, hiding series when dataGrouping was enabled and legend.layout was set to "proximate" used to render legend item at the wrong position.  Highcharts Stock v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Stock 8.1.2.  Highcharts Stock v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Stock 8.1.1.  Bug fixes Fixed #13392, the navigator had wrong top position when legend.layout was proximate.Fixed #12696, calling series.setData() after series.update(options, redraw=false) on a cropped or grouped dataset would update the wrong points.Fixed #13334, panning an ordinal axis with equal spaced data did not work correctly.  Highcharts Stock v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Stock 8.1.0.  Bug fixes Fixed #13287, incorrect position of the vpb (volume by price) series after the initial animation.Fixed #12054, problem saving and loading simple annotations (label, rectangle and circle) from localStorage added via Stock Tools.Fixed #12391, zones were broken when series was updated.Fixed #13184, dynamically disabling scrollbar and decreasing number of points in chart.update() caused wrong extremes on xAxis.Fixed #13025, legend was overlapping range selector when they were both vertically aligned to the top.Fixed #11480, error with crosshair labels after enabling the Stock Tools' current price indicator and changing the timeframe of the chart.Fixed #12834, hidden series applied wrong extremes on X axis when scrolling.Fixed #13176, Stock Tools' fullscreen button did not work.Fixed #13114, the navigator did not update without a base series and scrollbar.  Highcharts Stock v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highstock 8.0.4.  Bug fixes Fixed issue with rangeSelector buttons alignment, see #13014.  Highcharts Stock v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highstock 8.0.3.  Highcharts Stock v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highstock 8.0.2.  Highcharts Stock v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highstock 8.0.1.  Bug fixes Fixed issue with axis labels outside plot range when ordinal enabled, see #12716.Fixed #7204, OHLC ticks were rendered incorrectly with higher series.lineWidth values.Fixed issue with navigator overlapping when axis labels width change, see #12573.  Highcharts Stock v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highstock 8.0.0.Added Slow Stochastic indicator.  Bug fixes Fixed regression which prevented from panning to the left side when dataGrouping and xAxis.ordinal were enabled.Fixed #12216, Stock Tools UX was not working optimal on mobile devices.Fixed #12145, missing option supertrend.color.Fixed #12298, enabling crosshair label while a point was hovered rendered crosshair labels for all axes.  Highcharts Stock v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highstock 7.2.2.  Highcharts Stock v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highstock 7.2.1.  Bug fixes Fixed #12266, applying zones on macd when the main series had no data produced an error.Fixed #11471, updating chart with new series and oneToOne set to true used to throw errors when data was grouped.Fixed #12215, VWAP technical indicator added via StockTools was added to the wrong pane.Fixed #11426, arearange series had disabled dataGrouping by default.Fixed #1172, handles positions and xAxis extremes were incorrect when using column type series in navigator.Fixed #12099, panning to the left did not work properly after zooming in when data grouping was enabled.Fixed #11716, basic annotations (rect, circle and label) were missing options in StockTools' popup.Fixed #12058, compare with one single data value failed. It now behaves like when comparing to data points of the same value - it renders on the 0 line.  Highcharts Stock v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highstock 7.2.0.  Highcharts Stock v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highstock 7.1.3.Added new technical indicator, trendline, showing price trend.  Bug fixes Fixed #11483, lastPrice indicator was incorrect with dataGrouping.Fixed #11415, vertical scrollbar was visible in annotation popup.Fixed #11175, navigation.bindings.rectangleAnnotation did not resize it's width/height according to xAxis/yAxis extremes.Fixed #11174, size of measure annotation was not recalculated in redraw.Fixed #10980, defining just one item in stockTools.gui.definitions[name] threw errors.Fixed #11191, dataGrouping.approximation.average did not correct floating point precision errors.Fixed #10745, sometimes old points were not removed after updating data with enabled dataGrouping.Fixed #11366, annotationOptions did not work for some of the bindings[annotationName].Fixed #11351, gapSize and multiple dataGroupings sometimes hide series line with lower granularity.Fixed #11344, some icons were not loaded from custom url. Added new general option, navigation.iconsURL that takes over from the more specific stockTools.gui.iconsURL.Fixed #11206, editing technical indicators in stock tools did not select correct series.Fixed #11079, stock-tools were not working correctly in inverted charts.Fixed #11005, X axis line width affected clipping of the series graph or columns, even when the Y axis did not extend to the X axis.Fixed #10827, issues with the TEMA indicator's tooltip and boost module. Caused by a method name collision.Fixed #10932, xAxis.minPadding didn't work when plotOptions.series.dataGrouping was enabled.  Highcharts Stock v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highstock 7.1.2.Added new options plotBands.acrossPanes and plotLines.acrossPanes to control rendering lines across all panes. See #6644.  Bug fixes Fixed #10404, range selector inputs overlapped exporting menu.Fixed macd series wrong rendering issue after point update with data cropped (see #10774).Fixed issue with incorrect scrollbar if axis extremes were the same (#10733).Fixed #10290, ordinal xAxis in lazy loading sometimes did not render all xAxis labels after zooming out.Fixed #10618, different yAxis.opposite settings caused scrollbars to overlap.Fixed #10605, simple annotations (label, circle, rectangle) added using stock-tools were misplaced in exported chart.  Highcharts Stock v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highstock 7.1.1.  Bug fixes Fixed #10460, updated options in annotations prevented updates from stock tools popup.  Highcharts Stock v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highstock 7.1.0.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10015, chart update did not reserve space for rangeSelector.Fixed #10015, chart update did not reserve space for rangeselector.Fixed #10144, delete button in GUI did not work for flags.Fixed #10183, Elliot waves did not render last line when added through GUI.Fixed #10192, technical indicators added via stock tools for a volume series were rendered on a wrong yAxis.Fixed #10193, wrong navigator series indexes after addSeries().Fixed #10196, plotOptions.<indicator>.params did not update default values in inputs.Fixed #10201, stochastic indicator did not open it's pane from GUI.Fixed #10261, mouse event arguments should be passed to range selector button click handler.Fixed #10332, After drawing a segment line and moving end point whole chart area was selected.Fixed #1289, wrong extremes on second pane yAxis when zoomed the first one.Fixed #4606, range selector inputs did not blur and jQuery UI datepicker didn't close.Fixed #7067, Navigator was not added by chart update.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9994, navigator.xAxis.min was wrong with main xAxis.min set and ordinal enabled after addPoint.  Highcharts Stock v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highstock 7.0.3.Added new property compareToMain to certain indicators. See #7773.  Bug fixes Fixed #10000, gapSize caused a gap to display on grouped data in the DST transition and when grouped to months.Fixed #10001, pointer events were missing after hide stock toolbar.Fixed #8430, Series data in navigator was reset after update unrelated series.Fixed #8660, yAxes in separate panes were misaligned after panning and chart resize.Fixed #9209, rangeSelector.selected and rangeSelector.options.selected were not cleared when all buttons were unchecked.Fixed #9493, indicators were badly updated when data was cropped. Closed #8572, #9822.Fixed #9913, useOhlcData did not work when datagrouping enabled.Fixed #9915, price indicator had error when no points.Fixed #9928, xAxis label was incorrect when point had declared name.  Highcharts Stock v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highstock 7.0.2.  Bug fixes Fixed #6989, require data to be sorted for dataGrouping instead of for all series in a Highstock chart.Fixed #7083, improved pane clipping for column type series.Fixed #9235, option Axis.scrollbar.liveRedraw did not block events and redraw.Fixed #9693, added default groupPixelWidth when dataGrouping options were set to all series through plotOptions.series.Fixed #9724, wrong position of range selector on init when all series were hidden.Fixed #9740, calling chart.update() removed all stockTools bindings.Fixed #9767, annotations' dynamic updates (update, remove, resize, drag and drop) were not applied in the exported chart.Fixed positioning of flags when attached to a yAxis with pane information.Fixed #8544, series keys were not applied with turboThreshold and dataGrouping.Fixed #9787, set supertrend cropThreshold equal to main series one on init.Fixed #9847, stocktools gui and popup did not support touch events.Fixed #9854, correct compareValue for OHLC series.  Highcharts Stock v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highstock 7.0.1.  Bug fixes Improved layout in Stock Tools toolbar.Fixed issue in Stock Tools where separate yAxes should be created for certain indicators.Fixed missing translation of measure key in lang.navigation.popup.Fixed #10214, stocktools bindings referred to wrong chart container.Fixed #10351, ichimoku - remove was broken in iE11.Fixed #10387, verticalCounter in stockTools was broken.Fixed #10392, stocktools popup was not compatible with IE.Fixed #9938, added annotation options in stocktools.  Highcharts Stock v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highstock 7.0.0.Added new technical indicators: Arroon, Arroon Oscillator, Absolute Price Oscillator, Williamis %R, NATR (Normalized Average True Range), Linear regression indicator, Linear regression intercept, Linear regression angle, Linear regression slope, Keltner channels, Price Channel, Acceleration Bands, Triple EMA, Double EMA, TRIX, Percentage Price oscillator, Super trend, Chaikin oscillator, Awesome Oscillator, Detrended price.Added depth chart demo.Added Stock Tools, a new range of features moving Highstock in the direction of full featured trading dashboards. The module adds a toolbar with controls for:Add, update or remove indicators for the chart series.Drawing custom annotations like text, lines, arrows etc.Parallel channel, pitchfork annotations, Elliot waves and Fibonacci retracements.A measure tool, displaying information about the measured area, including things like the amount of points, time range etc.Infinity line, controlled by two points, allowing projection of a trend forward in time.Full screen mode.Chart type toggle (OHLC, candlestick, line etc.).Current price indicator with label.  Upgrade notes Indicators that depend on another indicator now require the depencency to be loaded manually. Otherwise an error will be thrown. For example MACD requires EMA, that means the EMA indicator should be loaded first.  Bug fixes Fixed #4710, range selector didn't update on clicking the chart after changing input.Fixed #8951, improved ema efficiency, index changed.Fixed #9102, hardcoded stochastic series name.Fixed #9160, xAxis.overscroll rendered too many labels.Fixed #9285, reset zoom button was permanently disabled by navigator or rangeSelector despite dynamic updates.Fixed #9299, avoid hiding flags with box position equal to 0.  Highcharts Stock v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highstock 6.2.0.  Bug fixes Fixed #9020, columnrange bottom dataLabels were not rendered when dataGrouping was enabled.Fixed #9075, adding a point used to reset zoom when series had different ranges.Fixed #9077, a regression causing disappearing points in some cases related to data grouping.  Highcharts Stock v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highstock 6.1.4.Added feature to preserve non-data point options inside data-grouped points. The options from the first point are copied over to the group. Closes #8999.  Bug fixes Fixed #8440, keyboard navigation in stock charts throwing errors.Fixed #7051, dataGroupInfo.start was indicating wrong point when points were grouped weekly.Fixed #8335, setting xAxis.min did not change extremes when points were grouped.Fixed #8546, flags were not clipped.Fixed #8812, regression in inverted navigator caused wrong extremes on when navigated to data extremes.Fixed #8817, setting stacking option for OHLC and Candlestick series threw errors.Fixed #8847, MACD used to crash when provided amount of points was insufficient.Fixed #8848, removing empty MACD technical indicator used to throw errors.Fixed #8889, corrected demo for approximation.Fixed #8899, setting chart.style.zIndex prevented RangeSelector's inputs from receiving focus.Fixed #8938, advanced stock demo threw errors when changing from Demo 2 to Demo 1.Fixed #8965, Stochastic indicator %D value was calculated incorrect.Fixed #8968, SMA technical indicator threw errors on updating last point in the dataset.Fixed issue with presentational attributes leaking through styled mode in range selector.  Highcharts Stock v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Stock v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highstock 6.1.2.  Upgrade notes Fixed performance issues with default settings and the Boost module. Now xAxis.ordinal is turned off if one of the series are in boost mode, and scrollbar.liveRedraw is turned off by default if boosting.  Bug fixes Fixed #8733, range selector was unable to update to enabled: true.Fixed #3777, candlestick series on a reversed yAxes was rendered incorrectly.Fixed #8196, updating a chart with oneToOne with the same options caused errors and disappearing X and Y axes.Fixed #8433, added option rangeSelector.buttons.preserveDataGrouping to keep dataGrouping on extremes change.Fixed #8542, crosshair was not working for logarithmic axes.Fixed #8562, errors in console when legend covers plot area.Fixed #8572, technical indicators' data was not updated when adding a point with shift.Fixed #8573, flags were not hidden.Fixed #8595, toggling navigator caused plotting area to shrink.Fixed #8715, error on destroying navigator series after the parent series had already destroyed it internally.Fixed #8769, rangeselector position forgotten when updating chart margins.Fixed graphical issue with scrollbar animating on first drag in the navigator handles.  Highcharts Stock v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highstock 6.1.1.  Bug fixes Fixed #7828, browsers were crashing when panning million of points on a chart.Fixed #8031, columns overlapped xAxis - correction.Fixed #8196, navigator series interfered with series order when running chart.update.Fixed #8200, reset zoom button did not hide after resetting extremes.Fixed #8212, improved API reference of dataLabel.y and added API reference of pointValKey for ohlc series.Fixed #8374, navigator's series did not inherit visible option from linked series.Fixed #8376, PSAR and MACD technical indicators were throwing errors when main series did not have enough points.Fixed #8445, Rate of Change (RoC) had wrong tooltip when params were set.  Highcharts Stock v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highstock 6.1.0.Added dataGrouping.groupAll option to prevent columns value change on scrolling when dataGrouping is active. Closes #5344.Created advanced stock chart demo to showcase dashboarding.  Bug fixes Fixed #4960, wrong position of flags on inverted chart.Fixed #5308, negative timestamps threw errors with enabled rangeSelector.Fixed #5581, navigator was broken after removing all series.Fixed #6423, dynamically added axes had wrong indexes after axis.update().Fixed #6994, zoom out on mobile devices did not select correct rangeSelector buttons.Fixed #7823, technical indicators caused dataGrouping issues.Fixed #7827, sometimes forced dataGrouping by year didn't render all points and xAxis labels.Fixed #7945, zones in MACD technical indicator broke rendering signal line.Fixed #7995, chart threw errors when initialized with xAxis: [].Fixed #8023, point.update() threw exceptions when not defining options.Fixed #8038, dynamic change of navigator.adaptToUpdatedData did not work.Fixed #7684, spacingBottom was ignored after chart update.  Highcharts Stock v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highstock 6.0.7.  Bug fixes Fixed #7802, incorrect EMA calculation when series had points with zero values.Fixed #7788, MACD did not display calculated points.  Highcharts Stock v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highstock 6.0.6.  Bug fixes Fixed #5457, incorrect flag placement in pane layout.Fixed #7686, series was not visible with dataGrouping and gapSize combined.Fixed #7690, yAxis array options ignored when using setOptions.  Highcharts Stock v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highstock 6.0.5.Made showLastLabel default for category yAxes. See #6104 and #7546.  Bug fixes Fixed #6379, scrollbar.liveRedraw was not respected on mobile devices.Fixed #7219, crosshair label was incorrect when using multiple panes.Fixed #7547, a regression causing grouped data points to remain visible after zooming in to non-grouped data.Fixed #7563, drag-panes module triggered zoom.Fixed #7576, navigator handles rendered wrong extremes when xAxis was reversed.Fixed #7642, default technical indicator name was not based on parameters.Fixed #7648, Bollinger bands were not rendered when linked to an area series.Fixed #7713, reversed navigator xAxis didn't show new points.Fixed #7732, drag-panes module was changing navigator's yAxis size.  Highcharts Stock v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highstock 6.0.4.Added y value to flag points on a series. See #7440.  Bug fixes Fixed #7307, unable to set tooltip.split to false from setOptions.Fixed #7458, the 1M button in the range selector was not visually in pressed state even when initially selected when the data range crossed DST.Fixed #7509, calling chart.destroy() after setData with redraw false caused JS error.  Highcharts Stock v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highstock 6.0.3.  Bug fixes Fixed #3482, using direction rtl caused various labels to be mispositioned.Fixed #4674, overlapping flags when next to each other.Fixed #4798, white pixel visible next to the chart on init.Fixed #6612, the "Reset Zoom" button always returned to previous zoom.Fixed #6984, strange animation when zooming between data grouping levels.Fixed #7256, redundant redraws when toggling a series with linked navigators.Fixed #7275, X axis labels were gone in a scatter chart with X axis breaks.Fixed #7378, removing base series with only scrollbar enabled caused errors.  Highcharts Stock v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highstock 6.0.2.  Bug fixes Fixed #7246, tooltips not working on flags with the default split option.Fixed #7256, redraw event was triggered when calling Series.setVisible with the redraw argument set to false.  Highcharts Stock v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highstock 6.0.1.  Highcharts Stock v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highstock 6.0.0.Added built-in technical indicators.Added drag-and-drop pane resizing.Added support for positioning of the range selector.Added support for max range and handle customization in the navigator.Added support for scrolling past the data.Added compareStart to define which point should be the base for calculations. See #1613.Added rangeSelector.buttons.offsetMin and offsetMax to control button range extremes. See #1613.Added xAxis.maxRange to limit maximum allowed range for navigator.Added xAxis.overscroll.Added new options to navigator.handles.  Bug fixes Fixed #6655, flag series with showInNavigator set to true caused error and missing graph.Fixed #7109, stack size exceeded when using responsive rules.Fixed navigator updating issues. Closes #7110 and #5846.  Highcharts Stock v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highstock 5.0.14.  Highcharts Stock v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highstock 5.0.13.Added option, series.gapUnit, to allow greater control of gapSize. Closes #6645.Allow relative length for axis.width and axis.left. See #6836.  Bug fixes Fixed #5846, #5936, #6193 and #6251. Rewritten Navigator update logic.Fixed #6546, gapSize with stacking didn't work.Fixed #6734, linkedTo was wrongly applied to Navigator series.Fixed #6771, ensure events are handled on same document as chart elements.Fixed #6830, RangeSelector button loses focus on adding points in chart.load event.Fixed #6930, scrollbar was rendered with wrong extremes when Axis had not any data.Fixed minor Navigator issues.  Highcharts Stock v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highstock 5.0.12.  Bug fixes Fixed #6683, inverted chart rendered scrollbar outside the container.Fixed #6709, Chart.get(id) caused errors when at least one series was hidden with grouped points.Fixed #6716, dataGrouping in arearange series did not reserve space for null points.Fixed #6720, zAxis gridLines were incorrectly rendered.Fixed #6725, navigator mask was black in old IE.Fixed #6725, navigator's outer masks rendered as black in IE6/7/8.  Highcharts Stock v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highstock 5.0.11.  Bug fixes Fixed #2914, dataGrouping approximation wasn't checked properly.Fixed #5479, added averages option for approximation in dataGrouping.Fixed #6445, function getSelectedPoints did not find points outside of cropThreshold.Fixed #6537, month buttons were not setting correct extremes when the current month had more days than previous months.Fixed #6562, crosshairs always drawn relative to high value in OHLC and candlestick charts.Fixed #6573, scrollbar was rendered on xAxis labels, when using chart.scrollbar option.Fixed #6590, dataGrouoping wasn't wokring correctly with keys set on data.Fixed #6590, dataGrouping wasn't working correctly with keys set on data.Fixed #6615, enabling Chart.scrollbar by chart.update() caused errors.  Highcharts Stock v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highstock 5.0.10.  Bug fixes Fixed #1716, navigator handles were not moving if the range was very small.Fixed #3517, yAxis.top caused flags on xAxis to be rendered outside the view.Fixed #3763, stable sort was not used for flags.Fixed #6303, events didn't work for flags when useHTML was set to true.Fixed #6453, scrollbars for multiple yAxes were positioned incorrectly.Fixed #6478, flags on OHLC were unable to have onKey set to low or high.  Highcharts Stock v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Stock v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highstock 5.0.8.  Bug fixes Fixed #6276, a regression which broke x-panning.Fixed #5493, performance regression with data grouping for a hidden series.Fixed #5800, outline position was wrong when outlineWidth was wider.Fixed #6071, Axis.update() changed default settings.Fixed #6262, vertical scrollbar on an inverted chart was positioned incorrectly when used without navigator.Fixed #6266, dragging navigator with full range caused points to disappear.Fixed #6327, flags series tooltip position.Fixed #6334, scrollbar called afterSetExtremes event twice.Fixed #6363, series.remove() ignored redraw param if series had a related series in the navigator.Fixed #6383, adding point after series.update() reset xAxis extremes.Fixed #6421, errors after destroying a chart with multiple scrollbars.  Highcharts Stock v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highstock 5.0.7.Added support for navigator in inverted charts.Created new module stock.src.js so Highstock can be loaded as a module for Highcharts.  Bug fixes Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5602, issues with setting range by inputs.Fixed #6012, navigator handles couldn't be moved after hiding and updating series.Fixed #4114, navigator didn't respond to mouse events when xAxis was reversed.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed #5979, wrong column width when the X axis contained breaks.Fixed #6140, candlestick hover state didn't respect lineWidth.Fixed #6156, a regression causing poor performance with forced dataGrouping when dealing with hundreds of thousands of data groups.Fixed #6162, series.update() didn't update all series.Fixed #6166, events were not bound to all plotBands.Fixed #6191, navigator dropped too early when encountering minRange.Fixed #6192, unwanted clipping when used with gauge series.  Highcharts Stock v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highstock 5.0.6.Added new option, series.compareBase, to allow percentage comparison to start at 100%.  Bug fixes Fixed #2685, xAxis.offset didn't work for navigator's xAxis.Fixed #5924, wrong extremes on dynamically added axes.Fixed #6057, setting correct series clip-path for polar charts.Fixed #4988, navigator.enabled, rangeSelector.enabled, scrollbar.enabled ignored when setOptions was used.  Highcharts Stock v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highstock 5.0.5.  Bug fixes Fixed #2944, title.style.fontSize ignored when setOptions was used.Fixed #5904, navigator series were using wrong clipPath.Fixed #5923, columns were not rendered correctly with linked axes.Fixed #5978, fillColor was not applied for flags, when was set on in the point config.  Highcharts Stock v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highstock 5.0.4.  Highcharts Stock v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highstock 5.0.3.  Bug fixes Fixed #5884, optimizing addSeries.Fixed #5918, navigator handles were blurry when navigator height was an odd number.Fixed #5930, selected range selector button was unselected if redrawing before doing manual selections.Fixed #5971, eternal loop on setting general minor grid lines that applied to the navigator.  Highcharts Stock v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Highcharts Stock v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highstock 5.0.1.  Bug fixes Fixed issues with Highstock keyboard navigation in the Accessibility module.Fixed #5602, issues with setting range by inputs.Fixed issue with input range where the range would be reset based on wrong extremes. Ref #5602.Fixed #5088, marker states on flags were ignored.Fixed #5706, wrong series visualization when using compare.Fixed #5814, one all-zero series caused others to fail with compare.Fixed #5823, regression caused wrong columns width when one of the series was hidden.Fixed issue where removing and re-adding navigator via chart.update caused errors.Fixed issue with range selector inputs not hiding or showing correctly when setting chart size with animation.  Highcharts Stock v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highstock 5.0.0.Added support for multiple series in the navigator, see series.showInNavigator and series.navigatorOptions.Added new option, plotOptions.flags.textAlign.Deprecated the baseSeries option, now replaced by showInNavigator.  Highcharts Stock v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highstock 4.2.7.Added Series.dataGroupInfo to allow accessing data grouping information from the approximation function.Added warning on trying to update grouped point.  Bug fixes Fixed #5635, regression causing background images on flags to fail.Fixed #5493, hidden series with data grouping caused wrong extremes on xAxis.Fixed #2049, flags were misplaced when using more than one column-type series.Fixed #3228, inputs in range selector didn't allow to view the historical data in lazy loading.Fixed #3961, bubble series caused JavaScript errors in Highstock.Fixed #3111, column series were clipped off when resizing chart during initial animation.Fixed #3112, compare for candlestick.Fixed #5231, input fields not receiving focus after showing hidden chart.Fixed #5600, YTD button was disabled when all the data was within the same year.Fixed #5686, scrollbar.minWidth option causes misplacement for a scrollbar bar.Fixed #5699, column series dissapeared when added after chart initialization and using navigator.Fixed #5702, crosshair label's anchor was misplaced during mouse move.  Highcharts Stock v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highstock 4.2.6.Added new option set, yAxis.scrollbar, to allow scrollbars on Y axis (or in fact any axis) in Highstock. Read announcement.Refactored sideways graph animation to allow smooth navigation when clicking scrollbar buttons, adding multiple points etc.  Bug fixes Fixed #687, first value of compare chart should be the last of the previous range.Fixed #5316, wrong columns and ticks after toggling ordinal setting with axis update.Fixed #5323, regression causing JS error on redrawing empty stock chart.Fixed #5330, JS error when enabling range selector in Chart constructor.Fixed #5395, animation mixed up on navigator and range selector.Fixed #5414, navigator series updated wrong on addPoint when data grouping was disabled.Fixed #5453, unresponsive first drag on navigator.Fixed #5477, error on first mouse hover with crosshairs.Fixed #5485, setCompare did not affect exported chart.Fixed #5489, a regression causing data grouping on range selector buttons to fail.Fixed #4222, flag's title wasn't updated with Point.update.Fixed #5388, performance hit when running a forced data grouping with a lot of empty groups.Fixed #5390, navigator series wasn't updated when chart initialized without series.  Highcharts Stock v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highstock 4.2.5.Refactored scroller redraw to prevent chart from redrawing twice.  Bug fixes Fixed #2266, series didn't animate when running addPoint.Fixed #3452, zoomed range didn't move when adding points to stock chart without a navigator.Fixed #5193, browser crash in Chrome 49+ when updating candlestick points frequently.Fixed #5231, input fields not receiving focus after showing hidden chart.  Highcharts Stock v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highstock 4.2.4.Added new Point property, dataGroup, that holds information of what raw data points are included in a grouped point.  Bug fixes Fixed #3477, range selector did not update axis extremes after pressing enter in IE.Fixed #4747, gapSize did not apply to each series independently.Fixed #5041, scroller.zoomedMin was bigger than zoomedMax, which caused error due to negative width.Fixed #5165, space was reserved for the exporting button even when disabled.Fixed #5172, scroller threw error with empty series data and an X axis minimum setting.  Highcharts Stock v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highstock 4.2.3.  Bug fixes Fixed #5008, failure on gaps in navigator series under certain conditions.  Highcharts Stock v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highstock 4.2.2.Added new option to flag series, onKey, to configure what key the flag should be placed on. Closes #4873.  Bug fixes Fixed #4907, data grouping didn't give correct distance to points immediately outside the plot area.Fixed #4922, range series didn't work with compare mode.Fixed #4926, axis breaks on Y axis failed.Fixed #4935, error with shifting multiple series in edge case.  Highcharts Stock v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highstock 4.2.0.  Bug fixes Fixed #4798, single pixel from range selector input visible on chart border.Fixed #951, compare not displaying a graph when first value was 0.  Highcharts Stock v2.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highstock 2.1.10.Some improvements on crosshair labels (#4722).  Bug fixes Fixed #2908, navigator xAxis sometimes covered drag handles.Fixed #1195, scrollbar breaking after hiding all series when navigator disabled.Fixed #2822, wrong column distribution on ordinal axis in a multi-series chart if the series points had different spacing.Fixed #3238, format strings not replaced in header and footer.Fixed #3375, range selector button state was sometimes set to selected when it overlapped with other buttons.Fixed #4661, negative starting point in compare series caused series not to display.Fixed #4696, srollbars didn't work on Android in some cases.Fixed #4703, navigator window jumped back and forth while touch-dragging.  Highcharts Stock v2.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highstock 2.1.9.Added new option, rangeSelector.height, to reserve space for buttons and input.  Bug fixes Fixed #2920, dataGrouping.smoothed made graph extend to series extremes.Fixed #4501, X axis range larger than data broke the chart.Fixed #4520, JS errors on setting extremes outside the navigator's range.Fixed #4602, navigator line color was not affected by color setting.  Highcharts Stock v2.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highstock 2.1.8.Added new lang option, invalidDate, determining what to display in invalid range selector input. Closes #4384.  Bug fixes Fixed #3119, flag on first point didn't render.Fixed #4147, first column not initially shown in month view.Fixed #4324, tooltip not displayed on image flags in IE.Fixed #4335, setDataGrouping was wrong with multiple series.Fixed #4403, zones caused JS error with separate and empty navigator series.Fixed #4452, range selector did not appear after adding data.Fixed #4457, tabbing away from range selector input did not hide the input.Fixed #4466, setTitle caused overlapping title and range selector buttons.  Highcharts Stock v2.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highstock 2.1.7.  Bug fixes Fixed #3013, top X axis was not considered when placing range selector.Fixed #4226, individual line color on candlestick up-points didn't take effect.Fixed #4229, errors on scrolling on an axis containing breaks with breakSize.Fixed #4244, data labels on area range broke on JS error when labels were outside viewable area.Fixed #4285, a regression causing flags to be shaped like squares in some cases.Fixed #4314, running Axis.update caused label alignment to shift.Fixed #4317, X axis update affected the selected range.  Highcharts Stock v2.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highstock 2.1.6.  Bug fixes Fixed #1317, clipping not correctly applied to multi-pane charts when highcharts-more.js was loaded.Fixed #1417, linked ordinal axes.Fixed #4196, axis update from ordinal to non-ordinal failed.Fixed #4202, scrollbar created for empty chart.Fixed #4209, breaks crashed navigator on long series.Fixed #4252, anchor line of flags was skewed. Made all flags crisp as well as in line with tick marks of the same value.  Highcharts Stock v2.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highstock 2.1.5.Added feature, forced data grouping tied to range selector buttons. View demo.  Bug fixes Fixed #3983, plot band labels outside axis range were visible.Fixed #4042, column series disappearing if another column series is updated and data grouping enabled. Also affects series types derived from columns. Closes #4040.Fixed #4053, min and max in the navigator.xAxis options were not respected if the data exceeded the setting.Fixed issue with the range selector input boxes not being able to focus after first focusing, then clicking on the chart outside the input.  Highcharts Stock v2.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highstock 2.1.4.  Bug fixes Fixed #2998, reflow during initial series animation caused clipped chart.Fixed #3865, range selector not working in IE.Fixed #3897, point up/down colors not redrawing after updating point value.  Highcharts Stock v2.1.3 (2015-02-27) # Most issues listed under Highcharts 4.1.3 above also apply to Highstock 2.1.3.  Bug fixes Fixed #3857, issue with setExtremes and axis breaks causing Highstock scrolling not to work across breaks.  Highcharts Stock v2.1.2 (2015-02-27) # Most issues listed under Highcharts 4.1.2 above also apply to Highstock 2.1.2.  Bug fixes Fixed #3882, plot bands not displayed if they were clipped on the edge of the plot area.Fixed #3543, scrolling passed data extremes threw off navigator.  Highcharts Stock v2.1.1 (2015-02-17) #   Bug fixes Fixed #3818, ordinal axis not working.Fixed #3821, tooltip error with flags.Fixed #3816, tooltip not working after series data or extremes changed.Fixed #3817, JS errors with pies generated by highstock.js.  Highcharts Stock v2.1.0 (2015-02-16) # Most issues listed under Highcharts 4.1.0 above also apply to Highstock 2.1.0.  Bug fixes Fixed #3755, resize cursor set on scrollbar.Fixed #3706, point.color not working when series.upColor was set.Fixed #3647, missing markers in scatter chart because of auto-marker logic.Fixed #3639, flags don't shifting position after removing one in a stack.Fixed #3539, navigator outline one pixel off at the left side.Fixed #3519, markers showing outside a clipped pane.Fixed #3524, multipane plot line logic interfering with grid lines in heatmap.Fixed #3487, JS error on creating stock chart with empty series.Fixed #3451, clipped data series when changing chart size and series animation was disabled.  Highcharts Stock v2.0.4 (2014-09-02) # Most issues listed under Highcharts 4.0.4 above also apply to Highstock 2.0.4.Added buttonPosition to RangeSelector, issue #3395.Regard "startOfWeek" option in data grouping.  Bug fixes Fixed #3274, range selector not working in IExx because of issue with floats and Element.blur.Fixed #3211, stuck tooltip and crosshair when touch-panning.Fixed #3359, higher ranked time labels not showing with negative timezoneOffset.Fixed #3125, overlapping extreme X axis labels on ordinal axis in certain cases.Fixed #3339, ordinal axis crashing on updating too quickly.Fixed #3299 where Y axis labels on subsequent panes would be drawn outside the plot area when they should be inside like the first pane.  Highcharts Stock v2.0.3 (2014-07-03) # Most issues listed under Highcharts 4.0.3 above also apply to Highstock 2.0.3.Added new option, rangeSelector.allButtonsEnabled to force auto-disabled buttons on inadequate range to be clickable. Closes #2418.  Bug fixes Fixed #3150 causing error when setting dataGrouping options for flag series.Fixed #3146 causing auto alignment of axis labels to fail.Fixed #1326 causing parts of candlesticks not to print from Chrome's printing dialog.Fixed #3040 where the scrollbar would be mispositioned when setting the extremes of a chart outside the data range.Fixed #3018 causing JS errors on negative height rectangle in low-height plot area.  Highcharts Stock v2.0.0 (2014-04-22) # See the release announcement.The default design has been updated with Highstock 2, but all aspects of design can be reverted to the Highstock 1.3 looks by applying options. See this design compatibilty demo for a listing of what options it applies to.  Highcharts Stock v1.3.10 (2014-03-10) # Most issues listed under Highcharts 3.0.10 above also apply to Highstock 1.3.10.  Bug fixes Fixed #2708 where panning on an ordinal axis containing candlesticks, OHLC or column series would cause the zoomed range to decrease.Fixed #2696 where a single point outside the visible X range would be grouped within the first data group.Fixed issue with data grouping not being reset when zooming in and multiple series were present. Closes #2692.Fixed issue with first point being left out in data grouping when grouped to an earlier time. Closes #2533.Fixed issue with percentage stacking in combination with data grouping. Closes #2445.Fixed issue with navigator not reflecting the limitations of the minRange. Closes #2618.Fixed issue with scrollbar giving the wrong results in the chart when the axis was padded with axis.max. Closes #2611.Fixed issue with compare mode breaking down when at least one series had empty data. Closes #2601.Fixed issue with candlestick not aligning with crosshairs.  Highcharts Stock v1.3.9 (2014-01-15) # Most issues listed under Highcharts 3.0.9 above also apply to Highstock 1.3.9.Highstock: Fixed regression with missing tooltip on flag series. Closes #2573.  Bug fixes Fixed broken panning in Highstock 1.3.8. Closes #2590.  Highcharts Stock v1.3.8 (2014-01-09) # Most issues listed under Highcharts 3.0.8 above also apply to Highstock 1.3.8.  Bug fixes Fixed issue with flags being clipped away when connected to the last X value. Closes #2543.Fixed scrollbar issue with low precision and sometimes the scrollbar not moving at all when it was too small. Closes #1468.Fixed issue with adding the first series dynamically to Highstock when the range selector was enabled. Closes #624.Fixed issue with selected state range selector button not reflecting the real selection in exported charts. Closes #2458.Fixed issue with the navigator not spanning the full width of the main data when the base series did not fill it. Closes #2436.Fixed issue with non-sync data grouping on ordinal axis when X distribution differs. Closes #2416.Fixed regression with data grouping getting stuck when zooming in. Closes #2110.Fixed issue with ordinal axis and selected range being normalized to selected button even when time span doesn't allow it. Closes #2290.Fixed issue with range selector inputs not allowing to set date to the actual data extreme when the extreme had higher precision of the input format. Closes #2438.  Highcharts Stock v1.3.7 (2013-10-24) # Most issues listed under Highcharts 3.0.7 above also apply to Highstock 1.3.7.Added options to control the size of range selector input boxes, Closes #2353.Enabled data grouping by default on navigator series, so that turning off data grouping in the main series doesn't automatically turn it off in the navigator.  Bug fixes Fixed issue with scrollbar never going fully back to the axis max after clicking the scrollbar buttons. Closes #2293.Fixed regression where series got truncated after hiding another series i a chart with data grouping enabled. Closes #2373.Fixed issue with scatter points showing on the edge of the chart and taking up an ordinal position even when they are well outside the axis range. Closes #2342.Fixed problems with panning or scrolling back to max last value when the navigator was previously zoomed to an earlier time span. Closes #2341.  Highcharts Stock v1.3.6 (2013-10-04) # Most issues listed under Highcharts 3.0.6 above also apply to Highstock 1.3.6.Added upLineColor option to candlestick.  Bug fixes Fixed Highstock issue with stacks not being properly cleared when moving between non-grouped and grouped data, leaving artefacts in a stacked area chart. Closes #1651.Fixed issue with min and max on the navigator X axis not being settable. Closes #2277.Fixed Highstock issue with the axis maximum changing when dragging the handle to change the axis minium, and vice versa. Closes #2163.Fixed Highstock error messages when initiating a chart with set X axis min and max and empty series data. Closes #2238.Fixed Highstock issue where data grouping would stick and be applied when not necessary after showing a time range where it was necessary. Closes #2110.Fixed Highstock issue with tooltips displaying for points outside the X axis range and crosshairs displaying in the wrong position. Closes #1149.Fixed issue in Standalone Framework where event were triggered in reversed directions, causing JS errors in Highstock. Closes #2220.Fixed Highstock issue with flags not being correctly positioned on an axis if the X axis line width is zero. Closes #2032.Fixed Highstock issue with flags showing on the edge of the zoomed area on ordinal axes. Closes #2198.Fixed Highstock issue with fake columns appearing just outside the plot area on an ordinal axis. Closes #1260.  Highcharts Stock v1.3.5 (2013-08-23) # Most issues listed under Highcharts 3.0.5 above also apply to Highstock 1.3.5.Disables range selector buttons which range is below the X axis automatic or explicit minimum range.Make sure Highstock zoomed range is moving at least one pixel when clicking scrollbar buttons. Closes #1716.Improved range selector buttons by rendering them disabled when the associated range is not available. Closes #2050.  Bug fixes Fixed Highstock issue with range selector buttons becoming unselected after scrolling and panning. Highcharts now attempts to keep the range selector button pressed even in ordinal axes, as long as it is scrolling within a relatively linear-scaled area. Closes #2041.Fixed Highstock issue with the Y axis tick label not being shown when there is only one singe value and one tick. Closes #2100.  Highcharts Stock v1.3.4 (2013-08-02) # Most issues listed under Highcharts 3.0.4 above also apply to Highstock 1.3.4.  Bug fixes Fixed Highstock regressen with column grouping not working across Y axes on either side of the chart. Closes #2086.Fixed Highstock regression after fixing #460, where animating candlestick would give JS errors if it had no whiskers before. Closes #2094.Fixed Highstock regression on adding an empty series next to a series with data grouping enabled. Closes #2090.  Highcharts Stock v1.3.3 (2013-07-31) # Most issues listed under Highcharts 3.0.3 above also apply to Highstock 1.3.3.Implemented shadow option for candlesticks. Closes #1955.Reorganized and improved link between scroller and its data. It now allows the base series to be added async. Related to #624.New default value for scroller.liveRedraw to prevent redrawing the chart while scrolling the navigator on slower mobile devices. Closes #1926.Added new Highstock option, rangeSelector.inputDateParser.  Bug fixes Fixed #2068 where Highstock export failed with navigator disabled specifically for the export.Fixed JS errors in Highstock when resizing a window after a chart's container is hidden. Closes #1998.Fixed error message in Highstock. Closes #872.Fixed Highstock issue with range selector button becoming unselected when updating data. Closes #690.Fixed Highstock issue with range selector buttons not responding to hover in IE9 and IE10. Closes #667.Fixed Highstock issue with columns in different panes reserving space for eachother. Stack groups are now tied to the Y axis. Closes #642.Fixed Highstock issue where panning fully to the right didn't dock the zoomed area. Made the sticking more tolerant. Closes #570.Fixed crosshairs position when series.compare is set. Closes #1205.Fixed Highstock issue with long series being grouped and short series not being grouped. Closes #1634.Fixed Highstock issue with navigator handles disappearing when zooming on hidden data set. Closes #1946.Fixed Highstock issue with gapSize and switching from ordinal to non-ordinal axis. Closes #1794.Fixed issue with dynamically added events being removed from axis after Axis.update. In Highstock, this caused the scrollbar not to be updated to base axis zooming after running setCategories. Closes #1842.Fixed issue with running setCompare when the compare option was initially unset. The setCompare method now also works on the Navigator yAxis. Closes #1891.Fixed Highstock issue on touch devices where pinch zooming a chart with multiple panes would result in the lower pane moving up to the top of the chart. Closes #1701.Fixed "Invalid date" appearing in range selector input when opening date was 0. Related to #1878.Fixed Highstock issue with changeDecimals of 0 not taking effect. Closes #1904.Fixed issue with extra lines in the middle of candlesticks when open values are equal to high values. Closes #460.Fixed Highstock issue with JavaScript errors and disappearing charts on scrollbar click when there is only one point present in the chart. Closes #1851.  Highcharts Stock v1.3.2 (2013-06-05) # Most issues listed under Highcharts 3.0.2 above also apply to Highstock 1.3.2.Additional fix in Highstock to ensure fixed scrollbar width when dragging scrollbar.Added information on DOM event to setExtremes handlers from navigator in Highstock. Closes #1838.  Bug fixes Fixed Highstock issue with updating zoomed range by the range selector when all series are hidden. Closes #1568.Fixed Highstock issue with mispositioned xAxis when a floating legend was present. Closes #1816.Fixed issue in Highstock where data labels on the navigator would cover the navigator handles and shades. Closes #1839.Fixed Highstock errors with two points with the same X value. Closes #1588.Fixed Highstock regression with scatter series not displayed. Closes #1853.Fixed Highstock issue with wrong up day calculation in OHLC and candlestick. Reverts the fix for #1395. After discussion among our users, there seems to be a consensus that an up day is a day where the close value is higher than the open value. As opposed to a day where the close value is higher than the previous trade day's close value. The functionality is now reverted to what it was before. Closes #1489.  Highcharts Stock v1.3.1 (2013-04-09) # Added new option, tooltip.followTouchMove. When this is true, the tooltip can be moved by dragging a single finger across the chart, like in Highcharts 2. When it is false, dragging a single finger is ignored by the chart, and causes the whole page to scroll. This applies only when zooming is not enabled. #1644. #1662.Added internationalization for the Print chart text. #1656.Made loading mask use the current chart size, not the initial one. #1601.  Bug fixes Fixed Highstock issue with OHLC and candlestick charts on logarithmic Y axis. #1697.Fixed JS error on hiding negative bubbles. #1691.Fixed issue with wrong axis label break on vertical axis when marginLeft is set. #1580.Fixed issue with unintentionally filled arcs in oldIE. #1642.Fixed Highstock issue with flag image backgrounds changing size after panning in and out of view. #1630.Fixed missing crosshairs on logarithmic axis. #1671.Fixed issue with missing median line on box plots in oldIE. #1676.Fixed issue with zooming near the edges of a bubble chart. #1673.Fixed another issue with label height in IE. #1669.Fixed issue with bent pie data label connectors when slicedOffset has a high value. #1678.Fixed regression issue with wrong Y axis extremes on logarithmic axes. #1670.Fixed Highstock 1.3 issue in Firefox where the page would scroll all the way up when clicking the range selector inputs. #1645.Fixed issue with unsynchronized data grouping when one series is shorter than the other on an ordinal axis. #1675.Fixed Highstock issue with columns and derived series types being cut off on an ordinal axis. #988.Fixed regression with colorByPoint option in columns with negative value. #1635.Fixed regression with thousandsSep and decimalPoint options not being respected in the tooltip by default. #1637.Fixed issue with the first label on a datetime axis not taking a higher rank, like day format on an axis based on hours. #1649.Fixed issue with chart cursor being overwritten on chart click. #1650.Fixed regression with pies being clipped to the plot area by default. #1647.Fixed issue with area stacking. #1651.Fixed issue with horizontal offset for exporting context button not working. #1654.Fixed regression with minor grid lines and alternate grid bands not being hidden on axis hide. #1667.Fixed issue with stacked areas containing no data. #1661.Fixed regression with tooltips not showing on bar charts in IE7. #1663.Fixed Highstock regression with disappearing points for data prior to 1970 on an ordinal axis. #1666.Fixed Highcharts 3 regression with corrupted columns when redrawing the chart while animating. #1623.  Highcharts Stock v1.3.0 (2013-03-22) # Highstock 1.3 is built on Highcharts 3.0, and shares the same new features for cartesian series types. See the release announcement for 3.0.  Highcharts Stock v1.2.5 (2012-12-19) # Applied fixes for Highcharts Basic version 2.3.5.Added scrollbar.minWidth option in Highstock. #1246.  Bug fixes Fixed JS error on quickly scrolling a chart with image markers. #1390.Fixed issue with wrong Y axis min/max detection on updated OHLC points. Partially solves #1374.Fixed issue when adding points to hidden OHLC or candlestick series. #1377.Fixed issue with zoomed range increasing when moving the range without resizing it. #1370.Fixed issue with Exporting dropdown menu being covered by the range selector inputs.Made the range selector inputs visible in exported charts. Added rangeSelector.inputPosition option.Fixed Highstock issue with YTD button when not using UTC. #941.Fixed Highstock issue with unresponsive range selector buttons by applying clipping to the mouse tracker. #484.  Highcharts Stock v1.2.4 (2012-10-08) #   Bug fixes Fixed issue where the upper data label of a range point wasn't destroyed on Series.setData(). #1286.Fixed regression with pie charts not working when loading highstock.js. #1284.  Highcharts Stock v1.2.3 (2012-10-04) # Refactored data label alignment logic for better maintainability. #1168. #1212.Worked around label positioning problem in IE9 and IE10. #1101.Highstock: Fixed buggy navigator when point distribution is smaller than minRange. #1056.Use point.name in the tooltip header even on datetime axis. #976.  Bug fixes Fixed JS error on moving reset button in Highstock. #1278.Fixed issue with yAxis labels with a minus prefix being wrapped into two lines. #1273.Fixed JS errors on continuously destroying charts in window.resize. #1257.Fixed JS error message in Highstock when destroying a chart after zoom. #1267.Fixed regression with plotOptions.series.dataGrouping not being respected since Highstock 1.2. #1228.Fixed error in VML browsers when redrawing a chart with an image background. #1245.Fixed issue with shadow.offsetX and shadow.offsetY set to 0 being replaced by 1. #1224.Fixed text rotation with useHTML in Firefox 15. #916.Fixed issue with null points in stacked columns on a logarithmic scale. #1232.Fixed JavaScript errors in Firefox 3.6 when displaying the tooltip. #1236.Fixed floating number errors in stack totals. #1223.Fixed issue in 2.3 with the sizing of linked axes. #84.Fixed issue with span styles not being applied across line breaks in SVGRenderer. #390.Fixed JS error on rendering a Highstock chart with an empty series array.Fixed Highstock issue where the reset zoom button would not show when the navigator and rangeSelector were hidden, and the scrollbar was visible. Related to #979.Fixed issue with stacks becoming inverted after update, caused by recursive redrawing. #1119.Fixed issue with tooltip animation timer running constantly instead of only when the tooltip is moving.Fixed issue with series marker options not being reflected in the legend symbol. #674.  Highcharts Stock v1.2.2 (2012-08-31) # Added demonstration of async data loading in Highstock.Added support for rotation of text when useHTML = true in modern browsers. #916.Changed the default line width for area range charts to 1 to avoid the area disappearing altogether in ranges where the min and max are equal. #1213.Reorganized VMLRenderer to move groups (divs) out of the viewport instead of toggling CSS visibility. This provides a faster and more compact fix for #61 and #586.Rendering performance improvement due to better caching of bounding box for texts, leading to less DOM traffic.Worked on zoomType for stock charts, allowing the reset button to work more intuitively (#979).  Bug fixes Fixed issue with IE7 trying to load "ew-resize" when dragging the scrollbar in Highstock.Fixed JS error in IE7. #1214.Fixed JS error on zooming in to an arearange series in IE9. Prevented arearange data labels from being orphaned when zooming in below cropThreshold. #1209.Fixed issue where flags on an X axis with an offset, height or top option defined, were not placed correctly on the axis.Fixed issue with data labels appearing outside plot area on initial load.Fixed 1.2 regression regarding unstable sorting in Chrome. #337.Fixed regression with stacking on a logarithmic axis. #1200.  Highcharts Stock v1.2.1 (2012-08-29) #   Bug fixes Fixed security issue in export server.  Highcharts Stock v1.2.0 (2012-08-24) # Added range series types: area range, area spline range and column range.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.6 (2012-08-24) # Removed double clipping assignment in development branch, and subsequent JS error on Series.remove in legacy IE. #1027.Added tooltip formatting options: percentageDecimals, percentagePrefix, percentageSuffix, totalDecimals, totalPrefix, totalSuffix. #864.Worked around compatibility issue with jQuery 1.8 preview.Made the tooltip follow the mouse position for shared tooltips with more than 1 series. This fixes problems with the tooltip being rendered close to the top series (or alternatively in another computed middle position) when the user is actually hovering another series. #424.Added scrolling for the legend. Added legend.navigation options set.Removed warnings on accessing layerX and layerY in Chrome.Worked around issue with overlapping shadows on stacked columns. Shadow elements are now cut off.Added time-aware xDateFormat for tooltip headers in datetime axes. Added tooltip.dateTimeLabelFormat option. #568.Updated fix for #608 to work around JS error in Firefox.Prevented trying to set extremes on empty axes when using selection zoom. #859. #906.Don't create multiple title nodes on subsequently setting attr title. #891.Worked around issue with tooltips for stacked bar chart were not visible in IE7. #863.Added smooth animation when adding multiple points. #860.Changed zIndex on the range selector buttons in order for the tooltip to show above them. #852.Prevented error on exporting in Prototype by setting default border radius for data labels to 0. #853.Adding enctype to the exporting post to allow it to work in HTTPS in Firefox. #839.Set xAxis.labels.overflow option to null by default in Highcharts, while 'justify' in Stock charts only. #841.Allow the tooltip and the point hover state to survive a chart redraw. #349.Worked on data labels for range series.  Bug fixes Fixed issue with legend text not wrapping correctly to itemStyle.width option ion IE8. #1021.Fixed issues with grouped data points not being destroyed after zooming on Y axis only. #622.Fixed error message in Firefox when using jQuery UI datepicker against range selector inputs. #1020.Fixed stuck tooltip, crosshairs and state marker after zooming in Highstock. #1003.Fixed JS errors in Highstock when trying to pan a chart with no series. #1017.Fixed JS error on quickly changing range selection in Highstock in column charts. #1004.Fixed issue with size detection of rotated text in exported charts legacy IE. #997.Fixed issue with original mouse event information not being passed over to legendItemClick handler. Added it to event.browserEvent. #4. #992.Fixed issue with error #10 appearing on a chart with all null data if yAxis.min was set.Fixed issue when colorByPoint was set to true, it started from the second item in the color array, whereas the first one was assigned to the whole series. #974.Fixed JS error on setting categories with fewer items before the chart was redrawn. #970.Fixed bug that removed all win.resize handlers. #982.Fixed issue with X axis labels becoming left aligned instead of centered in IE8 on an axis with many labels. #983.Fixed problem with unwanted chart border when printing in Chrome. #980.Fixed issue in protofy branch that choked on setting extremes in Highstock.Fixed issue with black background in data labels in legacy IE and MooTools adapter. #947.Fixed excessive looping in setTooltipPoints in certain conditions involving hidden series. #945.Fixed issue with stack columns' position after redrawing chart. #936.Fixed issue where a line with lineWidth of 0 wouldn't show in hover mode. #940.Fixed issue with lang.decimalPoint option not being applied to axis labels. #939.Fixed float rounding error that caused extra tick position on logarithmic Y axes. #934.Fixed issue with alignTicks not being respected after a chart redraw. #842.Fixed JS error when adding points to a series before redraw. #927.Fixed JS error message on running Axis.setTitle before axis is first rendered. #922.Fixed NaN in attributes in export in Firefox 3.5. #912.Fixed test size detection bug in bar charts with line-broken labels. #909. #882.Fixed issues with setData for pies. #542.Fixed error message on setSize without navigator in Highstock. #904.Fixed Highstock error on accessing Navigator series.Fixed unresponsive browser in IE8 Standards when exporting pie charts with data labels. #968.Fixed issue with scrollbar without navigator didn't respond to Chart.setSize. Partial fix for #955.Fixed issue with xAxis label formats not landing on whole days when using local time. #950.Fixed issue with tooltips not displaying over pie charts positioned outside plot area. #68. #956.Fixed errors and crashes on resize. #905.Fixed so stack totals are updated after point.update. #787.Fixed issue with position of stack total labels. #506 and #516.Fixed error on forced grouped series with no data. #885.Fixed problem with test size detection when rendering a chart within a container with an inherited display property. #883.Fixed problem with chart.click events firing after selection. #370.Fixed issue with wrong tooltip to point binding on bar charts containing null values. #833.Fixed problem with flags visible at the end of graph when zoomed off screen. #847.Fixed problem with range selector buttons not becoming unselected when clicking a new button. This happened only when the actual range wasn't changed because the buttons spanned a too wide range. #851.  Highcharts Stock v1.1.5 (2012-03-15) # Added feature for the first and last x axis label to stay within the plot area, or be hidden if there is no room.  Bug fixes Fixed bugs.  Highcharts Stock v1.1.4 (2012-02-15) # Added temporary workaround for text rendering bug in Chrome 18 Beta.Added support for setting height in chart.setSize().  Bug fixes Fixed issue with Navigator not responding to selection zoom.  Highcharts Stock v1.1.3 (2012-02-03) #   Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.1.2 (2011-12-23) #   Bug fixes Fixed regression bug from 1.1.1 where touch events were not captured in iOS.  Highcharts Stock v1.1.1 (2011-12-22) # Made navigator.xAxis.ordinal inherit xAxis.ordinal.  Bug fixes Fixed display bug with ordinal axes in Chrome 16.  Highcharts Stock v1.1.0 (2011-12-14) # Added ordinal axis option for displaying non-linear data without gaps, typically intraday data withiout gaps for nights and weekends or daily data without gaps for weekends.Added a few advanced options for axis and legend object.  Bug fixes Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.2 (2011-11-08) #   Bug fixes Fixed compatibility issue with jQuery 1.7.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.1 (2011-10-25) # Added series.compare option to compare the development of values.  Bug fixes Fixed error on chart.addSeries.Fixed issues as listed at GitHub under dates since the last maintenance version.  Highcharts Stock v1.0.0 (2011-10-18) # First release.Highcharts Maps  Highcharts Maps v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Maps 12.2.0.  Highcharts Maps v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Maps 12.1.2.  Highcharts Maps v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Maps 12.1.1.  Bug fixes Fixed #17192, Proj4 threw an error, coordinates must be finite numbers, with certain combinations of Highcharts Maps and other charts in the same page..  Highcharts Maps v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Maps 12.1.0.  Highcharts Maps v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Maps 12.0.2.  Highcharts Maps v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Maps 12.0.1.  Highcharts Maps v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Maps 12.0.0.  Bug fixes Prevent mousewheel capture on maps if they are all zoomed out, so that the user can scroll normally down the page.Fixed #21546, specific color axis ranges broke map drilldown.  Highcharts Maps v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Maps 11.4.8.  Bug fixes Fixed #21581, the credits.href setting wasn't respected in Map charts.  Highcharts Maps v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Maps 11.4.7.  Highcharts Maps v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Maps 11.4.6.  Highcharts Maps v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Maps 11.4.5.  Highcharts Maps v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Maps 11.4.4.  Highcharts Maps v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Maps v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Maps 11.4.2.  Bug fixes Fixed #13049, hovering reordered DOM elements in maps and heatmaps, causing problems for screen readers.Fixed #20886, data labels mouse event tracking was broken after drill up.Fixed #20948, bubble legend created unexpected ticks in map charts.Fixed #20857, map zooming animation was broken after drilling down.  Highcharts Maps v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Maps 11.4.1.  Highcharts Maps v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Maps 11.4.0.  Bug fixes Fixed #20476, dataLabels were overlapping map navigation buttons.Fixed #20441, point visibility was reverted after interaction with a map.Fixed #18857, map animated from top left on any series.update.Fixed #20231, if mapPoint.name was given, point.name didn't take effect.  Highcharts Maps v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Maps 11.3.0.  Bug fixes Fixed #19551, patterns got scaled with their assigned map areas causing inconsistent rendering.Fixed #20086, a regression where hovering over mapbubble series points would show the tooltip for another point.Fixed #19676, after drilling up in certain cases the map zoom was inconsistent compared with the initial zoom.  Highcharts Maps v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Maps 11.2.0.Added support for GeoHeatmap interpolation.  Bug fixes Fixed #19373, map drilldown animation was impossible to disable.Fixed #19323, setData on Map Series threw an error with the PatternFill module.Fixed #19190, prevented map display error on drag out of valid coordinates.Fixed #19175, a regression causing selected points being lost after map zooming or panning.  Highcharts Maps v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Maps 11.1.0.Added support for tiled web maps.  Bug fixes Fixed #18017, animation should not change the positions of map points while quick scrolling on the touchpad.Fixed #18961, map drilldown didn't work with multiple series.  Highcharts Maps v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Maps 11.0.1.  Bug fixes Fixed #18925, map drill down was broken for GeoJSON maps.  Highcharts Maps v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Maps 11.0.0.Added geo heatmap series type for showing concentration of values on a geo map.Added flow map series type for showing flows or movements between points on a map.  Bug fixes Fixed #18647, when there was a single data point in the TileMap series, circle and diamond shape tiles didn't render properly.Fixed #18004 and #17261, map data labels were misplaced for some shapes.Fixed #18074, the Draggable Points module didn't work for mappoint series.Fixed #18542, panning in zoomed-in Orthographic projection didn't work.  Highcharts Maps v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Maps 10.3.3.Added new linecap option for maps.Added new option, mapView.fitToGeometry.  Bug fixes Fixed #18137, border width was not resetting after hover.Fixed #18166, border or line width set on point was not scaling on zoom in map and mapline series.Fixed #17925, zooming issues with Maps on mobile.Fixed #17238, panning on y axis was inverted in maps using custom SVG path as map data.  Highcharts Maps v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Maps 10.3.2.  Bug fixes Fixed #17355, keyboard navigation for map zooming and panning no longer worked.Fixed #18012, custom colorKey didn't work on mapbubble series.Fixed #17918, zooming to insets in TopoJSON maps was not working.Fixed #17734, offline exporting to PDF failed for maps.Fixed #17907, a regression causing data labels on the far side on an orthographic world projection to stick.  Highcharts Maps v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Maps 10.3.0.Better default value for legend.valueDecimals for color axis with data classes. Now it preserves the decimals of the from and to settings by default.Improved the UX on legend items when using a color axis with data classes. Hovering now renders other map areas as inactive, and clicking the legend item renders them as null rather than completely hiding them.  Highcharts Maps v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Maps 10.2.1.  Highcharts Maps v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Maps 10.2.0.  Bug fixes Fixed #17105, issues with mapline.lineWidth and map.borderWidth options and state settings.Fixed #17279, mappoint fill color didn't work with NaN values.Fixed #17012, toggling allAreas did not correctly update the bounds of the map.Fixed #17013, map view did not fit correctly to bounds after running Series.setData.Fixed #17205, the marker cluster of coinciding points was causing an infinite loop on click.  Highcharts Maps v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Maps 10.1.0.Added official support and API for the Spider Map (mapbubble series with line). See #17023.  Bug fixes Fixed #16598, addPoint() not adding point to map.Fixed #17139, chart.proj4 option didn't work.Fixed missing accessible description of map titles with TopoJSON maps.Fixed #17057, addPoint() wasn't working correctly after series.update({}, false);.Fixed #17082, zooming out to zoom level 0 didn't work (the view was bouncing back).Fixed #16782, point's joinBy was wrong when updating data with an unsorted order.  Highcharts Maps v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Maps 10.0.0.Added native support for TopoJSON in the chart.map and series.mapData options.Moved existing translation functions from Chart to MapView, and added new functions MapView.pixelsToLonLat and MapView.lonLatToPixels. Added lon and lat properties directly to mouse event arguments.Added new map series option, map.affectsMapView.  Bug fixes Default joinBy added for mapbubble.Fixed #16722, container size preventing map rotation.Fixed #16896, hovering over mapbubble with shared tooltip caused an error.Fixed #15782, export hamburger icon hiding behind mapNavButtons.Fixed #15374, maps series.joinBy update didn't work.Fixed #11636, updating series.mapData didn't work correctly.  Highcharts Maps v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Maps 9.3.3.  Highcharts Maps v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Maps 9.3.2.  Bug fixes Fixed #14267, tilemap.tileShape set to square threw an error into the console.Fixed #16549, a regression causing arrow navigation in map-like series types not to work.  Highcharts Maps v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Maps 9.3.1.Added LambertConformalConic projection, commonly used in national maps.  Bug fixes Fixed a regression in Highcharts Maps, geographic maps were not visible in exported images.Fixed #16541, the solid-gauge module was generating error with Maps.Fixed #16534, mappoint point didn't update its position when zooming.  Highcharts Maps v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Maps 9.3.0.Improved map geometry by removing axes and implementing a MapView class. The MapView includes, currently as a beta feature, client side projection. Part of the improved geometry is the new series.data.geometry option to make it easier working with GeoJSON.  Upgrade notes Programmatically zooming the map by running Axis.setExtremes() no longer works. Instead, use MapView.setView.  Bug fixes Fixed #15656, resolved broken mouse scroll on some browsers.  Highcharts Maps v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Maps 9.2.2.  Highcharts Maps v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Maps 9.2.1.  Highcharts Maps v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Maps 9.2.0.  Highcharts Maps v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Maps 9.1.2.  Highcharts Maps v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Maps 9.1.1.  Highcharts Maps v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Maps 9.1.0.  Bug fixes Fixed #15605, trackpad zooming in maps was too fast and unpredictable.Fixed #15406, responsive rule broke map navigation.  Highcharts Maps v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Maps 9.0.1.  Highcharts Maps v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Maps 9.0.0.  Bug fixes Fixed #13981, no map displayed when using marker clusters and empty data array.Fixed #14343, cluster marker image animation had wrong position.  Highcharts Maps v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Maps 8.2.2.  Highcharts Maps v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Maps 8.2.0.  Bug fixes Fixed #13302, marker cluster image symbol not displayed after zooming.  Highcharts Maps v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Maps 8.1.2.  Bug fixes Fixed #13426, reset zoom button appeared while panning maps and the chart was not zoomed in.  Highcharts Maps v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Maps 8.1.1.  Bug fixes Fixed #13195, tooltip was shown for points that were hidden by data classes.Fixed #9424, map navigation zoom buttons had [Object object] in DOM styles.  Highcharts Maps v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Maps 8.1.0.  Bug fixes Fixed regression in vertical panning.  Highcharts Maps v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highmaps 8.0.4.  Highcharts Maps v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highmaps 8.0.3.  Highcharts Maps v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highmaps 8.0.2.  Highcharts Maps v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highmaps 8.0.1.Added new option, chart.proj4, allowing the Proj4 library to be used without being available in the window context.  Bug fixes Fixed issue with map navigation buttons not being aligned to the plot area on initial rendering. See #12776.  Highcharts Maps v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highmaps 8.0.0.Added marker clusters  for scatter and map point series.  Highcharts Maps v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highmaps 7.2.2.  Highcharts Maps v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highmaps 7.2.1.  Bug fixes Fixed #12231, loading Highmaps as a module and using color axis thrown a reference error.Fixed #11924, using the addColorAxis method in Highmaps hid the map.  Highcharts Maps v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highmaps 7.2.0.  Bug fixes Fixed #11448, bubble legend in Highmaps caused unexpected grid lines.  Highcharts Maps v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highmaps 7.1.3.  Highcharts Maps v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highmaps 7.1.2.  Bug fixes Minor speed improvement for maps.Fixed #10617, a regression with updating series.  Highcharts Maps v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highmaps 7.1.1.  Highcharts Maps v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highmaps 7.1.0.  Bug fixes Fixed #10049, a regression causing data labels on null points not to show.Fixed #10057, setting borderWidth to 0 did not work.  Highcharts Maps v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highmaps 7.0.3.  Highcharts Maps v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highmaps 7.0.2.  Highcharts Maps v7.0.1 (2018-12-19) # Most changes listed under Highcharts 7.0.1 above also apply to Highmaps 7.0.1.  Highcharts Maps v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highmaps 7.0.0.  Highcharts Maps v6.2.0 (2018-10-17) # Most changes listed under Highcharts 6.2.0 above also apply to Highmaps 6.2.0.  Highcharts Maps v6.1.4 (2018-09-25) # Most changes listed under Highcharts 6.1.4 above also apply to Highmaps 6.1.4.  Highcharts Maps v6.1.3 (2018-09-12) #   Bug fixes Fixed #1902, make generated source maps visible to the browser.  Highcharts Maps v6.1.2 (2018-09-03) # Most changes listed under Highcharts 6.1.2 above also apply to Highmaps 6.1.2.  Highcharts Maps v6.1.1 (2018-06-27) # Most changes listed under Highcharts 6.1.1 above also apply to Highmaps 6.1.1.  Bug fixes Fixed #7091, map drilldown failed after pinch zooming.Fixed #8442, working around a Chrome regression causing map strokes to draw too wide after animation.  Highcharts Maps v6.1.0 (2018-04-13) # Most changes listed under Highcharts 6.1.0 above also apply to Highmaps 6.1.0.  Bug fixes Fixed #5837, null color was set by attribute in styled mode.  Highcharts Maps v6.0.7 (2018-02-16) # Most changes listed under Highcharts 6.0.7 above also apply to Highmaps 6.0.7.  Highcharts Maps v6.0.6 (2018-02-05) # Most changes listed under Highcharts 6.0.6 above also apply to Highmaps 6.0.6.  Highcharts Maps v6.0.5 (2018-01-31) # Most changes listed under Highcharts 6.0.5 above also apply to Highmaps 6.0.5.  Highcharts Maps v6.0.4 (2017-12-15) # Most changes listed under Highcharts 6.0.4 above also apply to Highmaps 6.0.4.  Bug fixes Fixed #7490, color axis marker remained when legend was disabled.Fixed #6242, issue where disabling the legend caused stray colorAxis ticks.  Highcharts Maps v6.0.3 (2017-11-14) # Most changes listed under Highcharts 6.0.3 above also apply to Highmaps 6.0.3.  Bug fixes Fixed #7313, data labels didn't work with mapbubble series.  Highcharts Maps v6.0.2 (2017-10-20) # Most changes listed under Highcharts 6.0.2 above also apply to Highmaps 6.0.2.  Highcharts Maps v6.0.1 (2017-10-05) # Most changes listed under Highcharts 6.0.1 above also apply to Highmaps 6.0.1.  Highcharts Maps v6.0.0 (2017-10-04) # Most changes listed under Highcharts 6.0.0 above also apply to Highmaps 6.0.0.Added new series type, tile maps, supporting honeycomb, diamond and circle layout.  Bug fixes Fixed #7166, map area borders got wider during animation after mouseover.  Highcharts Maps v5.0.14 (2017-07-28) # Most changes listed under Highcharts 5.0.14 above also apply to Highmaps 5.0.14.  Highcharts Maps v5.0.13 (2017-07-27) # Most changes listed under Highcharts 5.0.13 above also apply to Highmaps 5.0.13.  Bug fixes Fixed #5202, flickering on unhovering areas even when hover state was disabled. Removed the maps-specific color animation since it is now handled by animation the core setState.Fixed #5295, empty first series broke map.Fixed #5319, wrong label position for Netherlands in official map.Fixed issue with redundant labels on color axis containing data classes.  Highcharts Maps v5.0.12 (2017-05-24) # Most changes listed under Highcharts 5.0.12 above also apply to Highmaps 5.0.12.  Highcharts Maps v5.0.11 (2017-05-04) # Most changes listed under Highcharts 5.0.11 above also apply to Highmaps 5.0.11.  Bug fixes Fixed #5676, regression causing nullInteraction not to take effect.Fixed #6632, error when updating color axis with data classes.  Highcharts Maps v5.0.10 (2017-03-31) # Most changes listed under Highcharts 5.0.10 above also apply to Highmaps 5.0.10.  Highcharts Maps v5.0.9 (2017-03-08) # Worked around a Closure Compiler error that made 3D charts fail.  Highcharts Maps v5.0.8 (2017-03-08) # Most changes listed under Highcharts 5.0.8 above also apply to Highmaps 5.0.8.New advanced demo for map pies.  Bug fixes Fixed #6025, color axis got misplaced after update then resizing chart.Fixed #6287, regression with panning on countries close to the edge.Fixed #6369, mapNavigation options were not applied on chart.update.  Highcharts Maps v5.0.7 (2017-01-17) # Most changes listed under Highcharts 5.0.7 above also apply to Highmaps 5.0.7.  Bug fixes Fixed #4816, overlapped labels on color axis in legend.Fixed #6069, data class color was not properly represented in the tooltip in styled mode.Fixed #6134, a regression causing Series.addPoint to fail on map series.Fixed #6209, colorAxis range calculated from first series only.  Highcharts Maps v5.0.6 (2016-12-07) # Most changes listed under Highcharts 5.0.6 above also apply to Highmaps 5.0.6.  Bug fixes Fixed #6049, colorAxis colors did not work in styled mode.  Highcharts Maps v5.0.5 (2016-11-29) # Most changes listed under Highcharts 5.0.5 above also apply to Highmaps 5.0.5.  Bug fixes Fixed #6030, hover color not removed if using named colors.  Highcharts Maps v5.0.4 (2016-11-22) # Most changes listed under Highcharts 5.0.4 above also apply to Highmaps 5.0.4.  Bug fixes Fixed #5991, jerky animation on map zoom.  Highcharts Maps v5.0.3 (2016-11-18) # Most changes listed under Highcharts 5.0.3 above also apply to Highmaps 5.0.3.  Bug fixes Fixed #5881, a regression with colorAxis.update in v5.0.Fixed null-point issue with maplines.  Highcharts Maps v5.0.2 (2016-10-26) # The changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Highcharts Maps v5.0.1 (2016-10-26) # Most changes listed under Highcharts 5.0.1 above also apply to Highmaps 5.0.1.  Bug fixes Fixed #5785, map area class names only had the first space in the name replaced by a hyphen.  Highcharts Maps v5.0.0 (2016-09-29) # Most changes listed under Highcharts 5.0.0 above also apply to Highmaps 5.0.0.Simplified the map configuration by setting a general chart.map option and allowing tuples in the data description.Added new option, chart.mapTransforms.  Highcharts Maps v4.2.7 (2016-09-21) # Most changes listed under Highcharts 4.2.7 above also apply to Highmaps 4.2.7.Added new option, colorAxis.showInLegend.Added new option, series.nullInteraction to allow tooltips and mouse events on null points.  Bug fixes Fixed #5201, lineWidth ignored for mapline in IE11.Fixed #5685, axis padding was not included when zooming out.Fixed #5694, issue with line width on latlon mappoints.  Highcharts Maps v4.2.6 (2016-08-02) # Most changes listed under Highcharts 4.2.6 above also apply to Highmaps 4.2.6.  Bug fixes Fixed #5011, mousewheel zoom also scrolled page.  Highcharts Maps v4.2.5 (2016-05-06) # Most changes listed under Highcharts 4.2.5 above also apply to Highmaps 4.2.5.  Bug fixes Fixed #5050, setData with allAreas could cause SVG errors.Fixed #5249, doubleClickZoomTo caused error on null points.Fixed #5277, a regression causing maps to fail in IE8.  Highcharts Maps v4.2.4 (2016-04-14) # Most changes listed under Highcharts 4.2.4 above also apply to Highmaps 4.2.4.Added mapNavigation.mouseWheelSensitivity option for zooming.  Bug fixes Fixed #4505, errors from crosshairs while dragging after zooming.Fixed #4740, realign zoom buttons after chart is rendered.Fixed #4981, dashStyle didn't work on IE.  Highcharts Maps v4.2.3 (2016-02-08) # Most changes listed under Highcharts 4.2.3 above also apply to Highmaps 4.2.3.  Highcharts Maps v4.2.2 (2016-02-04) # Most changes listed under Highcharts 4.2.2 above also apply to Highmaps 4.2.2.  Bug fixes Fixed #4821, setOptions not working with map credits.Fixed #4840, credits title set to undefined when map module is included.  Highcharts Maps v4.2.0 (2015-12-15) # Jumped to version 4.2 to align versioning with Highcharts, which shares the same code and GitHub repo.Most changes listed under Highcharts 4.2.0 above also apply to Highmaps 4.2.0.  Highcharts Maps v1.1.10 (2015-12-07) # Most changes listed under Highcharts 4.1.10 above also apply to Highmaps 1.1.10.  Highcharts Maps v1.1.9 (2015-10-07) # Most changes listed under Highcharts 4.1.9 above also apply to Highmaps 1.1.9.  Bug fixes Fixed issue with double clicking map zoom buttons. Closes #4444.  Highcharts Maps v1.1.8 (2015-08-20) # Most changes listed under Highcharts 4.1.8 above also apply to Highmaps 1.1.8.  Bug fixes Fixed #4362, hidden data labels caused neighbouring areas to not receive mouse events.Fixed #4397, point color option should always take precedence over color axis.Fixed #4409, tooltips not working properly in combination maps.Fixed #4464, error on updating dataClasses of colorAxis when the legend was disabled.Fixed issue with animation not running on point.update of map areas.  Highcharts Maps v1.1.7 (2015-06-26) # Most changes listed under Highcharts 4.1.7 above also apply to Highmaps 1.1.7.  Highcharts Maps v1.1.6 (2015-06-12) # Most changes listed under Highcharts 4.1.6 above also apply to Highmaps 1.1.6.  Bug fixes Fixed #3207, issue with updating color axis with data classes.Fixed JavaScript errors on drilling when graphic is missing.  Highcharts Maps v1.1.5 (2015-04-13) # Most changes listed under Highcharts 4.1.5 above also apply to Highmaps 1.1.5.Force correct aspect ratio when adding a "map" series without the Map constructor.  Bug fixes Fixed #3894, a regression causing setData on maps to fail.  Highcharts Maps v1.1.4 (2015-03-10) # Most changes listed under Highcharts 4.1.4 above also apply to Highmaps 1.1.4.  Bug fixes Fixed #3917, wrong series Z index when combined with 3D module.  Highcharts Maps v1.1.2 (2015-02-27) # Some issues listed under Highcharts 4.1.2 above also apply to Highmaps 1.1.2.  Bug fixes Fixed #3871, marker for colorAxis not displaying in Highmaps 1.1.  Highcharts Maps v1.1.0 (2015-02-16) # Some issues listed under Highcharts 4.1.0 above also apply to Highmaps 1.1.0.Added hover with full copyright text to map credits.  Bug fixes Fixed #3789, dragging failed after zooming and setting size.Fixed #3613, problems panning a map when zoomed in close to its edges.Fixed #3627, map not repositioning on chart reflow.Fixed #3218, border gets wider on zooming in IE11.Fixed issue where removing point would not cause view to reset.Fixed #3314, negative coordinates in GeoJSON causing the map to be misaligned or drawn outside the plot area.Fixed #3190, reversed color axis displaying the wrong gradient.  Highcharts Maps v1.0.4 (2014-09-02) # Some issues listed under Highcharts 4.0.4 above also apply to Highmaps 1.0.4.Added true color animation for Highmaps and heat maps, so fills and strokes are animatable through SVGElement.animate. Closes #3311.  Bug fixes Fixed #3360 incorrect ticks on the colorAxis.Fixed #3209, the first map area missing when joinBy was null.Fixed #3219, wrong color when only one data class on color axis.  Highcharts Maps v1.0.1 (2014-06-12) # First release of Highmaps.Highcharts Gantt  Highcharts Gantt v12.2.0 (2025-04-07) # Most changes listed under Highcharts 12.2.0 above also apply to Highcharts Gantt 12.2.0.  Highcharts Gantt v12.1.2 (2024-12-21) # Most changes listed under Highcharts 12.1.2 above also apply to Highcharts Gantt 12.1.2.  Highcharts Gantt v12.1.1 (2024-12-20) # Most changes listed under Highcharts 12.1.1 above also apply to Highcharts Gantt 12.1.1.  Highcharts Gantt v12.1.0 (2024-12-17) # Most changes listed under Highcharts 12.1.0 above also apply to Highcharts Gantt 12.1.0.  Highcharts Gantt v12.0.2 (2024-12-04) # Most changes listed under Highcharts 12.0.2 above also apply to Highcharts Gantt 12.0.2.  Highcharts Gantt v12.0.1 (2024-11-28) # Most changes listed under Highcharts 12.0.1 above also apply to Highcharts Gantt 12.0.1.  Highcharts Gantt v12.0.0 (2024-11-27) # Most changes listed under Highcharts 12.0.0 above also apply to Highcharts Gantt 12.0.0.  Bug fixes Fixed, #17738, gantt series did not support array-based points.  Highcharts Gantt v11.4.8 (2024-08-29) # Most changes listed under Highcharts 11.4.8 above also apply to Highcharts Gantt 11.4.8.  Highcharts Gantt v11.4.7 (2024-08-14) # Most changes listed under Highcharts 11.4.7 above also apply to Highcharts Gantt 11.4.7.  Highcharts Gantt v11.4.6 (2024-07-08) # Most changes listed under Highcharts 11.4.6 above also apply to Highcharts Gantt 11.4.6.  Highcharts Gantt v11.4.5 (2024-07-04) # Most changes listed under Highcharts 11.4.5 above also apply to Highcharts Gantt 11.4.5.  Highcharts Gantt v11.4.4 (2024-07-02) # Most changes listed under Highcharts 11.4.4 above also apply to Highcharts Gantt 11.4.4.  Highcharts Gantt v11.4.3 (2024-05-22) # No changes, just covering a bad npm upload for v11.4.2.  Highcharts Gantt v11.4.2 (2024-05-22) # Most changes listed under Highcharts 11.4.2 above also apply to Highcharts Gantt 11.4.2.  Bug fixes Fixed #20940, rangeSelector wasn't a part of fixed elements in Gantt.  Highcharts Gantt v11.4.1 (2024-04-04) # Most changes listed under Highcharts 11.4.1 above also apply to Highcharts Gantt 11.4.1.  Highcharts Gantt v11.4.0 (2024-03-05) # Most changes listed under Highcharts 11.4.0 above also apply to Highcharts Gantt 11.4.0.  Highcharts Gantt v11.3.0 (2024-01-10) # Most changes listed under Highcharts 11.3.0 above also apply to Highcharts Gantt 11.3.0.Changed the default color of the Gantt axis grid, to a more lightweight presence. The associated options are xAxis.grid.borderColor and yAxis.grid.borderColor.Added width to data label in x-range and gantt series, allowing implementers to easily apply word-wrap or ellipsis within the tasks. See #17148.Added support for grid.columns on tree-grid axes.  Bug fixes Fixed #16626, secondary grid axis ignored xAxis.units set.Fixed #19845, grid axes had open-ended cells in some cases.Fixed #19657, grid axis column headers displayed inconsistently depending on how many rows were in the chart.Fixed #15196, gantt chart threw error when nodes in the data set were orphaned.  Highcharts Gantt v11.2.0 (2023-10-30) # Most changes listed under Highcharts 11.2.0 above also apply to Highcharts Gantt 11.2.0.Added new option, gantt.connectors.radius, to allow curved connectors between task dependencies.  Highcharts Gantt v11.1.0 (2023-06-05) # Most changes listed under Highcharts 11.1.0 above also apply to Highcharts Gantt 11.1.0.  Bug fixes Fixed #18947, better colors for arrows and top-level task title in dark mode in styled mode Gantt.  Highcharts Gantt v11.0.1 (2023-05-08) # Most changes listed under Highcharts 11.0.1 above also apply to Highcharts Gantt 11.0.1.  Bug fixes Fixed #18945, dragging point to row with index of 0 didn't work in gantt/x-range.  Highcharts Gantt v11.0.0 (2023-04-25) # Most changes listed under Highcharts 11.0.0 above also apply to Highcharts Gantt 11.0.0.  Bug fixes Fixed #18435, tooltip was misplaced outside the plot area when zooming in gantt and x-range series.  Highcharts Gantt v10.3.3 (2023-01-20) # Most changes listed under Highcharts 10.3.3 above also apply to Highcharts Gantt 10.3.3.  Highcharts Gantt v10.3.2 (2022-11-28) # Most changes listed under Highcharts 10.3.2 above also apply to Highcharts Gantt 10.3.2.  Bug fixes Fixed #17833, all gantt series connectors weren't redrawn/deleted when updating them.  Highcharts Gantt v10.3.0 (2022-10-31) # Most changes listed under Highcharts 10.3.0 above also apply to Highcharts Gantt 10.3.0.  Highcharts Gantt v10.2.1 (2022-08-29) # Most changes listed under Highcharts 10.2.1 above also apply to Highcharts Gantt 10.2.1.  Highcharts Gantt v10.2.0 (2022-07-05) # Most changes listed under Highcharts 10.2.0 above also apply to Highcharts Gantt 10.2.0.  Highcharts Gantt v10.1.0 (2022-04-29) # Most changes listed under Highcharts 10.1.0 above also apply to Highcharts Gantt 10.1.0.  Bug fixes Fixed #16550, the week dateFormat was not calculated correctly when useUTC: false.  Highcharts Gantt v10.0.0 (2022-03-07) # Most changes listed under Highcharts 10.0.0 above also apply to Highcharts Gantt 10.0.0.  Bug fixes Fixed #16673, label icons in TreeGrid were not destroyed after an update.Fixed #16439, ticks were missing while scrolling the grid axis.  Highcharts Gantt v9.3.3 (2022-02-01) # The change listed under Highcharts 9.3.3 above also applies to Highcharts Gantt 9.3.3.  Highcharts Gantt v9.3.2 (2021-11-29) # Most changes listed under Highcharts 9.3.2 above also apply to Highcharts Gantt 9.3.2.  Highcharts Gantt v9.3.1 (2021-11-05) # Most changes listed under Highcharts 9.3.1 above also apply to Highcharts Gantt 9.3.1.  Highcharts Gantt v9.3.0 (2021-10-21) # Most changes listed under Highcharts 9.3.0 above also apply to Highcharts Gantt 9.3.0.  Highcharts Gantt v9.2.2 (2021-08-24) # Most changes listed under Highcharts 9.2.2 above also apply to Highcharts Gantt 9.2.2.  Highcharts Gantt v9.2.1 (2021-08-19) # Most changes listed under Highcharts 9.2.1 above also apply to Highcharts Gantt 9.2.1.  Highcharts Gantt v9.2.0 (2021-08-18) # Most changes listed under Highcharts 9.2.0 above also apply to Highcharts Gantt 9.2.0.  Bug fixes Fixed #15453, gantt grid axis tick labels disappeared when scrolling.Fixed #15896, scrollbar did not work with gantt.  Highcharts Gantt v9.1.2 (2021-06-16) # Most changes listed under Highcharts 9.1.2 above also apply to Highcharts Gantt 9.1.2.  Highcharts Gantt v9.1.1 (2021-06-04) # Most changes listed under Highcharts 9.1.1 above also apply to Highcharts Gantt 9.1.1.  Bug fixes Fixed #15742, rightmost gantt chart grid axis tick labels did not get shortened correctly.Fixed #15692, gantt chart grid axis did not update from months to years when resizing down.Fixed #15661, options got mutated when creating map or gantt chart.Fixed #15664, updating lineColor and lineWidth of gantt chart outer axis border did not work.  Highcharts Gantt v9.1.0 (2021-05-04) # Most changes listed under Highcharts 9.1.0 above also apply to Highcharts Gantt 9.1.0.  Bug fixes Fixed #14904, drop-down icon on tree grid child disappearing after two clicks on parent.  Highcharts Gantt v9.0.1 (2021-02-16) # Most changes listed under Highcharts 9.0.1 above also apply to Highcharts Gantt 9.0.1.  Bug fixes Fixed #12691, gantt connector disappeared when a task was partially visible.  Highcharts Gantt v9.0.0 (2021-02-02) # Most changes listed under Highcharts 9.0.0 above also apply to Highcharts Gantt 9.0.0.  Bug fixes Fixed #14868, axis labels were positioned incorrectly in non-Gantt charts when the Gantt package was imported.Fixed #14808, Gantt with scrollbar and uniqueNames threw an error.Fixed #14147, in xrange/gantt series, the tooltip wasn't centered above the point if there were more than one series in the chart.  Highcharts Gantt v8.2.2 (2020-10-22) # Most changes listed under Highcharts 8.2.2 above also apply to Highcharts Gantt 8.2.2.  Bug fixes Fixed #14166, currentDateIndicator ignored per-chart time options, default label formatter used global dateFormat.  Highcharts Gantt v8.2.0 (2020-08-20) # Most changes listed under Highcharts 8.2.0 above also apply to Highcharts Gantt 8.2.0.  Bug fixes Fixed #10281, yAxis label adjustment for long text.Fixed #10779, yAxis max value occurred the wrong axis rendering.Fixed #13359, more than one scrollbar were visible when grid enabled.Fixed #13376, changed the default Gantt navigator series.  Highcharts Gantt v8.1.2 (2020-06-16) # Most changes listed under Highcharts 8.1.2 above also apply to Highcharts Gantt 8.1.2.  Bug fixes Fixed #12012, collapse not working when chart had set height.  Highcharts Gantt v8.1.1 (2020-06-09) # Most changes listed under Highcharts 8.1.1 above also apply to Highcharts Gantt 8.1.1.  Bug fixes Fixed #13246, gantt was not initialized when no series option was provided.  Highcharts Gantt v8.1.0 (2020-05-05) # Most changes listed under Highcharts 8.1.0 above also apply to Highcharts Gantt 8.1.0.  Bug fixes Fixed #13221, grid axis labels rendered outside the cell if the cell width was 0.Fixed #12984, Gantt tasks not being collapsed when added by chart.addSeries.  Highcharts Gantt v8.0.4 (2020-03-10) # Most changes listed under Highcharts 8.0.4 above also apply to Highcharts Gantt 8.0.4.  Highcharts Gantt v8.0.3 (2020-03-05) # Most changes listed under Highcharts 8.0.3 above also apply to Highcharts Gantt 8.0.3.  Highcharts Gantt v8.0.2 (2020-03-03) # Most changes listed under Highcharts 8.0.2 above also apply to Highcharts Gantt 8.0.2.  Highcharts Gantt v8.0.1 (2020-03-02) # Most changes listed under Highcharts 8.0.1 above also apply to Highcharts Gantt 8.0.1.  Bug fixes Fixed #12617, when collapsing a parent node in the tree grid, its child tasks were still rendered.  Highcharts Gantt v8.0.0 (2019-12-10) # Most changes listed under Highcharts 8.0.0 above also apply to Highcharts Gantt 8.0.0.  Bug fixes Fixed #11427, in certain date ranges, single years were displayed on both rows in the grid axis.Fixed #10324, regression with xAxis.grid.cellHeight.  Highcharts Gantt v7.2.2 (2020-08-24) # Most changes listed under Highcharts 7.2.2 above also apply to Highcharts Gantt 7.2.2.  Highcharts Gantt v7.2.1 (2019-10-31) # Most changes listed under Highcharts 7.2.1 above also apply to Highcharts Gantt 7.2.1.  Highcharts Gantt v7.2.0 (2019-09-03) # Most changes listed under Highcharts 7.2.0 above also apply to Highcharts Gantt 7.2.0.  Highcharts Gantt v7.1.3 (2019-08-14) # Most changes listed under Highcharts 7.1.3 above also apply to Highcharts Gantt 7.1.3.  Bug fixes Fixed #10887, regression with Axis.update() in Treegrid axis.Fixed #10942, progress indicator was not redrawn after collapsing and expanding nodes.Fixed #10804, navigator affected the positions of the gantt dependencies negatively.  Highcharts Gantt v7.1.2 (2019-06-03) # Most changes listed under Highcharts 7.1.2 above also apply to Highcharts Gantt 7.1.2.  Bug fixes Fixed #10570 and #10580, setData was triggered on every render, causing treegrid failure when collapsing and problems with the navigator.Fixed #10129, regression with point.collapsed in treegrid. When set to true in the options, the point could never be expanded.Fixed #10470, grid axis tampered with tick positions.Fixed #10329, removed excessive path in gantt connectors, in the simpleConnect algorithm.Fixed #10539, rounding errors in gantt data labels.  Highcharts Gantt v7.1.1 (2019-04-09) # Most changes listed under Highcharts 7.1.1 above also apply to Highcharts Gantt 7.1.1.  Highcharts Gantt v7.1.0 (2019-04-01) # Most changes listed under Highcharts 7.1.0 above also apply to Highcharts Gantt 7.1.0.  Bug fixes Fixed #10350, compatibilty issue with IE11 and xrange.  Highcharts Gantt v7.0.3 (2019-02-06) # Most changes listed under Highcharts 7.0.3 above also apply to Highcharts Gantt 7.0.3.  Bug fixes Fixed #9479, treegrid addSeries compatibility.  Highcharts Gantt v7.0.2 (2019-01-17) # Most changes listed under Highcharts 7.0.2 above also apply to Highcharts Gantt 7.0.2.  Highcharts Gantt v7.0.1 (2018-12-19) # Added built-in support for Highstock's range selector and navigator for easier navigation within Gantt charts.Most changes listed under Highcharts 7.0.1 above also apply to Highcharts Gantt 7.0.1.  Bug fixes Fixed #10176, scrollbar error when collapsed treegrid.Fixed #10211, issue with treegrid show/hide series.  Highcharts Gantt v7.0.0 (2018-12-11) # Most changes listed under Highcharts 7.0.0 above also apply to Highcharts Gantt 7.0.0.  Bug fixes Fixed #9216, larger default width for exported Gantt charts.Fixed #9496, exporting data to CSV/XLS did not work in Gantt.  Highcharts Gantt v6.2.0 (2018-10-17) # First release of Highcharts Gantt.Highcharts Dashboards  Highcharts Dashboards v3.2.0 (2025-03-26) # DataGrid has been renamed to Grid, and the DataGrid.dataGrid factory function is deprecated. Use Grid.grid instead.Implemented a loading indicator for the DataGrid, added the showLoading and hideLoading methods to manage the indicator's visibility, closes #22225.Added support for displaying calculated values in the KPI component, including sum, average, median, max, min, count, and product. Custom formulas can also be defined. See #21559.  Bug fixes Fixed #22720, component destroy mispositioned resize buttons.Fixed #22684, connector polling restarting based on assignment.Fixed #22676, Fullscreen case-sensitive naming.Fixed #22546, Firefox support for mouseenter when dragging.Fixed issue with missing overwrite option in cell format and formatter.Fixed #22624, lang was not applied on new row item in add-component section.Fixed, the newly added chart component had incorrect options in the sidebar.Fixed the time format in the DataGrid.Fixed #22301, cells could be misaligned in multi-row headers when a horizontal scrollbar was visible.Fixed #22492, updating HighchartsComponent with the new chartConstructor did not work.Fixed #22271, highlight was not removed when dragged new component.Fixed #22207, error was return when dragged new component.Fixed #22208, the edit mode button did not reflect the state of the mode.  Highcharts Dashboards v3.1.0 (2024-12-04) # DataGrid: Improved accessibility with more granular control via config options, including ARIA live announcements on e.g. cell editing and column sorting. Read more in the new docs on accessibility.EditMode: Added confirm/cancel events on button click in the sidebar. See #22131.  Bug fixes Fixed overlapped sorting icon with long headers in Datagrid.Fixed #21955, the nested group was rendered when empty options.Fixed #21862, incorrect behavior in component editor when option path points to an array element.  Highcharts Dashboards v3.0.0 (2024-10-16) # The DataGrid has been fully rewritten, introducing new features and establishing a foundation for future enhancements and additional functionality. This release includes several breaking changes, so please refer to the Upgrade Notes below for detailed guidance before upgrading.The sidebar in editMode is now sticky and always visible when scrolling through the page.The styledMode is now disabled by default for the Highcharts Component and KPI Component.Removed formerly deprecated responsiveBreakpoints option from the API.  Upgrade notes Please refer to the DataGrid migration article before upgrading, as DataGrid is rewritten and includes several breaking changes.  Bug fixes Fixed infinite classes when editing components in the sidebar.Fixed #21269, styling errors when forcing the light mode dashboard in the dark mode system.  Highcharts Dashboards v2.3.0 (2024-08-26) # Added the possibility of setting toolbar visibility for individual components, closes #20907.Removed column aliases from DataTable, API documentation, and affected samples. Closes #21485.Added methods (getLocalRowIndex & getOriginalRowIndex) for referencing between rows of original and modified data tables.Changed the layout element in the Add component sidebar to a row and improved the look when added.Added an HTML text field in the sidebar to control and edit the content of the HTML component.Added support for the beforeParse callback in the GoogleSheetsConnector options. Closes #21235.  Bug fixes Fixed some smaller issues with the HTML component.Fixed #21615, when the useHTML was enabled, content in a cell was not rendered correctly when scrolling.Fixed #21280, it was impossible to set the component active state, so added isAcitve flag.Fixed parseDate in DataConverter was private.Fixed, added missing DataConverter type in DataConnector.Added missing utility method to the Dashboards namespace.Fixed error when trying to sync with an invisible point.  Highcharts Dashboards v2.2.0 (2024-07-02) # Added the EditMode for dashboards declared with custom HTML, allowing users to modify the components inside.Added the methods getComponentById and getComponentByCellId to the Board class. Addressing feature request #21378.Renamed onEditModeToggle to toggleEditMode.Removed the setting icon from the row toolbar.Added edit mode events. Changed the way components are updated in edit mode. See #20756.Added isStandalone option to add non-nested options in the edit mode sidebar, #20793.Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.  Bug fixes Fixed #21310, updating values in the DataGrid did not update connected components.Fixed #21189, dragging and dropping elements from the sidebar and inside the dashboard was impossible in Firefox.Removed connector name from the HTML component sidebar.Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.  Highcharts Dashboards v2.1.0 (2024-05-22) # Improved error messages when options were misconfigured, see #21091.Added option to use valid HTML inside the DataGrid cell, along with that the useHTML option was added, see #20634.Added autoScroll option to the Datagrid's highlight sync.Added the group option which allows synchronization to be grouped within components sharing the same connector.Added affectedSeriesId option to the Highcharts Component's highlight sync.Added ability to set multiple connectors for the Highcharts Component.Added a vue example with custom layout.  Bug fixes Fixed typo in Fullscreen es-module import which caused an error when importing the layout module.Fixed #21079, false was displayed in the input inside the sidebar when the option was disabled.Fixed issue with synchronization not being stopping during component destroy.Added error handling for rendering components in the same cell.Fixed #20944, wrong values were displayed in the sidebar when the Highcharts component was initialized with programmatically set options.Fixed #20661, dashboards were broken when used non-unique ids of cells.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v2.0.0 (2024-03-13) # Added support for custom HTML layout. The use of gui is now optional.Dashboard, and charts, are now 100% stylable via CSS instead of JavaScript configuration.Include what you need, with Dashboards Core, Layout/EditMode and DataGrid as separate scripts. dashboards-plugin is removed and no longer needed.Improved chart synchronization options, and added additional options to highlight synchronization. highlight, tooltip and crosshair can now be set separately.Improved and simplified column assignment. Moved the option from component scope to component.connector.Added support for HTML as string in the HTML Component.  Upgrade notes Dashboards Core, Layout/EditMode and DataGrid are now seperate scripts, and needs to be explicitly included whenever needed. See respective documentation articles for details.The old columnAssignment logic is no longer supported, and needs to be refactored to the new one.Responsive layout should now be specified using CSS media queries.  Bug fixes Fixed synchronization was not stopping during component destroy.Fixed point dragging with allowConnectorUpdate in Highcharts Component.  Highcharts Dashboards v1.3.1 (2024-03-05) # Added cloud monitoring demo.  Bug fixes Fixed the wrong length of columns in JSONConverter, when x is the same.Fixed #20557, incorrect calculation of component content height when caption is defined.Fixed #20509, wrong type declarations in Dashboards ES modules.Fixed #20445, DataGrid column headers disabling.Fixed crossfilter sync with string data.  Highcharts Dashboards v1.3.0 (2024-01-24) # Internal optimizations and minor TypeScript enhancements.  Highcharts Dashboards v1.2.1 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.  Bug fixes Fixed, it was impossible to set KPI content flex-direction.  Highcharts Dashboards v1.2.0 (2024-01-10) # Added a way to drag custom components from the sidebar, closes #20290.Added closing sidebar, when clicking outside the box.Added the possibility to define a custom path in columnNames for JSON connector to parse complex data.Added the affectNavigator option allowing crossfilter to affect the contents of the other navigators.Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed issue with missing rows, when datagrid visibility was switched.Fixed, it was impossible to set KPI content flex-direction.Added unmount event to component options.Added missing type for the columnName parameter.Fixed missing update position of the context menu.Fixed syncs between different lengths of arrays of series.Fixed KPI component updating when new options include chart options.Fixed d.ts files for HighchartsTypes.Fixed #20046, there was an error when adding a new chart component.Improved accessibility by changing the context menu toggle into a button.  Highcharts Dashboards v1.1.3 (2023-11-29) # Added option to add text next to context button.Added linkedValueTo option to the KPI Component.  Bug fixes Fixed #20046, there was an error when adding a new chart component.  Highcharts Dashboards v1.1.2 (2023-11-08) # Added closing sidebar, when clicking outside the box.Added demo that saving and loading dashboards in localStorage.Added the settings.enabled option. Closes #19707.Disabled add component button when the cell toolbars are disabled. Added options for disabling the add component and rwd buttons.Added aria-expanded for the context menu button.  Bug fixes Improved accessibility by changing the context menu toggle into a button.Added missing type for the columnName parameter.Added unmount event to component options.Fixed undefined id in row, cell and layout.Fixed zoom syncing when min or max stays the same.  Highcharts Dashboards v1.1.1 (2023-09-21) # Added aria-expanded for the context menu button.DataTable.aliases property replaces DataTable.getColumnAliases() and DataTable.setColumnAlias().  Highcharts Dashboards v1.1.0 (2023-09-19) # Added the aria-label for the context menu button.Added cellFormatter to the dataGrid module.Added NavigatorComponent for crossfilter of a connector table.Added custom sync demo.Added events to the EditMode state.Added docs about component's sync.Added KPI Component docs as extra article.Created additional docs of the Highcharts Component.Added loading indicator which turns on for a cell until a connector is loaded.Refactored component life cycle methods.Removed scaleElements option in the HTMLComponent.Added dashboard es-modules docs.Added styledMode into KPI component.Implemented usage of connectors and sync (extremes event) for KPI component.  Bug fixes Fixed, it was impossible to change the confirmation popup close button.Fixed reference translation in function arguments of MathModifier.Fixed, dataGridOptions were not applied to the DataGrid component.Removed double resize of DataGrid.Fixed mousewheel problem in the climate demo.Fixed broken reflow in the dashboards.Applied default connector to the dragged new element.Improved the edit mode sidebars and popup design.  Highcharts Dashboards v1.0.2 (2023-08-10) # Replaced blocklist with allowlist in columnAssignment option.RangeModifier will now intersect the results of multiple ranges by default. Use the additive option to concatenate results of multiple ranges.Implemented visibility sync handler.Implemented disabling of editing of the columns, which are created by Math Modifier.Added user-defined redraw event for dashboard components.  Bug fixes Fixed whitespaces not being removed from names when using CSVConnector with firstRowAsNames enabled.Fixed bug with disabling toolbars for cell or row.Fixed insufficient waiting for loading connectors on second request.Fixed missing reference to DOM element in the dataGrid, after dragging a point.Fixed, added TextOptions to documentation, changed gui.enabled as optional.Fixed, the data grid did not resize cells properly.Improved TypeScript-support of Dashboards.Fixed, sync was not preserved when the component updated its connector.  Highcharts Dashboards v1.0.1 (2023-07-19) # Added getOptions() method that returns config of dashboard.  Bug fixes Path to icons has changed to ./gfx/dashboards-icons/.Fixed problem in dataGrid  with visible unnecessary scrollbars on Windows.Fixed links in the API that were pointing to not existing URL's.Fixed, the DataGrid component was not rendered when data was fetched though the csvURL.Improved TypeScript declarations to support classic bundles (minified and as source).Fixed some URL's and indentation error in the *.md files.  Highcharts Dashboards v1.0.0 (2023-06-29) # First release of Highcharts DashboardsHighcharts Grid  Highcharts Grid v1.0.1 (2025-03-27) #   Bug fixes Grid: Fixed the errors resulting from not supporting innerHTML editing by AST.  Highcharts Grid v1.0.0 (2025-03-25) # First release of Highcharts Grid Lite\n\n\n\nRoadmapRevised April 7th, 2025. The following represents Highcharts’ product development cycle and future
 direction. It is only intended for information purposes and should not be seen as a
 commitment on our part. WE WANT YOUR FEEDBACKTest drive our new Highcharts Editor, the latest experiment from Highsoft Lab, our innovation playground. Let us know what you think!What’s Coming Up    Released Highcharts Grid v1.0First release of Highcharts Grid, a versatile tool for displaying and managing tabular dataHighcharts Grid Lite: our free offering, with features such as row virtualization, theming, sorting and of course a11y out-of-the-boxHighcharts Grid Pro: part of the Dashboards package, for more advanced use casesRead more about Highcharts Grid v1.0 Highcharts Dashboards v3.2Grid: DataGrid was renamed to GridKPI: improved KPI Component with more formulasVarious bug fixesRead more about Highcharts Dashboards v3.2 Highcharts v12Internationalization: Locale-aware date and number formattingImproved data handling and performanceImproved bundling and tree shaking supportNew Stock series types: Renko & Point and FigureBetter handling of titlesImproved default fontsRead more about Highcharts v12 Morningstar Data Connector v1.0Easily visualize financial data with Highcharts, with a connection to Morningstar Direct Web Services.Support for all chart types, including Highcharts Core, Stock, Maps, Gantt, and Dashboards.Support for commonly used Morningstar DWS endpoints, including TimeSeries, SecurityDetails, Screener, and X-Ray.Read more about Morningstar Data Connector Figma pluginAn official plugin for designers working in Figma to be able to leverage Highcharts in their designs.Instantly generate and tweak various chart types including line, bar, gauge, pie, and area charts.Once you've designed your charts, easily send them to developers who can integrate them with our Highcharts library.Read more about the plugin Highcharts GPTCreate chart configurations with text prompts, powered by ChatGPT.Quickly generate boilerplate code, get visualization advice, or 24/7 automated support.Refine and correct output via follow-up prompts.Immediately see examples of the charts once the code is generated.Read more about Highcharts GPT Map Collection v2.2.0Highcharts Map Collection v2.2.0 was released, containing multiple fixes.The update includes fixes to USA, France, Japan, and UK maps, among others.Read more about the update Flutter integration BetaWe are working on an official integration with Flutter, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.We expect to release an early beta version of this integration soon.Read more about our new Flutter integration    In progress1-3 months Highcharts GridImproved column width configuration via APIScroll and performance improvementsGrid Pro: input validation when editing values in cellsGrid Pro: sparklines supportWe are working on many improvements to Highcharts Grid, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Highcharts Grid functionality is released.Ask a question, about the Highcharts Grid functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Highcharts DashboardseditMode: Edit data connectors in editMode sidebarData: support for multiple DataTables in one ConnectorWe are working on many improvements to Highcharts Dashboards, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Improved React integration BetaWe are working on improvements to our React integration, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.The improved integration is currently in Alpha, and we expect to release an early beta version soon.Highlights include a more React-like API, improved developer experience, and better integration with custom React components.Join the waitlist, and we will email you when our improved React integration is released.Ask a question, about our improved React integration, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q4 2024. Editor v2The new Highcharts Editor is aiming for feature parity with the existing one.We are looking for people to try this out and give us more feedback.Join the waitlist, and we will email you when the updates is released.Ask a question, about the updates, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025.CloseJoin the waiting list for this releaseAdd your email and we’ll notify you when the launch is readyPlease enable JavaScript in your browser to complete this form.Email *Submit    Next up 3+ months Highcharts GridImproved and extended sparkline supportPaginationImproved documentation and demos.Join the waitlist, and we will email you when the Grid functionality is released.Ask a question, about the Grid functionality, and we will reach out.. Join the waitlist Ask a question Highcharts DashboardsImproved and extended data handlingFurther UX improvements to Edit ModeImproved documentation and demos.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a question Advanced AccessibilityWe are researching improvements to the Highcharts accessibility features, to make it easier to create more advanced charts that are accessible and usable for everyone.If you have feedback for us on the accessibility features of Highcharts, we would like to hear from you.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts GanttWe are considering work to make it easier to build interfaces using Gantt visualizations.If you are a current or potential user of Highcharts Gantt, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts Stock and Predictive AnalyticsWe are considering work to make it easier to enhance Stock charts with predictive analysis tools.If you are a current or potential user of Highcharts Stock, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Stock Tools revampWe plan to overhaul Stock Tools to improve UI, UX, and accessibility (A11y).If you are interested in trying out the new version, let us know.Join the waitlist, and we will email you when the Stock module is released.Ask a question, about the Stock module, and we will reach out.. Join the waitlist Ask a question Premium Export ServerWe are considering to offer premium export services to our customers. What could be included?Enhanched Export Formats & QualityAdvanced Customization & BrandingPerformance & ScalabilityIf you are interested in premium export services for Highcharts, Sign up to our waitlist.Join the waitlist, and we will email you when premium export server is released.Ask a question, about premium export server, and we will reach out.. Join the waitlist Ask a questionLet us know if you have ideas for a feature or productsBe the first to know about the future!Add your email and we’ll make sure you’re the first to know what we are planning next.Please enable JavaScript in your browser to complete this form.Email *Submit\n\nRoadmapRevised April 7th, 2025. The following represents Highcharts’ product development cycle and future
 direction. It is only intended for information purposes and should not be seen as a
 commitment on our part. WE WANT YOUR FEEDBACKTest drive our new Highcharts Editor, the latest experiment from Highsoft Lab, our innovation playground. Let us know what you think!What’s Coming Up    Released Highcharts Grid v1.0First release of Highcharts Grid, a versatile tool for displaying and managing tabular dataHighcharts Grid Lite: our free offering, with features such as row virtualization, theming, sorting and of course a11y out-of-the-boxHighcharts Grid Pro: part of the Dashboards package, for more advanced use casesRead more about Highcharts Grid v1.0 Highcharts Dashboards v3.2Grid: DataGrid was renamed to GridKPI: improved KPI Component with more formulasVarious bug fixesRead more about Highcharts Dashboards v3.2 Highcharts v12Internationalization: Locale-aware date and number formattingImproved data handling and performanceImproved bundling and tree shaking supportNew Stock series types: Renko & Point and FigureBetter handling of titlesImproved default fontsRead more about Highcharts v12 Morningstar Data Connector v1.0Easily visualize financial data with Highcharts, with a connection to Morningstar Direct Web Services.Support for all chart types, including Highcharts Core, Stock, Maps, Gantt, and Dashboards.Support for commonly used Morningstar DWS endpoints, including TimeSeries, SecurityDetails, Screener, and X-Ray.Read more about Morningstar Data Connector Figma pluginAn official plugin for designers working in Figma to be able to leverage Highcharts in their designs.Instantly generate and tweak various chart types including line, bar, gauge, pie, and area charts.Once you've designed your charts, easily send them to developers who can integrate them with our Highcharts library.Read more about the plugin Highcharts GPTCreate chart configurations with text prompts, powered by ChatGPT.Quickly generate boilerplate code, get visualization advice, or 24/7 automated support.Refine and correct output via follow-up prompts.Immediately see examples of the charts once the code is generated.Read more about Highcharts GPT Map Collection v2.2.0Highcharts Map Collection v2.2.0 was released, containing multiple fixes.The update includes fixes to USA, France, Japan, and UK maps, among others.Read more about the update Flutter integration BetaWe are working on an official integration with Flutter, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.We expect to release an early beta version of this integration soon.Read more about our new Flutter integration    In progress1-3 months Highcharts GridImproved column width configuration via APIScroll and performance improvementsGrid Pro: input validation when editing values in cellsGrid Pro: sparklines supportWe are working on many improvements to Highcharts Grid, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Highcharts Grid functionality is released.Ask a question, about the Highcharts Grid functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Highcharts DashboardseditMode: Edit data connectors in editMode sidebarData: support for multiple DataTables in one ConnectorWe are working on many improvements to Highcharts Dashboards, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Improved React integration BetaWe are working on improvements to our React integration, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.The improved integration is currently in Alpha, and we expect to release an early beta version soon.Highlights include a more React-like API, improved developer experience, and better integration with custom React components.Join the waitlist, and we will email you when our improved React integration is released.Ask a question, about our improved React integration, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q4 2024. Editor v2The new Highcharts Editor is aiming for feature parity with the existing one.We are looking for people to try this out and give us more feedback.Join the waitlist, and we will email you when the updates is released.Ask a question, about the updates, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025.CloseJoin the waiting list for this releaseAdd your email and we’ll notify you when the launch is readyPlease enable JavaScript in your browser to complete this form.Email *Submit    Next up 3+ months Highcharts GridImproved and extended sparkline supportPaginationImproved documentation and demos.Join the waitlist, and we will email you when the Grid functionality is released.Ask a question, about the Grid functionality, and we will reach out.. Join the waitlist Ask a question Highcharts DashboardsImproved and extended data handlingFurther UX improvements to Edit ModeImproved documentation and demos.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a question Advanced AccessibilityWe are researching improvements to the Highcharts accessibility features, to make it easier to create more advanced charts that are accessible and usable for everyone.If you have feedback for us on the accessibility features of Highcharts, we would like to hear from you.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts GanttWe are considering work to make it easier to build interfaces using Gantt visualizations.If you are a current or potential user of Highcharts Gantt, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts Stock and Predictive AnalyticsWe are considering work to make it easier to enhance Stock charts with predictive analysis tools.If you are a current or potential user of Highcharts Stock, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Stock Tools revampWe plan to overhaul Stock Tools to improve UI, UX, and accessibility (A11y).If you are interested in trying out the new version, let us know.Join the waitlist, and we will email you when the Stock module is released.Ask a question, about the Stock module, and we will reach out.. Join the waitlist Ask a question Premium Export ServerWe are considering to offer premium export services to our customers. What could be included?Enhanched Export Formats & QualityAdvanced Customization & BrandingPerformance & ScalabilityIf you are interested in premium export services for Highcharts, Sign up to our waitlist.Join the waitlist, and we will email you when premium export server is released.Ask a question, about premium export server, and we will reach out.. Join the waitlist Ask a questionLet us know if you have ideas for a feature or productsBe the first to know about the future!Add your email and we’ll make sure you’re the first to know what we are planning next.Please enable JavaScript in your browser to complete this form.Email *Submit\n\nRoadmapRevised April 7th, 2025. The following represents Highcharts’ product development cycle and future
 direction. It is only intended for information purposes and should not be seen as a
 commitment on our part. WE WANT YOUR FEEDBACKTest drive our new Highcharts Editor, the latest experiment from Highsoft Lab, our innovation playground. Let us know what you think!What’s Coming Up    Released Highcharts Grid v1.0First release of Highcharts Grid, a versatile tool for displaying and managing tabular dataHighcharts Grid Lite: our free offering, with features such as row virtualization, theming, sorting and of course a11y out-of-the-boxHighcharts Grid Pro: part of the Dashboards package, for more advanced use casesRead more about Highcharts Grid v1.0 Highcharts Dashboards v3.2Grid: DataGrid was renamed to GridKPI: improved KPI Component with more formulasVarious bug fixesRead more about Highcharts Dashboards v3.2 Highcharts v12Internationalization: Locale-aware date and number formattingImproved data handling and performanceImproved bundling and tree shaking supportNew Stock series types: Renko & Point and FigureBetter handling of titlesImproved default fontsRead more about Highcharts v12 Morningstar Data Connector v1.0Easily visualize financial data with Highcharts, with a connection to Morningstar Direct Web Services.Support for all chart types, including Highcharts Core, Stock, Maps, Gantt, and Dashboards.Support for commonly used Morningstar DWS endpoints, including TimeSeries, SecurityDetails, Screener, and X-Ray.Read more about Morningstar Data Connector Figma pluginAn official plugin for designers working in Figma to be able to leverage Highcharts in their designs.Instantly generate and tweak various chart types including line, bar, gauge, pie, and area charts.Once you've designed your charts, easily send them to developers who can integrate them with our Highcharts library.Read more about the plugin Highcharts GPTCreate chart configurations with text prompts, powered by ChatGPT.Quickly generate boilerplate code, get visualization advice, or 24/7 automated support.Refine and correct output via follow-up prompts.Immediately see examples of the charts once the code is generated.Read more about Highcharts GPT Map Collection v2.2.0Highcharts Map Collection v2.2.0 was released, containing multiple fixes.The update includes fixes to USA, France, Japan, and UK maps, among others.Read more about the update Flutter integration BetaWe are working on an official integration with Flutter, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.We expect to release an early beta version of this integration soon.Read more about our new Flutter integration    In progress1-3 months Highcharts GridImproved column width configuration via APIScroll and performance improvementsGrid Pro: input validation when editing values in cellsGrid Pro: sparklines supportWe are working on many improvements to Highcharts Grid, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Highcharts Grid functionality is released.Ask a question, about the Highcharts Grid functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Highcharts DashboardseditMode: Edit data connectors in editMode sidebarData: support for multiple DataTables in one ConnectorWe are working on many improvements to Highcharts Dashboards, and would like to hear from you to help us drive priorities.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025. Improved React integration BetaWe are working on improvements to our React integration, allowing developers to more easily leverage Highcharts capabilities in their familiar ecosystem.The improved integration is currently in Alpha, and we expect to release an early beta version soon.Highlights include a more React-like API, improved developer experience, and better integration with custom React components.Join the waitlist, and we will email you when our improved React integration is released.Ask a question, about our improved React integration, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q4 2024. Editor v2The new Highcharts Editor is aiming for feature parity with the existing one.We are looking for people to try this out and give us more feedback.Join the waitlist, and we will email you when the updates is released.Ask a question, about the updates, and we will reach out.. Join the waitlist Ask a questionThis update is expected to be released in Q1 2025.CloseJoin the waiting list for this releaseAdd your email and we’ll notify you when the launch is readyPlease enable JavaScript in your browser to complete this form.Email *Submit    Next up 3+ months Highcharts GridImproved and extended sparkline supportPaginationImproved documentation and demos.Join the waitlist, and we will email you when the Grid functionality is released.Ask a question, about the Grid functionality, and we will reach out.. Join the waitlist Ask a question Highcharts DashboardsImproved and extended data handlingFurther UX improvements to Edit ModeImproved documentation and demos.Join the waitlist, and we will email you when the Dashboards functionality is released.Ask a question, about the Dashboards functionality, and we will reach out.. Join the waitlist Ask a question Advanced AccessibilityWe are researching improvements to the Highcharts accessibility features, to make it easier to create more advanced charts that are accessible and usable for everyone.If you have feedback for us on the accessibility features of Highcharts, we would like to hear from you.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts GanttWe are considering work to make it easier to build interfaces using Gantt visualizations.If you are a current or potential user of Highcharts Gantt, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Highcharts Stock and Predictive AnalyticsWe are considering work to make it easier to enhance Stock charts with predictive analysis tools.If you are a current or potential user of Highcharts Stock, we would appreciate learning more about your use case.Join the waitlist, and we will email you when the update is released.Ask a question, about the update, and we will reach out.. Join the waitlist Ask a question Stock Tools revampWe plan to overhaul Stock Tools to improve UI, UX, and accessibility (A11y).If you are interested in trying out the new version, let us know.Join the waitlist, and we will email you when the Stock module is released.Ask a question, about the Stock module, and we will reach out.. Join the waitlist Ask a question Premium Export ServerWe are considering to offer premium export services to our customers. What could be included?Enhanched Export Formats & QualityAdvanced Customization & BrandingPerformance & ScalabilityIf you are interested in premium export services for Highcharts, Sign up to our waitlist.Join the waitlist, and we will email you when premium export server is released.Ask a question, about premium export server, and we will reach out.. Join the waitlist Ask a questionLet us know if you have ideas for a feature or productsBe the first to know about the future!Add your email and we’ll make sure you’re the first to know what we are planning next.Please enable JavaScript in your browser to complete this form.Email *Submit\n\n\n\nHighcharts Academy (early access) Free  Unlock your Highcharts potential with our GitHub
classroom-based Academy. Apply now for
freeWhy Highcharts Academy? Are you ready to take your Highcharts skills to the next level? Our Highcharts Academy on GitHub
classroom offers a hands-on, practical learning experience designed just for you. Here’s why you
should join:Learn by doing Dive straight into real-world coding exercises. Clone the repo, complete the tasks, and see
your
progress in action. This isn’t just theory; you’ll gain practical experience that you can
apply
directly to your projects.Automated grading for instant feedback No more waiting around to see how you’re doing. Our automated tests provide instant feedback
on
your work, so you can learn and improve faster than ever, feeling fully supported in your
learning journey.Master version control As you learn Highcharts, you’ll also pick up essential Git and GitHub skills. Manage your
code
like a pro, collaborate with others, and contribute to a thriving developer community.Real-Life Challenges Our tests are crafted by experienced support tech developers who understand the challenges
you
face. Each exercise is based on real-life scenarios, ensuring that what you learn is
directly
applicable to your work, boosting your confidence in your skills.How to Apply1 Fill out the applicationFill out the Highcharts Academy application form with your email and GitHub identifier.2 Accept the assignmentYou will receive a GitHub Classroom link, which will provide you with your unique identifier.3 Start learning and have funClone the repository and dive into your Highcharts Academy journey.Apply now for free\n\nHighcharts Academy (early access) Free  Unlock your Highcharts potential with our GitHub
classroom-based Academy. Apply now for
freeWhy Highcharts Academy? Are you ready to take your Highcharts skills to the next level? Our Highcharts Academy on GitHub
classroom offers a hands-on, practical learning experience designed just for you. Here’s why you
should join:Learn by doing Dive straight into real-world coding exercises. Clone the repo, complete the tasks, and see
your
progress in action. This isn’t just theory; you’ll gain practical experience that you can
apply
directly to your projects.Automated grading for instant feedback No more waiting around to see how you’re doing. Our automated tests provide instant feedback
on
your work, so you can learn and improve faster than ever, feeling fully supported in your
learning journey.Master version control As you learn Highcharts, you’ll also pick up essential Git and GitHub skills. Manage your
code
like a pro, collaborate with others, and contribute to a thriving developer community.Real-Life Challenges Our tests are crafted by experienced support tech developers who understand the challenges
you
face. Each exercise is based on real-life scenarios, ensuring that what you learn is
directly
applicable to your work, boosting your confidence in your skills.How to Apply1 Fill out the applicationFill out the Highcharts Academy application form with your email and GitHub identifier.2 Accept the assignmentYou will receive a GitHub Classroom link, which will provide you with your unique identifier.3 Start learning and have funClone the repository and dive into your Highcharts Academy journey.Apply now for free\n\nHighcharts Academy (early access) Free  Unlock your Highcharts potential with our GitHub
classroom-based Academy. Apply now for
freeWhy Highcharts Academy? Are you ready to take your Highcharts skills to the next level? Our Highcharts Academy on GitHub
classroom offers a hands-on, practical learning experience designed just for you. Here’s why you
should join:Learn by doing Dive straight into real-world coding exercises. Clone the repo, complete the tasks, and see
your
progress in action. This isn’t just theory; you’ll gain practical experience that you can
apply
directly to your projects.Automated grading for instant feedback No more waiting around to see how you’re doing. Our automated tests provide instant feedback
on
your work, so you can learn and improve faster than ever, feeling fully supported in your
learning journey.Master version control As you learn Highcharts, you’ll also pick up essential Git and GitHub skills. Manage your
code
like a pro, collaborate with others, and contribute to a thriving developer community.Real-Life Challenges Our tests are crafted by experienced support tech developers who understand the challenges
you
face. Each exercise is based on real-life scenarios, ensuring that what you learn is
directly
applicable to your work, boosting your confidence in your skills.How to Apply1 Fill out the applicationFill out the Highcharts Academy application form with your email and GitHub identifier.2 Accept the assignmentYou will receive a GitHub Classroom link, which will provide you with your unique identifier.3 Start learning and have funClone the repository and dive into your Highcharts Academy journey.Apply now for free\n\n\n\nHighcharts for EducationAre you a student or educator interested in using Highcharts in your non-commercial projects at your
 school
 or university? Apply for an Educational License. If eligible, you’ll receive full access to all
 Highcharts
 libraries and their professional features. Apply now If you are not a student or educator and want to use Highcharts for free in
 personal projects, apply for
 a Personal License.Educational License: What’s included?  Educational projects undertaken by educational institutions and/or individual students. All Highcharts charting libraries and Highcharts Dashboards. Usage of our software on your public/private websites and one self-hosted Web or SaaS application. Up to 6 named authorized users. One year to use the software version you receive with your license. After one year, you must apply
 for a new license. Retained watermarks on all Highcharts generated content. Commercial projects of any kind, regardless of your non-commercial status. Optional dependencies and integrations, such as Highcharts for Python. Distribution of our software to third parties outside of your institution. Anyone not specified in the license terms. New software releases, support or subscription auto-renewals. Modifying our software in any way that makes it unrecognizable as our product or misrepresents our
 company.How to Apply1 Fill out an applicationFill out our Educational License application form.
 You must have an email address from your educational institution or
 organization in order to complete the application.2 Submit for reviewAfter you submit your application, we will review it and determine if you meet
 our criteria for an Educational License.3 Receive a License CertificateIf you meet our criteria for an Educational License, we will issue you a
 license certificate that’s good for one year. Apply for an
 Educational License Highcharts Academy Learn Highcharts for free Frequently Asked Questions   Who's eligible for an Educational License?  Students and employees with an active email address from any educational institution or organization.
who want to use our software in non-commercial projects are eligible to apply.  How do I apply for an Educational License  To apply for an Educational License, fill out and submit our Educational License application form. To complete the form, you will need an email address registered in the domain of your educational institution or organization. Be prepared to provide your status/role at your institution (e.g. “student,” “teacher”), the Highcharts products you intend to use 
and a brief description of how our software will be incorporated in your project(s.) If you want to include others in your license, you may designate up to 6 authorized users. 
Just have their full names and email addresses handy when you apply. After you submit your application, we will review it. If you qualify, we will issue you an Educational License that covers you and/or 
your institution’s use of our software for one year.  What if I'm not affiliated with an educational organization, but I still want to use Highcharts software
for personal projects?  You may be eligible for a Personal License. To apply for a Personal License, fill out and submit our Personal License application form. In addition to your basic contact info, be prepared to provide the Highcharts products you intend to use and a brief description of how our software will be incorporated in your project(s). After you submit your application, we will review it. If you meet our criteria for a Personal License, we will issue you a license certificate that will cover your Highcharts software usage for one year.  What is the scope of an Educational or Personal License?  An Education or Personal license grants you the right to use Highcharts software in your non-commercial projects for one year. The scope of the license covers public and private websites (including subdomains and intranets) hosted on servers you own or control. When using 
our software in these environments, your Highcharts-generated content must appear the same for all users and cannot be customized based on any 
user’s personal data. The Education or Personal license scope also includes the right to use Highcharts software in one non-commercial Web or SaaS application, 
where you may tailor your Highcharts-generated content based on the personal data of individual users. An Education or Personal license does not give you the right to distribute our software. This means if your SaaS or Web application includes Highcharts software, 
it cannot be installed and hosted by a third party, regardless of the third party’s non-commercial status. Any attempt to do so violates the terms of the license.  What does "non-commercial" mean?  Our definition of non-commercial means any activity that does not result in a for-profit product intended for distribution to third parties, 
regardless of their non-commercial status. Non-commercial use of our software is limited to educational purposes and personal use.  How many users does the Educational License cover?  Educational Licenses may cover up to 6 authorized users, designated during the application process. Personal licenses only cover the individual licensee.  As an Education or Personal License holder, do I get access to support and all new software releases?  No. Education/Personal licenses do not include Highcharts support or access to new software releases. You only have the right to use the version of the software you received with your license.  Are there any limitations on marketing my non-commercial product(s)?  As long as you retain the Highcharts watermark and don’t give the impression that your product (with our software) can be downloaded and/or distributed commercially, you’re good to go. We also reserve the right to showcase your product on our website and will work with you to make sure we feature your product and brand accurately.  How long does an Education/Personal license last?  The initial term for Education or Personal license is one year. After one year, the license expires, and you must apply for a brand new license term. There are no auto-renewals. If you don’t want to apply for another license term, you must cease using our software when your current license expires.  Who determines if my project is non-commercial?  We do. If, after granting you an Education or Personal license, we determine that your project no longer meets our non-commercial criteria, we will revoke your license, and you will no longer have the right to use our software.  Can I transfer my license to someone else?  No. Education/Personal licenses are not transferable.  What if my non-commercial project/product becomes commercial?  If you decide to turn your product or project commercial, your Highcharts software usage will no longer be covered by your Education/Personal license. You will be in violation of your license and must purchase a commercial license to continue using our software. As an educational organization or personal user, you may be eligible for a 20% discount on all Highcharts software. Apply for your 20% discount.\n\nHighcharts for EducationAre you a student or educator interested in using Highcharts in your non-commercial projects at your
 school
 or university? Apply for an Educational License. If eligible, you’ll receive full access to all
 Highcharts
 libraries and their professional features. Apply now If you are not a student or educator and want to use Highcharts for free in
 personal projects, apply for
 a Personal License.Educational License: What’s included?  Educational projects undertaken by educational institutions and/or individual students. All Highcharts charting libraries and Highcharts Dashboards. Usage of our software on your public/private websites and one self-hosted Web or SaaS application. Up to 6 named authorized users. One year to use the software version you receive with your license. After one year, you must apply
 for a new license. Retained watermarks on all Highcharts generated content. Commercial projects of any kind, regardless of your non-commercial status. Optional dependencies and integrations, such as Highcharts for Python. Distribution of our software to third parties outside of your institution. Anyone not specified in the license terms. New software releases, support or subscription auto-renewals. Modifying our software in any way that makes it unrecognizable as our product or misrepresents our
 company.How to Apply1 Fill out an applicationFill out our Educational License application form.
 You must have an email address from your educational institution or
 organization in order to complete the application.2 Submit for reviewAfter you submit your application, we will review it and determine if you meet
 our criteria for an Educational License.3 Receive a License CertificateIf you meet our criteria for an Educational License, we will issue you a
 license certificate that’s good for one year. Apply for an
 Educational License Highcharts Academy Learn Highcharts for free Frequently Asked Questions   Who's eligible for an Educational License?  Students and employees with an active email address from any educational institution or organization.
who want to use our software in non-commercial projects are eligible to apply.  How do I apply for an Educational License  To apply for an Educational License, fill out and submit our Educational License application form. To complete the form, you will need an email address registered in the domain of your educational institution or organization. Be prepared to provide your status/role at your institution (e.g. “student,” “teacher”), the Highcharts products you intend to use 
and a brief description of how our software will be incorporated in your project(s.) If you want to include others in your license, you may designate up to 6 authorized users. 
Just have their full names and email addresses handy when you apply. After you submit your application, we will review it. If you qualify, we will issue you an Educational License that covers you and/or 
your institution’s use of our software for one year.  What if I'm not affiliated with an educational organization, but I still want to use Highcharts software
for personal projects?  You may be eligible for a Personal License. To apply for a Personal License, fill out and submit our Personal License application form. In addition to your basic contact info, be prepared to provide the Highcharts products you intend to use and a brief description of how our software will be incorporated in your project(s). After you submit your application, we will review it. If you meet our criteria for a Personal License, we will issue you a license certificate that will cover your Highcharts software usage for one year.  What is the scope of an Educational or Personal License?  An Education or Personal license grants you the right to use Highcharts software in your non-commercial projects for one year. The scope of the license covers public and private websites (including subdomains and intranets) hosted on servers you own or control. When using 
our software in these environments, your Highcharts-generated content must appear the same for all users and cannot be customized based on any 
user’s personal data. The Education or Personal license scope also includes the right to use Highcharts software in one non-commercial Web or SaaS application, 
where you may tailor your Highcharts-generated content based on the personal data of individual users. An Education or Personal license does not give you the right to distribute our software. This means if your SaaS or Web application includes Highcharts software, 
it cannot be installed and hosted by a third party, regardless of the third party’s non-commercial status. Any attempt to do so violates the terms of the license.  What does "non-commercial" mean?  Our definition of non-commercial means any activity that does not result in a for-profit product intended for distribution to third parties, 
regardless of their non-commercial status. Non-commercial use of our software is limited to educational purposes and personal use.  How many users does the Educational License cover?  Educational Licenses may cover up to 6 authorized users, designated during the application process. Personal licenses only cover the individual licensee.  As an Education or Personal License holder, do I get access to support and all new software releases?  No. Education/Personal licenses do not include Highcharts support or access to new software releases. You only have the right to use the version of the software you received with your license.  Are there any limitations on marketing my non-commercial product(s)?  As long as you retain the Highcharts watermark and don’t give the impression that your product (with our software) can be downloaded and/or distributed commercially, you’re good to go. We also reserve the right to showcase your product on our website and will work with you to make sure we feature your product and brand accurately.  How long does an Education/Personal license last?  The initial term for Education or Personal license is one year. After one year, the license expires, and you must apply for a brand new license term. There are no auto-renewals. If you don’t want to apply for another license term, you must cease using our software when your current license expires.  Who determines if my project is non-commercial?  We do. If, after granting you an Education or Personal license, we determine that your project no longer meets our non-commercial criteria, we will revoke your license, and you will no longer have the right to use our software.  Can I transfer my license to someone else?  No. Education/Personal licenses are not transferable.  What if my non-commercial project/product becomes commercial?  If you decide to turn your product or project commercial, your Highcharts software usage will no longer be covered by your Education/Personal license. You will be in violation of your license and must purchase a commercial license to continue using our software. As an educational organization or personal user, you may be eligible for a 20% discount on all Highcharts software. Apply for your 20% discount.\n\nHighcharts for EducationAre you a student or educator interested in using Highcharts in your non-commercial projects at your
 school
 or university? Apply for an Educational License. If eligible, you’ll receive full access to all
 Highcharts
 libraries and their professional features. Apply now If you are not a student or educator and want to use Highcharts for free in
 personal projects, apply for
 a Personal License.Educational License: What’s included?  Educational projects undertaken by educational institutions and/or individual students. All Highcharts charting libraries and Highcharts Dashboards. Usage of our software on your public/private websites and one self-hosted Web or SaaS application. Up to 6 named authorized users. One year to use the software version you receive with your license. After one year, you must apply
 for a new license. Retained watermarks on all Highcharts generated content. Commercial projects of any kind, regardless of your non-commercial status. Optional dependencies and integrations, such as Highcharts for Python. Distribution of our software to third parties outside of your institution. Anyone not specified in the license terms. New software releases, support or subscription auto-renewals. Modifying our software in any way that makes it unrecognizable as our product or misrepresents our
 company.How to Apply1 Fill out an applicationFill out our Educational License application form.
 You must have an email address from your educational institution or
 organization in order to complete the application.2 Submit for reviewAfter you submit your application, we will review it and determine if you meet
 our criteria for an Educational License.3 Receive a License CertificateIf you meet our criteria for an Educational License, we will issue you a
 license certificate that’s good for one year. Apply for an
 Educational License Highcharts Academy Learn Highcharts for free Frequently Asked Questions   Who's eligible for an Educational License?  Students and employees with an active email address from any educational institution or organization.
who want to use our software in non-commercial projects are eligible to apply.  How do I apply for an Educational License  To apply for an Educational License, fill out and submit our Educational License application form. To complete the form, you will need an email address registered in the domain of your educational institution or organization. Be prepared to provide your status/role at your institution (e.g. “student,” “teacher”), the Highcharts products you intend to use 
and a brief description of how our software will be incorporated in your project(s.) If you want to include others in your license, you may designate up to 6 authorized users. 
Just have their full names and email addresses handy when you apply. After you submit your application, we will review it. If you qualify, we will issue you an Educational License that covers you and/or 
your institution’s use of our software for one year.  What if I'm not affiliated with an educational organization, but I still want to use Highcharts software
for personal projects?  You may be eligible for a Personal License. To apply for a Personal License, fill out and submit our Personal License application form. In addition to your basic contact info, be prepared to provide the Highcharts products you intend to use and a brief description of how our software will be incorporated in your project(s). After you submit your application, we will review it. If you meet our criteria for a Personal License, we will issue you a license certificate that will cover your Highcharts software usage for one year.  What is the scope of an Educational or Personal License?  An Education or Personal license grants you the right to use Highcharts software in your non-commercial projects for one year. The scope of the license covers public and private websites (including subdomains and intranets) hosted on servers you own or control. When using 
our software in these environments, your Highcharts-generated content must appear the same for all users and cannot be customized based on any 
user’s personal data. The Education or Personal license scope also includes the right to use Highcharts software in one non-commercial Web or SaaS application, 
where you may tailor your Highcharts-generated content based on the personal data of individual users. An Education or Personal license does not give you the right to distribute our software. This means if your SaaS or Web application includes Highcharts software, 
it cannot be installed and hosted by a third party, regardless of the third party’s non-commercial status. Any attempt to do so violates the terms of the license.  What does "non-commercial" mean?  Our definition of non-commercial means any activity that does not result in a for-profit product intended for distribution to third parties, 
regardless of their non-commercial status. Non-commercial use of our software is limited to educational purposes and personal use.  How many users does the Educational License cover?  Educational Licenses may cover up to 6 authorized users, designated during the application process. Personal licenses only cover the individual licensee.  As an Education or Personal License holder, do I get access to support and all new software releases?  No. Education/Personal licenses do not include Highcharts support or access to new software releases. You only have the right to use the version of the software you received with your license.  Are there any limitations on marketing my non-commercial product(s)?  As long as you retain the Highcharts watermark and don’t give the impression that your product (with our software) can be downloaded and/or distributed commercially, you’re good to go. We also reserve the right to showcase your product on our website and will work with you to make sure we feature your product and brand accurately.  How long does an Education/Personal license last?  The initial term for Education or Personal license is one year. After one year, the license expires, and you must apply for a brand new license term. There are no auto-renewals. If you don’t want to apply for another license term, you must cease using our software when your current license expires.  Who determines if my project is non-commercial?  We do. If, after granting you an Education or Personal license, we determine that your project no longer meets our non-commercial criteria, we will revoke your license, and you will no longer have the right to use our software.  Can I transfer my license to someone else?  No. Education/Personal licenses are not transferable.  What if my non-commercial project/product becomes commercial?  If you decide to turn your product or project commercial, your Highcharts software usage will no longer be covered by your Education/Personal license. You will be in violation of your license and must purchase a commercial license to continue using our software. As an educational organization or personal user, you may be eligible for a 20% discount on all Highcharts software. Apply for your 20% discount.\n\n\n\nChart ChooserFind your chart based on your data type and objectiveExplore chartsIf you are aware of your data type and objective, jump straight to the Chart Chooser tool and start having fun.  Explore Charts Need help choosing?Learn the three simple step to choosing the right chart.  Chart chooser tutorial    1  Know your data type    2  Define your objective    3  Choose your chart 1. Know Your Data
 TypeKnowing what kind of data
 you
 are
 dealing
 with is an
 essential phase to
 better
 extract insights from the data; since for each data type, you need
 to
 use
 the
 right mathematical techniques and visualization types.Categorical Data is labeled categorical if their
 values
 describe a
 quality,
 grade, level,
 or
 any other characteristics. Categorical data can be Nominal or
 Ordinal.Ordinal Ordered variables
 where
 the
 number of units in each variable
 is not the same. Show
 examples Examples
 of
 Ordinal DataData is ordinal if it represents an ordered
 quality
 variable, and the
 number of units in each variable is not the same. LevelsOn
 a
 happiness scale, joy (high) has more units
 of
 happiness
 than sad (low.) Times of
 dayMorning is 6 hours,
 whereas
 evening
 lasts for about 3 hours. Stages
 of education Elementary
 school
 has 8
 grades and lasts for 8 years, whereas
 college
 consists
 of 4 grades and lasts 4 years.Nominal Categorical data
 where the
 order doesn't matter. Show
 examples Examples
 of
 Nominal DataNominal data is a type of categorical data
 where
 the
 order
 doesn't matter. Gender Countries' names ColorsTip:  To identify nominal data, ask
 yourself
 the
 following
 question: Will the meaning change if I
 change
 the
 variables'
 order? If not, you have nominal data.Continuous Data is labeled continuous if
 the
 values
 are
 measured.
 Continuous
 data could
 be
 either interval or ratio.Interval  Data where
 proportion
 doesn't
 make sense, and the zero has no meaning. Show
 examples Examples
 of
 Interval DataInterval data represents values where
 proportion
 doesn't
 make sense, and the zero has no meaning. Intelligence
 quotient Temperature Time of the
 day1 pm, 2 pm, 4 am, etc Tip:  Interval
 data is often used in the social sciences.Ratio  Data where the zero
 functions
 as a point of reference, and proportions make sense. Show
 examples Examples
 of
 Ratio DataFor ratio data, the zero has a meaning as a
 point of
 reference, and proportions make sense. Distance5km,
 1,84m, etc. Weight81.5kg Days2
 or 3
 days Times1
 hour,
 34minTip:  Notice
 that ratio data does not have negative
 values,
 as
 there
 is no negative height or weight. Ratio data
 is
 popular
 in physical sciences.  Next: Define your
 objective2. Define your Objective There are many objectives to visualize a data set. Here are the main
 commonly
 used
 objectives: ComparisonComparison estimates the similarities or
 not
 between
 two or
 more elements. Line, Bar, Bubble charts, and Treemaps are
 often
 used
 to
 compare categorical data. Composition Composition shows the continuent parts of an element. Donut,
 Pie,
 Stacked
 Bar, and Stacked Column charts are often used to visualize
 composition. Relationship Relationship demonstrates how one variable affects other
 variables.
 Scatter
 and Bubble charts are often used to visualize relationship. Hierarchy The hierarchy is a system where elements are arranged or
 ranked
 one
 above
 another. Treemap, Sunburst, and Circle chart are used to
 visualize
 hierarchy. Distribution Distribution depicts the frequency of a variable through
 time or
 space.
 Scatter, Histograms, and Pyramid charts are used to
 visualize
 distribution. Flow The flow is the action of moving along in a steady and
 continuous
 stream.
 Sankey diagram and Gantt are the main charts used to
 visualize
 the
 flow.  Next: Choose your chart  Previous step3. Choose Your Chart Select the right chart from the list below according to your datatype
 and
 objectives.  Close and explore charts  Previous stepExplore ChartsGo ahead and explore the tool using your knowledge of data types and visualization objectives. Skip filters and go to result  Show Filters Filters Reset Filters   Libraries      Highcharts®      Highcharts® Stock      Highcharts® Maps   Data Types The first step is to identify your data type. It is
 essential to
 know your
 data type, so
 you choose the right mathematical techniques and chart types to extract
 insights
 from
 the data.     Categorical      Continuous   Objectives Now you know your data type; next step is to know your
 objectives.     Comparison      Composition      Distribution      Flow      Hierarchy      Relationship      Trend   Chart types Decide which specific chart will glean the best insights from
 your data set.     Area      Area range      Bar      Bell curve      Bubble      Column      Donut      Line      Map      Network Graph      Organization      Pie      Radial      Sankey Diagram      Scatter      Split Packed Bubble      Stacked Area      Stacked Bar      Stacked Column      Streamgraph      Sunburst      Treemap Result:Bar Chart RaceData type:Categorical Objectives:Trend LineData type:Continuous Objectives:Flow Animated MapData type:Categorical Objectives:Flow Area RangeData type:Continuous Objectives:Trend Density ChartData type:Continuous Objectives:Distribution StreamgraphData type:Continuous Objectives:Flow Stacked AreaData type:Continuous Objectives:Composition LineData type:Continuous Objectives:Relationship ScatterData type:Continuous Objectives:Relationship MapData type:Continuous Objectives:Comparison ScatterData type:Continuous Objectives:Comparison LineData type:Continuous Objectives:Comparison LineData type:Continuous Objectives:Trend BubbleData type:Continuous Objectives:Distribution Marker ClustersData type:Continuous Objectives:Distribution Bell curveData type:Continuous Objectives:Distribution ScatterData type:Continuous Objectives:Distribution MapData type:Continuous Objectives:Distribution MapData type:Categorical Objectives:Composition Column ChartData type:Categorical Objectives:Comparison Bar ChartData type:Categorical Objectives:Distribution MapData type:Categorical Objectives:Relationship Network GraphData type:Categorical Objectives:Relationship Treemap ChartData type:Categorical Objectives:Hierarchy Sunburst ChartData type:Categorical Objectives:Hierarchy Organization ChartData type:Categorical Objectives:Hierarchy Pie ChartData type:Categorical Objectives:Composition Donut ChartData type:Categorical Objectives:Composition Split Packed BubbleData type:Categorical Objectives:Composition Sunburst ChartData type:Categorical Objectives:Composition Treemap ChartData type:Categorical Objectives:Composition Sankey DiagramData type:Categorical Objectives:Composition Treemap ChartData type:Categorical Objectives:Comparison Sunburst ChartData type:Categorical Objectives:Comparison Radial ChartData type:Categorical Objectives:Comparison Donut ChartData type:Categorical Objectives:Comparison Pie ChartData type:Categorical Objectives:Comparison Stacked Bar ChartsData type:Categorical Objectives:Composition Stacked Column ChartsData type:Categorical Objectives:Composition Stacked Bar ChartsData type:Categorical Objectives:Comparison Stacked Column ChartsData type:Categorical Objectives:Comparison Sankey DiagramData type:Categorical Objectives:Flow Bar ChartData type:Categorical Objectives:Comparison\n\nChart ChooserFind your chart based on your data type and objectiveExplore chartsIf you are aware of your data type and objective, jump straight to the Chart Chooser tool and start having fun.  Explore Charts Need help choosing?Learn the three simple step to choosing the right chart.  Chart chooser tutorial    1  Know your data type    2  Define your objective    3  Choose your chart 1. Know Your Data
 TypeKnowing what kind of data
 you
 are
 dealing
 with is an
 essential phase to
 better
 extract insights from the data; since for each data type, you need
 to
 use
 the
 right mathematical techniques and visualization types.Categorical Data is labeled categorical if their
 values
 describe a
 quality,
 grade, level,
 or
 any other characteristics. Categorical data can be Nominal or
 Ordinal.Ordinal Ordered variables
 where
 the
 number of units in each variable
 is not the same. Show
 examples Examples
 of
 Ordinal DataData is ordinal if it represents an ordered
 quality
 variable, and the
 number of units in each variable is not the same. LevelsOn
 a
 happiness scale, joy (high) has more units
 of
 happiness
 than sad (low.) Times of
 dayMorning is 6 hours,
 whereas
 evening
 lasts for about 3 hours. Stages
 of education Elementary
 school
 has 8
 grades and lasts for 8 years, whereas
 college
 consists
 of 4 grades and lasts 4 years.Nominal Categorical data
 where the
 order doesn't matter. Show
 examples Examples
 of
 Nominal DataNominal data is a type of categorical data
 where
 the
 order
 doesn't matter. Gender Countries' names ColorsTip:  To identify nominal data, ask
 yourself
 the
 following
 question: Will the meaning change if I
 change
 the
 variables'
 order? If not, you have nominal data.Continuous Data is labeled continuous if
 the
 values
 are
 measured.
 Continuous
 data could
 be
 either interval or ratio.Interval  Data where
 proportion
 doesn't
 make sense, and the zero has no meaning. Show
 examples Examples
 of
 Interval DataInterval data represents values where
 proportion
 doesn't
 make sense, and the zero has no meaning. Intelligence
 quotient Temperature Time of the
 day1 pm, 2 pm, 4 am, etc Tip:  Interval
 data is often used in the social sciences.Ratio  Data where the zero
 functions
 as a point of reference, and proportions make sense. Show
 examples Examples
 of
 Ratio DataFor ratio data, the zero has a meaning as a
 point of
 reference, and proportions make sense. Distance5km,
 1,84m, etc. Weight81.5kg Days2
 or 3
 days Times1
 hour,
 34minTip:  Notice
 that ratio data does not have negative
 values,
 as
 there
 is no negative height or weight. Ratio data
 is
 popular
 in physical sciences.  Next: Define your
 objective2. Define your Objective There are many objectives to visualize a data set. Here are the main
 commonly
 used
 objectives: ComparisonComparison estimates the similarities or
 not
 between
 two or
 more elements. Line, Bar, Bubble charts, and Treemaps are
 often
 used
 to
 compare categorical data. Composition Composition shows the continuent parts of an element. Donut,
 Pie,
 Stacked
 Bar, and Stacked Column charts are often used to visualize
 composition. Relationship Relationship demonstrates how one variable affects other
 variables.
 Scatter
 and Bubble charts are often used to visualize relationship. Hierarchy The hierarchy is a system where elements are arranged or
 ranked
 one
 above
 another. Treemap, Sunburst, and Circle chart are used to
 visualize
 hierarchy. Distribution Distribution depicts the frequency of a variable through
 time or
 space.
 Scatter, Histograms, and Pyramid charts are used to
 visualize
 distribution. Flow The flow is the action of moving along in a steady and
 continuous
 stream.
 Sankey diagram and Gantt are the main charts used to
 visualize
 the
 flow.  Next: Choose your chart  Previous step3. Choose Your Chart Select the right chart from the list below according to your datatype
 and
 objectives.  Close and explore charts  Previous stepExplore ChartsGo ahead and explore the tool using your knowledge of data types and visualization objectives. Skip filters and go to result  Show Filters Filters Reset Filters   Libraries      Highcharts®      Highcharts® Stock      Highcharts® Maps   Data Types The first step is to identify your data type. It is
 essential to
 know your
 data type, so
 you choose the right mathematical techniques and chart types to extract
 insights
 from
 the data.     Categorical      Continuous   Objectives Now you know your data type; next step is to know your
 objectives.     Comparison      Composition      Distribution      Flow      Hierarchy      Relationship      Trend   Chart types Decide which specific chart will glean the best insights from
 your data set.     Area      Area range      Bar      Bell curve      Bubble      Column      Donut      Line      Map      Network Graph      Organization      Pie      Radial      Sankey Diagram      Scatter      Split Packed Bubble      Stacked Area      Stacked Bar      Stacked Column      Streamgraph      Sunburst      Treemap Result:Bar Chart RaceData type:Categorical Objectives:Trend LineData type:Continuous Objectives:Flow Animated MapData type:Categorical Objectives:Flow Area RangeData type:Continuous Objectives:Trend Density ChartData type:Continuous Objectives:Distribution StreamgraphData type:Continuous Objectives:Flow Stacked AreaData type:Continuous Objectives:Composition LineData type:Continuous Objectives:Relationship ScatterData type:Continuous Objectives:Relationship MapData type:Continuous Objectives:Comparison ScatterData type:Continuous Objectives:Comparison LineData type:Continuous Objectives:Comparison LineData type:Continuous Objectives:Trend BubbleData type:Continuous Objectives:Distribution Marker ClustersData type:Continuous Objectives:Distribution Bell curveData type:Continuous Objectives:Distribution ScatterData type:Continuous Objectives:Distribution MapData type:Continuous Objectives:Distribution MapData type:Categorical Objectives:Composition Column ChartData type:Categorical Objectives:Comparison Bar ChartData type:Categorical Objectives:Distribution MapData type:Categorical Objectives:Relationship Network GraphData type:Categorical Objectives:Relationship Treemap ChartData type:Categorical Objectives:Hierarchy Sunburst ChartData type:Categorical Objectives:Hierarchy Organization ChartData type:Categorical Objectives:Hierarchy Pie ChartData type:Categorical Objectives:Composition Donut ChartData type:Categorical Objectives:Composition Split Packed BubbleData type:Categorical Objectives:Composition Sunburst ChartData type:Categorical Objectives:Composition Treemap ChartData type:Categorical Objectives:Composition Sankey DiagramData type:Categorical Objectives:Composition Treemap ChartData type:Categorical Objectives:Comparison Sunburst ChartData type:Categorical Objectives:Comparison Radial ChartData type:Categorical Objectives:Comparison Donut ChartData type:Categorical Objectives:Comparison Pie ChartData type:Categorical Objectives:Comparison Stacked Bar ChartsData type:Categorical Objectives:Composition Stacked Column ChartsData type:Categorical Objectives:Composition Stacked Bar ChartsData type:Categorical Objectives:Comparison Stacked Column ChartsData type:Categorical Objectives:Comparison Sankey DiagramData type:Categorical Objectives:Flow Bar ChartData type:Categorical Objectives:Comparison\n\n\n\nCategory: Use CasesPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPosts in Category: Use CasesHighcharts Collaborates with Inclusio on the future of accessible content  4 minutes readLet Us Do the Work: Introducing Highcharts Custom Projects  3 minutes readDrivetrain and Highcharts: Enabling better business decisions  3 minutes readHorus and Highcharts: Democratizing Data  3 minutes readLightning map – create your own using Highcharts  9 minutes read | Post-tags: Example,	 Highcharts Maps,	 Lightning,	 Maps,	 TutorialHighcharts with Stazy  2 minutes read | Post-tags: Highcharter,	 use caseTestmo  1 minutes readAGing Integrated Database (AGID)  1 minutes readStack Overflow  1 minutes readThe Guardian  1 minutes read Posts navigation 1 2 3 Next\n\nCategory: Use CasesPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPosts in Category: Use CasesHighcharts Collaborates with Inclusio on the future of accessible content  4 minutes readLet Us Do the Work: Introducing Highcharts Custom Projects  3 minutes readDrivetrain and Highcharts: Enabling better business decisions  3 minutes readHorus and Highcharts: Democratizing Data  3 minutes readLightning map – create your own using Highcharts  9 minutes read | Post-tags: Example,	 Highcharts Maps,	 Lightning,	 Maps,	 TutorialHighcharts with Stazy  2 minutes read | Post-tags: Highcharter,	 use caseTestmo  1 minutes readAGing Integrated Database (AGID)  1 minutes readStack Overflow  1 minutes readThe Guardian  1 minutes read Posts navigation 1 2 3 Next\n\nCategory: Use CasesPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPosts in Category: Use CasesHighcharts Collaborates with Inclusio on the future of accessible content  4 minutes readLet Us Do the Work: Introducing Highcharts Custom Projects  3 minutes readDrivetrain and Highcharts: Enabling better business decisions  3 minutes readHorus and Highcharts: Democratizing Data  3 minutes readLightning map – create your own using Highcharts  9 minutes read | Post-tags: Example,	 Highcharts Maps,	 Lightning,	 Maps,	 TutorialHighcharts with Stazy  2 minutes read | Post-tags: Highcharter,	 use caseTestmo  1 minutes readAGing Integrated Database (AGID)  1 minutes readStack Overflow  1 minutes readThe Guardian  1 minutes read Posts navigation 1 2 3 Next\n\n\n\nHighcharts for AccessibilityWe offer an accessible interactive chart solution to empower people with disabilities.Explore our Accessibility portal for features, resources, tutorials, and use cases. Jump to Accessibility Features Get a licenseWeb Accessibility as Your Competitive Advantage  What are the experts saying?Industry experts share their view on why companies should focus
on accessibility and how Highcharts have become a thought leader within
accessible charts.Watch
video  Accessibility WhitepaperWill your company be part of this new
Accessibility wave, or will you be left behind?Download Whitepaper Highcharts Sonification Studio Highcharts has teamed up with the Sonification Lab at Georgia Institute of Technology to bring
you a free tool for exploring charts and sonification – using sound to visualize data. Explore the Sonification Studio Explore Highcharts
Accessibility Features Keyboard Navigation   Screen Readers   Low Vision Features   Voice Input   Tactile Export   Sonification   Cognitive Accessibility   Internationalization  Keyboard Navigation Keyboard NavigationAn essential part of the Highcharts Accessibility module is the added
keyboard navigation support. By including the Highcharts Accessibility
module with your charts, users are able to navigate and
interact with the data points, chart menu, and other chart
controls using the keyboard only. Interactive graph  Video demo    Screen Readers Screen readersOne of the most well known assistive technologies in use by
people with disabilities, a screen reader, is a program that
attempts to convey the information on the screen using
non-visual methods, such as text-to-speech. If your charts
are using the Highcharts Accessibility module, screen reader users can
navigate, explore and interact with your charts. It will also help
your
SEO, as web crawlers can read the information provided for
screen readers. Interactive graph  Video demo     Low Vision Features Low Vision FeaturesWith the Accessibility module, Highcharts comes with
built-in support for Windows High Contrast Mode. Charts can
also be viewed in full screen for additional separation of
elements. Pattern fills are supported, as well as premade
themes with higher contrast. Custom styles are also supported for all visual
elements in the chart, and custom themes can be created. By default, series
markers have different shapes to help distinguish between data points
without the use of color. Due to the responsive nature of
Highcharts, screen zooming tools are well supported. Pattern Fills  High Contrast Themes     Voice Input Voice InputNew since Highcharts version 7.1 is support for voice input
software. Similar to keyboard navigation, this is a technology
that is beneficial to users with mobility impairments but has
potential benefits for all users. Highcharts allows users of voice input software to
interact with chart controls such as the chart menu using voice commands.
Examples of compatible software include Nuance Dragon, and
Microsoft Windows Speech Recognition.   Tactile Export Tactile ExportAs long as the exporting module is included alongside the
Accessibility module, users can download an SVG version of the
chart. This SVG can be printed and turned into a tactile graphic
using embossing printers or similar technology. Tactile graphics are often used to get
an overview of chart layouts, and can be particularly helpful to explore charts with
large datasets.  Sonification SonificationWith Highcharts, you can play back the chart as sound. This can
be highly effective for conveying trends and patterns quickly
without the need for visuals. For more information, see Sonification.   Cognitive Accessibility Cognitive AccessibilityA lot of Highcharts features are developed with the goal of
making charts easier to use and understand. This translates to
better cognitive accessibility, as well as an improved user
experience for all users. Relevant features include tooltips,
chart legends, dimming surrounding content on hover, series
labels, viewing charts in full screen, and data table support.  Internationalization InternationalizationAll Highcharts generated text content can be translated to
different languages, including all text used by the
Accessibility module. To set these options, see Highcharts language
accessibility. ResourcesBusiness Case for Accessibility10 minutes readUX and Accessibility9 minutes readA brief overview of accessibility laws11 minutes readHighcharts Accessibility Compliance3 minutes readTutorialsAccessibility audio map using Highcharts   4 minutes read | Post-tags: A11y,	 Accessibility,	 Highcharts Maps,	 map,	 sonificationAccessibility Audio Boxplot   4 minutes read | Post-tags: A11y,	 Accessibility,	 audio,	 Box PlotHow to create a custom keyboard navigation chart   7 minutes read | Post-tags: Accessibility,	 keyboard navigation,	 sonificationEasy screen reader accessibility with Highcharts   4 minutes read | Post-tags: Accessibility,	 screen readerUse cases Making
charts accessible for people with visual impairmentsA collaboration between Elsevier and Highcharts sets a new
standard for chart accessibility.CollaborationsRead about how our collaborations have led to innovations in accessible data visualizations.Blackboard Ally and Highcharts Working TogetherRead about how Blackboard is leveraging Highcharts to deal with the accessibility challenge within companies, higher education, and government agencies.\n\nHighcharts for AccessibilityWe offer an accessible interactive chart solution to empower people with disabilities.Explore our Accessibility portal for features, resources, tutorials, and use cases. Jump to Accessibility Features Get a licenseWeb Accessibility as Your Competitive Advantage  What are the experts saying?Industry experts share their view on why companies should focus
on accessibility and how Highcharts have become a thought leader within
accessible charts.Watch
video  Accessibility WhitepaperWill your company be part of this new
Accessibility wave, or will you be left behind?Download Whitepaper Highcharts Sonification Studio Highcharts has teamed up with the Sonification Lab at Georgia Institute of Technology to bring
you a free tool for exploring charts and sonification – using sound to visualize data. Explore the Sonification Studio Explore Highcharts
Accessibility Features Keyboard Navigation   Screen Readers   Low Vision Features   Voice Input   Tactile Export   Sonification   Cognitive Accessibility   Internationalization  Keyboard Navigation Keyboard NavigationAn essential part of the Highcharts Accessibility module is the added
keyboard navigation support. By including the Highcharts Accessibility
module with your charts, users are able to navigate and
interact with the data points, chart menu, and other chart
controls using the keyboard only. Interactive graph  Video demo    Screen Readers Screen readersOne of the most well known assistive technologies in use by
people with disabilities, a screen reader, is a program that
attempts to convey the information on the screen using
non-visual methods, such as text-to-speech. If your charts
are using the Highcharts Accessibility module, screen reader users can
navigate, explore and interact with your charts. It will also help
your
SEO, as web crawlers can read the information provided for
screen readers. Interactive graph  Video demo     Low Vision Features Low Vision FeaturesWith the Accessibility module, Highcharts comes with
built-in support for Windows High Contrast Mode. Charts can
also be viewed in full screen for additional separation of
elements. Pattern fills are supported, as well as premade
themes with higher contrast. Custom styles are also supported for all visual
elements in the chart, and custom themes can be created. By default, series
markers have different shapes to help distinguish between data points
without the use of color. Due to the responsive nature of
Highcharts, screen zooming tools are well supported. Pattern Fills  High Contrast Themes     Voice Input Voice InputNew since Highcharts version 7.1 is support for voice input
software. Similar to keyboard navigation, this is a technology
that is beneficial to users with mobility impairments but has
potential benefits for all users. Highcharts allows users of voice input software to
interact with chart controls such as the chart menu using voice commands.
Examples of compatible software include Nuance Dragon, and
Microsoft Windows Speech Recognition.   Tactile Export Tactile ExportAs long as the exporting module is included alongside the
Accessibility module, users can download an SVG version of the
chart. This SVG can be printed and turned into a tactile graphic
using embossing printers or similar technology. Tactile graphics are often used to get
an overview of chart layouts, and can be particularly helpful to explore charts with
large datasets.  Sonification SonificationWith Highcharts, you can play back the chart as sound. This can
be highly effective for conveying trends and patterns quickly
without the need for visuals. For more information, see Sonification.   Cognitive Accessibility Cognitive AccessibilityA lot of Highcharts features are developed with the goal of
making charts easier to use and understand. This translates to
better cognitive accessibility, as well as an improved user
experience for all users. Relevant features include tooltips,
chart legends, dimming surrounding content on hover, series
labels, viewing charts in full screen, and data table support.  Internationalization InternationalizationAll Highcharts generated text content can be translated to
different languages, including all text used by the
Accessibility module. To set these options, see Highcharts language
accessibility. ResourcesBusiness Case for Accessibility10 minutes readUX and Accessibility9 minutes readA brief overview of accessibility laws11 minutes readHighcharts Accessibility Compliance3 minutes readTutorialsAccessibility audio map using Highcharts   4 minutes read | Post-tags: A11y,	 Accessibility,	 Highcharts Maps,	 map,	 sonificationAccessibility Audio Boxplot   4 minutes read | Post-tags: A11y,	 Accessibility,	 audio,	 Box PlotHow to create a custom keyboard navigation chart   7 minutes read | Post-tags: Accessibility,	 keyboard navigation,	 sonificationEasy screen reader accessibility with Highcharts   4 minutes read | Post-tags: Accessibility,	 screen readerUse cases Making
charts accessible for people with visual impairmentsA collaboration between Elsevier and Highcharts sets a new
standard for chart accessibility.CollaborationsRead about how our collaborations have led to innovations in accessible data visualizations.Blackboard Ally and Highcharts Working TogetherRead about how Blackboard is leveraging Highcharts to deal with the accessibility challenge within companies, higher education, and government agencies.\n\nHighcharts for AccessibilityWe offer an accessible interactive chart solution to empower people with disabilities.Explore our Accessibility portal for features, resources, tutorials, and use cases. Jump to Accessibility Features Get a licenseWeb Accessibility as Your Competitive Advantage  What are the experts saying?Industry experts share their view on why companies should focus
on accessibility and how Highcharts have become a thought leader within
accessible charts.Watch
video  Accessibility WhitepaperWill your company be part of this new
Accessibility wave, or will you be left behind?Download Whitepaper Highcharts Sonification Studio Highcharts has teamed up with the Sonification Lab at Georgia Institute of Technology to bring
you a free tool for exploring charts and sonification – using sound to visualize data. Explore the Sonification Studio Explore Highcharts
Accessibility Features Keyboard Navigation   Screen Readers   Low Vision Features   Voice Input   Tactile Export   Sonification   Cognitive Accessibility   Internationalization  Keyboard Navigation Keyboard NavigationAn essential part of the Highcharts Accessibility module is the added
keyboard navigation support. By including the Highcharts Accessibility
module with your charts, users are able to navigate and
interact with the data points, chart menu, and other chart
controls using the keyboard only. Interactive graph  Video demo    Screen Readers Screen readersOne of the most well known assistive technologies in use by
people with disabilities, a screen reader, is a program that
attempts to convey the information on the screen using
non-visual methods, such as text-to-speech. If your charts
are using the Highcharts Accessibility module, screen reader users can
navigate, explore and interact with your charts. It will also help
your
SEO, as web crawlers can read the information provided for
screen readers. Interactive graph  Video demo     Low Vision Features Low Vision FeaturesWith the Accessibility module, Highcharts comes with
built-in support for Windows High Contrast Mode. Charts can
also be viewed in full screen for additional separation of
elements. Pattern fills are supported, as well as premade
themes with higher contrast. Custom styles are also supported for all visual
elements in the chart, and custom themes can be created. By default, series
markers have different shapes to help distinguish between data points
without the use of color. Due to the responsive nature of
Highcharts, screen zooming tools are well supported. Pattern Fills  High Contrast Themes     Voice Input Voice InputNew since Highcharts version 7.1 is support for voice input
software. Similar to keyboard navigation, this is a technology
that is beneficial to users with mobility impairments but has
potential benefits for all users. Highcharts allows users of voice input software to
interact with chart controls such as the chart menu using voice commands.
Examples of compatible software include Nuance Dragon, and
Microsoft Windows Speech Recognition.   Tactile Export Tactile ExportAs long as the exporting module is included alongside the
Accessibility module, users can download an SVG version of the
chart. This SVG can be printed and turned into a tactile graphic
using embossing printers or similar technology. Tactile graphics are often used to get
an overview of chart layouts, and can be particularly helpful to explore charts with
large datasets.  Sonification SonificationWith Highcharts, you can play back the chart as sound. This can
be highly effective for conveying trends and patterns quickly
without the need for visuals. For more information, see Sonification.   Cognitive Accessibility Cognitive AccessibilityA lot of Highcharts features are developed with the goal of
making charts easier to use and understand. This translates to
better cognitive accessibility, as well as an improved user
experience for all users. Relevant features include tooltips,
chart legends, dimming surrounding content on hover, series
labels, viewing charts in full screen, and data table support.  Internationalization InternationalizationAll Highcharts generated text content can be translated to
different languages, including all text used by the
Accessibility module. To set these options, see Highcharts language
accessibility. ResourcesBusiness Case for Accessibility10 minutes readUX and Accessibility9 minutes readA brief overview of accessibility laws11 minutes readHighcharts Accessibility Compliance3 minutes readTutorialsAccessibility audio map using Highcharts   4 minutes read | Post-tags: A11y,	 Accessibility,	 Highcharts Maps,	 map,	 sonificationAccessibility Audio Boxplot   4 minutes read | Post-tags: A11y,	 Accessibility,	 audio,	 Box PlotHow to create a custom keyboard navigation chart   7 minutes read | Post-tags: Accessibility,	 keyboard navigation,	 sonificationEasy screen reader accessibility with Highcharts   4 minutes read | Post-tags: Accessibility,	 screen readerUse cases Making
charts accessible for people with visual impairmentsA collaboration between Elsevier and Highcharts sets a new
standard for chart accessibility.CollaborationsRead about how our collaborations have led to innovations in accessible data visualizations.Blackboard Ally and Highcharts Working TogetherRead about how Blackboard is leveraging Highcharts to deal with the accessibility challenge within companies, higher education, and government agencies.\n\n\n\nSupportIndexResolve Your Highcharts Queries HereHighcharts AdvantageSupport & CommunityA passionate community and dedicated support engineers are ready to help you.Resolve Your Highcharts Queries Here  I have a general technical question In the  Highcharts Forum you’ll find questions and answers,
 and can discuss anything with the Highcharts developers directly.
 Our support engineer monitors the forum and attends to
 unanswered questions daily on business days. You can also check out Github or Stack Overflow.     Ask Highcharts GPT Stuck? Highcharts GPT, our chatbot powered by ChatGPT, can help. Get instant Highcharts code via natural-language prompts, or have a human-like conversation with our API. Highcharts GPT also offers implementation examples for most front-end frameworks and servers-side integrations. Give it a try!  I have a specific programming question Go to Stack Overflow to get help on any specific question or issue: use the following tags highcharts, highcharts stock , highcharts maps, then write your question. We monitor these questions and answer them daily. Over 25,0000 Stack Overflow questions are tagged Highcharts. Search Stack Overflow  I want to request a feature To request a feature, please submit a request to our GitHub
issue tracker, or vote for the ones that are already
registered by adding a thumbsup reaction to them. Also, check out Highsoft Lab, our new experimental playground for pre-alpha products and features. Request a feature View popular requests  I have found a bug, and I can reproduce it Read our rules for issue reporting and report it on GitHub Issues. If you’re not sure it’s a bug, please check with us in one of the above channels first.
The highcharts.com repo is starred by 12,205 and forked by 3,724 users. Report a bug  How Highcharts supports accessibility Our mission is to offer accessible interactive charts to empower people with disabilities. All Highcharts licenses include our powerful Accessibility features that allow you to visualize data as accessible as possible. Visit our Accessibility Portal  I need support with Highcharts for Python Visit https://www.highchartspython.com/get-help to find information on community-based resources and how to contact our support team.Highcharts for Python Support  I want to hire someone to implement Highcharts Get in touch with our partner Black Label to help you with any customized Highcharts implementations. Black Label has been working with Highcharts since 2010 and has a deep knowledge of the Highcharts library both through technical support, custom adaptations and core library development.  Highcharts AdvantageYou need Highcharts Advantage to get access to premium support services. Get Highcharts Advantage   When prompted, be sure to input your LicenseID number so
 that it’s associated with your contact request. Your
 LicenseID can be found on your License Statement received
 upon purchase. New Level Up with Advantage Plus Unlock all the benefits of Advantage + with double the
 developer hours, faster priority response times, and a
 dedicated support engineer.  Reach out to our sales team  for additional information.  Highcharts Support Portal Enter your License ID   number in the subject when opening a ticket in our Support portal  Chat With Us To chat with our support team; contact us on the chat located in the bottom right corner on this page. Be sure to have your License ID   ready. Our support team is available between 10:00 and 18:00 CET (Central European Time) business days.  Email Us Enter your License ID   number in the subject when you send an email to [email protected].  Highcharts for Python Support If you have a valid Highcharts for Python license and are enrolled in Highcharts Advantage, visit https://www.highchartspython.com/get-help to engage with our Highcharts for Python support team. You may also email your question to [email protected] #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\nSupportIndexResolve Your Highcharts Queries HereHighcharts AdvantageSupport & CommunityA passionate community and dedicated support engineers are ready to help you.Resolve Your Highcharts Queries Here  I have a general technical question In the  Highcharts Forum you’ll find questions and answers,
 and can discuss anything with the Highcharts developers directly.
 Our support engineer monitors the forum and attends to
 unanswered questions daily on business days. You can also check out Github or Stack Overflow.     Ask Highcharts GPT Stuck? Highcharts GPT, our chatbot powered by ChatGPT, can help. Get instant Highcharts code via natural-language prompts, or have a human-like conversation with our API. Highcharts GPT also offers implementation examples for most front-end frameworks and servers-side integrations. Give it a try!  I have a specific programming question Go to Stack Overflow to get help on any specific question or issue: use the following tags highcharts, highcharts stock , highcharts maps, then write your question. We monitor these questions and answer them daily. Over 25,0000 Stack Overflow questions are tagged Highcharts. Search Stack Overflow  I want to request a feature To request a feature, please submit a request to our GitHub
issue tracker, or vote for the ones that are already
registered by adding a thumbsup reaction to them. Also, check out Highsoft Lab, our new experimental playground for pre-alpha products and features. Request a feature View popular requests  I have found a bug, and I can reproduce it Read our rules for issue reporting and report it on GitHub Issues. If you’re not sure it’s a bug, please check with us in one of the above channels first.
The highcharts.com repo is starred by 12,205 and forked by 3,724 users. Report a bug  How Highcharts supports accessibility Our mission is to offer accessible interactive charts to empower people with disabilities. All Highcharts licenses include our powerful Accessibility features that allow you to visualize data as accessible as possible. Visit our Accessibility Portal  I need support with Highcharts for Python Visit https://www.highchartspython.com/get-help to find information on community-based resources and how to contact our support team.Highcharts for Python Support  I want to hire someone to implement Highcharts Get in touch with our partner Black Label to help you with any customized Highcharts implementations. Black Label has been working with Highcharts since 2010 and has a deep knowledge of the Highcharts library both through technical support, custom adaptations and core library development.  Highcharts AdvantageYou need Highcharts Advantage to get access to premium support services. Get Highcharts Advantage   When prompted, be sure to input your LicenseID number so
 that it’s associated with your contact request. Your
 LicenseID can be found on your License Statement received
 upon purchase. New Level Up with Advantage Plus Unlock all the benefits of Advantage + with double the
 developer hours, faster priority response times, and a
 dedicated support engineer.  Reach out to our sales team  for additional information.  Highcharts Support Portal Enter your License ID   number in the subject when opening a ticket in our Support portal  Chat With Us To chat with our support team; contact us on the chat located in the bottom right corner on this page. Be sure to have your License ID   ready. Our support team is available between 10:00 and 18:00 CET (Central European Time) business days.  Email Us Enter your License ID   number in the subject when you send an email to [email protected].  Highcharts for Python Support If you have a valid Highcharts for Python license and are enrolled in Highcharts Advantage, visit https://www.highchartspython.com/get-help to engage with our Highcharts for Python support team. You may also email your question to [email protected] #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\nSupportIndexResolve Your Highcharts Queries HereHighcharts AdvantageSupport & CommunityA passionate community and dedicated support engineers are ready to help you.Resolve Your Highcharts Queries Here  I have a general technical question In the  Highcharts Forum you’ll find questions and answers,
 and can discuss anything with the Highcharts developers directly.
 Our support engineer monitors the forum and attends to
 unanswered questions daily on business days. You can also check out Github or Stack Overflow.     Ask Highcharts GPT Stuck? Highcharts GPT, our chatbot powered by ChatGPT, can help. Get instant Highcharts code via natural-language prompts, or have a human-like conversation with our API. Highcharts GPT also offers implementation examples for most front-end frameworks and servers-side integrations. Give it a try!  I have a specific programming question Go to Stack Overflow to get help on any specific question or issue: use the following tags highcharts, highcharts stock , highcharts maps, then write your question. We monitor these questions and answer them daily. Over 25,0000 Stack Overflow questions are tagged Highcharts. Search Stack Overflow  I want to request a feature To request a feature, please submit a request to our GitHub
issue tracker, or vote for the ones that are already
registered by adding a thumbsup reaction to them. Also, check out Highsoft Lab, our new experimental playground for pre-alpha products and features. Request a feature View popular requests  I have found a bug, and I can reproduce it Read our rules for issue reporting and report it on GitHub Issues. If you’re not sure it’s a bug, please check with us in one of the above channels first.
The highcharts.com repo is starred by 12,205 and forked by 3,724 users. Report a bug  How Highcharts supports accessibility Our mission is to offer accessible interactive charts to empower people with disabilities. All Highcharts licenses include our powerful Accessibility features that allow you to visualize data as accessible as possible. Visit our Accessibility Portal  I need support with Highcharts for Python Visit https://www.highchartspython.com/get-help to find information on community-based resources and how to contact our support team.Highcharts for Python Support  I want to hire someone to implement Highcharts Get in touch with our partner Black Label to help you with any customized Highcharts implementations. Black Label has been working with Highcharts since 2010 and has a deep knowledge of the Highcharts library both through technical support, custom adaptations and core library development.  Highcharts AdvantageYou need Highcharts Advantage to get access to premium support services. Get Highcharts Advantage   When prompted, be sure to input your LicenseID number so
 that it’s associated with your contact request. Your
 LicenseID can be found on your License Statement received
 upon purchase. New Level Up with Advantage Plus Unlock all the benefits of Advantage + with double the
 developer hours, faster priority response times, and a
 dedicated support engineer.  Reach out to our sales team  for additional information.  Highcharts Support Portal Enter your License ID   number in the subject when opening a ticket in our Support portal  Chat With Us To chat with our support team; contact us on the chat located in the bottom right corner on this page. Be sure to have your License ID   ready. Our support team is available between 10:00 and 18:00 CET (Central European Time) business days.  Email Us Enter your License ID   number in the subject when you send an email to [email protected].  Highcharts for Python Support If you have a valid Highcharts for Python license and are enrolled in Highcharts Advantage, visit https://www.highchartspython.com/get-help to engage with our Highcharts for Python support team. You may also email your question to [email protected] #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\n\n\nBlogPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsHow to choose the right chartLearn how to choose the proper chart or graph by following these simple steps: know your data type, know your objective, and choose the chart type.Recent postsExploring the future of data visualization and storytelling with Highsoft’s Chief Product Officer   3 minutes read | Post-tags: Accessibility,	 data storytelling,	 Data visualization,	 Interactive,	 Interview,	 Live Data,	 rea-time data,	 sonification,	 UXConnecting data: Morningstar and Highsoft present at Norway FinTech Festival   4 minutes read | Post-tags: Highstock,	 Morningstar,	 Stock,	 Stock MarketHighcharts v12.2   3 minutes read | Post-tags: HighchartsIoT data visualization with Highcharts: Live weather dashboard   16 minutes read | Post-tags: Dashboards,	 Data visualization,	 IoT,	 Live DataIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid LiteHighcharts at CSUN 2025: Leading the Conversation on Accessible Data Visualization   2 minutes read | Post-tags: Accessibility,	 HighchartsDepth chart: A visual guide to market liquidity and order flow   10 minutes read | Post-tags: Depth chart,	 Highcharts Stock,	 Highstock,	 Stock,	 Stock Market,	 TutorialIntroducing Highcharts for Flutter (Beta)   2 minutes read | Post-tags: Flutter Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitSee more articles\n\nBlogPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsHow to choose the right chartLearn how to choose the proper chart or graph by following these simple steps: know your data type, know your objective, and choose the chart type.Recent postsExploring the future of data visualization and storytelling with Highsoft’s Chief Product Officer   3 minutes read | Post-tags: Accessibility,	 data storytelling,	 Data visualization,	 Interactive,	 Interview,	 Live Data,	 rea-time data,	 sonification,	 UXConnecting data: Morningstar and Highsoft present at Norway FinTech Festival   4 minutes read | Post-tags: Highstock,	 Morningstar,	 Stock,	 Stock MarketHighcharts v12.2   3 minutes read | Post-tags: HighchartsIoT data visualization with Highcharts: Live weather dashboard   16 minutes read | Post-tags: Dashboards,	 Data visualization,	 IoT,	 Live DataIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid LiteHighcharts at CSUN 2025: Leading the Conversation on Accessible Data Visualization   2 minutes read | Post-tags: Accessibility,	 HighchartsDepth chart: A visual guide to market liquidity and order flow   10 minutes read | Post-tags: Depth chart,	 Highcharts Stock,	 Highstock,	 Stock,	 Stock Market,	 TutorialIntroducing Highcharts for Flutter (Beta)   2 minutes read | Post-tags: Flutter Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitSee more articles\n\nBlogPost categoriesAllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsPost categories  Choose category  AllAccessibilityAngularAnimationData JournalismData ScienceFrameworksHighcharts MapsHighcharts StockNewsPythonRReactInspirationsHow to choose the right chartLearn how to choose the proper chart or graph by following these simple steps: know your data type, know your objective, and choose the chart type.Recent postsExploring the future of data visualization and storytelling with Highsoft’s Chief Product Officer   3 minutes read | Post-tags: Accessibility,	 data storytelling,	 Data visualization,	 Interactive,	 Interview,	 Live Data,	 rea-time data,	 sonification,	 UXConnecting data: Morningstar and Highsoft present at Norway FinTech Festival   4 minutes read | Post-tags: Highstock,	 Morningstar,	 Stock,	 Stock MarketHighcharts v12.2   3 minutes read | Post-tags: HighchartsIoT data visualization with Highcharts: Live weather dashboard   16 minutes read | Post-tags: Dashboards,	 Data visualization,	 IoT,	 Live DataIntroducing Highcharts Grid Lite   6 minutes read | Post-tags: Highcharts Grid LiteHighcharts at CSUN 2025: Leading the Conversation on Accessible Data Visualization   2 minutes read | Post-tags: Accessibility,	 HighchartsDepth chart: A visual guide to market liquidity and order flow   10 minutes read | Post-tags: Depth chart,	 Highcharts Stock,	 Highstock,	 Stock,	 Stock Market,	 TutorialIntroducing Highcharts for Flutter (Beta)   2 minutes read | Post-tags: Flutter Don't miss a byteNever miss important news, tips, and tricks that will help you get the most out of your Highcharts products. We won’t spam you, sell your contact info or do anything else that would betray your trust.By signing up you confirm to have read and accept the Privacy Policy.Please enable JavaScript in your browser to complete this form.Email *SubmitSee more articles\n\n\n\nIndexOur story in HighchartsMissionValuesSustainabilityCompany InformationDiscover The TeamOur story Highcharts started as Torstein’s humble quest for a simple charting tool for
 updating his homepage with snow depth measurements from Vikjafjellet, the
 local mountain where his family keeps a cabin. Frustrated with the common
 flash plug-ins, and other proprietary solutions at the time, he decided to
 build a standards-based solution of his own, and share it with the world.
 It turns out he was doing more than scratching his itch. Since its launch
 in 2009, Highcharts has remained the secure choice for cutting-edge charting
 tools in a highly competitive data visualization market. Meet the team behind Highsoft.  Read more about our story   Highsoft, the company behind Highcharts, is located in Vik i Sogn, Norway.
 Vik is a beautiful small town, surrounded by spectacular mountains and
 fjords. Spending time enjoying outdoor activities in our spectacular
 natural environment has been an inspirational catalyst for many of our
 ideas and products. To find out more information about our hometown, Vik,
 please check out Torstein’s website. While the bulk of our growing team is located in Norway, the international
 nature of our business has lead us to recruit talent and forge partnerships
 outside of Vik. We also have offices in Bergen, Oslo, a dedicated support in
 Poland, and distributors across the globe. Our story in Highcharts Mission Since the inception of our company, our mission has been simple: Make it
 easy for everyone to visualize data on the web. Over the years, web
 technology (HTML & JavaScript) has become incorporated into everything
 from smart watches and thermostats, to mission-critical financial trading
 applications. Our customer base, and how they use our technology, has
 therefore also evolved. We meet these challenges with a relentless focus
 on delivering the highest quality products and support. We also strive to make it easier to consume data. Our charts not only
 intelligently adapt to any device and screen size, but have become the
 gold-standard for making charts accessible to visually impaired users.
 Visit our Accessibility Portal to learn more about
 Highcharts and Accessibility. ValuesCollaboration Highsoft shall be the first choice in digital data visualization by
 collaborating to bring out the best in each other.Quality Highsoft shall be the first choice in digital data visualization by
 delivering quality that we can be proud of, and continuously strive
 for improvement.Openness Highsoft shall be the first choice in digital data visualization by
 being transparent in all we do, and trusting each other and our customers. Sustainability We are extremely proud to announce our acceptance into the United Nation’s Global Compact,
 the largest voluntary initiative for Corporate Social Responsibility. Furthermore, in 2022, we received our Eco-Lighthouse certification.
 This is visible proof of our efforts towards a green and sustainable future through comprehensive and systematic work with measures in areas such as purchasing,
 energy, transport, waste, emissions and aesthetics. Being Eco-Lighthouse certified also contribute to achieving several of the UN’s sustainability goals.
 A sustainable future needs concrete action and a joint effort from both the business community, the authorities and consumers.
 This is an imperative step toward formalizing our work with CSR. Company DetailsOfficial company name: Highsoft ASCompany location: Sentrumsgata 44, 6893 VIK I SOGN, Norway.Foretaksregisteret (VAT No.): NO 996840506D-U-N-S no.: 67-134-3420Official information: BrønnøysundregistreneContact us: Contact PageCode of Conduct: Code of Conduct.Transparency Act: Due Diligence 2023.Eco-Lighthouse: Due Diligence 2023.   Discover the team\n\nIndexOur story in HighchartsMissionValuesSustainabilityCompany InformationDiscover The TeamOur story Highcharts started as Torstein’s humble quest for a simple charting tool for
 updating his homepage with snow depth measurements from Vikjafjellet, the
 local mountain where his family keeps a cabin. Frustrated with the common
 flash plug-ins, and other proprietary solutions at the time, he decided to
 build a standards-based solution of his own, and share it with the world.
 It turns out he was doing more than scratching his itch. Since its launch
 in 2009, Highcharts has remained the secure choice for cutting-edge charting
 tools in a highly competitive data visualization market. Meet the team behind Highsoft.  Read more about our story   Highsoft, the company behind Highcharts, is located in Vik i Sogn, Norway.
 Vik is a beautiful small town, surrounded by spectacular mountains and
 fjords. Spending time enjoying outdoor activities in our spectacular
 natural environment has been an inspirational catalyst for many of our
 ideas and products. To find out more information about our hometown, Vik,
 please check out Torstein’s website. While the bulk of our growing team is located in Norway, the international
 nature of our business has lead us to recruit talent and forge partnerships
 outside of Vik. We also have offices in Bergen, Oslo, a dedicated support in
 Poland, and distributors across the globe. Our story in Highcharts Mission Since the inception of our company, our mission has been simple: Make it
 easy for everyone to visualize data on the web. Over the years, web
 technology (HTML & JavaScript) has become incorporated into everything
 from smart watches and thermostats, to mission-critical financial trading
 applications. Our customer base, and how they use our technology, has
 therefore also evolved. We meet these challenges with a relentless focus
 on delivering the highest quality products and support. We also strive to make it easier to consume data. Our charts not only
 intelligently adapt to any device and screen size, but have become the
 gold-standard for making charts accessible to visually impaired users.
 Visit our Accessibility Portal to learn more about
 Highcharts and Accessibility. ValuesCollaboration Highsoft shall be the first choice in digital data visualization by
 collaborating to bring out the best in each other.Quality Highsoft shall be the first choice in digital data visualization by
 delivering quality that we can be proud of, and continuously strive
 for improvement.Openness Highsoft shall be the first choice in digital data visualization by
 being transparent in all we do, and trusting each other and our customers. Sustainability We are extremely proud to announce our acceptance into the United Nation’s Global Compact,
 the largest voluntary initiative for Corporate Social Responsibility. Furthermore, in 2022, we received our Eco-Lighthouse certification.
 This is visible proof of our efforts towards a green and sustainable future through comprehensive and systematic work with measures in areas such as purchasing,
 energy, transport, waste, emissions and aesthetics. Being Eco-Lighthouse certified also contribute to achieving several of the UN’s sustainability goals.
 A sustainable future needs concrete action and a joint effort from both the business community, the authorities and consumers.
 This is an imperative step toward formalizing our work with CSR. Company DetailsOfficial company name: Highsoft ASCompany location: Sentrumsgata 44, 6893 VIK I SOGN, Norway.Foretaksregisteret (VAT No.): NO 996840506D-U-N-S no.: 67-134-3420Official information: BrønnøysundregistreneContact us: Contact PageCode of Conduct: Code of Conduct.Transparency Act: Due Diligence 2023.Eco-Lighthouse: Due Diligence 2023.   Discover the team\n\nIndexOur story in HighchartsMissionValuesSustainabilityCompany InformationDiscover The TeamOur story Highcharts started as Torstein’s humble quest for a simple charting tool for
 updating his homepage with snow depth measurements from Vikjafjellet, the
 local mountain where his family keeps a cabin. Frustrated with the common
 flash plug-ins, and other proprietary solutions at the time, he decided to
 build a standards-based solution of his own, and share it with the world.
 It turns out he was doing more than scratching his itch. Since its launch
 in 2009, Highcharts has remained the secure choice for cutting-edge charting
 tools in a highly competitive data visualization market. Meet the team behind Highsoft.  Read more about our story   Highsoft, the company behind Highcharts, is located in Vik i Sogn, Norway.
 Vik is a beautiful small town, surrounded by spectacular mountains and
 fjords. Spending time enjoying outdoor activities in our spectacular
 natural environment has been an inspirational catalyst for many of our
 ideas and products. To find out more information about our hometown, Vik,
 please check out Torstein’s website. While the bulk of our growing team is located in Norway, the international
 nature of our business has lead us to recruit talent and forge partnerships
 outside of Vik. We also have offices in Bergen, Oslo, a dedicated support in
 Poland, and distributors across the globe. Our story in Highcharts Mission Since the inception of our company, our mission has been simple: Make it
 easy for everyone to visualize data on the web. Over the years, web
 technology (HTML & JavaScript) has become incorporated into everything
 from smart watches and thermostats, to mission-critical financial trading
 applications. Our customer base, and how they use our technology, has
 therefore also evolved. We meet these challenges with a relentless focus
 on delivering the highest quality products and support. We also strive to make it easier to consume data. Our charts not only
 intelligently adapt to any device and screen size, but have become the
 gold-standard for making charts accessible to visually impaired users.
 Visit our Accessibility Portal to learn more about
 Highcharts and Accessibility. ValuesCollaboration Highsoft shall be the first choice in digital data visualization by
 collaborating to bring out the best in each other.Quality Highsoft shall be the first choice in digital data visualization by
 delivering quality that we can be proud of, and continuously strive
 for improvement.Openness Highsoft shall be the first choice in digital data visualization by
 being transparent in all we do, and trusting each other and our customers. Sustainability We are extremely proud to announce our acceptance into the United Nation’s Global Compact,
 the largest voluntary initiative for Corporate Social Responsibility. Furthermore, in 2022, we received our Eco-Lighthouse certification.
 This is visible proof of our efforts towards a green and sustainable future through comprehensive and systematic work with measures in areas such as purchasing,
 energy, transport, waste, emissions and aesthetics. Being Eco-Lighthouse certified also contribute to achieving several of the UN’s sustainability goals.
 A sustainable future needs concrete action and a joint effort from both the business community, the authorities and consumers.
 This is an imperative step toward formalizing our work with CSR. Company DetailsOfficial company name: Highsoft ASCompany location: Sentrumsgata 44, 6893 VIK I SOGN, Norway.Foretaksregisteret (VAT No.): NO 996840506D-U-N-S no.: 67-134-3420Official information: BrønnøysundregistreneContact us: Contact PageCode of Conduct: Code of Conduct.Transparency Act: Due Diligence 2023.Eco-Lighthouse: Due Diligence 2023.   Discover the team\n\n\n\nMeet the Highsofters
                More than 50 employees work full-time on developing, marketing, and supporting our products. Our
                    company is based in Norway with locations in Oslo, Bergen and headquartered in Vik i Sogn. We also
                    have contractors in Poland where our dedicated support team sits, Black Label.

                    Use the filter function to narrow down your search per department.
                
                    
                        
                            
                                Show all departments
                                People & Finance
                                Black Label
                                Innovation
                                Management
                                Marketing
                                Sales
                                Tech
                            
                        
                    
                
            
        

               
            
                
                    
                    
                         Atle Sivertsen
                        Chief Executive Officer
                    
                
            
            
                
                    
                    
                        Torstein Hønsi
                        Chief Product Officer
                    
                
            
            
                
                    
                    
                        Øystein Moseng
                        Chief Product Officer
                        Head of Accessibility
                    
                
            
            
                
                    
                    
                        Sarah Elizabeth Miller
                        Chief Sales Officer
                    
                
            
            
                
                    
                    
                        Jørgen Tistel
                        Chief Technical Officer
                    
                
            
            
                
                    
                    
                        Anne Jorunn Fjærestad
                        Chief Financial Officer
                        Chief Human Resource Officer
                    
                
            
            
                
                    
                    
                        Lars-Ferdinand Berntsen
                        Chief Marketing Officer
                    
                
            
            
                
                    
                    
                        Christer Vasseng
                        Chief R&D Officer
                    
                
            
            
                
                    
                    
                        Henrik Holmberg
                        Head of Business Development
                    
                
            
            
                
                    
                    
                        Roger Ulvestad
                        Innovation Lead
                    
                
            
            
                
                    
                    
                        Bengt William Abelsen-Øhlen
                        Sales Coordinator
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Elisabeth Fjøsne Ese
                        Senior Key Account Manager
                    
                
            
            
                
                    
                    
                        Gjertrud Fretheim
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Guro Myrkaskog
                        Senior Account Manager
                        Deputy
                    
                
            
            
                
                    
                    
                        Helga Brudevoll
                        Account Manager
                    
                
            
            
                
                    
                    
                        Joakim Rudolfsen
                        Key Account Manager
                    
                
            

            
                
                    
                    
                        Maria Flåten Molland
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sara Solberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sigrid Teigen Kvåle
                        Account Manager
                    
                
            
            
                
                    
                    
                        Silje Tverberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Nikita Myklebust
                        Account Manager
                    
                
            



            
                
                    
                    
                        Sindre Jensen
                        Account Manager
                    
                
            
            
                

                    
                        Babar Shah
                        Account Manager
                    
                
            

            
                
                    
                    
                        Yanyi Cao
                        Account Specialist Asia
                    
                
            
            
                
                    
                    
                        Mustapha Mekhatria
                        Senior Developer Relations Lead
                    
                
            
            
                
                    
                    
                        Anaïs George-Molland
                        E-Commerce Manager
                    
                
            
            
                
                    
                    
                        Bengisu Ülker
                        Digital Marketing Manager
                    
                
            
            
                
                    
                    
                        Lars Helge Boge
                        Customer Advocate
                        Community Advocate
                    
                
            
            
                
                    
                    
                        Håvard Gundersen
                        Head of CRM
                    
                
            
            
                
                    
                    
                        James Martin Fan Haugen
                        Business Analyst
                    
                
            
            
                
                    
                    
                        Julia Gómez Vangsnes
                        HR Consultant
                    
                
            
            
                
                    
                    
                        Monika Labik
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Cathrine Ulverud
                        Administrative Consultant
                    
                
            
            
                
                    
                    
                        Elida Espeland
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Alicja Julia Pankowiecka
                        Developer
                    
                
            
            
                
                    
                    
                        Askel Eirik Johansson
                        Developer
                    
                
            
            
                
                    
                    
                        Gøran Slettemark
                        Developer
                    
                
            
            
                
                    
                    
                        Ken-Håvard Lieng
                        Developer
                    
                
            
            
                
                    
                    
                        Linda Svendsen
                        Web Development Lead
                    
                
            
            
                
                    
                    
                        Marita Vindedal
                        Developer
                    
                
            
            
                
                    
                    
                        Sophie Bremer
                        Developer
                    
                
            
            
                
                    
                    
                        Roger Foss
                        Developer
                    
                
            
            
    
        
        
            Andreas Tistel
            Developer
        
    


    
        
        
            Aleksander Walle
            Developer
        
    


    
        
        
            Ronny Myhre Njaastad
            Developer
        
    


    
        
        
            Kenneth Vestergaard Knudsen
            Lead Product Designer
        
    


    
        
        
            Joachim Amundsen
            Techie
        
    


    
        
        
            Stian Totland
            Product Manager
        
    


    
        
        
            Grzegorz Iwacz
            Chief Executive Officerat Black Label
        
    


    
        
        
            Grzegorz Blachliński
            Chief Operating Officerat Black Label
        
    


    
        
        
            Rafał Sebestjański
            Highcharts Team Leadat Black Label
        
    


    
        
        
            Dawid Draguła
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominik Chudy
            Highcharts Support Engineer
        
    


    
        
        
            Hubert Kozik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Jakub Szumiński
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Justyna Sroka
            Scrum Master
        
    


    
        
        
            Jędrzej Ruta
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kacper Madej
            Product Owner of Highcharts Maps
        
    


    
        
        
            Kamil Kubik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kamil Musiałowski
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Karol Kołodziej
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Magdalena Gut
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Mateusz Bernacik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Fus
            Product Owner of Highcharts Stock
        
    


    
        
        
            Anna Wisniowska
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Andrzej Bułeczka
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Dalek
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominika
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Sebastian Bochan
            Developer
        
    

    
    


            
                
                    
                
                
                    Join the team?\n\nMeet the Highsofters
                More than 50 employees work full-time on developing, marketing, and supporting our products. Our
                    company is based in Norway with locations in Oslo, Bergen and headquartered in Vik i Sogn. We also
                    have contractors in Poland where our dedicated support team sits, Black Label.

                    Use the filter function to narrow down your search per department.
                
                    
                        
                            
                                Show all departments
                                People & Finance
                                Black Label
                                Innovation
                                Management
                                Marketing
                                Sales
                                Tech
                            
                        
                    
                
            
        

               
            
                
                    
                    
                         Atle Sivertsen
                        Chief Executive Officer
                    
                
            
            
                
                    
                    
                        Torstein Hønsi
                        Chief Product Officer
                    
                
            
            
                
                    
                    
                        Øystein Moseng
                        Chief Product Officer
                        Head of Accessibility
                    
                
            
            
                
                    
                    
                        Sarah Elizabeth Miller
                        Chief Sales Officer
                    
                
            
            
                
                    
                    
                        Jørgen Tistel
                        Chief Technical Officer
                    
                
            
            
                
                    
                    
                        Anne Jorunn Fjærestad
                        Chief Financial Officer
                        Chief Human Resource Officer
                    
                
            
            
                
                    
                    
                        Lars-Ferdinand Berntsen
                        Chief Marketing Officer
                    
                
            
            
                
                    
                    
                        Christer Vasseng
                        Chief R&D Officer
                    
                
            
            
                
                    
                    
                        Henrik Holmberg
                        Head of Business Development
                    
                
            
            
                
                    
                    
                        Roger Ulvestad
                        Innovation Lead
                    
                
            
            
                
                    
                    
                        Bengt William Abelsen-Øhlen
                        Sales Coordinator
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Elisabeth Fjøsne Ese
                        Senior Key Account Manager
                    
                
            
            
                
                    
                    
                        Gjertrud Fretheim
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Guro Myrkaskog
                        Senior Account Manager
                        Deputy
                    
                
            
            
                
                    
                    
                        Helga Brudevoll
                        Account Manager
                    
                
            
            
                
                    
                    
                        Joakim Rudolfsen
                        Key Account Manager
                    
                
            

            
                
                    
                    
                        Maria Flåten Molland
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sara Solberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sigrid Teigen Kvåle
                        Account Manager
                    
                
            
            
                
                    
                    
                        Silje Tverberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Nikita Myklebust
                        Account Manager
                    
                
            



            
                
                    
                    
                        Sindre Jensen
                        Account Manager
                    
                
            
            
                

                    
                        Babar Shah
                        Account Manager
                    
                
            

            
                
                    
                    
                        Yanyi Cao
                        Account Specialist Asia
                    
                
            
            
                
                    
                    
                        Mustapha Mekhatria
                        Senior Developer Relations Lead
                    
                
            
            
                
                    
                    
                        Anaïs George-Molland
                        E-Commerce Manager
                    
                
            
            
                
                    
                    
                        Bengisu Ülker
                        Digital Marketing Manager
                    
                
            
            
                
                    
                    
                        Lars Helge Boge
                        Customer Advocate
                        Community Advocate
                    
                
            
            
                
                    
                    
                        Håvard Gundersen
                        Head of CRM
                    
                
            
            
                
                    
                    
                        James Martin Fan Haugen
                        Business Analyst
                    
                
            
            
                
                    
                    
                        Julia Gómez Vangsnes
                        HR Consultant
                    
                
            
            
                
                    
                    
                        Monika Labik
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Cathrine Ulverud
                        Administrative Consultant
                    
                
            
            
                
                    
                    
                        Elida Espeland
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Alicja Julia Pankowiecka
                        Developer
                    
                
            
            
                
                    
                    
                        Askel Eirik Johansson
                        Developer
                    
                
            
            
                
                    
                    
                        Gøran Slettemark
                        Developer
                    
                
            
            
                
                    
                    
                        Ken-Håvard Lieng
                        Developer
                    
                
            
            
                
                    
                    
                        Linda Svendsen
                        Web Development Lead
                    
                
            
            
                
                    
                    
                        Marita Vindedal
                        Developer
                    
                
            
            
                
                    
                    
                        Sophie Bremer
                        Developer
                    
                
            
            
                
                    
                    
                        Roger Foss
                        Developer
                    
                
            
            
    
        
        
            Andreas Tistel
            Developer
        
    


    
        
        
            Aleksander Walle
            Developer
        
    


    
        
        
            Ronny Myhre Njaastad
            Developer
        
    


    
        
        
            Kenneth Vestergaard Knudsen
            Lead Product Designer
        
    


    
        
        
            Joachim Amundsen
            Techie
        
    


    
        
        
            Stian Totland
            Product Manager
        
    


    
        
        
            Grzegorz Iwacz
            Chief Executive Officerat Black Label
        
    


    
        
        
            Grzegorz Blachliński
            Chief Operating Officerat Black Label
        
    


    
        
        
            Rafał Sebestjański
            Highcharts Team Leadat Black Label
        
    


    
        
        
            Dawid Draguła
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominik Chudy
            Highcharts Support Engineer
        
    


    
        
        
            Hubert Kozik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Jakub Szumiński
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Justyna Sroka
            Scrum Master
        
    


    
        
        
            Jędrzej Ruta
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kacper Madej
            Product Owner of Highcharts Maps
        
    


    
        
        
            Kamil Kubik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kamil Musiałowski
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Karol Kołodziej
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Magdalena Gut
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Mateusz Bernacik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Fus
            Product Owner of Highcharts Stock
        
    


    
        
        
            Anna Wisniowska
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Andrzej Bułeczka
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Dalek
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominika
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Sebastian Bochan
            Developer
        
    

    
    


            
                
                    
                
                
                    Join the team?\n\nMeet the Highsofters
                More than 50 employees work full-time on developing, marketing, and supporting our products. Our
                    company is based in Norway with locations in Oslo, Bergen and headquartered in Vik i Sogn. We also
                    have contractors in Poland where our dedicated support team sits, Black Label.

                    Use the filter function to narrow down your search per department.
                
                    
                        
                            
                                Show all departments
                                People & Finance
                                Black Label
                                Innovation
                                Management
                                Marketing
                                Sales
                                Tech
                            
                        
                    
                
            
        

               
            
                
                    
                    
                         Atle Sivertsen
                        Chief Executive Officer
                    
                
            
            
                
                    
                    
                        Torstein Hønsi
                        Chief Product Officer
                    
                
            
            
                
                    
                    
                        Øystein Moseng
                        Chief Product Officer
                        Head of Accessibility
                    
                
            
            
                
                    
                    
                        Sarah Elizabeth Miller
                        Chief Sales Officer
                    
                
            
            
                
                    
                    
                        Jørgen Tistel
                        Chief Technical Officer
                    
                
            
            
                
                    
                    
                        Anne Jorunn Fjærestad
                        Chief Financial Officer
                        Chief Human Resource Officer
                    
                
            
            
                
                    
                    
                        Lars-Ferdinand Berntsen
                        Chief Marketing Officer
                    
                
            
            
                
                    
                    
                        Christer Vasseng
                        Chief R&D Officer
                    
                
            
            
                
                    
                    
                        Henrik Holmberg
                        Head of Business Development
                    
                
            
            
                
                    
                    
                        Roger Ulvestad
                        Innovation Lead
                    
                
            
            
                
                    
                    
                        Bengt William Abelsen-Øhlen
                        Sales Coordinator
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Elisabeth Fjøsne Ese
                        Senior Key Account Manager
                    
                
            
            
                
                    
                    
                        Gjertrud Fretheim
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Guro Myrkaskog
                        Senior Account Manager
                        Deputy
                    
                
            
            
                
                    
                    
                        Helga Brudevoll
                        Account Manager
                    
                
            
            
                
                    
                    
                        Joakim Rudolfsen
                        Key Account Manager
                    
                
            

            
                
                    
                    
                        Maria Flåten Molland
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sara Solberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Sigrid Teigen Kvåle
                        Account Manager
                    
                
            
            
                
                    
                    
                        Silje Tverberg
                        Key Account Manager
                    
                
            
            
                
                    
                    
                        Nikita Myklebust
                        Account Manager
                    
                
            



            
                
                    
                    
                        Sindre Jensen
                        Account Manager
                    
                
            
            
                

                    
                        Babar Shah
                        Account Manager
                    
                
            

            
                
                    
                    
                        Yanyi Cao
                        Account Specialist Asia
                    
                
            
            
                
                    
                    
                        Mustapha Mekhatria
                        Senior Developer Relations Lead
                    
                
            
            
                
                    
                    
                        Anaïs George-Molland
                        E-Commerce Manager
                    
                
            
            
                
                    
                    
                        Bengisu Ülker
                        Digital Marketing Manager
                    
                
            
            
                
                    
                    
                        Lars Helge Boge
                        Customer Advocate
                        Community Advocate
                    
                
            
            
                
                    
                    
                        Håvard Gundersen
                        Head of CRM
                    
                
            
            
                
                    
                    
                        James Martin Fan Haugen
                        Business Analyst
                    
                
            
            
                
                    
                    
                        Julia Gómez Vangsnes
                        HR Consultant
                    
                
            
            
                
                    
                    
                        Monika Labik
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Cathrine Ulverud
                        Administrative Consultant
                    
                
            
            
                
                    
                    
                        Elida Espeland
                        Business Consultant
                    
                
            
            
                
                    
                    
                        Alicja Julia Pankowiecka
                        Developer
                    
                
            
            
                
                    
                    
                        Askel Eirik Johansson
                        Developer
                    
                
            
            
                
                    
                    
                        Gøran Slettemark
                        Developer
                    
                
            
            
                
                    
                    
                        Ken-Håvard Lieng
                        Developer
                    
                
            
            
                
                    
                    
                        Linda Svendsen
                        Web Development Lead
                    
                
            
            
                
                    
                    
                        Marita Vindedal
                        Developer
                    
                
            
            
                
                    
                    
                        Sophie Bremer
                        Developer
                    
                
            
            
                
                    
                    
                        Roger Foss
                        Developer
                    
                
            
            
    
        
        
            Andreas Tistel
            Developer
        
    


    
        
        
            Aleksander Walle
            Developer
        
    


    
        
        
            Ronny Myhre Njaastad
            Developer
        
    


    
        
        
            Kenneth Vestergaard Knudsen
            Lead Product Designer
        
    


    
        
        
            Joachim Amundsen
            Techie
        
    


    
        
        
            Stian Totland
            Product Manager
        
    


    
        
        
            Grzegorz Iwacz
            Chief Executive Officerat Black Label
        
    


    
        
        
            Grzegorz Blachliński
            Chief Operating Officerat Black Label
        
    


    
        
        
            Rafał Sebestjański
            Highcharts Team Leadat Black Label
        
    


    
        
        
            Dawid Draguła
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominik Chudy
            Highcharts Support Engineer
        
    


    
        
        
            Hubert Kozik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Jakub Szumiński
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Justyna Sroka
            Scrum Master
        
    


    
        
        
            Jędrzej Ruta
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kacper Madej
            Product Owner of Highcharts Maps
        
    


    
        
        
            Kamil Kubik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Kamil Musiałowski
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Karol Kołodziej
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Magdalena Gut
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Mateusz Bernacik
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Fus
            Product Owner of Highcharts Stock
        
    


    
        
        
            Anna Wisniowska
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Andrzej Bułeczka
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Paweł Dalek
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Dominika
            Developer and Highcharts Support Engineer
        
    


    
        
        
            Sebastian Bochan
            Developer
        
    

    
    


            
                
                    
                
                
                    Join the team?\n\n\n\nPress Feel free to download our logos which are available in SVG, PNG, and
 PDF formats. Download logo.   Access our Highcharts videos on YouTubePublications in English Highsoft won the Villsauen 2022 award 16.November 2022 Exploring Research Cooperation for Accessible Data
 Visualization: MediaFutures meets Highsoft 06.September 2022 How Highcharts won the enterprise data viz market – an
 interview with CTO Torstein Hønsi 05.September 2014 Our CEO, Grethe, met with the Norwegian Minister of Trade and
 Industry 24.February 2014 Highsoft nominated Norway’s Entrepeneur of the Year 24.May 2013 Highsoft awarded Entrepeneur of the Year 2012 for Sogn og
 Fjordane02.November 2013Publications in Norwegian Highsoft fosser frem under et lysshow av varsellamper 24.November 2022 Highsoft AS er vinner av Villsauen 2022! 17.November 2022 Bedrifta i Vik står bak eit produkt du ikkje visste at du
 brukte – no skal den nå ut til enda fleire 19.September 2022 Midt langs Sognefjorden eksisterer ein tek-gigant som du
 kanskje ikkje har høyrt om: – Nesten for godt til å vere sant 26.September 2021 Denne gjengen har skapt en av landets aller mest lønnsomme
 bedrifter – Bergens Tidende 20.November 2019 Torstein styrer en fantastisk pengemaskin fra byda Vik i Sogn –
 Finansavisen 09.September 2018 Interesse for snømåling ble starten for et IT-eventyr på
 vestlandet 19.October 2017 Han var arbeidsledig. Nå har han tjent over 100 millioner på
 hitech i Vik. Aftenoposten 28.May 2017 Norwegian Prime Minister impressed by Highsoft 22.June 2014 – Stort å bli årets gründer 03.October 2013 IT-gründer med stor suksess – Dagsrevyen (TV) 08.November 2012 No er Årets gründer 2012 kåra 01.November 2012 Stor suksess for databedrift i Vik 18.October 2012 Finalistane i Årets Gründer i Sogn og Fjordane 28.September 2012 Dataeventyret i Vik – Bergens Tidende (Video) 21.October 2011\n\nPress Feel free to download our logos which are available in SVG, PNG, and
 PDF formats. Download logo.   Access our Highcharts videos on YouTubePublications in English Highsoft won the Villsauen 2022 award 16.November 2022 Exploring Research Cooperation for Accessible Data
 Visualization: MediaFutures meets Highsoft 06.September 2022 How Highcharts won the enterprise data viz market – an
 interview with CTO Torstein Hønsi 05.September 2014 Our CEO, Grethe, met with the Norwegian Minister of Trade and
 Industry 24.February 2014 Highsoft nominated Norway’s Entrepeneur of the Year 24.May 2013 Highsoft awarded Entrepeneur of the Year 2012 for Sogn og
 Fjordane02.November 2013Publications in Norwegian Highsoft fosser frem under et lysshow av varsellamper 24.November 2022 Highsoft AS er vinner av Villsauen 2022! 17.November 2022 Bedrifta i Vik står bak eit produkt du ikkje visste at du
 brukte – no skal den nå ut til enda fleire 19.September 2022 Midt langs Sognefjorden eksisterer ein tek-gigant som du
 kanskje ikkje har høyrt om: – Nesten for godt til å vere sant 26.September 2021 Denne gjengen har skapt en av landets aller mest lønnsomme
 bedrifter – Bergens Tidende 20.November 2019 Torstein styrer en fantastisk pengemaskin fra byda Vik i Sogn –
 Finansavisen 09.September 2018 Interesse for snømåling ble starten for et IT-eventyr på
 vestlandet 19.October 2017 Han var arbeidsledig. Nå har han tjent over 100 millioner på
 hitech i Vik. Aftenoposten 28.May 2017 Norwegian Prime Minister impressed by Highsoft 22.June 2014 – Stort å bli årets gründer 03.October 2013 IT-gründer med stor suksess – Dagsrevyen (TV) 08.November 2012 No er Årets gründer 2012 kåra 01.November 2012 Stor suksess for databedrift i Vik 18.October 2012 Finalistane i Årets Gründer i Sogn og Fjordane 28.September 2012 Dataeventyret i Vik – Bergens Tidende (Video) 21.October 2011\n\nPress Feel free to download our logos which are available in SVG, PNG, and
 PDF formats. Download logo.   Access our Highcharts videos on YouTubePublications in English Highsoft won the Villsauen 2022 award 16.November 2022 Exploring Research Cooperation for Accessible Data
 Visualization: MediaFutures meets Highsoft 06.September 2022 How Highcharts won the enterprise data viz market – an
 interview with CTO Torstein Hønsi 05.September 2014 Our CEO, Grethe, met with the Norwegian Minister of Trade and
 Industry 24.February 2014 Highsoft nominated Norway’s Entrepeneur of the Year 24.May 2013 Highsoft awarded Entrepeneur of the Year 2012 for Sogn og
 Fjordane02.November 2013Publications in Norwegian Highsoft fosser frem under et lysshow av varsellamper 24.November 2022 Highsoft AS er vinner av Villsauen 2022! 17.November 2022 Bedrifta i Vik står bak eit produkt du ikkje visste at du
 brukte – no skal den nå ut til enda fleire 19.September 2022 Midt langs Sognefjorden eksisterer ein tek-gigant som du
 kanskje ikkje har høyrt om: – Nesten for godt til å vere sant 26.September 2021 Denne gjengen har skapt en av landets aller mest lønnsomme
 bedrifter – Bergens Tidende 20.November 2019 Torstein styrer en fantastisk pengemaskin fra byda Vik i Sogn –
 Finansavisen 09.September 2018 Interesse for snømåling ble starten for et IT-eventyr på
 vestlandet 19.October 2017 Han var arbeidsledig. Nå har han tjent over 100 millioner på
 hitech i Vik. Aftenoposten 28.May 2017 Norwegian Prime Minister impressed by Highsoft 22.June 2014 – Stort å bli årets gründer 03.October 2013 IT-gründer med stor suksess – Dagsrevyen (TV) 08.November 2012 No er Årets gründer 2012 kåra 01.November 2012 Stor suksess for databedrift i Vik 18.October 2012 Finalistane i Årets Gründer i Sogn og Fjordane 28.September 2012 Dataeventyret i Vik – Bergens Tidende (Video) 21.October 2011\n\n\n\nContactLooking for a way to contact us? We’d love to help you. Here’s how you can reach us…  Technical Support Our technical team is available on several platforms
 and there is a good chance you will find what you are looking for on our
 Support Page. Go to Support  Sales Inquiries Would you like to speak to a sales representative? Submit a sales inquiry form to get in touch with our Sales team.  Submit a sales inquiry  Compliance & GDPR Use this form to submit an European Union General
Protection Regulation (GDPR) request. Data Subject Request Form use this
 link to review our Privacy Policy. Submit
 a GDPR request  Company Address Visit us in Vik  Highsoft AS Sentrumsgata
 44 6893, Vik i SognNorwayVisit us in Bergen  Highsoft AS Lars Hilles gate 30 5008, BergenNorway  Other Inquiries Still can’t find an answer to your question in any of the other sections, or have general questions about our company? Please contact [email protected] and we’ll be happy to help. #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\nContactLooking for a way to contact us? We’d love to help you. Here’s how you can reach us…  Technical Support Our technical team is available on several platforms
 and there is a good chance you will find what you are looking for on our
 Support Page. Go to Support  Sales Inquiries Would you like to speak to a sales representative? Submit a sales inquiry form to get in touch with our Sales team.  Submit a sales inquiry  Compliance & GDPR Use this form to submit an European Union General
Protection Regulation (GDPR) request. Data Subject Request Form use this
 link to review our Privacy Policy. Submit
 a GDPR request  Company Address Visit us in Vik  Highsoft AS Sentrumsgata
 44 6893, Vik i SognNorwayVisit us in Bergen  Highsoft AS Lars Hilles gate 30 5008, BergenNorway  Other Inquiries Still can’t find an answer to your question in any of the other sections, or have general questions about our company? Please contact [email protected] and we’ll be happy to help. #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\nContactLooking for a way to contact us? We’d love to help you. Here’s how you can reach us…  Technical Support Our technical team is available on several platforms
 and there is a good chance you will find what you are looking for on our
 Support Page. Go to Support  Sales Inquiries Would you like to speak to a sales representative? Submit a sales inquiry form to get in touch with our Sales team.  Submit a sales inquiry  Compliance & GDPR Use this form to submit an European Union General
Protection Regulation (GDPR) request. Data Subject Request Form use this
 link to review our Privacy Policy. Submit
 a GDPR request  Company Address Visit us in Vik  Highsoft AS Sentrumsgata
 44 6893, Vik i SognNorwayVisit us in Bergen  Highsoft AS Lars Hilles gate 30 5008, BergenNorway  Other Inquiries Still can’t find an answer to your question in any of the other sections, or have general questions about our company? Please contact [email protected] and we’ll be happy to help. #Highcharts On #8: Highcharts: Makes it easy for developers to create charts and dashboards for web and mobile platforms. https://highcharts.com/chat/gpt/AndrewBolis31.December.2023speaking of #datavis, when it comes to data > info > knowledge transformation - knowing your datatype & objective is critical in the design & implementation of knowledge discovery platforms. @Highcharts has done us all a solid with this Chart Chooser @ https://highcharts.com/chartchooser/Jonathan Cachat, PhD18.Oct.2022Join Our Vibrant CommunityJoin our passionate community on Github, Stack overflow and other forums. Here you'll get
 additional assistance, platform-specific implementation advice, and plenty of
 inspiration for your next project. And last but not least, help us make Highcharts
 even
 better by sharing your ideas and feedback. Join The
 Community\n\n\n\nUsing Highcharts for a school project or personal website?  Apply for an Educational or Personal
 License.Try Highcharts Now You can download and try out all Highcharts products for free. When your’re satisfied our
 products will fit your needs, purchase a commercial license. See License Pricing    Charting Dashboards Grid Lite  NEW   Newsletter    Newsletter   close Join Our NewsletterNever miss important news, tips, and tricks that will help you get the most out of your Highcharts
 products. We won’t spam you, sell your contact info or do anything else that would betray your
 trust.By signing up you confirm to have read and accept the Privacy
 Policy.Please enable JavaScript in your browser to complete this form.Email *Submit JavaScript  TypeScript  React  Angular  Vue  Flutter  BETA   Svelte  Python   JavaScript Highcharts JavascriptAll Highcharts libraries are pure Javascript, solely based on native
 browser technologies. All core functionality runs in the browser. Need
 more info? Explore the Highcharts Javascript
 Integration page. View Highcharts on Github Use the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access
 files directly.<script src="https://code.highcharts.com/highcharts.js"></script>Install Highcharts with NPMThe official
 Highcharts NPM package comes with support
 for CommonJS and contains Highcharts, and its Stock, Maps and Gantt
 packages.
 Read more about how
 to install Highcharts with NPM.npm install highcharts --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from
 our CDN, as AMD modules, as UMD modules or as TypeScript. You can also
 create
 your own tailored build to include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples.
 Unzip the zip package and open index.html in your browser to see the
 examples.  TypeScript TypescriptHighcharts comes with TypeScript support.Highcharts in your favorite TypeScript-Editor provides auto-completion,
 integrated documentation, and type checking.Use Highcharts in your TypeScript projectInstall Highcharts from the NPM registry to use the latest TypeScript
 definitions.npm install highchartsExtend the Highcharts definitions for customizationsIf you do customization on Highcharts code, you can also extend the TypeScript
 definitions.declare module `highcharts` {
	interface Options {
		myCustomOption: Record;
	}
}  React Highcharts for ReactInstallBy using npmnpm install highcharts-react-officialBy using yarnyarn add highcharts-react-officialImportImport highcharts and the wrapperJavascript
import Highcharts from 'highcharts'
import HighchartsReact from 'highcharts-react-official'Ready to use in JSXJavaScript
<HighchartsReact
	highcharts={Highcharts}
	options={options}
/>Documentation: https://github.com/highcharts/highcharts-react  Angular Highcharts for AngularInstallBy using npmnpm install highcharts-angularMake sure the Highcharts library is added by installing itnpm install highchartsAdd HighchartsChartModule to you app.module.ts importsTypeScript
import { HighchartsChartModule } from 'highcharts-angular';

@NgModule({
	imports: [
		...
		HighchartsChartModule

ImportIn the component where you like to add the chart import the Highcharts library
 likeTypeScript
import * as Highcharts from 'highcharts';UsageIn HTML file, add highcharts-chart component and use property binding to assign
 the Highcharts library and your chartOptionsThe charts options can be stored in your component TS fileTypeScript
export class YourComponent {
	Highcharts: typeof Highcharts = Highcharts;
	chartOptions: Highcharts.Options = {
		series: [{
			data: [1, 2, 3]
		}]
	};
Documentation: https://github.com/highcharts/highcharts-angular  Python Highcharts for PythonInstallHighcharts Core for PythonTo install Highcharts Core for Python, just execute:$ pip install highcharts-coreHighcharts Stock for PythonTo install Highcharts Stock for Python, just execute:$ pip install highcharts-stockHighcharts Maps for PythonTo install Highcharts Maps for Python, just execute:$ pip install highcharts-mapsHighcharts Gantt for PythonTo install Highcharts Gantt for Python, just execute:$ pip install highcharts-ganttDocumentationDocumentation: https://highchartspython.com/documentation/ Vue Highcharts for VueInstallBy using npmnpm install highcharts-vueBy using yarnyarn add highcharts-vueAdd using a script tag<script
src="https://cdn.jsdelivr.net/npm/highcharts-vue/dist/highcharts-vue.min.js">
</script>>Live demo: https://jsfiddle.net/BlackLabel/21nb5u98/Import and registerJavascript
import HighchartsVue from 'highcharts-vue'

// Vue 2
Vue.use(HighchartsVue)

// Vue 3
createApp(App).use(HighchartsVue)UsageUse the highcharts component with your optionsJavaScript
<highcharts
	:options="chartOptions"
/>Documentation: https://github.com/highcharts/highcharts-reactThe readme on this GitHub repository contains all the essential information
 required to utilize this wrapper. Follow the provided link for further details.
 Feel free to post feature requests or report bugs on this repository. Flutter  BETA  Highcharts for Flutter (Beta)Installing Highcharts in your Flutter project is a straightforward process and typically involves just a single command. This quick guide will walk you through the basic steps of adding the Flutter package to your project.Use pub.devThis is the official Flutter way of installing additional packages.Run the following command in your project folder to install the latest Highcharts for Flutter:flutter pub add highcharts_flutterYou can also limit the process to a specific version of the Flutter integration:flutter pub add highcharts_flutter:0.1.0More information about the Highcharts for Flutter package can be found on [our pub.dev profile]Use GitHubUse the following command, to test out an experimental version of Highcharts for Flutter:dart pub add 'highcharts_flutter:{"git":"https://github.com/highcharts/highcharts_flutter.git"}'You can also add a specific version (tag):dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","tag":"v0.1.0"}}'Or use an experimental branch:dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","ref":"main"}}'   Svelte  Highcharts for SvelteInstallBy using npmnpm install @highcharts/svelteBy using yarnyarn add @highcharts/svelteUsage<script>
import Chart from ‘@highcharts/svelte’;
									  
// these options are reactive
let options = {
	series: [{
		type: ‘line’,
		data: [1, 2, 3]
	}]
}
</script>Highcharts modulesIn order to use different charts (stock, map, gantt), you can import the
 appropriate component:import { StockChart, MapChart, GanttChart } from ‘@highcharts/svelte’;
You can also import & apply other Highcharts modules:import Highcharts from ‘highcharts’;
import Exporting from ‘highcharts/modules/exporting’;
		
Exporting(Highcharts);
DocumentationFor all the possible props and options, refer to the documentation: https://github.com/highcharts/highcharts-svelte JavaScript   JavaScript Highcharts JavascriptUse the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access files
 directly.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script>Install Highcharts Dashboards with NPMThe official
 Highcharts Dashboards NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Dashboards with NPM.npm install @highcharts/dashboards --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript. You can also create your own tailored build to
 include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples. JavaScript   JavaScript Highcharts Grid LiteThese instructions are for Grid Lite, the free, basic version of Grid. Download Highcharts Dashboards for the full version.Help shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy.Use the jsDelivr CDNInstead of downloading, feel free to use the jsDelivr CDN to access files directly<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css"></link> Install from NPMThe official
 Highcharts Grid Lite NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Grid Lite with NPM.npm install @highcharts/grid-liteLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript.Download Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples.Need help getting started? Check out these resourcesHighcharts has the most significant developer community of any premium charting library.
 Our community members are eager to offer additional assistance, platform-specific implementation
 advice and inspiration when you need it.  Highcharts ForumGo to the forum  Stack OverflowGo to Stack Overflow  GithubGo to GitHub  Support PortalGo to the Support
 Portal  Highcharts GPTHighcharts GPT  Chart ChooserChart Chooser  Custom ProjectsCustom Projects\n\nUsing Highcharts for a school project or personal website?  Apply for an Educational or Personal
 License.Try Highcharts Now You can download and try out all Highcharts products for free. When your’re satisfied our
 products will fit your needs, purchase a commercial license. See License Pricing    Charting Dashboards Grid Lite  NEW   Newsletter    Newsletter   close Join Our NewsletterNever miss important news, tips, and tricks that will help you get the most out of your Highcharts
 products. We won’t spam you, sell your contact info or do anything else that would betray your
 trust.By signing up you confirm to have read and accept the Privacy
 Policy.Please enable JavaScript in your browser to complete this form.Email *Submit JavaScript  TypeScript  React  Angular  Vue  Flutter  BETA   Svelte  Python   JavaScript Highcharts JavascriptAll Highcharts libraries are pure Javascript, solely based on native
 browser technologies. All core functionality runs in the browser. Need
 more info? Explore the Highcharts Javascript
 Integration page. View Highcharts on Github Use the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access
 files directly.<script src="https://code.highcharts.com/highcharts.js"></script>Install Highcharts with NPMThe official
 Highcharts NPM package comes with support
 for CommonJS and contains Highcharts, and its Stock, Maps and Gantt
 packages.
 Read more about how
 to install Highcharts with NPM.npm install highcharts --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from
 our CDN, as AMD modules, as UMD modules or as TypeScript. You can also
 create
 your own tailored build to include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples.
 Unzip the zip package and open index.html in your browser to see the
 examples.  TypeScript TypescriptHighcharts comes with TypeScript support.Highcharts in your favorite TypeScript-Editor provides auto-completion,
 integrated documentation, and type checking.Use Highcharts in your TypeScript projectInstall Highcharts from the NPM registry to use the latest TypeScript
 definitions.npm install highchartsExtend the Highcharts definitions for customizationsIf you do customization on Highcharts code, you can also extend the TypeScript
 definitions.declare module `highcharts` {
	interface Options {
		myCustomOption: Record;
	}
}  React Highcharts for ReactInstallBy using npmnpm install highcharts-react-officialBy using yarnyarn add highcharts-react-officialImportImport highcharts and the wrapperJavascript
import Highcharts from 'highcharts'
import HighchartsReact from 'highcharts-react-official'Ready to use in JSXJavaScript
<HighchartsReact
	highcharts={Highcharts}
	options={options}
/>Documentation: https://github.com/highcharts/highcharts-react  Angular Highcharts for AngularInstallBy using npmnpm install highcharts-angularMake sure the Highcharts library is added by installing itnpm install highchartsAdd HighchartsChartModule to you app.module.ts importsTypeScript
import { HighchartsChartModule } from 'highcharts-angular';

@NgModule({
	imports: [
		...
		HighchartsChartModule

ImportIn the component where you like to add the chart import the Highcharts library
 likeTypeScript
import * as Highcharts from 'highcharts';UsageIn HTML file, add highcharts-chart component and use property binding to assign
 the Highcharts library and your chartOptionsThe charts options can be stored in your component TS fileTypeScript
export class YourComponent {
	Highcharts: typeof Highcharts = Highcharts;
	chartOptions: Highcharts.Options = {
		series: [{
			data: [1, 2, 3]
		}]
	};
Documentation: https://github.com/highcharts/highcharts-angular  Python Highcharts for PythonInstallHighcharts Core for PythonTo install Highcharts Core for Python, just execute:$ pip install highcharts-coreHighcharts Stock for PythonTo install Highcharts Stock for Python, just execute:$ pip install highcharts-stockHighcharts Maps for PythonTo install Highcharts Maps for Python, just execute:$ pip install highcharts-mapsHighcharts Gantt for PythonTo install Highcharts Gantt for Python, just execute:$ pip install highcharts-ganttDocumentationDocumentation: https://highchartspython.com/documentation/ Vue Highcharts for VueInstallBy using npmnpm install highcharts-vueBy using yarnyarn add highcharts-vueAdd using a script tag<script
src="https://cdn.jsdelivr.net/npm/highcharts-vue/dist/highcharts-vue.min.js">
</script>>Live demo: https://jsfiddle.net/BlackLabel/21nb5u98/Import and registerJavascript
import HighchartsVue from 'highcharts-vue'

// Vue 2
Vue.use(HighchartsVue)

// Vue 3
createApp(App).use(HighchartsVue)UsageUse the highcharts component with your optionsJavaScript
<highcharts
	:options="chartOptions"
/>Documentation: https://github.com/highcharts/highcharts-reactThe readme on this GitHub repository contains all the essential information
 required to utilize this wrapper. Follow the provided link for further details.
 Feel free to post feature requests or report bugs on this repository. Flutter  BETA  Highcharts for Flutter (Beta)Installing Highcharts in your Flutter project is a straightforward process and typically involves just a single command. This quick guide will walk you through the basic steps of adding the Flutter package to your project.Use pub.devThis is the official Flutter way of installing additional packages.Run the following command in your project folder to install the latest Highcharts for Flutter:flutter pub add highcharts_flutterYou can also limit the process to a specific version of the Flutter integration:flutter pub add highcharts_flutter:0.1.0More information about the Highcharts for Flutter package can be found on [our pub.dev profile]Use GitHubUse the following command, to test out an experimental version of Highcharts for Flutter:dart pub add 'highcharts_flutter:{"git":"https://github.com/highcharts/highcharts_flutter.git"}'You can also add a specific version (tag):dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","tag":"v0.1.0"}}'Or use an experimental branch:dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","ref":"main"}}'   Svelte  Highcharts for SvelteInstallBy using npmnpm install @highcharts/svelteBy using yarnyarn add @highcharts/svelteUsage<script>
import Chart from ‘@highcharts/svelte’;
									  
// these options are reactive
let options = {
	series: [{
		type: ‘line’,
		data: [1, 2, 3]
	}]
}
</script>Highcharts modulesIn order to use different charts (stock, map, gantt), you can import the
 appropriate component:import { StockChart, MapChart, GanttChart } from ‘@highcharts/svelte’;
You can also import & apply other Highcharts modules:import Highcharts from ‘highcharts’;
import Exporting from ‘highcharts/modules/exporting’;
		
Exporting(Highcharts);
DocumentationFor all the possible props and options, refer to the documentation: https://github.com/highcharts/highcharts-svelte JavaScript   JavaScript Highcharts JavascriptUse the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access files
 directly.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script>Install Highcharts Dashboards with NPMThe official
 Highcharts Dashboards NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Dashboards with NPM.npm install @highcharts/dashboards --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript. You can also create your own tailored build to
 include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples. JavaScript   JavaScript Highcharts Grid LiteThese instructions are for Grid Lite, the free, basic version of Grid. Download Highcharts Dashboards for the full version.Help shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy.Use the jsDelivr CDNInstead of downloading, feel free to use the jsDelivr CDN to access files directly<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css"></link> Install from NPMThe official
 Highcharts Grid Lite NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Grid Lite with NPM.npm install @highcharts/grid-liteLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript.Download Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples.Need help getting started? Check out these resourcesHighcharts has the most significant developer community of any premium charting library.
 Our community members are eager to offer additional assistance, platform-specific implementation
 advice and inspiration when you need it.  Highcharts ForumGo to the forum  Stack OverflowGo to Stack Overflow  GithubGo to GitHub  Support PortalGo to the Support
 Portal  Highcharts GPTHighcharts GPT  Chart ChooserChart Chooser  Custom ProjectsCustom Projects\n\nUsing Highcharts for a school project or personal website?  Apply for an Educational or Personal
 License.Try Highcharts Now You can download and try out all Highcharts products for free. When your’re satisfied our
 products will fit your needs, purchase a commercial license. See License Pricing    Charting Dashboards Grid Lite  NEW   Newsletter    Newsletter   close Join Our NewsletterNever miss important news, tips, and tricks that will help you get the most out of your Highcharts
 products. We won’t spam you, sell your contact info or do anything else that would betray your
 trust.By signing up you confirm to have read and accept the Privacy
 Policy.Please enable JavaScript in your browser to complete this form.Email *Submit JavaScript  TypeScript  React  Angular  Vue  Flutter  BETA   Svelte  Python   JavaScript Highcharts JavascriptAll Highcharts libraries are pure Javascript, solely based on native
 browser technologies. All core functionality runs in the browser. Need
 more info? Explore the Highcharts Javascript
 Integration page. View Highcharts on Github Use the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access
 files directly.<script src="https://code.highcharts.com/highcharts.js"></script>Install Highcharts with NPMThe official
 Highcharts NPM package comes with support
 for CommonJS and contains Highcharts, and its Stock, Maps and Gantt
 packages.
 Read more about how
 to install Highcharts with NPM.npm install highcharts --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from
 our CDN, as AMD modules, as UMD modules or as TypeScript. You can also
 create
 your own tailored build to include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples.
 Unzip the zip package and open index.html in your browser to see the
 examples.  TypeScript TypescriptHighcharts comes with TypeScript support.Highcharts in your favorite TypeScript-Editor provides auto-completion,
 integrated documentation, and type checking.Use Highcharts in your TypeScript projectInstall Highcharts from the NPM registry to use the latest TypeScript
 definitions.npm install highchartsExtend the Highcharts definitions for customizationsIf you do customization on Highcharts code, you can also extend the TypeScript
 definitions.declare module `highcharts` {
	interface Options {
		myCustomOption: Record;
	}
}  React Highcharts for ReactInstallBy using npmnpm install highcharts-react-officialBy using yarnyarn add highcharts-react-officialImportImport highcharts and the wrapperJavascript
import Highcharts from 'highcharts'
import HighchartsReact from 'highcharts-react-official'Ready to use in JSXJavaScript
<HighchartsReact
	highcharts={Highcharts}
	options={options}
/>Documentation: https://github.com/highcharts/highcharts-react  Angular Highcharts for AngularInstallBy using npmnpm install highcharts-angularMake sure the Highcharts library is added by installing itnpm install highchartsAdd HighchartsChartModule to you app.module.ts importsTypeScript
import { HighchartsChartModule } from 'highcharts-angular';

@NgModule({
	imports: [
		...
		HighchartsChartModule

ImportIn the component where you like to add the chart import the Highcharts library
 likeTypeScript
import * as Highcharts from 'highcharts';UsageIn HTML file, add highcharts-chart component and use property binding to assign
 the Highcharts library and your chartOptionsThe charts options can be stored in your component TS fileTypeScript
export class YourComponent {
	Highcharts: typeof Highcharts = Highcharts;
	chartOptions: Highcharts.Options = {
		series: [{
			data: [1, 2, 3]
		}]
	};
Documentation: https://github.com/highcharts/highcharts-angular  Python Highcharts for PythonInstallHighcharts Core for PythonTo install Highcharts Core for Python, just execute:$ pip install highcharts-coreHighcharts Stock for PythonTo install Highcharts Stock for Python, just execute:$ pip install highcharts-stockHighcharts Maps for PythonTo install Highcharts Maps for Python, just execute:$ pip install highcharts-mapsHighcharts Gantt for PythonTo install Highcharts Gantt for Python, just execute:$ pip install highcharts-ganttDocumentationDocumentation: https://highchartspython.com/documentation/ Vue Highcharts for VueInstallBy using npmnpm install highcharts-vueBy using yarnyarn add highcharts-vueAdd using a script tag<script
src="https://cdn.jsdelivr.net/npm/highcharts-vue/dist/highcharts-vue.min.js">
</script>>Live demo: https://jsfiddle.net/BlackLabel/21nb5u98/Import and registerJavascript
import HighchartsVue from 'highcharts-vue'

// Vue 2
Vue.use(HighchartsVue)

// Vue 3
createApp(App).use(HighchartsVue)UsageUse the highcharts component with your optionsJavaScript
<highcharts
	:options="chartOptions"
/>Documentation: https://github.com/highcharts/highcharts-reactThe readme on this GitHub repository contains all the essential information
 required to utilize this wrapper. Follow the provided link for further details.
 Feel free to post feature requests or report bugs on this repository. Flutter  BETA  Highcharts for Flutter (Beta)Installing Highcharts in your Flutter project is a straightforward process and typically involves just a single command. This quick guide will walk you through the basic steps of adding the Flutter package to your project.Use pub.devThis is the official Flutter way of installing additional packages.Run the following command in your project folder to install the latest Highcharts for Flutter:flutter pub add highcharts_flutterYou can also limit the process to a specific version of the Flutter integration:flutter pub add highcharts_flutter:0.1.0More information about the Highcharts for Flutter package can be found on [our pub.dev profile]Use GitHubUse the following command, to test out an experimental version of Highcharts for Flutter:dart pub add 'highcharts_flutter:{"git":"https://github.com/highcharts/highcharts_flutter.git"}'You can also add a specific version (tag):dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","tag":"v0.1.0"}}'Or use an experimental branch:dart pub add 'highcharts_flutter:{"git":{"url":"https://github.com/highcharts/highcharts_flutter.git","ref":"main"}}'   Svelte  Highcharts for SvelteInstallBy using npmnpm install @highcharts/svelteBy using yarnyarn add @highcharts/svelteUsage<script>
import Chart from ‘@highcharts/svelte’;
									  
// these options are reactive
let options = {
	series: [{
		type: ‘line’,
		data: [1, 2, 3]
	}]
}
</script>Highcharts modulesIn order to use different charts (stock, map, gantt), you can import the
 appropriate component:import { StockChart, MapChart, GanttChart } from ‘@highcharts/svelte’;
You can also import & apply other Highcharts modules:import Highcharts from ‘highcharts’;
import Exporting from ‘highcharts/modules/exporting’;
		
Exporting(Highcharts);
DocumentationFor all the possible props and options, refer to the documentation: https://github.com/highcharts/highcharts-svelte JavaScript   JavaScript Highcharts JavascriptUse the Highcharts CDNInstead of downloading, feel free to use the Highcharts CDN to access files
 directly.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script>Install Highcharts Dashboards with NPMThe official
 Highcharts Dashboards NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Dashboards with NPM.npm install @highcharts/dashboards --saveLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript. You can also create your own tailored build to
 include only the features you need.  InstallationDownload Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples. JavaScript   JavaScript Highcharts Grid LiteThese instructions are for Grid Lite, the free, basic version of Grid. Download Highcharts Dashboards for the full version.Help shape the future of Highcharts GridSign up to share your feedback and get updates on Highcharts Grid Lite  as we continue to improve and expand the product.Please enable JavaScript in your browser to complete this form.Email *SubmitBy signing up you confirm to have read and accept the Privacy Policy.Use the jsDelivr CDNInstead of downloading, feel free to use the jsDelivr CDN to access files directly<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css"></link> Install from NPMThe official
 Highcharts Grid Lite NPM package comes with support for CommonJS. Read more about how to
 install Highcharts Grid Lite with NPM.npm install @highcharts/grid-liteLoad as modules or create your own buildHighcharts can also be loaded as ECMAScript modules from our CDN, as AMD
 modules, as UMD
 modules or as TypeScript.Download Our LibrariesThe zip archive contains Javascript files and examples. Unzip
 the zip package and open index.html in your browser to see the examples.Need help getting started? Check out these resourcesHighcharts has the most significant developer community of any premium charting library.
 Our community members are eager to offer additional assistance, platform-specific implementation
 advice and inspiration when you need it.  Highcharts ForumGo to the forum  Stack OverflowGo to Stack Overflow  GithubGo to GitHub  Support PortalGo to the Support
 Portal  Highcharts GPTHighcharts GPT  Chart ChooserChart Chooser  Custom ProjectsCustom Projects\n\n\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API reference\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\nHighcharts DocumentationTopicsInstallationYour first chartYour first dashboardGeneral FAQsDashboards FAQsDemosFor live examples see our demo pages:Highcharts demoHighcharts Stock demoHighcharts Maps demoHighcharts Gantt demoHighcharts Dashboards demoAPIFor more specific information on Highcharts options and functions, visit our API sites which also include several live and customizable examples.Highcharts API referenceHighcharts Stock API referenceHighcharts Maps API referenceHighcharts Gantt API referenceHighcharts Dashboards API referenceEdit this pageNextSystem requirements  »TopicsDemosAPI\n\n\n\nSystem requirementsHighcharts is a standalone library, which means that it does not require any additional frameworks or plugins to work. It is solely based on native browser technologies, and all core functionality runs in the browser. As it is a front-end library, Highcharts can be used with any server that can serve static files. It needs only the core highcharts.js script to run.There are Highcharts integrations available for frameworks such as React and Vue, as well as for native iOS and Android development. See our integrations overview for more information.Browser compatibilityWe test our software on many browsers using the latest versions. Highcharts runs on the following browser versions:BrandVersions supportedFirefox2.0 +Chrome1.0 +Safari4.0 +Opera9.0 +Edge12.0 +Internet Explorer9.0 +Android Browser3.0 +Supporting IE 11 and other legacy browsersBeginning with Highcharts v11, legacy browsers must load Highcharts from the es5 folder on code.highcharts.com or in the local file download. This also works with modern browsers. A typical setup looks like this:<script src="https://code.highcharts.com/es5/highcharts.js"></script><script src="https://code.highcharts.com/es5/modules/exporting.js"></script>CopyOne of the legacy browsers requiring the files from the es5 folder is QtWeb (wkhtmltopdf's QT Webkit rendering engine is based on this browser).\n\nSystem requirementsHighcharts is a standalone library, which means that it does not require any additional frameworks or plugins to work. It is solely based on native browser technologies, and all core functionality runs in the browser. As it is a front-end library, Highcharts can be used with any server that can serve static files. It needs only the core highcharts.js script to run.There are Highcharts integrations available for frameworks such as React and Vue, as well as for native iOS and Android development. See our integrations overview for more information.Browser compatibilityWe test our software on many browsers using the latest versions. Highcharts runs on the following browser versions:BrandVersions supportedFirefox2.0 +Chrome1.0 +Safari4.0 +Opera9.0 +Edge12.0 +Internet Explorer9.0 +Android Browser3.0 +Supporting IE 11 and other legacy browsersBeginning with Highcharts v11, legacy browsers must load Highcharts from the es5 folder on code.highcharts.com or in the local file download. This also works with modern browsers. A typical setup looks like this:<script src="https://code.highcharts.com/es5/highcharts.js"></script><script src="https://code.highcharts.com/es5/modules/exporting.js"></script>CopyOne of the legacy browsers requiring the files from the es5 folder is QtWeb (wkhtmltopdf's QT Webkit rendering engine is based on this browser).Edit this pagePrevious« Highcharts Documentation NextInstallation  »Browser compatibilitySupporting IE 11 and other legacy browsers\n\nSystem requirementsHighcharts is a standalone library, which means that it does not require any additional frameworks or plugins to work. It is solely based on native browser technologies, and all core functionality runs in the browser. As it is a front-end library, Highcharts can be used with any server that can serve static files. It needs only the core highcharts.js script to run.There are Highcharts integrations available for frameworks such as React and Vue, as well as for native iOS and Android development. See our integrations overview for more information.Browser compatibilityWe test our software on many browsers using the latest versions. Highcharts runs on the following browser versions:BrandVersions supportedFirefox2.0 +Chrome1.0 +Safari4.0 +Opera9.0 +Edge12.0 +Internet Explorer9.0 +Android Browser3.0 +Supporting IE 11 and other legacy browsersBeginning with Highcharts v11, legacy browsers must load Highcharts from the es5 folder on code.highcharts.com or in the local file download. This also works with modern browsers. A typical setup looks like this:<script src="https://code.highcharts.com/es5/highcharts.js"></script><script src="https://code.highcharts.com/es5/modules/exporting.js"></script>CopyOne of the legacy browsers requiring the files from the es5 folder is QtWeb (wkhtmltopdf's QT Webkit rendering engine is based on this browser).Edit this pagePrevious« Highcharts Documentation NextInstallation  »Browser compatibilitySupporting IE 11 and other legacy browsers\n\n\n\nInstallationLoading HighchartsThis article is about installing Highcharts Core, Stock, Maps or Gantt. If you want to install Highcharts Dashboards, see Dashboards Installation.There are many ways to use Highcharts, and you can choose the one that works best with your project.1. npmHighcharts is available as a package through npm. More info can be found on installation with npm.2. Loading from our CDNInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/highcharts.js"></script>CopyThis will load Highcharts from our Content Delivery Network, where we host the files worldwide. An overview of the files available on the CDN can be found on code.highcharts.com. Specific versions can also be loaded.Here is an example of loading the latest v12 minor version:<script src="https://code.highcharts.com/12/highcharts.js"></script>Copy3. Load the files from your own serverIn the example above, the JavaScript files are loaded from our servers at code.highcharts.com. You can also serve the files yourself, from your own servers. The Highcharts files can be downloaded from highcharts.com and put on your webpage. Here is an example with Highcharts served from your own server:<script src="/js/highcharts.js"></script>Copy4. Load Highcharts as ES6 modulesHighcharts can be loaded using ECMAScript modules, both from the npm package and from our CDN. This allows for tree shaking, and can help reduce file size. For more information, see installation with ES modules.5. Load Highcharts as an AMD or CommonJS moduleHighcharts is compatible with AMD module loaders such as RequireJS, and can also be loaded as CommonJS modules, for example with Node.js. More info can be found on installation with AMD or CommonJS.Loading Highcharts Stock, Highcharts Maps and Highcharts GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both.The highstock.js, highmaps.js and highcharts-gantt.js files are included in the download package for installation on your own servers, and are also available on our CDN. They are also included in the npm package.These files can't run in the same page along with each other or with highcharts.js. If Stock, Maps, or Gantt are required in the same page as each other, or with basic Highcharts, they can be loaded as modules:<script src="/js/highcharts.js"></script><script src="/js/modules/stock.js"></script><script src="/js/modules/map.js"></script><script src="/js/modules/gantt.js"></script>CopyBuild your own packagesTo reduce file size, or combine modules together to reduce latency, you may want to create your own build of the Highcharts modules. See Creating custom Highcharts files for more information.Get startedYou are now ready to use Highcharts, see Your first chart to get started.\n\nInstallationLoading HighchartsThis article is about installing Highcharts Core, Stock, Maps or Gantt. If you want to install Highcharts Dashboards, see Dashboards Installation.There are many ways to use Highcharts, and you can choose the one that works best with your project.1. npmHighcharts is available as a package through npm. More info can be found on installation with npm.2. Loading from our CDNInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/highcharts.js"></script>CopyThis will load Highcharts from our Content Delivery Network, where we host the files worldwide. An overview of the files available on the CDN can be found on code.highcharts.com. Specific versions can also be loaded.Here is an example of loading the latest v12 minor version:<script src="https://code.highcharts.com/12/highcharts.js"></script>Copy3. Load the files from your own serverIn the example above, the JavaScript files are loaded from our servers at code.highcharts.com. You can also serve the files yourself, from your own servers. The Highcharts files can be downloaded from highcharts.com and put on your webpage. Here is an example with Highcharts served from your own server:<script src="/js/highcharts.js"></script>Copy4. Load Highcharts as ES6 modulesHighcharts can be loaded using ECMAScript modules, both from the npm package and from our CDN. This allows for tree shaking, and can help reduce file size. For more information, see installation with ES modules.5. Load Highcharts as an AMD or CommonJS moduleHighcharts is compatible with AMD module loaders such as RequireJS, and can also be loaded as CommonJS modules, for example with Node.js. More info can be found on installation with AMD or CommonJS.Loading Highcharts Stock, Highcharts Maps and Highcharts GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both.The highstock.js, highmaps.js and highcharts-gantt.js files are included in the download package for installation on your own servers, and are also available on our CDN. They are also included in the npm package.These files can't run in the same page along with each other or with highcharts.js. If Stock, Maps, or Gantt are required in the same page as each other, or with basic Highcharts, they can be loaded as modules:<script src="/js/highcharts.js"></script><script src="/js/modules/stock.js"></script><script src="/js/modules/map.js"></script><script src="/js/modules/gantt.js"></script>CopyBuild your own packagesTo reduce file size, or combine modules together to reduce latency, you may want to create your own build of the Highcharts modules. See Creating custom Highcharts files for more information.Get startedYou are now ready to use Highcharts, see Your first chart to get started.Edit this pagePrevious« System requirements NextInstallation with ES6 modules  »Loading Highcharts1. npm2. Loading from our CDN3. Load the files from your own server4. Load Highcharts as ES6 modules5. Load Highcharts as an AMD or CommonJS moduleLoading Highcharts Stock, Highcharts Maps and Highcharts GanttBuild your own packagesGet started\n\nInstallationLoading HighchartsThis article is about installing Highcharts Core, Stock, Maps or Gantt. If you want to install Highcharts Dashboards, see Dashboards Installation.There are many ways to use Highcharts, and you can choose the one that works best with your project.1. npmHighcharts is available as a package through npm. More info can be found on installation with npm.2. Loading from our CDNInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/highcharts.js"></script>CopyThis will load Highcharts from our Content Delivery Network, where we host the files worldwide. An overview of the files available on the CDN can be found on code.highcharts.com. Specific versions can also be loaded.Here is an example of loading the latest v12 minor version:<script src="https://code.highcharts.com/12/highcharts.js"></script>Copy3. Load the files from your own serverIn the example above, the JavaScript files are loaded from our servers at code.highcharts.com. You can also serve the files yourself, from your own servers. The Highcharts files can be downloaded from highcharts.com and put on your webpage. Here is an example with Highcharts served from your own server:<script src="/js/highcharts.js"></script>Copy4. Load Highcharts as ES6 modulesHighcharts can be loaded using ECMAScript modules, both from the npm package and from our CDN. This allows for tree shaking, and can help reduce file size. For more information, see installation with ES modules.5. Load Highcharts as an AMD or CommonJS moduleHighcharts is compatible with AMD module loaders such as RequireJS, and can also be loaded as CommonJS modules, for example with Node.js. More info can be found on installation with AMD or CommonJS.Loading Highcharts Stock, Highcharts Maps and Highcharts GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both.The highstock.js, highmaps.js and highcharts-gantt.js files are included in the download package for installation on your own servers, and are also available on our CDN. They are also included in the npm package.These files can't run in the same page along with each other or with highcharts.js. If Stock, Maps, or Gantt are required in the same page as each other, or with basic Highcharts, they can be loaded as modules:<script src="/js/highcharts.js"></script><script src="/js/modules/stock.js"></script><script src="/js/modules/map.js"></script><script src="/js/modules/gantt.js"></script>CopyBuild your own packagesTo reduce file size, or combine modules together to reduce latency, you may want to create your own build of the Highcharts modules. See Creating custom Highcharts files for more information.Get startedYou are now ready to use Highcharts, see Your first chart to get started.Edit this pagePrevious« System requirements NextInstallation with ES6 modules  »Loading Highcharts1. npm2. Loading from our CDN3. Load the files from your own server4. Load Highcharts as ES6 modules5. Load Highcharts as an AMD or CommonJS moduleLoading Highcharts Stock, Highcharts Maps and Highcharts GanttBuild your own packagesGet started\n\n\n\nInstallation with ES6 modulesOur product packages are available as ES6-compatible modules since
Highcharts v6.1. Core files can also be loaded directly as ES modules since
Highcharts v11.3. The latter allows you to make use of tree shaking to only
load or bundle what is needed and reduce download and package sizes. Since v12.2
the packed bundles are available as ESM.Note: If you code with TypeScript, please take a look at our
TypeScript article
for details about ESM bundling and type adjustments.Including a product package (ES6 module)For debugging and development purposes you can load core files directly in your
browser page and make use of tree shaking. Please note that this results in a
decreased download size but in an increased delay caused by the amount of
(small) files to load. This approach is therefore not recommended for
production.<script type="module">    import Chart from 'https://code.highcharts.com/es-modules/Core/Chart/Chart.js';    import LineSeries from 'https://code.highcharts.com/es-modules/Series/Line/LineSeries.js';    // Example to create a simple line chart in a div#container:    new Chart('container', { series: [{ data: [1, 2, 3]}] });</script>CopyCreating a custom bundle (ES6 module)The advantage of core files over packages is, that only the required features
are loaded. This reduces the total download size. We can create a bundle of all
files to improve the load size and load time further. Create a NodeJS project
and install Highcharts and Webpack as NPM packages.For a line chart create the JavaScript files as shown below.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';// Example to create a simple line chart in a div#container:const myChart = new Chart('container', {    series: [{        type: 'line',        data: [1, 2, 3]    }]});Copy// webpack.config.jsmodule.exports = {  entry: './mychart.js',  mode: 'production',  output: {    filename: 'mybundle.js',    // automatically placed in the subfolder 'dist'  },};CopyCreate the bundle by running node webpack -c webpack.config.js and load the
result in your web page.<div id="container"></div><script type="module" src="./dist/mybundle.js"></script>CopyFor a column chart or pie chart, the code of mychart.js looks similar.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';// Example to create a simple column chart in a div#container:const myChart = new Chart('container', { series: [{ type: 'column', data: [1, 2, 3]}] });Copy// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';// Example to create a simple pie chart in a div#container:const myChart = new Chart('container');const mySeries = new PieSeries();mySeries.init(myChart, { data: [1, 2, 3] });CopyOptional functionality via compositionsUnlike packages the core files do not provide all functionality out of the box.
You can find details about optional functionality in the source code of product
packages.Do as below to activate data labels for example.import Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';import DataLabel from 'highcharts/es-modules/Core/Series/DataLabel.js';DataLabel.compose(LineSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';import ColumnDataLabel from 'highcharts/es-modules/Series/Column/ColumnDataLabel.js';ColumnDataLabel.compose(ColumnSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';import PieDataLabel from 'highcharts/es-modules/Series/Pie/PieDataLabel.js';PieDataLabel.compose(PieSeries);CopyAdvantage of tree shakingTree shaking, by loading core files directly, helps to reduce the size of files
to download and reduces the size of your project. It is especially useful when
only a specific chart type is needed. See the following comparison for our
examples.Bundle (compiled+gzipped)Download SizeSavinghighcharts.js100,509 bytes0%LineSeries.js78,268 bytes22%ColumnSeries.js80,046 bytes20%PieSeries.js83,085 bytes17%TroubleshootingIf your project fails because of missing Highcharts code, a compose call
might be necessary after loading one of the module files. Consult the source
code of our product packages in highcharts/es-modules/masters for details.Dynamic imports from CDNHighcharts is available on our CDN as ECMAScript modules. You can import ES modules directly in modern browsers
without any bundling tools by using <script type="module"> (demo):<script type="module">    import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';    import 'https://code.highcharts.com/esm/modules/accessibility.js';    Highcharts.chart('container', {        ...    });</script>CopyThe following example shows dynamic import with lazy-loading:const loadHighchartsAndCreateChart = async () => {    const { default: Highcharts } =        await import('https://code.highcharts.com/esm/highcharts.js');    await import('https://code.highcharts.com/esm/highcharts-more.js');    await import('https://code.highcharts.com/esm/modules/exporting.js');    await import('https://code.highcharts.com/esm/modules/export-data.js');    Highcharts.chart('container', { /* options */ });};CopyView it live on jsFiddle in our async loading demo;Load Highcharts as a transpiled ES6/UMD moduleSince Highcharts supports ES6 (ESM - ECMAScript modules) and UMD (AMD, CommonJS), it can be also loaded as a module with the use of transpilers. Two common transpilers are Babel and TypeScript.
The following examples assume you have used npm to install Highcharts; see installation with npm for more details.Babelimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});CopyTypeScript + UMDimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "module": "umd",    "moduleResolution": "node"  }}CopyTypeScript + ESM from CDN// Load modules the ES6 wayimport Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/modules/exporting.js';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "esModuleInterop": true,    "baseUrl": "./",    "module": "es6",    "moduleResolution": "node",    "target": "es6",    "paths": {      "https://code.highcharts.com/es-modules/masters/*.src.js": [        "node_modules/highcharts/*.src"      ]    }  }}Copy\n\nInstallation with ES6 modulesOur product packages are available as ES6-compatible modules since
Highcharts v6.1. Core files can also be loaded directly as ES modules since
Highcharts v11.3. The latter allows you to make use of tree shaking to only
load or bundle what is needed and reduce download and package sizes. Since v12.2
the packed bundles are available as ESM.Note: If you code with TypeScript, please take a look at our
TypeScript article
for details about ESM bundling and type adjustments.Including a product package (ES6 module)For debugging and development purposes you can load core files directly in your
browser page and make use of tree shaking. Please note that this results in a
decreased download size but in an increased delay caused by the amount of
(small) files to load. This approach is therefore not recommended for
production.<script type="module">    import Chart from 'https://code.highcharts.com/es-modules/Core/Chart/Chart.js';    import LineSeries from 'https://code.highcharts.com/es-modules/Series/Line/LineSeries.js';    // Example to create a simple line chart in a div#container:    new Chart('container', { series: [{ data: [1, 2, 3]}] });</script>CopyCreating a custom bundle (ES6 module)The advantage of core files over packages is, that only the required features
are loaded. This reduces the total download size. We can create a bundle of all
files to improve the load size and load time further. Create a NodeJS project
and install Highcharts and Webpack as NPM packages.For a line chart create the JavaScript files as shown below.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';// Example to create a simple line chart in a div#container:const myChart = new Chart('container', {    series: [{        type: 'line',        data: [1, 2, 3]    }]});Copy// webpack.config.jsmodule.exports = {  entry: './mychart.js',  mode: 'production',  output: {    filename: 'mybundle.js',    // automatically placed in the subfolder 'dist'  },};CopyCreate the bundle by running node webpack -c webpack.config.js and load the
result in your web page.<div id="container"></div><script type="module" src="./dist/mybundle.js"></script>CopyFor a column chart or pie chart, the code of mychart.js looks similar.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';// Example to create a simple column chart in a div#container:const myChart = new Chart('container', { series: [{ type: 'column', data: [1, 2, 3]}] });Copy// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';// Example to create a simple pie chart in a div#container:const myChart = new Chart('container');const mySeries = new PieSeries();mySeries.init(myChart, { data: [1, 2, 3] });CopyOptional functionality via compositionsUnlike packages the core files do not provide all functionality out of the box.
You can find details about optional functionality in the source code of product
packages.Do as below to activate data labels for example.import Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';import DataLabel from 'highcharts/es-modules/Core/Series/DataLabel.js';DataLabel.compose(LineSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';import ColumnDataLabel from 'highcharts/es-modules/Series/Column/ColumnDataLabel.js';ColumnDataLabel.compose(ColumnSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';import PieDataLabel from 'highcharts/es-modules/Series/Pie/PieDataLabel.js';PieDataLabel.compose(PieSeries);CopyAdvantage of tree shakingTree shaking, by loading core files directly, helps to reduce the size of files
to download and reduces the size of your project. It is especially useful when
only a specific chart type is needed. See the following comparison for our
examples.Bundle (compiled+gzipped)Download SizeSavinghighcharts.js100,509 bytes0%LineSeries.js78,268 bytes22%ColumnSeries.js80,046 bytes20%PieSeries.js83,085 bytes17%TroubleshootingIf your project fails because of missing Highcharts code, a compose call
might be necessary after loading one of the module files. Consult the source
code of our product packages in highcharts/es-modules/masters for details.Dynamic imports from CDNHighcharts is available on our CDN as ECMAScript modules. You can import ES modules directly in modern browsers
without any bundling tools by using <script type="module"> (demo):<script type="module">    import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';    import 'https://code.highcharts.com/esm/modules/accessibility.js';    Highcharts.chart('container', {        ...    });</script>CopyThe following example shows dynamic import with lazy-loading:const loadHighchartsAndCreateChart = async () => {    const { default: Highcharts } =        await import('https://code.highcharts.com/esm/highcharts.js');    await import('https://code.highcharts.com/esm/highcharts-more.js');    await import('https://code.highcharts.com/esm/modules/exporting.js');    await import('https://code.highcharts.com/esm/modules/export-data.js');    Highcharts.chart('container', { /* options */ });};CopyView it live on jsFiddle in our async loading demo;Load Highcharts as a transpiled ES6/UMD moduleSince Highcharts supports ES6 (ESM - ECMAScript modules) and UMD (AMD, CommonJS), it can be also loaded as a module with the use of transpilers. Two common transpilers are Babel and TypeScript.
The following examples assume you have used npm to install Highcharts; see installation with npm for more details.Babelimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});CopyTypeScript + UMDimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "module": "umd",    "moduleResolution": "node"  }}CopyTypeScript + ESM from CDN// Load modules the ES6 wayimport Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/modules/exporting.js';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "esModuleInterop": true,    "baseUrl": "./",    "module": "es6",    "moduleResolution": "node",    "target": "es6",    "paths": {      "https://code.highcharts.com/es-modules/masters/*.src.js": [        "node_modules/highcharts/*.src"      ]    }  }}CopyEdit this pagePrevious« Installation NextInstalling with NPM  »Including a product package (ES6 module)Creating a custom bundle (ES6 module)Optional functionality via compositionsAdvantage of tree shakingTroubleshootingDynamic imports from CDNLoad Highcharts as a transpiled ES6/UMD moduleBabelTypeScript + UMDTypeScript + ESM from CDN\n\nInstallation with ES6 modulesOur product packages are available as ES6-compatible modules since
Highcharts v6.1. Core files can also be loaded directly as ES modules since
Highcharts v11.3. The latter allows you to make use of tree shaking to only
load or bundle what is needed and reduce download and package sizes. Since v12.2
the packed bundles are available as ESM.Note: If you code with TypeScript, please take a look at our
TypeScript article
for details about ESM bundling and type adjustments.Including a product package (ES6 module)For debugging and development purposes you can load core files directly in your
browser page and make use of tree shaking. Please note that this results in a
decreased download size but in an increased delay caused by the amount of
(small) files to load. This approach is therefore not recommended for
production.<script type="module">    import Chart from 'https://code.highcharts.com/es-modules/Core/Chart/Chart.js';    import LineSeries from 'https://code.highcharts.com/es-modules/Series/Line/LineSeries.js';    // Example to create a simple line chart in a div#container:    new Chart('container', { series: [{ data: [1, 2, 3]}] });</script>CopyCreating a custom bundle (ES6 module)The advantage of core files over packages is, that only the required features
are loaded. This reduces the total download size. We can create a bundle of all
files to improve the load size and load time further. Create a NodeJS project
and install Highcharts and Webpack as NPM packages.For a line chart create the JavaScript files as shown below.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';// Example to create a simple line chart in a div#container:const myChart = new Chart('container', {    series: [{        type: 'line',        data: [1, 2, 3]    }]});Copy// webpack.config.jsmodule.exports = {  entry: './mychart.js',  mode: 'production',  output: {    filename: 'mybundle.js',    // automatically placed in the subfolder 'dist'  },};CopyCreate the bundle by running node webpack -c webpack.config.js and load the
result in your web page.<div id="container"></div><script type="module" src="./dist/mybundle.js"></script>CopyFor a column chart or pie chart, the code of mychart.js looks similar.// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';// Example to create a simple column chart in a div#container:const myChart = new Chart('container', { series: [{ type: 'column', data: [1, 2, 3]}] });Copy// mychart.jsimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';// Example to create a simple pie chart in a div#container:const myChart = new Chart('container');const mySeries = new PieSeries();mySeries.init(myChart, { data: [1, 2, 3] });CopyOptional functionality via compositionsUnlike packages the core files do not provide all functionality out of the box.
You can find details about optional functionality in the source code of product
packages.Do as below to activate data labels for example.import Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import LineSeries from 'highcharts/es-modules/Series/Line/LineSeries.js';import DataLabel from 'highcharts/es-modules/Core/Series/DataLabel.js';DataLabel.compose(LineSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import ColumnSeries from 'highcharts/es-modules/Series/Column/ColumnSeries.js';import ColumnDataLabel from 'highcharts/es-modules/Series/Column/ColumnDataLabel.js';ColumnDataLabel.compose(ColumnSeries);Copyimport Chart from 'highcharts/es-modules/Core/Chart/Chart.js';import PieSeries from 'highcharts/es-modules/Series/Pie/PieSeries.js';import PieDataLabel from 'highcharts/es-modules/Series/Pie/PieDataLabel.js';PieDataLabel.compose(PieSeries);CopyAdvantage of tree shakingTree shaking, by loading core files directly, helps to reduce the size of files
to download and reduces the size of your project. It is especially useful when
only a specific chart type is needed. See the following comparison for our
examples.Bundle (compiled+gzipped)Download SizeSavinghighcharts.js100,509 bytes0%LineSeries.js78,268 bytes22%ColumnSeries.js80,046 bytes20%PieSeries.js83,085 bytes17%TroubleshootingIf your project fails because of missing Highcharts code, a compose call
might be necessary after loading one of the module files. Consult the source
code of our product packages in highcharts/es-modules/masters for details.Dynamic imports from CDNHighcharts is available on our CDN as ECMAScript modules. You can import ES modules directly in modern browsers
without any bundling tools by using <script type="module"> (demo):<script type="module">    import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';    import 'https://code.highcharts.com/esm/modules/accessibility.js';    Highcharts.chart('container', {        ...    });</script>CopyThe following example shows dynamic import with lazy-loading:const loadHighchartsAndCreateChart = async () => {    const { default: Highcharts } =        await import('https://code.highcharts.com/esm/highcharts.js');    await import('https://code.highcharts.com/esm/highcharts-more.js');    await import('https://code.highcharts.com/esm/modules/exporting.js');    await import('https://code.highcharts.com/esm/modules/export-data.js');    Highcharts.chart('container', { /* options */ });};CopyView it live on jsFiddle in our async loading demo;Load Highcharts as a transpiled ES6/UMD moduleSince Highcharts supports ES6 (ESM - ECMAScript modules) and UMD (AMD, CommonJS), it can be also loaded as a module with the use of transpilers. Two common transpilers are Babel and TypeScript.
The following examples assume you have used npm to install Highcharts; see installation with npm for more details.Babelimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});CopyTypeScript + UMDimport Highcharts from 'highcharts';// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// import Highcharts from 'highcharts/highstock';// Load the exporting module.import 'highcharts/modules/exporting';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "module": "umd",    "moduleResolution": "node"  }}CopyTypeScript + ESM from CDN// Load modules the ES6 wayimport Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/modules/exporting.js';// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy{  "compilerOptions": {    "allowSyntheticDefaultImports": true,    "esModuleInterop": true,    "baseUrl": "./",    "module": "es6",    "moduleResolution": "node",    "target": "es6",    "paths": {      "https://code.highcharts.com/es-modules/masters/*.src.js": [        "node_modules/highcharts/*.src"      ]    }  }}CopyEdit this pagePrevious« Installation NextInstalling with NPM  »Including a product package (ES6 module)Creating a custom bundle (ES6 module)Optional functionality via compositionsAdvantage of tree shakingTroubleshootingDynamic imports from CDNLoad Highcharts as a transpiled ES6/UMD moduleBabelTypeScript + UMDTypeScript + ESM from CDN\n\n\n\nInstalling with NPMThe official npm package contains Highcharts, including the Stock, Maps and Gantt packages, plus all modules. Start by installing Highcharts as a Node module and save it as a dependency in your package.json:npm install highcharts --saveLoad Highcharts with requirevar Highcharts = require('highcharts');// Load module after Highcharts is loadedrequire('highcharts/modules/exporting');// Create the chartHighcharts.chart('container', { /*Highcharts options*/ });CopyIf using styled mode, make sure to import the CSS files as well.For other ways to load Highcharts (for example using ECMAScript modules) please see installation.Load Highcharts Stock, Maps, or GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both. These products are all included in the npm package. The bundles are available as highcharts/highstock, highcharts/highmaps, and highcharts/highcharts-gantt.These Stock, Maps, and Gantt bundles can't run in the same page along with each other or with highcharts. If Stock, Maps, or Gantt are required in the same page as each other or with basic Highcharts, they can be loaded as modules:// Highstock bundle includes Stock and basic Highchartsvar Highcharts = require('highcharts/highstock');// Load Highcharts Maps as a module to get both Maps and Stockrequire('highcharts/modules/map');CopyAlternatively when only Maps functionality is needed, and not Stock:// Highmaps bundle still includes basic Highcharts, but not Stockvar Highcharts = require('highcharts/highmaps');CopyInstalling nightly builds of HighchartsNightly builds allow the access to the next Highcharts version prior to release and testing. Currently this is available via the highcharts-dist nightly branch on Github.
Note that we do not recommend the use of the nightly build in production environments as it may contain bugs and are not considered stable.The nightly build can be installed by running npm install --save highcharts/highcharts-dist#nightly.As this is a dependency to a GitHub branch you will not be able to update the dependency using npm update.
Updating requires that you uninstall and then reinstall by running npm uninstall highcharts && npm install --save highcharts/highcharts-dist#nightly.
Uninstalling is also necessary when moving from a nightly build to a production version of Highcharts.\n\nInstalling with NPMThe official npm package contains Highcharts, including the Stock, Maps and Gantt packages, plus all modules. Start by installing Highcharts as a Node module and save it as a dependency in your package.json:npm install highcharts --saveLoad Highcharts with requirevar Highcharts = require('highcharts');// Load module after Highcharts is loadedrequire('highcharts/modules/exporting');// Create the chartHighcharts.chart('container', { /*Highcharts options*/ });CopyIf using styled mode, make sure to import the CSS files as well.For other ways to load Highcharts (for example using ECMAScript modules) please see installation.Load Highcharts Stock, Maps, or GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both. These products are all included in the npm package. The bundles are available as highcharts/highstock, highcharts/highmaps, and highcharts/highcharts-gantt.These Stock, Maps, and Gantt bundles can't run in the same page along with each other or with highcharts. If Stock, Maps, or Gantt are required in the same page as each other or with basic Highcharts, they can be loaded as modules:// Highstock bundle includes Stock and basic Highchartsvar Highcharts = require('highcharts/highstock');// Load Highcharts Maps as a module to get both Maps and Stockrequire('highcharts/modules/map');CopyAlternatively when only Maps functionality is needed, and not Stock:// Highmaps bundle still includes basic Highcharts, but not Stockvar Highcharts = require('highcharts/highmaps');CopyInstalling nightly builds of HighchartsNightly builds allow the access to the next Highcharts version prior to release and testing. Currently this is available via the highcharts-dist nightly branch on Github.
Note that we do not recommend the use of the nightly build in production environments as it may contain bugs and are not considered stable.The nightly build can be installed by running npm install --save highcharts/highcharts-dist#nightly.As this is a dependency to a GitHub branch you will not be able to update the dependency using npm update.
Updating requires that you uninstall and then reinstall by running npm uninstall highcharts && npm install --save highcharts/highcharts-dist#nightly.
Uninstalling is also necessary when moving from a nightly build to a production version of Highcharts.Edit this pagePrevious« Installation with ES6 modules NextInstallation with AMD or CommonJS modules  »Load Highcharts with requireLoad Highcharts Stock, Maps, or GanttInstalling nightly builds of Highcharts\n\nInstalling with NPMThe official npm package contains Highcharts, including the Stock, Maps and Gantt packages, plus all modules. Start by installing Highcharts as a Node module and save it as a dependency in your package.json:npm install highcharts --saveLoad Highcharts with requirevar Highcharts = require('highcharts');// Load module after Highcharts is loadedrequire('highcharts/modules/exporting');// Create the chartHighcharts.chart('container', { /*Highcharts options*/ });CopyIf using styled mode, make sure to import the CSS files as well.For other ways to load Highcharts (for example using ECMAScript modules) please see installation.Load Highcharts Stock, Maps, or GanttHighcharts is already included in Highcharts Stock, Maps, and Gantt, so it is not necessary to load both. These products are all included in the npm package. The bundles are available as highcharts/highstock, highcharts/highmaps, and highcharts/highcharts-gantt.These Stock, Maps, and Gantt bundles can't run in the same page along with each other or with highcharts. If Stock, Maps, or Gantt are required in the same page as each other or with basic Highcharts, they can be loaded as modules:// Highstock bundle includes Stock and basic Highchartsvar Highcharts = require('highcharts/highstock');// Load Highcharts Maps as a module to get both Maps and Stockrequire('highcharts/modules/map');CopyAlternatively when only Maps functionality is needed, and not Stock:// Highmaps bundle still includes basic Highcharts, but not Stockvar Highcharts = require('highcharts/highmaps');CopyInstalling nightly builds of HighchartsNightly builds allow the access to the next Highcharts version prior to release and testing. Currently this is available via the highcharts-dist nightly branch on Github.
Note that we do not recommend the use of the nightly build in production environments as it may contain bugs and are not considered stable.The nightly build can be installed by running npm install --save highcharts/highcharts-dist#nightly.As this is a dependency to a GitHub branch you will not be able to update the dependency using npm update.
Updating requires that you uninstall and then reinstall by running npm uninstall highcharts && npm install --save highcharts/highcharts-dist#nightly.
Uninstalling is also necessary when moving from a nightly build to a production version of Highcharts.Edit this pagePrevious« Installation with ES6 modules NextInstallation with AMD or CommonJS modules  »Load Highcharts with requireLoad Highcharts Stock, Maps, or GanttInstalling nightly builds of Highcharts\n\n\n\nInstallation with AMD or CommonJS modulesAMDHighcharts is compatible with AMD module loaders (such as RequireJS). The
following example demonstrates loading Highcharts along with two modules from
our CDN using RequireJS.<html>    <head>        <script src="require.js"></script>        <script>            require.config({                packages: [{                    name: 'highcharts',                    main: 'highcharts'                }],                paths: {                    // Change this to your server if you do not wish to use our CDN.                    'highcharts': 'https://code.highcharts.com'                }            });        </script>    </head>    <body>        <div id="container"></div>        <script>            require([                'highcharts',                'highcharts/modules/exporting',                'highcharts/modules/accessibility'            ], function (Highcharts) {                // This function runs when the above files have been loaded.                // Create a test chart.                Highcharts.chart('container', {                    series: [{                        data: [1,2,3,4,5]                    }]                });            });        </script>    </body></html>CopySee it live on jsFiddle.When using AMD modules, Highcharts also allows mixing multiple versions in the
same page.CommonJSHighcharts is using an UMD module pattern, and as a result it has support for CommonJS - as used by Node.js.
The following examples presumes you are using npm to install Highcharts, see installation with npm for more details.// Load Highchartsvar Highcharts = require('highcharts');// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// var Highcharts = require('highcharts/highstock');// Load the exporting modulerequire('highcharts/modules/exporting');// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});Copy\n\nInstallation with AMD or CommonJS modulesAMDHighcharts is compatible with AMD module loaders (such as RequireJS). The
following example demonstrates loading Highcharts along with two modules from
our CDN using RequireJS.<html>    <head>        <script src="require.js"></script>        <script>            require.config({                packages: [{                    name: 'highcharts',                    main: 'highcharts'                }],                paths: {                    // Change this to your server if you do not wish to use our CDN.                    'highcharts': 'https://code.highcharts.com'                }            });        </script>    </head>    <body>        <div id="container"></div>        <script>            require([                'highcharts',                'highcharts/modules/exporting',                'highcharts/modules/accessibility'            ], function (Highcharts) {                // This function runs when the above files have been loaded.                // Create a test chart.                Highcharts.chart('container', {                    series: [{                        data: [1,2,3,4,5]                    }]                });            });        </script>    </body></html>CopySee it live on jsFiddle.When using AMD modules, Highcharts also allows mixing multiple versions in the
same page.CommonJSHighcharts is using an UMD module pattern, and as a result it has support for CommonJS - as used by Node.js.
The following examples presumes you are using npm to install Highcharts, see installation with npm for more details.// Load Highchartsvar Highcharts = require('highcharts');// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// var Highcharts = require('highcharts/highstock');// Load the exporting modulerequire('highcharts/modules/exporting');// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});CopyEdit this pagePrevious« Installing with NPM NextYour first chart  »AMDCommonJS\n\nInstallation with AMD or CommonJS modulesAMDHighcharts is compatible with AMD module loaders (such as RequireJS). The
following example demonstrates loading Highcharts along with two modules from
our CDN using RequireJS.<html>    <head>        <script src="require.js"></script>        <script>            require.config({                packages: [{                    name: 'highcharts',                    main: 'highcharts'                }],                paths: {                    // Change this to your server if you do not wish to use our CDN.                    'highcharts': 'https://code.highcharts.com'                }            });        </script>    </head>    <body>        <div id="container"></div>        <script>            require([                'highcharts',                'highcharts/modules/exporting',                'highcharts/modules/accessibility'            ], function (Highcharts) {                // This function runs when the above files have been loaded.                // Create a test chart.                Highcharts.chart('container', {                    series: [{                        data: [1,2,3,4,5]                    }]                });            });        </script>    </body></html>CopySee it live on jsFiddle.When using AMD modules, Highcharts also allows mixing multiple versions in the
same page.CommonJSHighcharts is using an UMD module pattern, and as a result it has support for CommonJS - as used by Node.js.
The following examples presumes you are using npm to install Highcharts, see installation with npm for more details.// Load Highchartsvar Highcharts = require('highcharts');// Alternatively, this is how to load Highstock. Highmaps and Highcharts Gantt are similar.// var Highcharts = require('highcharts/highstock');// Load the exporting modulerequire('highcharts/modules/exporting');// Generate the chartHighcharts.chart('container', {  // options - see https://api.highcharts.com/highcharts});CopyEdit this pagePrevious« Installing with NPM NextYour first chart  »AMDCommonJS\n\n\n\nYour first chartWith Highcharts included in your webpage you are ready to create your first chart.We will start off by creating a simple bar chart.Add a div in your webpage. Give it an id and set a specific width and height which will be the width and height of your chart.<div id="container" style="width:100%; height:400px;"></div>CopyA chart is initialized by adding the JavaScript tag, <script> </script>, anywhere in a webpage, containing the following code. The div from #1 is referenced in the constructor.document.addEventListener('DOMContentLoaded', function () {    const chart = Highcharts.chart('container', {        chart: {            type: 'bar'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            categories: ['Apples', 'Bananas', 'Oranges']        },        yAxis: {            title: {                text: 'Fruit eaten'            }        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    });});CopyIf you are inserting a Stock chart, there is a separate constructor method called Highcharts.stockChart. In these charts, typically the data is supplied in a separate JavaScript array, either taken from a separate JavaScript file or by an XHR call to the server.let chart; // globally availabledocument.addEventListener('DOMContentLoaded', function() {    chart = Highcharts.stockChart('container', {        rangeSelector: {            selected: 1        },        series: [{            name: 'USD to EUR',            data: usdtoeur // predefined JavaScript array       }]   });});CopyYou should now see this chart on your webpage:Optionally, you can apply a theme to your charts. You can achieve this using one of the following methods:Loading a preconfigured theme:A preconfigured theme consists of a set of options that are applied globally through the Highcharts.setOptions method. The download package comes with several themes. To apply one of these themes, add this directly after the highcharts.js file inclusion:<script type="text/javascript" src="/js/themes/gray.js"></script>CopyIt is also possible to style the chart with CSS using styled mode.
If styled mode is enabled, you can load one of the additional theme CSS files alongside the main Highcharts CSS file:@import url("/css/highcharts.css");@import url("/css/themes/dark-unica.css");CopyFor more details on how the options or settings in Highcharts work see How to set options.Below is a list of online examples of the examples shown in this article:Simple bar chartHighcharts Stock Example\n\nYour first chartWith Highcharts included in your webpage you are ready to create your first chart.We will start off by creating a simple bar chart.Add a div in your webpage. Give it an id and set a specific width and height which will be the width and height of your chart.<div id="container" style="width:100%; height:400px;"></div>CopyA chart is initialized by adding the JavaScript tag, <script> </script>, anywhere in a webpage, containing the following code. The div from #1 is referenced in the constructor.document.addEventListener('DOMContentLoaded', function () {    const chart = Highcharts.chart('container', {        chart: {            type: 'bar'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            categories: ['Apples', 'Bananas', 'Oranges']        },        yAxis: {            title: {                text: 'Fruit eaten'            }        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    });});CopyIf you are inserting a Stock chart, there is a separate constructor method called Highcharts.stockChart. In these charts, typically the data is supplied in a separate JavaScript array, either taken from a separate JavaScript file or by an XHR call to the server.let chart; // globally availabledocument.addEventListener('DOMContentLoaded', function() {    chart = Highcharts.stockChart('container', {        rangeSelector: {            selected: 1        },        series: [{            name: 'USD to EUR',            data: usdtoeur // predefined JavaScript array       }]   });});CopyYou should now see this chart on your webpage:Optionally, you can apply a theme to your charts. You can achieve this using one of the following methods:Loading a preconfigured theme:A preconfigured theme consists of a set of options that are applied globally through the Highcharts.setOptions method. The download package comes with several themes. To apply one of these themes, add this directly after the highcharts.js file inclusion:<script type="text/javascript" src="/js/themes/gray.js"></script>CopyIt is also possible to style the chart with CSS using styled mode.
If styled mode is enabled, you can load one of the additional theme CSS files alongside the main Highcharts CSS file:@import url("/css/highcharts.css");@import url("/css/themes/dark-unica.css");CopyFor more details on how the options or settings in Highcharts work see How to set options.Below is a list of online examples of the examples shown in this article:Simple bar chartHighcharts Stock ExampleEdit this pagePrevious« Installation with AMD or CommonJS modules NextHow to set options  »\n\nYour first chartWith Highcharts included in your webpage you are ready to create your first chart.We will start off by creating a simple bar chart.Add a div in your webpage. Give it an id and set a specific width and height which will be the width and height of your chart.<div id="container" style="width:100%; height:400px;"></div>CopyA chart is initialized by adding the JavaScript tag, <script> </script>, anywhere in a webpage, containing the following code. The div from #1 is referenced in the constructor.document.addEventListener('DOMContentLoaded', function () {    const chart = Highcharts.chart('container', {        chart: {            type: 'bar'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            categories: ['Apples', 'Bananas', 'Oranges']        },        yAxis: {            title: {                text: 'Fruit eaten'            }        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    });});CopyIf you are inserting a Stock chart, there is a separate constructor method called Highcharts.stockChart. In these charts, typically the data is supplied in a separate JavaScript array, either taken from a separate JavaScript file or by an XHR call to the server.let chart; // globally availabledocument.addEventListener('DOMContentLoaded', function() {    chart = Highcharts.stockChart('container', {        rangeSelector: {            selected: 1        },        series: [{            name: 'USD to EUR',            data: usdtoeur // predefined JavaScript array       }]   });});CopyYou should now see this chart on your webpage:Optionally, you can apply a theme to your charts. You can achieve this using one of the following methods:Loading a preconfigured theme:A preconfigured theme consists of a set of options that are applied globally through the Highcharts.setOptions method. The download package comes with several themes. To apply one of these themes, add this directly after the highcharts.js file inclusion:<script type="text/javascript" src="/js/themes/gray.js"></script>CopyIt is also possible to style the chart with CSS using styled mode.
If styled mode is enabled, you can load one of the additional theme CSS files alongside the main Highcharts CSS file:@import url("/css/highcharts.css");@import url("/css/themes/dark-unica.css");CopyFor more details on how the options or settings in Highcharts work see How to set options.Below is a list of online examples of the examples shown in this article:Simple bar chartHighcharts Stock ExampleEdit this pagePrevious« Installation with AMD or CommonJS modules NextHow to set options  »\n\n\n\nHow to set optionsHighcharts use a JavaScript object structure to define the options or settings of a chart. This article explains how the options object works and how to use it.The options objectWhen you initialize the chart using its constructor Highcharts.Chart, the options object is the second parameter you pass:const chart1 = Highcharts.chart('container', {    chart: {        type: 'bar'    },    title: {        text: 'Fruit Consumption'    },    xAxis: {        categories: ['Apples', 'Bananas', 'Oranges']    },    yAxis: {        title: {            text: 'Fruit eaten'        }    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }, {        name: 'John',        data: [5, 7, 3]    }]});CopyTo get the most out of Highcharts, it is important to understand how the options object works and how it can be altered programmatically. These are some key concepts on JavaScript objects:The Highcharts options in the examples are defined as object literals. By notating the configuration this way, we can have a clean, human readable and low space consuming config object. The following complicated code is perhaps more familiar to developers with a background from C-type languages:// Bad code:var options = new Object();options.chart = new Object();options.chart.type = 'bar';options.series = new Array();options.series[0] = new Object();options.series[0].name = 'Jane';options.series[0].data = new Array(1, 0, 4);CopyAs JavaScript object literals, we would write it like below. Note that the two options objects will produce exactly the same result.// Good code:const options = {    chart: {        type: 'bar'    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }]};CopyIn the example above the options object is created by itself and can be added to the chart by passing it to the chart constructor:const chart = new Highcharts.Chart('container', options);CopyAfter an object is created using the object literal notation, we can extend its members by the dot notation. Say we have an object like defined in the "Good code" above. The code below adds another series to it. Remember options.series is an array, so it has a push method.options.series.push({    name: 'John',    data: [3, 4, 2]})CopyAnother fact that can come in handy when working on JavaScript objects, is that the dot notation and square bracket notation are equivalent, so you can access all members by their string names. Which in practice means that options.chart.type is always the same as: options['chart']['type']Global OptionsIf you want to apply a set of options to all charts on the same page, use Highcharts.setOptions like shown below. Highcharts.setOptions({    chart: {        backgroundColor: {            linearGradient: [0, 0, 500, 500],            stops: [                [0, 'rgb(255, 255, 255)'],                [1, 'rgb(240, 240, 255)']            ]        },        borderWidth: 2,        plotBackgroundColor: 'rgba(255, 255, 255, .9)',        plotShadow: true,        plotBorderWidth: 1    }});const chart1 = Highcharts.chart('container', {    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});const chart2 = Highcharts.chart('container2', {    chart: {        type: 'column'    },    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});CopyNote: The themes supplied with Highcharts download use this function. See Themes for more information.For a full reference of the options available, see the Highcharts options reference or the Highcharts Stock options reference.\n\nHow to set optionsHighcharts use a JavaScript object structure to define the options or settings of a chart. This article explains how the options object works and how to use it.The options objectWhen you initialize the chart using its constructor Highcharts.Chart, the options object is the second parameter you pass:const chart1 = Highcharts.chart('container', {    chart: {        type: 'bar'    },    title: {        text: 'Fruit Consumption'    },    xAxis: {        categories: ['Apples', 'Bananas', 'Oranges']    },    yAxis: {        title: {            text: 'Fruit eaten'        }    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }, {        name: 'John',        data: [5, 7, 3]    }]});CopyTo get the most out of Highcharts, it is important to understand how the options object works and how it can be altered programmatically. These are some key concepts on JavaScript objects:The Highcharts options in the examples are defined as object literals. By notating the configuration this way, we can have a clean, human readable and low space consuming config object. The following complicated code is perhaps more familiar to developers with a background from C-type languages:// Bad code:var options = new Object();options.chart = new Object();options.chart.type = 'bar';options.series = new Array();options.series[0] = new Object();options.series[0].name = 'Jane';options.series[0].data = new Array(1, 0, 4);CopyAs JavaScript object literals, we would write it like below. Note that the two options objects will produce exactly the same result.// Good code:const options = {    chart: {        type: 'bar'    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }]};CopyIn the example above the options object is created by itself and can be added to the chart by passing it to the chart constructor:const chart = new Highcharts.Chart('container', options);CopyAfter an object is created using the object literal notation, we can extend its members by the dot notation. Say we have an object like defined in the "Good code" above. The code below adds another series to it. Remember options.series is an array, so it has a push method.options.series.push({    name: 'John',    data: [3, 4, 2]})CopyAnother fact that can come in handy when working on JavaScript objects, is that the dot notation and square bracket notation are equivalent, so you can access all members by their string names. Which in practice means that options.chart.type is always the same as: options['chart']['type']Global OptionsIf you want to apply a set of options to all charts on the same page, use Highcharts.setOptions like shown below. Highcharts.setOptions({    chart: {        backgroundColor: {            linearGradient: [0, 0, 500, 500],            stops: [                [0, 'rgb(255, 255, 255)'],                [1, 'rgb(240, 240, 255)']            ]        },        borderWidth: 2,        plotBackgroundColor: 'rgba(255, 255, 255, .9)',        plotShadow: true,        plotBorderWidth: 1    }});const chart1 = Highcharts.chart('container', {    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});const chart2 = Highcharts.chart('container2', {    chart: {        type: 'column'    },    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});CopyNote: The themes supplied with Highcharts download use this function. See Themes for more information.For a full reference of the options available, see the Highcharts options reference or the Highcharts Stock options reference.Edit this pagePrevious« Your first chart NextFrequently asked questions  »The options objectGlobal Options\n\nHow to set optionsHighcharts use a JavaScript object structure to define the options or settings of a chart. This article explains how the options object works and how to use it.The options objectWhen you initialize the chart using its constructor Highcharts.Chart, the options object is the second parameter you pass:const chart1 = Highcharts.chart('container', {    chart: {        type: 'bar'    },    title: {        text: 'Fruit Consumption'    },    xAxis: {        categories: ['Apples', 'Bananas', 'Oranges']    },    yAxis: {        title: {            text: 'Fruit eaten'        }    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }, {        name: 'John',        data: [5, 7, 3]    }]});CopyTo get the most out of Highcharts, it is important to understand how the options object works and how it can be altered programmatically. These are some key concepts on JavaScript objects:The Highcharts options in the examples are defined as object literals. By notating the configuration this way, we can have a clean, human readable and low space consuming config object. The following complicated code is perhaps more familiar to developers with a background from C-type languages:// Bad code:var options = new Object();options.chart = new Object();options.chart.type = 'bar';options.series = new Array();options.series[0] = new Object();options.series[0].name = 'Jane';options.series[0].data = new Array(1, 0, 4);CopyAs JavaScript object literals, we would write it like below. Note that the two options objects will produce exactly the same result.// Good code:const options = {    chart: {        type: 'bar'    },    series: [{        name: 'Jane',        data: [1, 0, 4]    }]};CopyIn the example above the options object is created by itself and can be added to the chart by passing it to the chart constructor:const chart = new Highcharts.Chart('container', options);CopyAfter an object is created using the object literal notation, we can extend its members by the dot notation. Say we have an object like defined in the "Good code" above. The code below adds another series to it. Remember options.series is an array, so it has a push method.options.series.push({    name: 'John',    data: [3, 4, 2]})CopyAnother fact that can come in handy when working on JavaScript objects, is that the dot notation and square bracket notation are equivalent, so you can access all members by their string names. Which in practice means that options.chart.type is always the same as: options['chart']['type']Global OptionsIf you want to apply a set of options to all charts on the same page, use Highcharts.setOptions like shown below. Highcharts.setOptions({    chart: {        backgroundColor: {            linearGradient: [0, 0, 500, 500],            stops: [                [0, 'rgb(255, 255, 255)'],                [1, 'rgb(240, 240, 255)']            ]        },        borderWidth: 2,        plotBackgroundColor: 'rgba(255, 255, 255, .9)',        plotShadow: true,        plotBorderWidth: 1    }});const chart1 = Highcharts.chart('container', {    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});const chart2 = Highcharts.chart('container2', {    chart: {        type: 'column'    },    xAxis: {        type: 'datetime'    },    series: [{        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],        pointStart: Date.UTC(2010, 0, 1),        pointInterval: 3600 * 1000 // one hour    }]});CopyNote: The themes supplied with Highcharts download use this function. See Themes for more information.For a full reference of the options available, see the Highcharts options reference or the Highcharts Stock options reference.Edit this pagePrevious« Your first chart NextFrequently asked questions  »The options objectGlobal Options\n\n\n\nFrequently asked questionsDoes Highcharts refer to files outside our domain?Can I use Highcharts with a ... server?Can I use features from Highcharts Stock in Highcharts?Can I add a data table to the exported chart?How can I get the best performance out of Highcharts?Can I export multiple charts to the same image or PDF?My non-English characters don't display right in my chartsCan I generate charts on the server without using a browser?How do I define irregular time data?How do I add data from a MySQL database?Your map of my country does not include a disputed areaDoes Highcharts refer to files outside our domain?For basic usage, Highcharts doesn't refer to any files other than highcharts.js/highstock.js, though there are some cases that you should be aware of.The exporting module. Since not all browsers are able to convert the chart to an image format, this operation is by default done on our web service, https://export.highcharts.com. The generated SVG is sent from your browser to the export server, and an image is sent back. If you're concerned about your data content being passed over the internet, you should consider our alternative solutions. The simplest alternative is to use our module for client-side export. Check out the features and compatibility table if it meets your requirements. If you have access to a node server, you can also set up your own export server. Certain features, including client side exporting, may require third-party dependencies. Some of these are loaded on demand from our servers, but in these cases the loading location is configurable. Details on all external dependencies, including licensing and security details, can be found in the optional dependencies documentation article.Stock Tools icons. By default the icons are loaded dynamically from https://code.highcharts.com. To change where icons should be loaded from see the iconsURL option.Can I use Highcharts with a ... server?Highcharts runs entirely on the client, and works with any web server that can deliver HTML and JavaScript content. Whether your server is PHP, Perl, ASP, ASP.NET, Node.js or whatever, Highcharts is completely ignorant of it. The HTML/JavaScript files may also be loaded from the file system, which is the case in app platforms where Highcharts is loaded in a web component inside the app.The best practice in integrating Highcharts may differ from system to system. You should follow the common practice for handing JavaScript on your specific system. Some prefer to serve a clean JSON or JavaScript file with the Highcharts setup, others to write the JavaScript setup directly to the web page. Data can be loaded in form of JSON or CSV files (see Working with data in the left menu), or printed inline in the chart setup. When working with a database powered backend, it may be cleaner to have your server system serve JSON or CSV files.For a live connection to the server, you may set up the web page to load new data over XHR or set up direct communications using WebSockets. With the new data arriving in the browser, the chart can be kept updated through various dynamic endpoints like Series.addPoint(), Point.update(), Chart.addSeries(), Chart.update() etc.Before you start to set up a complex backend, you may want to check out highcharts.com/download to see if there is a wrapper for your specific system.Can I use features from Highcharts Stock in Highcharts?Yes, most Highcharts Stock features can be applied to standard charts. From a licensing point of view, using features of the Stock package obviously requires a Highcharts Stock license.Technically Highcharts Stock is implemented as a set of plugins for Highcharts. The entire code base for Highcharts is included in the Stock package, and you can invoke a chart using Highcharts.Chart and enable certain features that are normally associated with a stock chart.Examples:Using flags in HighchartsEnabling a scrollbar in HighchartsGap size in HighchartsCan I add a data table to the exported chart?If you don't care about the export, a data table is simply added by the export-data module and a simple option, exporting.showTable. However this table doesn't support exporting to SVG or other image formats, but with a little programming on top of the Highcharts data and drawing API you can draw a table. See our jsFiddle demo for source code and live example.How can I get the best performance out of Highcharts?When working with series with a high number of data points, there are a few things to consider.First of all, consider using the Boost module.Otherwise, for line plots, it is recommended that you disable point markers, as these will add a performance overhead. See https://highcharts.com/demo/line-time-series.Disabling shadows increases performance, as three shadow elements are created for each shape that includes a shadow.If you have a Stock licence, consider using the Data Grouping module. This module packs multiple consecutive values into the same point, and results in considerably fewer points to render. This greatly
reduces the initial loading time. The following chart compares the loading times of the same data set with and without data grouping.Can I export multiple charts to the same image or PDF?Currently this isn't implemented in the core, but there are a couple of paths you can go to achieve this. Use our hack for exporting multiple charts. Basically, this code gets the SVG of all charts, modifies it and applies it to one single SVG file that is sent to the server for image conversion. We also support using our client side exporting module, if sending data to our server is a concern. See this demo for an example of this approach.Create a HTML file on your server that contains all your desired charts, and do a pure server side conversion of this. See Can I generate charts on the server without using a browser?My non-English characters don't display right in my chartsIf you're using German umlauts, Scandinavian vowels or non-European alphabets, you need to use UTF-8 encoding for your files. There are two ways of doing this.Make sure your HTML page where your charts are defined, is UTF-8. The file itself and if applicable its database content must be encoded as UTF-8. Additionally, either the content-type HTTP header or the corresponding meta tag must reflect this:<meta http-equiv="content-type" content="text/html; charset=utf-8" />CopyIf you don't have access to change your whole HTML file, you can define your charts in a separate JS file that has UTF-8 encoding. <script src="charts.js" charset="UTF-8"></script>CopyCan I generate charts on the server without using a browser?Yes. See our article, Render charts on the server.How do I define irregular time data?To add data points with irregular intervals, instead of defining pointStart and pointInterval for the series, define an X value (date) for each point. See demo of irregular time.If you want the line to be broken for missing dates, insert null values instead.How do I add data from a MySQL database?See Preprocessing data from a database.Your map of my country does not include a disputed areaWe do our best not to take sides in border conflicts, however we realize the need for maps including disputed areas. To solve this, we try to keep our default maps conforming to neutral de facto borders or conventions, while providing alternative maps that include disputed areas. For a complete list of all of our maps, visit our Map Collection.\n\nFrequently asked questionsDoes Highcharts refer to files outside our domain?Can I use Highcharts with a ... server?Can I use features from Highcharts Stock in Highcharts?Can I add a data table to the exported chart?How can I get the best performance out of Highcharts?Can I export multiple charts to the same image or PDF?My non-English characters don't display right in my chartsCan I generate charts on the server without using a browser?How do I define irregular time data?How do I add data from a MySQL database?Your map of my country does not include a disputed areaDoes Highcharts refer to files outside our domain?For basic usage, Highcharts doesn't refer to any files other than highcharts.js/highstock.js, though there are some cases that you should be aware of.The exporting module. Since not all browsers are able to convert the chart to an image format, this operation is by default done on our web service, https://export.highcharts.com. The generated SVG is sent from your browser to the export server, and an image is sent back. If you're concerned about your data content being passed over the internet, you should consider our alternative solutions. The simplest alternative is to use our module for client-side export. Check out the features and compatibility table if it meets your requirements. If you have access to a node server, you can also set up your own export server. Certain features, including client side exporting, may require third-party dependencies. Some of these are loaded on demand from our servers, but in these cases the loading location is configurable. Details on all external dependencies, including licensing and security details, can be found in the optional dependencies documentation article.Stock Tools icons. By default the icons are loaded dynamically from https://code.highcharts.com. To change where icons should be loaded from see the iconsURL option.Can I use Highcharts with a ... server?Highcharts runs entirely on the client, and works with any web server that can deliver HTML and JavaScript content. Whether your server is PHP, Perl, ASP, ASP.NET, Node.js or whatever, Highcharts is completely ignorant of it. The HTML/JavaScript files may also be loaded from the file system, which is the case in app platforms where Highcharts is loaded in a web component inside the app.The best practice in integrating Highcharts may differ from system to system. You should follow the common practice for handing JavaScript on your specific system. Some prefer to serve a clean JSON or JavaScript file with the Highcharts setup, others to write the JavaScript setup directly to the web page. Data can be loaded in form of JSON or CSV files (see Working with data in the left menu), or printed inline in the chart setup. When working with a database powered backend, it may be cleaner to have your server system serve JSON or CSV files.For a live connection to the server, you may set up the web page to load new data over XHR or set up direct communications using WebSockets. With the new data arriving in the browser, the chart can be kept updated through various dynamic endpoints like Series.addPoint(), Point.update(), Chart.addSeries(), Chart.update() etc.Before you start to set up a complex backend, you may want to check out highcharts.com/download to see if there is a wrapper for your specific system.Can I use features from Highcharts Stock in Highcharts?Yes, most Highcharts Stock features can be applied to standard charts. From a licensing point of view, using features of the Stock package obviously requires a Highcharts Stock license.Technically Highcharts Stock is implemented as a set of plugins for Highcharts. The entire code base for Highcharts is included in the Stock package, and you can invoke a chart using Highcharts.Chart and enable certain features that are normally associated with a stock chart.Examples:Using flags in HighchartsEnabling a scrollbar in HighchartsGap size in HighchartsCan I add a data table to the exported chart?If you don't care about the export, a data table is simply added by the export-data module and a simple option, exporting.showTable. However this table doesn't support exporting to SVG or other image formats, but with a little programming on top of the Highcharts data and drawing API you can draw a table. See our jsFiddle demo for source code and live example.How can I get the best performance out of Highcharts?When working with series with a high number of data points, there are a few things to consider.First of all, consider using the Boost module.Otherwise, for line plots, it is recommended that you disable point markers, as these will add a performance overhead. See https://highcharts.com/demo/line-time-series.Disabling shadows increases performance, as three shadow elements are created for each shape that includes a shadow.If you have a Stock licence, consider using the Data Grouping module. This module packs multiple consecutive values into the same point, and results in considerably fewer points to render. This greatly
reduces the initial loading time. The following chart compares the loading times of the same data set with and without data grouping.Can I export multiple charts to the same image or PDF?Currently this isn't implemented in the core, but there are a couple of paths you can go to achieve this. Use our hack for exporting multiple charts. Basically, this code gets the SVG of all charts, modifies it and applies it to one single SVG file that is sent to the server for image conversion. We also support using our client side exporting module, if sending data to our server is a concern. See this demo for an example of this approach.Create a HTML file on your server that contains all your desired charts, and do a pure server side conversion of this. See Can I generate charts on the server without using a browser?My non-English characters don't display right in my chartsIf you're using German umlauts, Scandinavian vowels or non-European alphabets, you need to use UTF-8 encoding for your files. There are two ways of doing this.Make sure your HTML page where your charts are defined, is UTF-8. The file itself and if applicable its database content must be encoded as UTF-8. Additionally, either the content-type HTTP header or the corresponding meta tag must reflect this:<meta http-equiv="content-type" content="text/html; charset=utf-8" />CopyIf you don't have access to change your whole HTML file, you can define your charts in a separate JS file that has UTF-8 encoding. <script src="charts.js" charset="UTF-8"></script>CopyCan I generate charts on the server without using a browser?Yes. See our article, Render charts on the server.How do I define irregular time data?To add data points with irregular intervals, instead of defining pointStart and pointInterval for the series, define an X value (date) for each point. See demo of irregular time.If you want the line to be broken for missing dates, insert null values instead.How do I add data from a MySQL database?See Preprocessing data from a database.Your map of my country does not include a disputed areaWe do our best not to take sides in border conflicts, however we realize the need for maps including disputed areas. To solve this, we try to keep our default maps conforming to neutral de facto borders or conventions, while providing alternative maps that include disputed areas. For a complete list of all of our maps, visit our Map Collection.Edit this pagePrevious« How to set options NextCreating custom Highcharts packages  »Does Highcharts refer to files outside our domain?Can I use Highcharts with a ... server?Can I use features from Highcharts Stock in Highcharts?Can I add a data table to the exported chart?How can I get the best performance out of Highcharts?Can I export multiple charts to the same image or PDF?My non-English characters don't display right in my chartsCan I generate charts on the server without using a browser?How do I define irregular time data?How do I add data from a MySQL database?Your map of my country does not include a disputed area\n\nFrequently asked questionsDoes Highcharts refer to files outside our domain?Can I use Highcharts with a ... server?Can I use features from Highcharts Stock in Highcharts?Can I add a data table to the exported chart?How can I get the best performance out of Highcharts?Can I export multiple charts to the same image or PDF?My non-English characters don't display right in my chartsCan I generate charts on the server without using a browser?How do I define irregular time data?How do I add data from a MySQL database?Your map of my country does not include a disputed areaDoes Highcharts refer to files outside our domain?For basic usage, Highcharts doesn't refer to any files other than highcharts.js/highstock.js, though there are some cases that you should be aware of.The exporting module. Since not all browsers are able to convert the chart to an image format, this operation is by default done on our web service, https://export.highcharts.com. The generated SVG is sent from your browser to the export server, and an image is sent back. If you're concerned about your data content being passed over the internet, you should consider our alternative solutions. The simplest alternative is to use our module for client-side export. Check out the features and compatibility table if it meets your requirements. If you have access to a node server, you can also set up your own export server. Certain features, including client side exporting, may require third-party dependencies. Some of these are loaded on demand from our servers, but in these cases the loading location is configurable. Details on all external dependencies, including licensing and security details, can be found in the optional dependencies documentation article.Stock Tools icons. By default the icons are loaded dynamically from https://code.highcharts.com. To change where icons should be loaded from see the iconsURL option.Can I use Highcharts with a ... server?Highcharts runs entirely on the client, and works with any web server that can deliver HTML and JavaScript content. Whether your server is PHP, Perl, ASP, ASP.NET, Node.js or whatever, Highcharts is completely ignorant of it. The HTML/JavaScript files may also be loaded from the file system, which is the case in app platforms where Highcharts is loaded in a web component inside the app.The best practice in integrating Highcharts may differ from system to system. You should follow the common practice for handing JavaScript on your specific system. Some prefer to serve a clean JSON or JavaScript file with the Highcharts setup, others to write the JavaScript setup directly to the web page. Data can be loaded in form of JSON or CSV files (see Working with data in the left menu), or printed inline in the chart setup. When working with a database powered backend, it may be cleaner to have your server system serve JSON or CSV files.For a live connection to the server, you may set up the web page to load new data over XHR or set up direct communications using WebSockets. With the new data arriving in the browser, the chart can be kept updated through various dynamic endpoints like Series.addPoint(), Point.update(), Chart.addSeries(), Chart.update() etc.Before you start to set up a complex backend, you may want to check out highcharts.com/download to see if there is a wrapper for your specific system.Can I use features from Highcharts Stock in Highcharts?Yes, most Highcharts Stock features can be applied to standard charts. From a licensing point of view, using features of the Stock package obviously requires a Highcharts Stock license.Technically Highcharts Stock is implemented as a set of plugins for Highcharts. The entire code base for Highcharts is included in the Stock package, and you can invoke a chart using Highcharts.Chart and enable certain features that are normally associated with a stock chart.Examples:Using flags in HighchartsEnabling a scrollbar in HighchartsGap size in HighchartsCan I add a data table to the exported chart?If you don't care about the export, a data table is simply added by the export-data module and a simple option, exporting.showTable. However this table doesn't support exporting to SVG or other image formats, but with a little programming on top of the Highcharts data and drawing API you can draw a table. See our jsFiddle demo for source code and live example.How can I get the best performance out of Highcharts?When working with series with a high number of data points, there are a few things to consider.First of all, consider using the Boost module.Otherwise, for line plots, it is recommended that you disable point markers, as these will add a performance overhead. See https://highcharts.com/demo/line-time-series.Disabling shadows increases performance, as three shadow elements are created for each shape that includes a shadow.If you have a Stock licence, consider using the Data Grouping module. This module packs multiple consecutive values into the same point, and results in considerably fewer points to render. This greatly
reduces the initial loading time. The following chart compares the loading times of the same data set with and without data grouping.Can I export multiple charts to the same image or PDF?Currently this isn't implemented in the core, but there are a couple of paths you can go to achieve this. Use our hack for exporting multiple charts. Basically, this code gets the SVG of all charts, modifies it and applies it to one single SVG file that is sent to the server for image conversion. We also support using our client side exporting module, if sending data to our server is a concern. See this demo for an example of this approach.Create a HTML file on your server that contains all your desired charts, and do a pure server side conversion of this. See Can I generate charts on the server without using a browser?My non-English characters don't display right in my chartsIf you're using German umlauts, Scandinavian vowels or non-European alphabets, you need to use UTF-8 encoding for your files. There are two ways of doing this.Make sure your HTML page where your charts are defined, is UTF-8. The file itself and if applicable its database content must be encoded as UTF-8. Additionally, either the content-type HTTP header or the corresponding meta tag must reflect this:<meta http-equiv="content-type" content="text/html; charset=utf-8" />CopyIf you don't have access to change your whole HTML file, you can define your charts in a separate JS file that has UTF-8 encoding. <script src="charts.js" charset="UTF-8"></script>CopyCan I generate charts on the server without using a browser?Yes. See our article, Render charts on the server.How do I define irregular time data?To add data points with irregular intervals, instead of defining pointStart and pointInterval for the series, define an X value (date) for each point. See demo of irregular time.If you want the line to be broken for missing dates, insert null values instead.How do I add data from a MySQL database?See Preprocessing data from a database.Your map of my country does not include a disputed areaWe do our best not to take sides in border conflicts, however we realize the need for maps including disputed areas. To solve this, we try to keep our default maps conforming to neutral de facto borders or conventions, while providing alternative maps that include disputed areas. For a complete list of all of our maps, visit our Map Collection.Edit this pagePrevious« How to set options NextCreating custom Highcharts packages  »Does Highcharts refer to files outside our domain?Can I use Highcharts with a ... server?Can I use features from Highcharts Stock in Highcharts?Can I add a data table to the exported chart?How can I get the best performance out of Highcharts?Can I export multiple charts to the same image or PDF?My non-English characters don't display right in my chartsCan I generate charts on the server without using a browser?How do I define irregular time data?How do I add data from a MySQL database?Your map of my country does not include a disputed area\n\n\n\nCreating custom Highcharts packagesThanks to ES modules you can create your own custom Highcharts package.
A benefit of using a custom file can be optimization of browser load speed due
to lower file size and less files to request.Follow the steps below to get started.Install HighchartsGo to the highcharts/highcharts
repository and click on "Code" and select "Download ZIP". Once the zip file is
downloaded, unpack it to a desired location.The following steps require Node.js, which you can download and install from the
Node.js website. Highcharts supports the LTS variant.When Node.js is installed, open you command line, shell, or terminal, and go to
the unpacked folder highcharts-master. There you have to run npm install to
install the required dependencies for building custom Highcharts files.Create a custom master fileIn your editor, go to the unpacked folder highcharts-master/ts/masters/ and
create a new file, named for example custom.src.ts. In this example we want a
basic line chart. To achieve this we will need a setup that lists all the needed
ES modules like this:/** * @license Highcharts JS [email protected]@ (@product.date@) * @module highcharts/highcharts * * (c) 2009-2024 Highcharts AS * * License: www.highcharts.com/license */'use strict';import Highcharts from '../Core/Globals.js';import SVGRenderer from '../Core/Renderer/SVG/SVGRenderer.js';import Chart from '../Core/Chart/Chart.js';import LineSeries from '../Series/Line/LineSeries.js';const exports: Record<string, any> = Highcharts;exports.Renderer = SVGRenderer;exports.SVGRenderer = SVGRenderer;exports.Chart = Chart;exports.chart = Chart.chart;exports.LineSeries = LineSeries;export default Highcharts;CopyModify the setup according to your needs, then proceed with the next step.
Please note that the order of the imported ES modules sometimes have to match
the dependencies of each file. Optional additions therefore should come last.
See other masters for order information.For similar examples take a look at the existing master files.Create the custom package fileRun npx gulp scripts --force to build all package files out of the master
files. Optional run npx gulp scripts-compile in addition to get minified
versions.In our example the new file ts/masters/custom.src.ts becomes the new package
file code/custom.src.js. The minified version can be found as
code/custom.js. You can pick these package files from the code/ folder and
use it in your project.For ESM-compatible files you have to copy the code/es-modules/ folder. Feel
free to rename the folder for your needs. This folder might have a large size,
but ESM will pick only necessary files from it for your project. A bundler like
parcel or webpack can help in the final stage of your project to optimize
the loading time further.If you like to have declarations in addition to the new package file
code/custom.src.js, run npx gulp jsdoc-dts --custom.Use your custom package fileAccording to our installation guide you can reference your
custom package file either as an ES6 module...<html>    <body>        <div id="container"></div>        <script type="module">            import Highcharts from './esm/custom.js';            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>Copy... or in classic manner with a script tag:<html>    <head>        <script src="custom.src.js"></script>    </head>    <body>        <div id="container"></div>        <script>            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>Copy\n\nCreating custom Highcharts packagesThanks to ES modules you can create your own custom Highcharts package.
A benefit of using a custom file can be optimization of browser load speed due
to lower file size and less files to request.Follow the steps below to get started.Install HighchartsGo to the highcharts/highcharts
repository and click on "Code" and select "Download ZIP". Once the zip file is
downloaded, unpack it to a desired location.The following steps require Node.js, which you can download and install from the
Node.js website. Highcharts supports the LTS variant.When Node.js is installed, open you command line, shell, or terminal, and go to
the unpacked folder highcharts-master. There you have to run npm install to
install the required dependencies for building custom Highcharts files.Create a custom master fileIn your editor, go to the unpacked folder highcharts-master/ts/masters/ and
create a new file, named for example custom.src.ts. In this example we want a
basic line chart. To achieve this we will need a setup that lists all the needed
ES modules like this:/** * @license Highcharts JS [email protected]@ (@product.date@) * @module highcharts/highcharts * * (c) 2009-2024 Highcharts AS * * License: www.highcharts.com/license */'use strict';import Highcharts from '../Core/Globals.js';import SVGRenderer from '../Core/Renderer/SVG/SVGRenderer.js';import Chart from '../Core/Chart/Chart.js';import LineSeries from '../Series/Line/LineSeries.js';const exports: Record<string, any> = Highcharts;exports.Renderer = SVGRenderer;exports.SVGRenderer = SVGRenderer;exports.Chart = Chart;exports.chart = Chart.chart;exports.LineSeries = LineSeries;export default Highcharts;CopyModify the setup according to your needs, then proceed with the next step.
Please note that the order of the imported ES modules sometimes have to match
the dependencies of each file. Optional additions therefore should come last.
See other masters for order information.For similar examples take a look at the existing master files.Create the custom package fileRun npx gulp scripts --force to build all package files out of the master
files. Optional run npx gulp scripts-compile in addition to get minified
versions.In our example the new file ts/masters/custom.src.ts becomes the new package
file code/custom.src.js. The minified version can be found as
code/custom.js. You can pick these package files from the code/ folder and
use it in your project.For ESM-compatible files you have to copy the code/es-modules/ folder. Feel
free to rename the folder for your needs. This folder might have a large size,
but ESM will pick only necessary files from it for your project. A bundler like
parcel or webpack can help in the final stage of your project to optimize
the loading time further.If you like to have declarations in addition to the new package file
code/custom.src.js, run npx gulp jsdoc-dts --custom.Use your custom package fileAccording to our installation guide you can reference your
custom package file either as an ES6 module...<html>    <body>        <div id="container"></div>        <script type="module">            import Highcharts from './esm/custom.js';            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>Copy... or in classic manner with a script tag:<html>    <head>        <script src="custom.src.js"></script>    </head>    <body>        <div id="container"></div>        <script>            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>CopyEdit this pagePrevious« Frequently asked questions NextOptional dependencies  »Install HighchartsCreate a custom master fileCreate the custom package fileUse your custom package file\n\nCreating custom Highcharts packagesThanks to ES modules you can create your own custom Highcharts package.
A benefit of using a custom file can be optimization of browser load speed due
to lower file size and less files to request.Follow the steps below to get started.Install HighchartsGo to the highcharts/highcharts
repository and click on "Code" and select "Download ZIP". Once the zip file is
downloaded, unpack it to a desired location.The following steps require Node.js, which you can download and install from the
Node.js website. Highcharts supports the LTS variant.When Node.js is installed, open you command line, shell, or terminal, and go to
the unpacked folder highcharts-master. There you have to run npm install to
install the required dependencies for building custom Highcharts files.Create a custom master fileIn your editor, go to the unpacked folder highcharts-master/ts/masters/ and
create a new file, named for example custom.src.ts. In this example we want a
basic line chart. To achieve this we will need a setup that lists all the needed
ES modules like this:/** * @license Highcharts JS [email protected]@ (@product.date@) * @module highcharts/highcharts * * (c) 2009-2024 Highcharts AS * * License: www.highcharts.com/license */'use strict';import Highcharts from '../Core/Globals.js';import SVGRenderer from '../Core/Renderer/SVG/SVGRenderer.js';import Chart from '../Core/Chart/Chart.js';import LineSeries from '../Series/Line/LineSeries.js';const exports: Record<string, any> = Highcharts;exports.Renderer = SVGRenderer;exports.SVGRenderer = SVGRenderer;exports.Chart = Chart;exports.chart = Chart.chart;exports.LineSeries = LineSeries;export default Highcharts;CopyModify the setup according to your needs, then proceed with the next step.
Please note that the order of the imported ES modules sometimes have to match
the dependencies of each file. Optional additions therefore should come last.
See other masters for order information.For similar examples take a look at the existing master files.Create the custom package fileRun npx gulp scripts --force to build all package files out of the master
files. Optional run npx gulp scripts-compile in addition to get minified
versions.In our example the new file ts/masters/custom.src.ts becomes the new package
file code/custom.src.js. The minified version can be found as
code/custom.js. You can pick these package files from the code/ folder and
use it in your project.For ESM-compatible files you have to copy the code/es-modules/ folder. Feel
free to rename the folder for your needs. This folder might have a large size,
but ESM will pick only necessary files from it for your project. A bundler like
parcel or webpack can help in the final stage of your project to optimize
the loading time further.If you like to have declarations in addition to the new package file
code/custom.src.js, run npx gulp jsdoc-dts --custom.Use your custom package fileAccording to our installation guide you can reference your
custom package file either as an ES6 module...<html>    <body>        <div id="container"></div>        <script type="module">            import Highcharts from './esm/custom.js';            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>Copy... or in classic manner with a script tag:<html>    <head>        <script src="custom.src.js"></script>    </head>    <body>        <div id="container"></div>        <script>            Highcharts.chart('container', {                series: [{                    type: 'line',                    data: [1, 32, 42]                }]            });        </script>    </body></html>CopyEdit this pagePrevious« Frequently asked questions NextOptional dependencies  »Install HighchartsCreate a custom master fileCreate the custom package fileUse your custom package file\n\n\n\nOptional dependenciesHighcharts by default is self-contained, but in some situations Highcharts requires external libraries to enable certain features. The following is an overview of these libraries, along with the required license and security information. The loading of the libraries is always configurable in such a way that you can load the files from your own servers if this is a security requirement. Note that even when loading these files, your chart data is never sent to our servers.File with source linkLicenseLoadingUsagesvg2pdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module for PDF export.jspdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Dependency of svg2pdf, required by the client side exporting module for PDF export.canvg.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module to export certain image types in Internet Explorer and pre-Chromium Edge browsers.proj4.jsMIT. Open source.Not loaded automatically, must be included on page.Prior to v10, required for latitude/longitude support in Highcharts Maps. Since v10 it is no longer needed as projection is built in.\n\nOptional dependenciesHighcharts by default is self-contained, but in some situations Highcharts requires external libraries to enable certain features. The following is an overview of these libraries, along with the required license and security information. The loading of the libraries is always configurable in such a way that you can load the files from your own servers if this is a security requirement. Note that even when loading these files, your chart data is never sent to our servers.File with source linkLicenseLoadingUsagesvg2pdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module for PDF export.jspdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Dependency of svg2pdf, required by the client side exporting module for PDF export.canvg.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module to export certain image types in Internet Explorer and pre-Chromium Edge browsers.proj4.jsMIT. Open source.Not loaded automatically, must be included on page.Prior to v10, required for latitude/longitude support in Highcharts Maps. Since v10 it is no longer needed as projection is built in.Edit this pagePrevious« Creating custom Highcharts packages NextA wind of change with Highcharts version 12  »Optional dependencies\n\nOptional dependenciesHighcharts by default is self-contained, but in some situations Highcharts requires external libraries to enable certain features. The following is an overview of these libraries, along with the required license and security information. The loading of the libraries is always configurable in such a way that you can load the files from your own servers if this is a security requirement. Note that even when loading these files, your chart data is never sent to our servers.File with source linkLicenseLoadingUsagesvg2pdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module for PDF export.jspdf.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Dependency of svg2pdf, required by the client side exporting module for PDF export.canvg.jsMIT. Open source.Loaded on demand from exporting.libURL if not present on page.Required by the client side exporting module to export certain image types in Internet Explorer and pre-Chromium Edge browsers.proj4.jsMIT. Open source.Not loaded automatically, must be included on page.Prior to v10, required for latitude/longitude support in Highcharts Maps. Since v10 it is no longer needed as projection is built in.Edit this pagePrevious« Creating custom Highcharts packages NextA wind of change with Highcharts version 12  »Optional dependencies\n\n\n\nA wind of change with Highcharts version 12Highcharts v12 has introduced new Webpack-based UMDs (Universal Module Definition) to make Highcharts modules easier to use and faster.
Thanks to this change everyone can soon also use the full potential of ESM (ES Module) packages.
The new UMD is with some setups compatible to the previous UMD, while it also brings some changes for other setups.
This document lays out the changes of Highcharts v12 packages.1. No module factoryThe new UMD does not come with a factory for Highcharts modules anymore.
Instead of calling each factory with the Highcharts namespace, all modules will recognize automatically the shared namespace.
This means less code to load Highcharts modules.Before v12:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';HighchartsExport(Highcharts);CopyWith v12:import Highcharts from 'highcharts';import 'highcharts/modules/exporting';CopySupport both variants:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';typeof HighchartsExport === 'function' && HighchartsExport(Highcharts);Copy2. Asynchronous / Lazy loading requires ESMBecause of the nature of UMD, async support for Highcharts modules was limited to certain setups only.
The new UMD is now consistently expecting synchronous loading in all setups.
For an asynchronous approach, one needs to use the ESM variants, which can be found via the highcharts/esm/ path.HTML Example:<script type="module">import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/highcharts-more.js';import 'https://code.highcharts.com/esm/modules/exporting.js';import 'https://code.highcharts.com/esm/modules/accessibility.js';</scripts>CopyNode.js Example:import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';CopyNext.js Example:'use client';import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';Copy3. No Highcharts._modules and HighchartsModuleLoaded eventHighcharts before v12 included an internal module system to allow instant modifications.
This internal module system has been removed.
Alternative ways of instant modifications can be accomplished with
custom packages
and dynamic imports.More changesTo learn more about all changes see our
blog post about Highcharts v12.\n\nA wind of change with Highcharts version 12Highcharts v12 has introduced new Webpack-based UMDs (Universal Module Definition) to make Highcharts modules easier to use and faster.
Thanks to this change everyone can soon also use the full potential of ESM (ES Module) packages.
The new UMD is with some setups compatible to the previous UMD, while it also brings some changes for other setups.
This document lays out the changes of Highcharts v12 packages.1. No module factoryThe new UMD does not come with a factory for Highcharts modules anymore.
Instead of calling each factory with the Highcharts namespace, all modules will recognize automatically the shared namespace.
This means less code to load Highcharts modules.Before v12:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';HighchartsExport(Highcharts);CopyWith v12:import Highcharts from 'highcharts';import 'highcharts/modules/exporting';CopySupport both variants:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';typeof HighchartsExport === 'function' && HighchartsExport(Highcharts);Copy2. Asynchronous / Lazy loading requires ESMBecause of the nature of UMD, async support for Highcharts modules was limited to certain setups only.
The new UMD is now consistently expecting synchronous loading in all setups.
For an asynchronous approach, one needs to use the ESM variants, which can be found via the highcharts/esm/ path.HTML Example:<script type="module">import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/highcharts-more.js';import 'https://code.highcharts.com/esm/modules/exporting.js';import 'https://code.highcharts.com/esm/modules/accessibility.js';</scripts>CopyNode.js Example:import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';CopyNext.js Example:'use client';import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';Copy3. No Highcharts._modules and HighchartsModuleLoaded eventHighcharts before v12 included an internal module system to allow instant modifications.
This internal module system has been removed.
Alternative ways of instant modifications can be accomplished with
custom packages
and dynamic imports.More changesTo learn more about all changes see our
blog post about Highcharts v12.Edit this pagePrevious« Optional dependencies NextUnderstanding Highcharts  »1. No module factory2. Asynchronous / Lazy loading requires ESM3. No Highcharts._modules and HighchartsModuleLoaded eventMore changes\n\nA wind of change with Highcharts version 12Highcharts v12 has introduced new Webpack-based UMDs (Universal Module Definition) to make Highcharts modules easier to use and faster.
Thanks to this change everyone can soon also use the full potential of ESM (ES Module) packages.
The new UMD is with some setups compatible to the previous UMD, while it also brings some changes for other setups.
This document lays out the changes of Highcharts v12 packages.1. No module factoryThe new UMD does not come with a factory for Highcharts modules anymore.
Instead of calling each factory with the Highcharts namespace, all modules will recognize automatically the shared namespace.
This means less code to load Highcharts modules.Before v12:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';HighchartsExport(Highcharts);CopyWith v12:import Highcharts from 'highcharts';import 'highcharts/modules/exporting';CopySupport both variants:import Highcharts from 'highcharts';import HighchartsExport from 'highcharts/modules/exporting';typeof HighchartsExport === 'function' && HighchartsExport(Highcharts);Copy2. Asynchronous / Lazy loading requires ESMBecause of the nature of UMD, async support for Highcharts modules was limited to certain setups only.
The new UMD is now consistently expecting synchronous loading in all setups.
For an asynchronous approach, one needs to use the ESM variants, which can be found via the highcharts/esm/ path.HTML Example:<script type="module">import Highcharts from 'https://code.highcharts.com/esm/highcharts.js';import 'https://code.highcharts.com/esm/highcharts-more.js';import 'https://code.highcharts.com/esm/modules/exporting.js';import 'https://code.highcharts.com/esm/modules/accessibility.js';</scripts>CopyNode.js Example:import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';CopyNext.js Example:'use client';import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import 'highcharts/es-modules/masters/highcharts-more.src.js';import 'highcharts/es-modules/masters/modules/exporting.src.js';import 'highcharts/es-modules/masters/modules/accessibility.src.js';Copy3. No Highcharts._modules and HighchartsModuleLoaded eventHighcharts before v12 included an internal module system to allow instant modifications.
This internal module system has been removed.
Alternative ways of instant modifications can be accomplished with
custom packages
and dynamic imports.More changesTo learn more about all changes see our
blog post about Highcharts v12.Edit this pagePrevious« Optional dependencies NextUnderstanding Highcharts  »1. No module factory2. Asynchronous / Lazy loading requires ESM3. No Highcharts._modules and HighchartsModuleLoaded eventMore changes\n\n\n\nUnderstanding HighchartsTo understand how Highcharts works, it is important to understand the various parts, or concepts, of a chart.The image below describes the main concepts in a chart.TitleText that describes the chart. Usually located at the top of the chart.See Title and subtitle for more information.SeriesOne or more series of data presented on the chart.See Series for more information.TooltipWhen hovering over a series or a point on the chart, you can get a tooltip that describes the values in that particular part of the chart.See Tooltip for more information.LegendThe legend shows the data series in the chart and allows you to enable and disable one or more series.See Legend for more information.AxesMost charts, like the typical cartesian line chart and the column chart, have two axes to measure and categorize data: a vertical axis (y-axis) and a horizontal axis (x-axis). 3D charts have a third axis, a depth axis (z-axis). Polar charts, also known as radar charts, only have one axis that spans around the perimeter of the chart. Gauge charts, also known as speedometer charts, can even have a single value axis. Pie charts, however, have no axes.See Axes for more information.\n\nUnderstanding HighchartsTo understand how Highcharts works, it is important to understand the various parts, or concepts, of a chart.The image below describes the main concepts in a chart.TitleText that describes the chart. Usually located at the top of the chart.See Title and subtitle for more information.SeriesOne or more series of data presented on the chart.See Series for more information.TooltipWhen hovering over a series or a point on the chart, you can get a tooltip that describes the values in that particular part of the chart.See Tooltip for more information.LegendThe legend shows the data series in the chart and allows you to enable and disable one or more series.See Legend for more information.AxesMost charts, like the typical cartesian line chart and the column chart, have two axes to measure and categorize data: a vertical axis (y-axis) and a horizontal axis (x-axis). 3D charts have a third axis, a depth axis (z-axis). Polar charts, also known as radar charts, only have one axis that spans around the perimeter of the chart. Gauge charts, also known as speedometer charts, can even have a single value axis. Pie charts, however, have no axes.See Axes for more information.Edit this pagePrevious« A wind of change with Highcharts version 12 NextTitle and subtitle  »TitleSeriesTooltipLegendAxes\n\nUnderstanding HighchartsTo understand how Highcharts works, it is important to understand the various parts, or concepts, of a chart.The image below describes the main concepts in a chart.TitleText that describes the chart. Usually located at the top of the chart.See Title and subtitle for more information.SeriesOne or more series of data presented on the chart.See Series for more information.TooltipWhen hovering over a series or a point on the chart, you can get a tooltip that describes the values in that particular part of the chart.See Tooltip for more information.LegendThe legend shows the data series in the chart and allows you to enable and disable one or more series.See Legend for more information.AxesMost charts, like the typical cartesian line chart and the column chart, have two axes to measure and categorize data: a vertical axis (y-axis) and a horizontal axis (x-axis). 3D charts have a third axis, a depth axis (z-axis). Polar charts, also known as radar charts, only have one axis that spans around the perimeter of the chart. Gauge charts, also known as speedometer charts, can even have a single value axis. Pie charts, however, have no axes.See Axes for more information.Edit this pagePrevious« A wind of change with Highcharts version 12 NextTitle and subtitle  »TitleSeriesTooltipLegendAxes\n\n\n\nTitle and subtitleThe title is by default displayed at the top of the chart, and an optional subtitle can be shown beneath it.The title and subtitle can be set as shown in the example below.title: {    text: 'My custom title'},subtitle: {    text: 'My custom subtitle'}CopyBy default, since version 12, the title and subtitle have adaptive alignment to best fit the length of the text and the width of the chart. The following rules apply:The title is aligned to the center for short text.If the title is about to overflow, it is scaled down to fit, until the limit set in the title.minScale option. It defaults to 0.67, which is the scale when the title has the same font size as the subtitle.If the title still doesn't fit after scaling down, it is wrapped into multiple lines. Now the text is left-aligned for a cleaner look.The subtitle by default (and dynamically) applies the same alignment as the main title.All of these rules can be overridden by explicitly setting the title or subtitle align property, or setting the title.minScale, for example to 1 to disallow scaling down.The title and subtitle can also be moved around by the default attributes of the title and subtitle options (align, float, margin, verticalAlign, x, y). For all available options, see options.title and options.subtitle.Titles can be modified dynamically after render time by the Chart.setTitle method.\n\nTitle and subtitleThe title is by default displayed at the top of the chart, and an optional subtitle can be shown beneath it.The title and subtitle can be set as shown in the example below.title: {    text: 'My custom title'},subtitle: {    text: 'My custom subtitle'}CopyBy default, since version 12, the title and subtitle have adaptive alignment to best fit the length of the text and the width of the chart. The following rules apply:The title is aligned to the center for short text.If the title is about to overflow, it is scaled down to fit, until the limit set in the title.minScale option. It defaults to 0.67, which is the scale when the title has the same font size as the subtitle.If the title still doesn't fit after scaling down, it is wrapped into multiple lines. Now the text is left-aligned for a cleaner look.The subtitle by default (and dynamically) applies the same alignment as the main title.All of these rules can be overridden by explicitly setting the title or subtitle align property, or setting the title.minScale, for example to 1 to disallow scaling down.The title and subtitle can also be moved around by the default attributes of the title and subtitle options (align, float, margin, verticalAlign, x, y). For all available options, see options.title and options.subtitle.Titles can be modified dynamically after render time by the Chart.setTitle method.Edit this pagePrevious« Understanding Highcharts NextAxes  »\n\nTitle and subtitleThe title is by default displayed at the top of the chart, and an optional subtitle can be shown beneath it.The title and subtitle can be set as shown in the example below.title: {    text: 'My custom title'},subtitle: {    text: 'My custom subtitle'}CopyBy default, since version 12, the title and subtitle have adaptive alignment to best fit the length of the text and the width of the chart. The following rules apply:The title is aligned to the center for short text.If the title is about to overflow, it is scaled down to fit, until the limit set in the title.minScale option. It defaults to 0.67, which is the scale when the title has the same font size as the subtitle.If the title still doesn't fit after scaling down, it is wrapped into multiple lines. Now the text is left-aligned for a cleaner look.The subtitle by default (and dynamically) applies the same alignment as the main title.All of these rules can be overridden by explicitly setting the title or subtitle align property, or setting the title.minScale, for example to 1 to disallow scaling down.The title and subtitle can also be moved around by the default attributes of the title and subtitle options (align, float, margin, verticalAlign, x, y). For all available options, see options.title and options.subtitle.Titles can be modified dynamically after render time by the Chart.setTitle method.Edit this pagePrevious« Understanding Highcharts NextAxes  »\n\n\n\nAxesThe x-axis and y-axis are shown by default in all charts containing data series
with a cartesian coordinate system.
Here is a quick overview of the axis elements:Axis labels, tickmarks and gridlinesThe axis labels, tickmarks and gridlines are closely linked and all scale together. Their positioning is calculated to best fit the data present in a chart. TicksTick marks are the lines placed along an axis to show the units of measurement. The spacing between ticks are mainly decided by the tickInterval and tickPixelInterval options. Labels and grid lines are laid out on the same positions as the tick marks. The tickInterval option decides the interval of the tick marks in axis units. The tick interval defaults to null, which means it is computed to approximately follow the tickPixelInterval on linear and datetime axes.On categorized axes, a null tickInterval will default to 1, one category.Note that datetime axes are based on milliseconds, so for example an interval of one day is expressed as 24 * 3600 * 1000. On logarithmic axes, the tickInterval is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.The tickPixelInterval option sets an approximate pixel interval of the tick marks based on a pixel value (if tickInterval is nullish). This makes it work well with responsive layouts, ensuring a reasonable distance between ticks regardless of the chart size and axis length. It doesn't apply to categorized axis. Defaults to 72 for the y-axis and 100 for the x-axis.Minor ticksIf the minorTickInterval option is set, minor ticks are laid out between the major ones. This includes minor tick marks, and minor grid lines, which have their own options for look and feel, but excludes labels. LabelsThe axis labels can be found along the axis showing the value of the data it corresponds to. Labels can also be customized using a format string or a formatter function:yAxis: {    labels: {        format: '{value}%', // provides the same result as:        formatter: function() {            return this.value + ' %';        }    },},CopyThe above example takes the value of the y-axis label and adds a % symbol at the end of it.Grid linesGrid lines are collections of horizontal (and/or vertical) lines that divide a chart into a grid, making it easier to read values of the chart. To enable or disable gridlines for either the x or y-axis, set the gridLineWidth of the respective axis:xAxis: {    gridLineWidth: 1},yAxis: {    gridLineWidth: 1}CopyGrid lines for the y-axis are enabled by default (gridLineWidth: 1), and disabled by default for the x-axis  (gridLineWidth: 0).Other options for grid lines can be found in the API reference for the x and y-axis.Minor grid lines are intermediary lines that can be enabled by setting the minorTickInterval option.Multiple axesIt is possible to have multiple axes and linking them with different data series. To do this several axes needs to be created, like this:yAxis: [{ //--- Primary yAxis    title: {        text: 'Temperature'    }}, { //--- Secondary yAxis    title: {        text: 'Rainfall'    },    opposite: true}],series: [{    yAxis: 0,    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]},{    yAxis: 1,    data: [        7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6    ]}]CopyNote that several axes are created using a list, so the first yAxis starts with index 0. And the opposite: true option puts the axis on the right side of the chart.Align ticksWhen using multiple axes, it is usually desirable to align the ticks, to avoid multiple sets of grid lines to mess up the chart. The chart.alignTicks option is true by default. The downside of alignment is that each axis is pre-determined to have the same tick amount as the others, so the fitting of ticks may not be optimal. An alternative is to turn off alignTicks and set gridLineWidth to 0.Align thresholdsSince v10, it is possible to align the thresholds of multiple axes through the chart.alignThresholds option. This is similar to alignTicks but goes one step further by also ensuring zero-levels or other kinds of thresholds are aligned.Axis title The axis title, showing next to the axis line. This title by default for the y-axis and hidden by default for the x-axis. See xAxis.title for the full set of options.Axis typesAn axis can be either, linear, logarithmic, datetime or categories. The axis type is set like this:// The types are 'linear', 'logarithmic' and 'datetime'yAxis: {    type: 'linear',}// Categories are set by using an arrayxAxis: {    categories: ['Apples', 'Bananas', 'Oranges']}CopyLinearThe numbers along the axis are of linear scale. This is the default axis type. If only y-values are present in a dataseries the x-axis is labeled from 0 to the number of y-values (shows the array index of the y-values):var chart = new Highcharts.Chart({        chart: {            renderTo: 'container',            type: 'column'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            title: {                text: 'Fruit Number'            },            tickInterval: 1        },        yAxis: {            title: {                text: 'Fruit eaten'            },            tickInterval: 1        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    }});CopyLogarithmicOn a logarithmic axis the numbers along the axis increase logarithmically and the axis adjusts itself to the data series present in the chart.Note that on logarithmic axes, the tickInterval option is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.Another thing to note is that a logarithmic axis can never become negative, as each full axis unit is one tenth of the previous. As a consequence, Highcharts will remove 0 or negative points associated to the axis, and if you try to set the axis.min option to 0 or negative, it will fail with an error.A trick to plot zero and negative values on a logarithmic axis in HighchartsLet's begin by delving into the core concept of logarithms. When we have an equation like 10 raised to the power of L equals Z, we say that L is the logarithm with a base of 10 for Z. If L is a negative number, this implies that Z is a positive fraction smaller than 1.0. In the case where L equals zero, Z is precisely 1.0. On the other hand, if L is greater than 0, then Z exceeds 1.0. It's essential to emphasize that no matter the value of L, it's impossible for Z to be zero or negative. Logarithms do not have defined values for such cases, they exclusively operate on positive numbers.If you would like to show zero and negative values on a logarithmic axis in Highcharts, the only viable approach is to employ a custom plugin. This plugin allows for the emulation of negative values on a logarithmic axis. It's important to bear in mind that the resulting scale is not mathematically precise since a true logarithmic axis never touches or crosses zero. The custom plugin can be found in this demo.DatetimeA datetime axis prints labels of round date values in appropriate intervals. Internally, a datetime axis is a linear numeric axis based on milliseconds since midnight Jan 1, 1970, as specified by the JavaScript Date object. Depending on the scale the datetime label will either be represented as time or a date.On datetime axes, all time settings may be given either as milliseconds, date strings (since v12), or Date objects. This includes options like min and max, arguments to Axis.setExtremes, as well as related options like point.x and series.pointStart. Date strings are parsed and assigned the current timezone as given in the chart-level time.timezone option, or to the timezone indicated in the time string itself.In Highcharts Stock the x-axis is always a datetime axis.CategoriesIf categories are present, the names of the categories are used instead of numbers or dates on the axis. See xAxis.categories.What axis type should I use?Many of the examples on the Highcharts demo page come with an xAxis with categories. However, it is important to understand when to use categories and when you are better off with a linear or datetime xAxis.Categories are groups of items, like for example "Apples", "Pears" and "Oranges", or "Red", "Green", "Blue", "Yellow". These categories have that in common that there are no intermediate values. There's no sliding transition between apples and pears. Also, if you leave one category out, the user isn't able to understand what is left out. Say if you print every second color of "Red", "Green", "Blue" or "Yellow", the user won't know what colors are missing. Therefore, Highcharts doesn't have automatic methods to hide categories if they become to dense on the axis. If you have problems with overlapping axis labels, try either the xAxis.labels.staggerLines option, or give the labels a rotation. If you find that you can skip category labels by the xAxis.labels.step option, chances are that you are better off using a linear or datetime axis.An xAxis of the linear or datetime type has the advantage that Highcharts is able to determine how close the data labels should be because it knows how to interpolate. The labels will by default be placed with approximately 100px between them, which can be changed in the tickPixelInterval option. If you have predictable categories like "Item1", "Item2", "Item3" or "2012-01-01", "2012-01-02", "2012-01-03" etc., linear or datetime axis types combined with an xAxis.labels.formatter would probably be a better choice.Dynamically updating axesAxes can be updated with new information after render time. For more information about this look in the API.\n\nAxesThe x-axis and y-axis are shown by default in all charts containing data series
with a cartesian coordinate system.
Here is a quick overview of the axis elements:Axis labels, tickmarks and gridlinesThe axis labels, tickmarks and gridlines are closely linked and all scale together. Their positioning is calculated to best fit the data present in a chart. TicksTick marks are the lines placed along an axis to show the units of measurement. The spacing between ticks are mainly decided by the tickInterval and tickPixelInterval options. Labels and grid lines are laid out on the same positions as the tick marks. The tickInterval option decides the interval of the tick marks in axis units. The tick interval defaults to null, which means it is computed to approximately follow the tickPixelInterval on linear and datetime axes.On categorized axes, a null tickInterval will default to 1, one category.Note that datetime axes are based on milliseconds, so for example an interval of one day is expressed as 24 * 3600 * 1000. On logarithmic axes, the tickInterval is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.The tickPixelInterval option sets an approximate pixel interval of the tick marks based on a pixel value (if tickInterval is nullish). This makes it work well with responsive layouts, ensuring a reasonable distance between ticks regardless of the chart size and axis length. It doesn't apply to categorized axis. Defaults to 72 for the y-axis and 100 for the x-axis.Minor ticksIf the minorTickInterval option is set, minor ticks are laid out between the major ones. This includes minor tick marks, and minor grid lines, which have their own options for look and feel, but excludes labels. LabelsThe axis labels can be found along the axis showing the value of the data it corresponds to. Labels can also be customized using a format string or a formatter function:yAxis: {    labels: {        format: '{value}%', // provides the same result as:        formatter: function() {            return this.value + ' %';        }    },},CopyThe above example takes the value of the y-axis label and adds a % symbol at the end of it.Grid linesGrid lines are collections of horizontal (and/or vertical) lines that divide a chart into a grid, making it easier to read values of the chart. To enable or disable gridlines for either the x or y-axis, set the gridLineWidth of the respective axis:xAxis: {    gridLineWidth: 1},yAxis: {    gridLineWidth: 1}CopyGrid lines for the y-axis are enabled by default (gridLineWidth: 1), and disabled by default for the x-axis  (gridLineWidth: 0).Other options for grid lines can be found in the API reference for the x and y-axis.Minor grid lines are intermediary lines that can be enabled by setting the minorTickInterval option.Multiple axesIt is possible to have multiple axes and linking them with different data series. To do this several axes needs to be created, like this:yAxis: [{ //--- Primary yAxis    title: {        text: 'Temperature'    }}, { //--- Secondary yAxis    title: {        text: 'Rainfall'    },    opposite: true}],series: [{    yAxis: 0,    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]},{    yAxis: 1,    data: [        7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6    ]}]CopyNote that several axes are created using a list, so the first yAxis starts with index 0. And the opposite: true option puts the axis on the right side of the chart.Align ticksWhen using multiple axes, it is usually desirable to align the ticks, to avoid multiple sets of grid lines to mess up the chart. The chart.alignTicks option is true by default. The downside of alignment is that each axis is pre-determined to have the same tick amount as the others, so the fitting of ticks may not be optimal. An alternative is to turn off alignTicks and set gridLineWidth to 0.Align thresholdsSince v10, it is possible to align the thresholds of multiple axes through the chart.alignThresholds option. This is similar to alignTicks but goes one step further by also ensuring zero-levels or other kinds of thresholds are aligned.Axis title The axis title, showing next to the axis line. This title by default for the y-axis and hidden by default for the x-axis. See xAxis.title for the full set of options.Axis typesAn axis can be either, linear, logarithmic, datetime or categories. The axis type is set like this:// The types are 'linear', 'logarithmic' and 'datetime'yAxis: {    type: 'linear',}// Categories are set by using an arrayxAxis: {    categories: ['Apples', 'Bananas', 'Oranges']}CopyLinearThe numbers along the axis are of linear scale. This is the default axis type. If only y-values are present in a dataseries the x-axis is labeled from 0 to the number of y-values (shows the array index of the y-values):var chart = new Highcharts.Chart({        chart: {            renderTo: 'container',            type: 'column'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            title: {                text: 'Fruit Number'            },            tickInterval: 1        },        yAxis: {            title: {                text: 'Fruit eaten'            },            tickInterval: 1        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    }});CopyLogarithmicOn a logarithmic axis the numbers along the axis increase logarithmically and the axis adjusts itself to the data series present in the chart.Note that on logarithmic axes, the tickInterval option is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.Another thing to note is that a logarithmic axis can never become negative, as each full axis unit is one tenth of the previous. As a consequence, Highcharts will remove 0 or negative points associated to the axis, and if you try to set the axis.min option to 0 or negative, it will fail with an error.A trick to plot zero and negative values on a logarithmic axis in HighchartsLet's begin by delving into the core concept of logarithms. When we have an equation like 10 raised to the power of L equals Z, we say that L is the logarithm with a base of 10 for Z. If L is a negative number, this implies that Z is a positive fraction smaller than 1.0. In the case where L equals zero, Z is precisely 1.0. On the other hand, if L is greater than 0, then Z exceeds 1.0. It's essential to emphasize that no matter the value of L, it's impossible for Z to be zero or negative. Logarithms do not have defined values for such cases, they exclusively operate on positive numbers.If you would like to show zero and negative values on a logarithmic axis in Highcharts, the only viable approach is to employ a custom plugin. This plugin allows for the emulation of negative values on a logarithmic axis. It's important to bear in mind that the resulting scale is not mathematically precise since a true logarithmic axis never touches or crosses zero. The custom plugin can be found in this demo.DatetimeA datetime axis prints labels of round date values in appropriate intervals. Internally, a datetime axis is a linear numeric axis based on milliseconds since midnight Jan 1, 1970, as specified by the JavaScript Date object. Depending on the scale the datetime label will either be represented as time or a date.On datetime axes, all time settings may be given either as milliseconds, date strings (since v12), or Date objects. This includes options like min and max, arguments to Axis.setExtremes, as well as related options like point.x and series.pointStart. Date strings are parsed and assigned the current timezone as given in the chart-level time.timezone option, or to the timezone indicated in the time string itself.In Highcharts Stock the x-axis is always a datetime axis.CategoriesIf categories are present, the names of the categories are used instead of numbers or dates on the axis. See xAxis.categories.What axis type should I use?Many of the examples on the Highcharts demo page come with an xAxis with categories. However, it is important to understand when to use categories and when you are better off with a linear or datetime xAxis.Categories are groups of items, like for example "Apples", "Pears" and "Oranges", or "Red", "Green", "Blue", "Yellow". These categories have that in common that there are no intermediate values. There's no sliding transition between apples and pears. Also, if you leave one category out, the user isn't able to understand what is left out. Say if you print every second color of "Red", "Green", "Blue" or "Yellow", the user won't know what colors are missing. Therefore, Highcharts doesn't have automatic methods to hide categories if they become to dense on the axis. If you have problems with overlapping axis labels, try either the xAxis.labels.staggerLines option, or give the labels a rotation. If you find that you can skip category labels by the xAxis.labels.step option, chances are that you are better off using a linear or datetime axis.An xAxis of the linear or datetime type has the advantage that Highcharts is able to determine how close the data labels should be because it knows how to interpolate. The labels will by default be placed with approximately 100px between them, which can be changed in the tickPixelInterval option. If you have predictable categories like "Item1", "Item2", "Item3" or "2012-01-01", "2012-01-02", "2012-01-03" etc., linear or datetime axis types combined with an xAxis.labels.formatter would probably be a better choice.Dynamically updating axesAxes can be updated with new information after render time. For more information about this look in the API.Edit this pagePrevious« Title and subtitle NextBubble legend  »Axis labels, tickmarks and gridlinesTicksMinor ticksLabelsGrid linesMultiple axesAlign ticksAlign thresholdsAxis title Axis typesLinearLogarithmicDatetimeCategoriesWhat axis type should I use?Dynamically updating axes\n\nAxesThe x-axis and y-axis are shown by default in all charts containing data series
with a cartesian coordinate system.
Here is a quick overview of the axis elements:Axis labels, tickmarks and gridlinesThe axis labels, tickmarks and gridlines are closely linked and all scale together. Their positioning is calculated to best fit the data present in a chart. TicksTick marks are the lines placed along an axis to show the units of measurement. The spacing between ticks are mainly decided by the tickInterval and tickPixelInterval options. Labels and grid lines are laid out on the same positions as the tick marks. The tickInterval option decides the interval of the tick marks in axis units. The tick interval defaults to null, which means it is computed to approximately follow the tickPixelInterval on linear and datetime axes.On categorized axes, a null tickInterval will default to 1, one category.Note that datetime axes are based on milliseconds, so for example an interval of one day is expressed as 24 * 3600 * 1000. On logarithmic axes, the tickInterval is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.The tickPixelInterval option sets an approximate pixel interval of the tick marks based on a pixel value (if tickInterval is nullish). This makes it work well with responsive layouts, ensuring a reasonable distance between ticks regardless of the chart size and axis length. It doesn't apply to categorized axis. Defaults to 72 for the y-axis and 100 for the x-axis.Minor ticksIf the minorTickInterval option is set, minor ticks are laid out between the major ones. This includes minor tick marks, and minor grid lines, which have their own options for look and feel, but excludes labels. LabelsThe axis labels can be found along the axis showing the value of the data it corresponds to. Labels can also be customized using a format string or a formatter function:yAxis: {    labels: {        format: '{value}%', // provides the same result as:        formatter: function() {            return this.value + ' %';        }    },},CopyThe above example takes the value of the y-axis label and adds a % symbol at the end of it.Grid linesGrid lines are collections of horizontal (and/or vertical) lines that divide a chart into a grid, making it easier to read values of the chart. To enable or disable gridlines for either the x or y-axis, set the gridLineWidth of the respective axis:xAxis: {    gridLineWidth: 1},yAxis: {    gridLineWidth: 1}CopyGrid lines for the y-axis are enabled by default (gridLineWidth: 1), and disabled by default for the x-axis  (gridLineWidth: 0).Other options for grid lines can be found in the API reference for the x and y-axis.Minor grid lines are intermediary lines that can be enabled by setting the minorTickInterval option.Multiple axesIt is possible to have multiple axes and linking them with different data series. To do this several axes needs to be created, like this:yAxis: [{ //--- Primary yAxis    title: {        text: 'Temperature'    }}, { //--- Secondary yAxis    title: {        text: 'Rainfall'    },    opposite: true}],series: [{    yAxis: 0,    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]},{    yAxis: 1,    data: [        7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6    ]}]CopyNote that several axes are created using a list, so the first yAxis starts with index 0. And the opposite: true option puts the axis on the right side of the chart.Align ticksWhen using multiple axes, it is usually desirable to align the ticks, to avoid multiple sets of grid lines to mess up the chart. The chart.alignTicks option is true by default. The downside of alignment is that each axis is pre-determined to have the same tick amount as the others, so the fitting of ticks may not be optimal. An alternative is to turn off alignTicks and set gridLineWidth to 0.Align thresholdsSince v10, it is possible to align the thresholds of multiple axes through the chart.alignThresholds option. This is similar to alignTicks but goes one step further by also ensuring zero-levels or other kinds of thresholds are aligned.Axis title The axis title, showing next to the axis line. This title by default for the y-axis and hidden by default for the x-axis. See xAxis.title for the full set of options.Axis typesAn axis can be either, linear, logarithmic, datetime or categories. The axis type is set like this:// The types are 'linear', 'logarithmic' and 'datetime'yAxis: {    type: 'linear',}// Categories are set by using an arrayxAxis: {    categories: ['Apples', 'Bananas', 'Oranges']}CopyLinearThe numbers along the axis are of linear scale. This is the default axis type. If only y-values are present in a dataseries the x-axis is labeled from 0 to the number of y-values (shows the array index of the y-values):var chart = new Highcharts.Chart({        chart: {            renderTo: 'container',            type: 'column'        },        title: {            text: 'Fruit Consumption'        },        xAxis: {            title: {                text: 'Fruit Number'            },            tickInterval: 1        },        yAxis: {            title: {                text: 'Fruit eaten'            },            tickInterval: 1        },        series: [{            name: 'Jane',            data: [1, 0, 4]        }, {            name: 'John',            data: [5, 7, 3]        }]    }});CopyLogarithmicOn a logarithmic axis the numbers along the axis increase logarithmically and the axis adjusts itself to the data series present in the chart.Note that on logarithmic axes, the tickInterval option is based on powers, so a tickInterval of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.Another thing to note is that a logarithmic axis can never become negative, as each full axis unit is one tenth of the previous. As a consequence, Highcharts will remove 0 or negative points associated to the axis, and if you try to set the axis.min option to 0 or negative, it will fail with an error.A trick to plot zero and negative values on a logarithmic axis in HighchartsLet's begin by delving into the core concept of logarithms. When we have an equation like 10 raised to the power of L equals Z, we say that L is the logarithm with a base of 10 for Z. If L is a negative number, this implies that Z is a positive fraction smaller than 1.0. In the case where L equals zero, Z is precisely 1.0. On the other hand, if L is greater than 0, then Z exceeds 1.0. It's essential to emphasize that no matter the value of L, it's impossible for Z to be zero or negative. Logarithms do not have defined values for such cases, they exclusively operate on positive numbers.If you would like to show zero and negative values on a logarithmic axis in Highcharts, the only viable approach is to employ a custom plugin. This plugin allows for the emulation of negative values on a logarithmic axis. It's important to bear in mind that the resulting scale is not mathematically precise since a true logarithmic axis never touches or crosses zero. The custom plugin can be found in this demo.DatetimeA datetime axis prints labels of round date values in appropriate intervals. Internally, a datetime axis is a linear numeric axis based on milliseconds since midnight Jan 1, 1970, as specified by the JavaScript Date object. Depending on the scale the datetime label will either be represented as time or a date.On datetime axes, all time settings may be given either as milliseconds, date strings (since v12), or Date objects. This includes options like min and max, arguments to Axis.setExtremes, as well as related options like point.x and series.pointStart. Date strings are parsed and assigned the current timezone as given in the chart-level time.timezone option, or to the timezone indicated in the time string itself.In Highcharts Stock the x-axis is always a datetime axis.CategoriesIf categories are present, the names of the categories are used instead of numbers or dates on the axis. See xAxis.categories.What axis type should I use?Many of the examples on the Highcharts demo page come with an xAxis with categories. However, it is important to understand when to use categories and when you are better off with a linear or datetime xAxis.Categories are groups of items, like for example "Apples", "Pears" and "Oranges", or "Red", "Green", "Blue", "Yellow". These categories have that in common that there are no intermediate values. There's no sliding transition between apples and pears. Also, if you leave one category out, the user isn't able to understand what is left out. Say if you print every second color of "Red", "Green", "Blue" or "Yellow", the user won't know what colors are missing. Therefore, Highcharts doesn't have automatic methods to hide categories if they become to dense on the axis. If you have problems with overlapping axis labels, try either the xAxis.labels.staggerLines option, or give the labels a rotation. If you find that you can skip category labels by the xAxis.labels.step option, chances are that you are better off using a linear or datetime axis.An xAxis of the linear or datetime type has the advantage that Highcharts is able to determine how close the data labels should be because it knows how to interpolate. The labels will by default be placed with approximately 100px between them, which can be changed in the tickPixelInterval option. If you have predictable categories like "Item1", "Item2", "Item3" or "2012-01-01", "2012-01-02", "2012-01-03" etc., linear or datetime axis types combined with an xAxis.labels.formatter would probably be a better choice.Dynamically updating axesAxes can be updated with new information after render time. For more information about this look in the API.Edit this pagePrevious« Title and subtitle NextBubble legend  »Axis labels, tickmarks and gridlinesTicksMinor ticksLabelsGrid linesMultiple axesAlign ticksAlign thresholdsAxis title Axis typesLinearLogarithmicDatetimeCategoriesWhat axis type should I use?Dynamically updating axes\n\n\n\nBubble legendIntroductionA bubble legend is an additional element, which can be added in any position in the chart legend. The bubble legend allows to present the scale of the bubble series in a simple and transparent way.Demo with autorangesDemo with the bubble legend styled in a similar way to the seriesDemo with rangesInstallationRequires highcharts-more.js. To display a bubble legend, set legend.bubbleLegend.enabled to true.ConfigurationThe code of bubbleLegend is very simple to set, and it allows a lot of customization. The part of the options like minSize, maxSize, sizeBy, and the size calculation method works in the same way as in a bubble series.Default style settings are taken from the first visible bubble series. The position of the bubble legend element on the chart is defined by the legend position.Use CasesThere are two ways to add the bubble legend to the chart:1. Automatic: without defining ranges. Creates three bubbles in the legend, the smallest and the biggest have the same dimensions and value as their counterparts in bubble series (all bubble series are included). The middle bubble has an average value of the other two. If there is only one bubble point on the chart, the bubble legend will also have only one bubble.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true        }    },    series: [{        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}Copy2. Custom: with manually defined ranges. Bubbles are calculated based on ranges, minSize, and maxSize, bubble series dimensions are not included.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true,            minSize: 20,            maxSize: 60,            ranges: [{                value: 14            }, {                value: 89            }]        }    },    series: [{        minSize: 20,        maxSize: 60,        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}CopyAPI documentFor more details check the API documentation.\n\nBubble legendIntroductionA bubble legend is an additional element, which can be added in any position in the chart legend. The bubble legend allows to present the scale of the bubble series in a simple and transparent way.Demo with autorangesDemo with the bubble legend styled in a similar way to the seriesDemo with rangesInstallationRequires highcharts-more.js. To display a bubble legend, set legend.bubbleLegend.enabled to true.ConfigurationThe code of bubbleLegend is very simple to set, and it allows a lot of customization. The part of the options like minSize, maxSize, sizeBy, and the size calculation method works in the same way as in a bubble series.Default style settings are taken from the first visible bubble series. The position of the bubble legend element on the chart is defined by the legend position.Use CasesThere are two ways to add the bubble legend to the chart:1. Automatic: without defining ranges. Creates three bubbles in the legend, the smallest and the biggest have the same dimensions and value as their counterparts in bubble series (all bubble series are included). The middle bubble has an average value of the other two. If there is only one bubble point on the chart, the bubble legend will also have only one bubble.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true        }    },    series: [{        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}Copy2. Custom: with manually defined ranges. Bubbles are calculated based on ranges, minSize, and maxSize, bubble series dimensions are not included.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true,            minSize: 20,            maxSize: 60,            ranges: [{                value: 14            }, {                value: 89            }]        }    },    series: [{        minSize: 20,        maxSize: 60,        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}CopyAPI documentFor more details check the API documentation.Edit this pagePrevious« Axes NextSeries  »IntroductionInstallationConfigurationUse CasesAPI document\n\nBubble legendIntroductionA bubble legend is an additional element, which can be added in any position in the chart legend. The bubble legend allows to present the scale of the bubble series in a simple and transparent way.Demo with autorangesDemo with the bubble legend styled in a similar way to the seriesDemo with rangesInstallationRequires highcharts-more.js. To display a bubble legend, set legend.bubbleLegend.enabled to true.ConfigurationThe code of bubbleLegend is very simple to set, and it allows a lot of customization. The part of the options like minSize, maxSize, sizeBy, and the size calculation method works in the same way as in a bubble series.Default style settings are taken from the first visible bubble series. The position of the bubble legend element on the chart is defined by the legend position.Use CasesThere are two ways to add the bubble legend to the chart:1. Automatic: without defining ranges. Creates three bubbles in the legend, the smallest and the biggest have the same dimensions and value as their counterparts in bubble series (all bubble series are included). The middle bubble has an average value of the other two. If there is only one bubble point on the chart, the bubble legend will also have only one bubble.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true        }    },    series: [{        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}Copy2. Custom: with manually defined ranges. Bubbles are calculated based on ranges, minSize, and maxSize, bubble series dimensions are not included.{    chart: {        type: 'bubble'    },    legend: {        bubbleLegend: {            enabled: true,            minSize: 20,            maxSize: 60,            ranges: [{                value: 14            }, {                value: 89            }]        }    },    series: [{        minSize: 20,        maxSize: 60,        data: [            [9, 81, 63],            [98, 5, 89],            [51, 50, 73],            [41, 22, 14],            [58, 24, 20]        ]    }]}CopyAPI documentFor more details check the API documentation.Edit this pagePrevious« Axes NextSeries  »IntroductionInstallationConfigurationUse CasesAPI document\n\n\n\nSeriesWhat is a series?A series is a set of data, for example a line graph or one set of columns. All data plotted on a chart comes from the series object. The series object has the structure:series: [{    name: '',    data: []}]CopyNote: The series object is an array, meaning it can contain several series.The name attribute gives the series a name, which shows up when hovering over the series in a chart and in the legend.The data in a seriesThe actual data is represented as an array, by the data attribute, and can be presented in three ways:A list of numerical values. In this case, the numerical values will be interpreted as y values and the x values will be automatically calculated, either starting at 0 and incrementing by 1, or from the pointStart and pointInterval options. If the axis has categories, these will be used. Example:data: [0, 5, 3, 5]CopyOnline exampleA list of arrays with two or more values. In this case, the first value is the x value and the second is the y value. If the first value is a date string and the x-axis is of type datetime, the string is parsed into a date. Otherwise if the first value is a string, it is applied as the name of the point, and the x value is incremented following the above rules. Some series, like arearange, accept more than two values. See API documentation for each series type. Example:data: [[5, 2], [6, 3], [8, 2]]CopyOnline exampleA list of objects with named values. In this case the objects are point configuration objects as seen under options.point. The full list of available properties can be seen from the API, for example for line series. Note that for this option to work in Highcharts Stock, the total number of points must not exceed the turboThreshold, or the turboThreshold setting must be increased. Example:data: [{    name: 'Point 1',    color: '#00FF00',    y: 0}, {    name: 'Point 2',    color: '#FF00FF',    y: 5}]CopyOnline examplePoint and markerFor cartesian charts, a point represents a (x, y) pair on the chart. Points can be given separate options inside the series data. For other chart types, the point represents other values than (x, y). For instance, in a range chart, the point represents (x, low, high). In an OHLC chart, the point represents (x, open, high, low, close). In a pie chart or gauge, the point represents a single value.The point option can be applied to all charts. Here is an example showing how to edit the color of a specific point:series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,            { y: 216.4, color: '#BF0B23'}, 194.1, 95.6, 54.4]}]CopyLine, spline, area and areaspline charts have the option to display point markers, these are slightly different from the point option because they enable altering the style and shape of the point marker.Here is an example showing how to alter the color and size of a marker on a specific point.series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,    {y: 216.4, marker: { fillColor: '#BF0B23', radius: 10 } }, 194.1, 95.6, 54.4]}]CopySeries optionsThe series options can be defined in two places within the Highcharts options structure.General options that apply to multiple series are defined in the plotOptions. To set general options for all series in the chart, use plotOptions.series. To set general options for a specific chart type, each chart type has its own collection of plotOptions.Specific options for each series are defined in the series options structure. All options that are listed for the plotOptions structure, can also be set in the specific series definition. Some options, like data, id or name, only make sense for specific series.Here is an overview over the most common options that can be applied to a data series:AnimationAllows disabling or altering the characteristics of the initial animation of a series. Animation is enabled by default.ColorAllows changing the color of a series.Point selectionAllows the selection and highlighting of a single point. Can be used to remove, edit or display information about a point.Try it hereCode to enable point selection:plotOptions: {    series: {        allowPointSelect: true    }}CopyCode to get the selected points:var selectedPoints = chart.getSelectedPoints();CopyLine widthAllows altering the width of a line.Try it hereCode to alter line width:series: [{    data: [216.4, 194.1, 95.6],    lineWidth: 5}],CopyStackingStacking allows series to be placed on top of each other without overlapping. See Stacking charts for more information.CursorAllows the cursor to change appearance to indicate that points and series are clickable.Data labelsAllows data labels to be displayed for each point of data in a series on the chart.Try it hereCode example showing how to enable datalabels:plotOptions: {    line: {        dataLabels: {            enabled: true        }    }},CopyNote: You may wish to disable mouse tracking, which highlights the series and points the mouse hovers over (tooltips will not show if mouse tracking is disabled).The text displayed on datalabels may also be customized by using the formatter option. See API reference for more options.Dash styleAllows to use dashed lines instead of solid, there are several different dash options available.Try it hereCode to set dashed lines for an individual series (the dashStyle can also be set in plotOptions):series: [{    data: [1, 3, 2, 4, 5, 4, 6, 2, 3, 5, 6],    dashStyle: 'longdash'}]CopyZonesIn some cases, you would want to display certain sections of the graph different. A common example is to use different colors when data falls in a certain range.  This effect can be achieved by using zones.  By default zoning is done on the yAxis, but this can be easily changed by setting the zoneAxis variable on the series.  For the zoning itself, you have to define an array called zones where each entry corresponds to a zone, delimited by a parameter value, which is the point up to which the zones goes. The settings that can be overwritten for each zone are color, fillColor and dashStyle.Code used for the zoning:zones: [{    value: 0,    color: '#f7a35c'}, {    value: 10,    color: '#7cb5ec'}, {    color: '#90ed7d'}]CopyAnother common use of this is to style future, estimated data points differently.Code used for the zoning:zoneAxis: 'x',zones: [{    value: 8}, {    dashStyle: 'dot'}]CopySee the API for more information.\n\nSeriesWhat is a series?A series is a set of data, for example a line graph or one set of columns. All data plotted on a chart comes from the series object. The series object has the structure:series: [{    name: '',    data: []}]CopyNote: The series object is an array, meaning it can contain several series.The name attribute gives the series a name, which shows up when hovering over the series in a chart and in the legend.The data in a seriesThe actual data is represented as an array, by the data attribute, and can be presented in three ways:A list of numerical values. In this case, the numerical values will be interpreted as y values and the x values will be automatically calculated, either starting at 0 and incrementing by 1, or from the pointStart and pointInterval options. If the axis has categories, these will be used. Example:data: [0, 5, 3, 5]CopyOnline exampleA list of arrays with two or more values. In this case, the first value is the x value and the second is the y value. If the first value is a date string and the x-axis is of type datetime, the string is parsed into a date. Otherwise if the first value is a string, it is applied as the name of the point, and the x value is incremented following the above rules. Some series, like arearange, accept more than two values. See API documentation for each series type. Example:data: [[5, 2], [6, 3], [8, 2]]CopyOnline exampleA list of objects with named values. In this case the objects are point configuration objects as seen under options.point. The full list of available properties can be seen from the API, for example for line series. Note that for this option to work in Highcharts Stock, the total number of points must not exceed the turboThreshold, or the turboThreshold setting must be increased. Example:data: [{    name: 'Point 1',    color: '#00FF00',    y: 0}, {    name: 'Point 2',    color: '#FF00FF',    y: 5}]CopyOnline examplePoint and markerFor cartesian charts, a point represents a (x, y) pair on the chart. Points can be given separate options inside the series data. For other chart types, the point represents other values than (x, y). For instance, in a range chart, the point represents (x, low, high). In an OHLC chart, the point represents (x, open, high, low, close). In a pie chart or gauge, the point represents a single value.The point option can be applied to all charts. Here is an example showing how to edit the color of a specific point:series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,            { y: 216.4, color: '#BF0B23'}, 194.1, 95.6, 54.4]}]CopyLine, spline, area and areaspline charts have the option to display point markers, these are slightly different from the point option because they enable altering the style and shape of the point marker.Here is an example showing how to alter the color and size of a marker on a specific point.series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,    {y: 216.4, marker: { fillColor: '#BF0B23', radius: 10 } }, 194.1, 95.6, 54.4]}]CopySeries optionsThe series options can be defined in two places within the Highcharts options structure.General options that apply to multiple series are defined in the plotOptions. To set general options for all series in the chart, use plotOptions.series. To set general options for a specific chart type, each chart type has its own collection of plotOptions.Specific options for each series are defined in the series options structure. All options that are listed for the plotOptions structure, can also be set in the specific series definition. Some options, like data, id or name, only make sense for specific series.Here is an overview over the most common options that can be applied to a data series:AnimationAllows disabling or altering the characteristics of the initial animation of a series. Animation is enabled by default.ColorAllows changing the color of a series.Point selectionAllows the selection and highlighting of a single point. Can be used to remove, edit or display information about a point.Try it hereCode to enable point selection:plotOptions: {    series: {        allowPointSelect: true    }}CopyCode to get the selected points:var selectedPoints = chart.getSelectedPoints();CopyLine widthAllows altering the width of a line.Try it hereCode to alter line width:series: [{    data: [216.4, 194.1, 95.6],    lineWidth: 5}],CopyStackingStacking allows series to be placed on top of each other without overlapping. See Stacking charts for more information.CursorAllows the cursor to change appearance to indicate that points and series are clickable.Data labelsAllows data labels to be displayed for each point of data in a series on the chart.Try it hereCode example showing how to enable datalabels:plotOptions: {    line: {        dataLabels: {            enabled: true        }    }},CopyNote: You may wish to disable mouse tracking, which highlights the series and points the mouse hovers over (tooltips will not show if mouse tracking is disabled).The text displayed on datalabels may also be customized by using the formatter option. See API reference for more options.Dash styleAllows to use dashed lines instead of solid, there are several different dash options available.Try it hereCode to set dashed lines for an individual series (the dashStyle can also be set in plotOptions):series: [{    data: [1, 3, 2, 4, 5, 4, 6, 2, 3, 5, 6],    dashStyle: 'longdash'}]CopyZonesIn some cases, you would want to display certain sections of the graph different. A common example is to use different colors when data falls in a certain range.  This effect can be achieved by using zones.  By default zoning is done on the yAxis, but this can be easily changed by setting the zoneAxis variable on the series.  For the zoning itself, you have to define an array called zones where each entry corresponds to a zone, delimited by a parameter value, which is the point up to which the zones goes. The settings that can be overwritten for each zone are color, fillColor and dashStyle.Code used for the zoning:zones: [{    value: 0,    color: '#f7a35c'}, {    value: 10,    color: '#7cb5ec'}, {    color: '#90ed7d'}]CopyAnother common use of this is to style future, estimated data points differently.Code used for the zoning:zoneAxis: 'x',zones: [{    value: 8}, {    dashStyle: 'dot'}]CopySee the API for more information.Edit this pagePrevious« Bubble legend NextTooltip  »What is a series?The data in a seriesPoint and markerSeries optionsAnimationColorPoint selectionLine widthStackingCursorData labelsDash styleZones\n\nSeriesWhat is a series?A series is a set of data, for example a line graph or one set of columns. All data plotted on a chart comes from the series object. The series object has the structure:series: [{    name: '',    data: []}]CopyNote: The series object is an array, meaning it can contain several series.The name attribute gives the series a name, which shows up when hovering over the series in a chart and in the legend.The data in a seriesThe actual data is represented as an array, by the data attribute, and can be presented in three ways:A list of numerical values. In this case, the numerical values will be interpreted as y values and the x values will be automatically calculated, either starting at 0 and incrementing by 1, or from the pointStart and pointInterval options. If the axis has categories, these will be used. Example:data: [0, 5, 3, 5]CopyOnline exampleA list of arrays with two or more values. In this case, the first value is the x value and the second is the y value. If the first value is a date string and the x-axis is of type datetime, the string is parsed into a date. Otherwise if the first value is a string, it is applied as the name of the point, and the x value is incremented following the above rules. Some series, like arearange, accept more than two values. See API documentation for each series type. Example:data: [[5, 2], [6, 3], [8, 2]]CopyOnline exampleA list of objects with named values. In this case the objects are point configuration objects as seen under options.point. The full list of available properties can be seen from the API, for example for line series. Note that for this option to work in Highcharts Stock, the total number of points must not exceed the turboThreshold, or the turboThreshold setting must be increased. Example:data: [{    name: 'Point 1',    color: '#00FF00',    y: 0}, {    name: 'Point 2',    color: '#FF00FF',    y: 5}]CopyOnline examplePoint and markerFor cartesian charts, a point represents a (x, y) pair on the chart. Points can be given separate options inside the series data. For other chart types, the point represents other values than (x, y). For instance, in a range chart, the point represents (x, low, high). In an OHLC chart, the point represents (x, open, high, low, close). In a pie chart or gauge, the point represents a single value.The point option can be applied to all charts. Here is an example showing how to edit the color of a specific point:series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,            { y: 216.4, color: '#BF0B23'}, 194.1, 95.6, 54.4]}]CopyLine, spline, area and areaspline charts have the option to display point markers, these are slightly different from the point option because they enable altering the style and shape of the point marker.Here is an example showing how to alter the color and size of a marker on a specific point.series: [{    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5,    {y: 216.4, marker: { fillColor: '#BF0B23', radius: 10 } }, 194.1, 95.6, 54.4]}]CopySeries optionsThe series options can be defined in two places within the Highcharts options structure.General options that apply to multiple series are defined in the plotOptions. To set general options for all series in the chart, use plotOptions.series. To set general options for a specific chart type, each chart type has its own collection of plotOptions.Specific options for each series are defined in the series options structure. All options that are listed for the plotOptions structure, can also be set in the specific series definition. Some options, like data, id or name, only make sense for specific series.Here is an overview over the most common options that can be applied to a data series:AnimationAllows disabling or altering the characteristics of the initial animation of a series. Animation is enabled by default.ColorAllows changing the color of a series.Point selectionAllows the selection and highlighting of a single point. Can be used to remove, edit or display information about a point.Try it hereCode to enable point selection:plotOptions: {    series: {        allowPointSelect: true    }}CopyCode to get the selected points:var selectedPoints = chart.getSelectedPoints();CopyLine widthAllows altering the width of a line.Try it hereCode to alter line width:series: [{    data: [216.4, 194.1, 95.6],    lineWidth: 5}],CopyStackingStacking allows series to be placed on top of each other without overlapping. See Stacking charts for more information.CursorAllows the cursor to change appearance to indicate that points and series are clickable.Data labelsAllows data labels to be displayed for each point of data in a series on the chart.Try it hereCode example showing how to enable datalabels:plotOptions: {    line: {        dataLabels: {            enabled: true        }    }},CopyNote: You may wish to disable mouse tracking, which highlights the series and points the mouse hovers over (tooltips will not show if mouse tracking is disabled).The text displayed on datalabels may also be customized by using the formatter option. See API reference for more options.Dash styleAllows to use dashed lines instead of solid, there are several different dash options available.Try it hereCode to set dashed lines for an individual series (the dashStyle can also be set in plotOptions):series: [{    data: [1, 3, 2, 4, 5, 4, 6, 2, 3, 5, 6],    dashStyle: 'longdash'}]CopyZonesIn some cases, you would want to display certain sections of the graph different. A common example is to use different colors when data falls in a certain range.  This effect can be achieved by using zones.  By default zoning is done on the yAxis, but this can be easily changed by setting the zoneAxis variable on the series.  For the zoning itself, you have to define an array called zones where each entry corresponds to a zone, delimited by a parameter value, which is the point up to which the zones goes. The settings that can be overwritten for each zone are color, fillColor and dashStyle.Code used for the zoning:zones: [{    value: 0,    color: '#f7a35c'}, {    value: 10,    color: '#7cb5ec'}, {    color: '#90ed7d'}]CopyAnother common use of this is to style future, estimated data points differently.Code used for the zoning:zoneAxis: 'x',zones: [{    value: 8}, {    dashStyle: 'dot'}]CopySee the API for more information.Edit this pagePrevious« Bubble legend NextTooltip  »What is a series?The data in a seriesPoint and markerSeries optionsAnimationColorPoint selectionLine widthStackingCursorData labelsDash styleZones\n\n\n\nTooltipThe tooltip appears when hovering over a point in a series. By default the tooltip shows the values of the point and the name of the series. For the full set of options available for the tooltip, see the API reference.Appearance The following code example shows the most common appearance options for tooltip:tooltip: {    backgroundColor: '#FCFFC5',    borderColor: 'black',    borderRadius: 10,    borderWidth: 3}CopyThe background color can also be set to a gradient, see an example. Text properties can be set using the style option.Alternatively, the tooltip can be styled with CSS by enabling styled mode:.highcharts-tooltip-box {    fill: #FCFFC5;    stroke: black;    stroke-width: 3;}CopyNote: Since the tooltip content is rendered as SVG by default, you have to specify SVG properties such as fill and stroke in CSS.Tooltip formattingThe tooltip's content is rendered from a subset of HTML that can be altered in a number of ways, all in all giving the implementer full control over the content. In addition to options on the tooltip configuration object, you can set the options for how each series should be represented in the tooltip by series.tooltip. The header part of the tooltip can be altered using the tooltip.headerFormat. In a shared tooltip, the first series' headerFormat is used.The listing of each series is given in the tooltip.pointFormat option, or an individual pointFormat for each series. The footer part can be set in the tooltip.footerFormat option.All the options above can be overridden by the tooltip.formatter callback for programmatic control.By default the tooltip only allows a subset of HTML because the HTML is parsed and rendered using SVG. By setting the useHTML option to true, the renderer switches to full HTML, which allows for instance table layouts or images inside the tooltip.tooltip: {    format: 'The value for <b>{x}</b> is <b>{y}</b>, in series {series.name}'}CopyFor more info about formatting see Labels and string
formattingPositioningHighcharts offers several options to tailor tooltip positioning to your needs,
improving both functionality and design.Shared tooltips are great for charts with multiple series. A single tooltip
displays information for all series at a specific x-axis value, reducing clutter
and making comparisons easier. See
tooltip.shared.Split tooltips display separate tooltips for each series point, which can
be useful when detailed information for each data point is needed. See
tooltip.split.Fixed tooltips (since v12.2) display the tooltips in a fixed position on
the chart - by default the top left corner of the data pane. Fixed tooltips
can be combined with shared or split. See
tooltip.fixed.CrosshairsCrosshairs display a line connecting the points with their corresponding axis. Crosshairs are disabled by default in Highcharts, but enabled by default in Highcharts Stock. See the full set of options for crosshairs.Crosshairs can be enabled for the x-axis, y-axis or both:// Enable for x-axisxAxis: {    crosshair: true}// Enable for y-axisyAxis: {    crosshair: true}Copy\n\nTooltipThe tooltip appears when hovering over a point in a series. By default the tooltip shows the values of the point and the name of the series. For the full set of options available for the tooltip, see the API reference.Appearance The following code example shows the most common appearance options for tooltip:tooltip: {    backgroundColor: '#FCFFC5',    borderColor: 'black',    borderRadius: 10,    borderWidth: 3}CopyThe background color can also be set to a gradient, see an example. Text properties can be set using the style option.Alternatively, the tooltip can be styled with CSS by enabling styled mode:.highcharts-tooltip-box {    fill: #FCFFC5;    stroke: black;    stroke-width: 3;}CopyNote: Since the tooltip content is rendered as SVG by default, you have to specify SVG properties such as fill and stroke in CSS.Tooltip formattingThe tooltip's content is rendered from a subset of HTML that can be altered in a number of ways, all in all giving the implementer full control over the content. In addition to options on the tooltip configuration object, you can set the options for how each series should be represented in the tooltip by series.tooltip. The header part of the tooltip can be altered using the tooltip.headerFormat. In a shared tooltip, the first series' headerFormat is used.The listing of each series is given in the tooltip.pointFormat option, or an individual pointFormat for each series. The footer part can be set in the tooltip.footerFormat option.All the options above can be overridden by the tooltip.formatter callback for programmatic control.By default the tooltip only allows a subset of HTML because the HTML is parsed and rendered using SVG. By setting the useHTML option to true, the renderer switches to full HTML, which allows for instance table layouts or images inside the tooltip.tooltip: {    format: 'The value for <b>{x}</b> is <b>{y}</b>, in series {series.name}'}CopyFor more info about formatting see Labels and string
formattingPositioningHighcharts offers several options to tailor tooltip positioning to your needs,
improving both functionality and design.Shared tooltips are great for charts with multiple series. A single tooltip
displays information for all series at a specific x-axis value, reducing clutter
and making comparisons easier. See
tooltip.shared.Split tooltips display separate tooltips for each series point, which can
be useful when detailed information for each data point is needed. See
tooltip.split.Fixed tooltips (since v12.2) display the tooltips in a fixed position on
the chart - by default the top left corner of the data pane. Fixed tooltips
can be combined with shared or split. See
tooltip.fixed.CrosshairsCrosshairs display a line connecting the points with their corresponding axis. Crosshairs are disabled by default in Highcharts, but enabled by default in Highcharts Stock. See the full set of options for crosshairs.Crosshairs can be enabled for the x-axis, y-axis or both:// Enable for x-axisxAxis: {    crosshair: true}// Enable for y-axisyAxis: {    crosshair: true}CopyEdit this pagePrevious« Series NextLegend  »AppearanceTooltip formattingPositioningCrosshairs\n\nTooltipThe tooltip appears when hovering over a point in a series. By default the tooltip shows the values of the point and the name of the series. For the full set of options available for the tooltip, see the API reference.Appearance The following code example shows the most common appearance options for tooltip:tooltip: {    backgroundColor: '#FCFFC5',    borderColor: 'black',    borderRadius: 10,    borderWidth: 3}CopyThe background color can also be set to a gradient, see an example. Text properties can be set using the style option.Alternatively, the tooltip can be styled with CSS by enabling styled mode:.highcharts-tooltip-box {    fill: #FCFFC5;    stroke: black;    stroke-width: 3;}CopyNote: Since the tooltip content is rendered as SVG by default, you have to specify SVG properties such as fill and stroke in CSS.Tooltip formattingThe tooltip's content is rendered from a subset of HTML that can be altered in a number of ways, all in all giving the implementer full control over the content. In addition to options on the tooltip configuration object, you can set the options for how each series should be represented in the tooltip by series.tooltip. The header part of the tooltip can be altered using the tooltip.headerFormat. In a shared tooltip, the first series' headerFormat is used.The listing of each series is given in the tooltip.pointFormat option, or an individual pointFormat for each series. The footer part can be set in the tooltip.footerFormat option.All the options above can be overridden by the tooltip.formatter callback for programmatic control.By default the tooltip only allows a subset of HTML because the HTML is parsed and rendered using SVG. By setting the useHTML option to true, the renderer switches to full HTML, which allows for instance table layouts or images inside the tooltip.tooltip: {    format: 'The value for <b>{x}</b> is <b>{y}</b>, in series {series.name}'}CopyFor more info about formatting see Labels and string
formattingPositioningHighcharts offers several options to tailor tooltip positioning to your needs,
improving both functionality and design.Shared tooltips are great for charts with multiple series. A single tooltip
displays information for all series at a specific x-axis value, reducing clutter
and making comparisons easier. See
tooltip.shared.Split tooltips display separate tooltips for each series point, which can
be useful when detailed information for each data point is needed. See
tooltip.split.Fixed tooltips (since v12.2) display the tooltips in a fixed position on
the chart - by default the top left corner of the data pane. Fixed tooltips
can be combined with shared or split. See
tooltip.fixed.CrosshairsCrosshairs display a line connecting the points with their corresponding axis. Crosshairs are disabled by default in Highcharts, but enabled by default in Highcharts Stock. See the full set of options for crosshairs.Crosshairs can be enabled for the x-axis, y-axis or both:// Enable for x-axisxAxis: {    crosshair: true}// Enable for y-axisyAxis: {    crosshair: true}CopyEdit this pagePrevious« Series NextLegend  »AppearanceTooltip formattingPositioningCrosshairs\n\n\n\nLegendThe legend displays the series in a chart with a predefined symbol and the name of the series. Series can be disabled and enabled from the legend.For more information see the API reference for legend options.\n\nLegendThe legend displays the series in a chart with a predefined symbol and the name of the series. Series can be disabled and enabled from the legend.For more information see the API reference for legend options.Edit this pagePrevious« Tooltip NextScrollbars  »\n\nLegendThe legend displays the series in a chart with a predefined symbol and the name of the series. Series can be disabled and enabled from the legend.For more information see the API reference for legend options.Edit this pagePrevious« Tooltip NextScrollbars  »\n\n\n\nScrollbarsThere are two major approaches to scrollbars in Highcharts.Native scrollbars for mobileThese scrollbars are applied by setting a scrollablePlotArea with a minWidth. When the width of the plot area becomes less than this, it is applied to a separate div in the page, where native, smooth scrolling is applied, while the axes, titles, legend and other elements stay fixed. This provides a great way to support long data series in a narrow mobile view. See the effect below in a mobile browser or just a small desktop browser window.Axis scrollbars through an API optionThese scrollbars are enabled per axis and appear next to the axis. Scrollbars can be applied to any axis in Highcharts Stock.The full documentation and available options can be seen in our API docs for Highcharts Stock.Scrollbars are not limited to stock charts or Y axis. Using the highstock.js file, it can be applied to regular Highcharts axes too. See examples of:Scrollable bar chartHeatmap with two scrollable axes (zoom in first)Scrollable Y axis on stock chart (zoom in first)\n\nScrollbarsThere are two major approaches to scrollbars in Highcharts.Native scrollbars for mobileThese scrollbars are applied by setting a scrollablePlotArea with a minWidth. When the width of the plot area becomes less than this, it is applied to a separate div in the page, where native, smooth scrolling is applied, while the axes, titles, legend and other elements stay fixed. This provides a great way to support long data series in a narrow mobile view. See the effect below in a mobile browser or just a small desktop browser window.Axis scrollbars through an API optionThese scrollbars are enabled per axis and appear next to the axis. Scrollbars can be applied to any axis in Highcharts Stock.The full documentation and available options can be seen in our API docs for Highcharts Stock.Scrollbars are not limited to stock charts or Y axis. Using the highstock.js file, it can be applied to regular Highcharts axes too. See examples of:Scrollable bar chartHeatmap with two scrollable axes (zoom in first)Scrollable Y axis on stock chart (zoom in first)Edit this pagePrevious« Legend NextPlot bands and plot lines  »\n\nScrollbarsThere are two major approaches to scrollbars in Highcharts.Native scrollbars for mobileThese scrollbars are applied by setting a scrollablePlotArea with a minWidth. When the width of the plot area becomes less than this, it is applied to a separate div in the page, where native, smooth scrolling is applied, while the axes, titles, legend and other elements stay fixed. This provides a great way to support long data series in a narrow mobile view. See the effect below in a mobile browser or just a small desktop browser window.Axis scrollbars through an API optionThese scrollbars are enabled per axis and appear next to the axis. Scrollbars can be applied to any axis in Highcharts Stock.The full documentation and available options can be seen in our API docs for Highcharts Stock.Scrollbars are not limited to stock charts or Y axis. Using the highstock.js file, it can be applied to regular Highcharts axes too. See examples of:Scrollable bar chartHeatmap with two scrollable axes (zoom in first)Scrollable Y axis on stock chart (zoom in first)Edit this pagePrevious« Legend NextPlot bands and plot lines  »\n\n\n\nPlot bands and plot linesPlot lines and plot bands are quite similar in use. They both have the option of color, events, id, label and zIndex. The lines and bands will always be perpendicular to the axis it is defined within. With the use of a polar chart or gauge this will create interesting examples which are described later. When a plot band/line is used on both the x- and y-axis, the plot band/line on the y-axis will be shown in front, as seen in the example below. Plot bands can be created either on the x-axis or the y-axis. It can also be created on both axes:xAxis: {  ...,  plotBands: [{    color: 'orange', // Color value    from: 3, // Start of the plot band    to: 4 // End of the plot band  }],  plotLines: [{    color: 'red', // Color value    dashStyle: 'longdashdot', // Style of the plot line. Default to solid    value: 3, // Value of where the line will appear    width: 2 // Width of the line      }]},yAxis: {  ...,  plotBands: [{    ... // Same as in the xAxis  }],  plotLines: [{    ... // Same as in the xAxis  }]}CopyLabelsThe plot bands and plot lines have the option of containing a label. This is a text which will be shown on top of the band or line.To create labels for plot bands or lines you can add the object "label":plotBands: {  ...,  label: {     text: 'I am a label', // Content of the label.     align: 'left', // Positioning of the label. Default to center.    x: +10 // Amount of pixels the label will be repositioned according to the alignment.   }}CopyEvents"events" are an object which can be created inside a plot band or plot line object. This object defines mouse events according to the band or line. Values that are supported are click, mouseover, mouseout and mousemove.plotBands: {  ...,  events: {    click: function () {      // Action performed when event occurs    },    mouseover: function () {      // Action performed when event occurs    },    mouseout: function () {      // Action performed when event occurs    },    mousemove: function () {      // Action performed when event occurs    }  }}CopyExample of how events can be used.Dynamically updateAfter render time a chart can be updated with new plot bands or lines, or if you want some can be removed. This is done by using the functions addPlotBand(), addPlotLine(), removePlotBand() or removePlotLine(). With use of these functions the chart allows for interaction with the user. When removing a plot band or line it is critical that the object which should be removed has been given an id. Without it the object cannot be recognized and the function cannot be executed.Some simple examples of how a plot band can be added to the chart and how it can be removed.Plot bands and lines in polar charts and gaugesWith a plot band in a polar chart or a gauge, the band will form as a concentric circle around the chart.  When used inside the x-axis of a polar chart the band will wrap around the outer corner of the chart. With the y-axis it will form a circle and fill the given area. Inside a gauge the band will wrap around the outer corner of the chart. The plot line will form as a straight line when used within the x-axis, and as a concentric circle used within the y-axis.Plot bands and plot lines examplesSpline with plot bandsSpline with dashed and dotted plot linesRemoving a plot bandToggle plot bandFor more information and examples look in the api for plotBands, plotLines, addPlotBand and addPlotLine.\n\nPlot bands and plot linesPlot lines and plot bands are quite similar in use. They both have the option of color, events, id, label and zIndex. The lines and bands will always be perpendicular to the axis it is defined within. With the use of a polar chart or gauge this will create interesting examples which are described later. When a plot band/line is used on both the x- and y-axis, the plot band/line on the y-axis will be shown in front, as seen in the example below. Plot bands can be created either on the x-axis or the y-axis. It can also be created on both axes:xAxis: {  ...,  plotBands: [{    color: 'orange', // Color value    from: 3, // Start of the plot band    to: 4 // End of the plot band  }],  plotLines: [{    color: 'red', // Color value    dashStyle: 'longdashdot', // Style of the plot line. Default to solid    value: 3, // Value of where the line will appear    width: 2 // Width of the line      }]},yAxis: {  ...,  plotBands: [{    ... // Same as in the xAxis  }],  plotLines: [{    ... // Same as in the xAxis  }]}CopyLabelsThe plot bands and plot lines have the option of containing a label. This is a text which will be shown on top of the band or line.To create labels for plot bands or lines you can add the object "label":plotBands: {  ...,  label: {     text: 'I am a label', // Content of the label.     align: 'left', // Positioning of the label. Default to center.    x: +10 // Amount of pixels the label will be repositioned according to the alignment.   }}CopyEvents"events" are an object which can be created inside a plot band or plot line object. This object defines mouse events according to the band or line. Values that are supported are click, mouseover, mouseout and mousemove.plotBands: {  ...,  events: {    click: function () {      // Action performed when event occurs    },    mouseover: function () {      // Action performed when event occurs    },    mouseout: function () {      // Action performed when event occurs    },    mousemove: function () {      // Action performed when event occurs    }  }}CopyExample of how events can be used.Dynamically updateAfter render time a chart can be updated with new plot bands or lines, or if you want some can be removed. This is done by using the functions addPlotBand(), addPlotLine(), removePlotBand() or removePlotLine(). With use of these functions the chart allows for interaction with the user. When removing a plot band or line it is critical that the object which should be removed has been given an id. Without it the object cannot be recognized and the function cannot be executed.Some simple examples of how a plot band can be added to the chart and how it can be removed.Plot bands and lines in polar charts and gaugesWith a plot band in a polar chart or a gauge, the band will form as a concentric circle around the chart.  When used inside the x-axis of a polar chart the band will wrap around the outer corner of the chart. With the y-axis it will form a circle and fill the given area. Inside a gauge the band will wrap around the outer corner of the chart. The plot line will form as a straight line when used within the x-axis, and as a concentric circle used within the y-axis.Plot bands and plot lines examplesSpline with plot bandsSpline with dashed and dotted plot linesRemoving a plot bandToggle plot bandFor more information and examples look in the api for plotBands, plotLines, addPlotBand and addPlotLine.Edit this pagePrevious« Scrollbars NextZooming  »LabelsDynamically updatePlot bands and lines in polar charts and gaugesPlot bands and plot lines examples\n\nPlot bands and plot linesPlot lines and plot bands are quite similar in use. They both have the option of color, events, id, label and zIndex. The lines and bands will always be perpendicular to the axis it is defined within. With the use of a polar chart or gauge this will create interesting examples which are described later. When a plot band/line is used on both the x- and y-axis, the plot band/line on the y-axis will be shown in front, as seen in the example below. Plot bands can be created either on the x-axis or the y-axis. It can also be created on both axes:xAxis: {  ...,  plotBands: [{    color: 'orange', // Color value    from: 3, // Start of the plot band    to: 4 // End of the plot band  }],  plotLines: [{    color: 'red', // Color value    dashStyle: 'longdashdot', // Style of the plot line. Default to solid    value: 3, // Value of where the line will appear    width: 2 // Width of the line      }]},yAxis: {  ...,  plotBands: [{    ... // Same as in the xAxis  }],  plotLines: [{    ... // Same as in the xAxis  }]}CopyLabelsThe plot bands and plot lines have the option of containing a label. This is a text which will be shown on top of the band or line.To create labels for plot bands or lines you can add the object "label":plotBands: {  ...,  label: {     text: 'I am a label', // Content of the label.     align: 'left', // Positioning of the label. Default to center.    x: +10 // Amount of pixels the label will be repositioned according to the alignment.   }}CopyEvents"events" are an object which can be created inside a plot band or plot line object. This object defines mouse events according to the band or line. Values that are supported are click, mouseover, mouseout and mousemove.plotBands: {  ...,  events: {    click: function () {      // Action performed when event occurs    },    mouseover: function () {      // Action performed when event occurs    },    mouseout: function () {      // Action performed when event occurs    },    mousemove: function () {      // Action performed when event occurs    }  }}CopyExample of how events can be used.Dynamically updateAfter render time a chart can be updated with new plot bands or lines, or if you want some can be removed. This is done by using the functions addPlotBand(), addPlotLine(), removePlotBand() or removePlotLine(). With use of these functions the chart allows for interaction with the user. When removing a plot band or line it is critical that the object which should be removed has been given an id. Without it the object cannot be recognized and the function cannot be executed.Some simple examples of how a plot band can be added to the chart and how it can be removed.Plot bands and lines in polar charts and gaugesWith a plot band in a polar chart or a gauge, the band will form as a concentric circle around the chart.  When used inside the x-axis of a polar chart the band will wrap around the outer corner of the chart. With the y-axis it will form a circle and fill the given area. Inside a gauge the band will wrap around the outer corner of the chart. The plot line will form as a straight line when used within the x-axis, and as a concentric circle used within the y-axis.Plot bands and plot lines examplesSpline with plot bandsSpline with dashed and dotted plot linesRemoving a plot bandToggle plot bandFor more information and examples look in the api for plotBands, plotLines, addPlotBand and addPlotLine.Edit this pagePrevious« Scrollbars NextZooming  »LabelsDynamically updatePlot bands and lines in polar charts and gaugesPlot bands and plot lines examples\n\n\n\nZoomingHighcharts CoreZooming in Highcharts can be enabled on the X axes or Y axes separately. The
chart.zooming.type
option is set to either "x", "y" or "xy".With a mouse pointer, the zooming is performed by dragging out a rectangle in
the chart. If the
chart.panKey
is set, the user can press that key and drag the mouse in order to pan.
Otherwise, the user can't pan the zoomed area but has to zoom out then in again
on a new area.When zooming, a button appears that lets the user zoom out. Programmatically,
the Chart.zoomOut function can be used to the same effect.On touch devices, the user can zoom by pinching in the chart area. On these
devices, the user may also move the zoomed area by panning with one finger
across the chart.The Y axes do not scale to zoomed areas by default like X axes do. This
behavior will become active, when the axis options
startOnTick
and
endOnTick
are set to false.Since v11.1, mouse wheel zooming is available through the zooming.mouseWheel option set. It requires a separate module
file for Highcharts Core,
but is bundled in Highcharts Stock.Highcharts StockIn Highcharts Stock, we also have the Navigator, Range Selector, and Scrollbar to ease
navigation, so zooming is disabled by default. Instead, panning is enabled so
that moving the zoomed area is easier. On touch devices, both zooming and panning are enabled through the
chart.zooming.pinchType
option, which defaults to "x".Mouse wheel zooming
is enabled in Highcharts Stock by default since v11.1.\n\nZoomingHighcharts CoreZooming in Highcharts can be enabled on the X axes or Y axes separately. The
chart.zooming.type
option is set to either "x", "y" or "xy".With a mouse pointer, the zooming is performed by dragging out a rectangle in
the chart. If the
chart.panKey
is set, the user can press that key and drag the mouse in order to pan.
Otherwise, the user can't pan the zoomed area but has to zoom out then in again
on a new area.When zooming, a button appears that lets the user zoom out. Programmatically,
the Chart.zoomOut function can be used to the same effect.On touch devices, the user can zoom by pinching in the chart area. On these
devices, the user may also move the zoomed area by panning with one finger
across the chart.The Y axes do not scale to zoomed areas by default like X axes do. This
behavior will become active, when the axis options
startOnTick
and
endOnTick
are set to false.Since v11.1, mouse wheel zooming is available through the zooming.mouseWheel option set. It requires a separate module
file for Highcharts Core,
but is bundled in Highcharts Stock.Highcharts StockIn Highcharts Stock, we also have the Navigator, Range Selector, and Scrollbar to ease
navigation, so zooming is disabled by default. Instead, panning is enabled so
that moving the zoomed area is easier. On touch devices, both zooming and panning are enabled through the
chart.zooming.pinchType
option, which defaults to "x".Mouse wheel zooming
is enabled in Highcharts Stock by default since v11.1.Edit this pagePrevious« Plot bands and plot lines NextLabels and string formatting  »Highcharts CoreHighcharts Stock\n\nZoomingHighcharts CoreZooming in Highcharts can be enabled on the X axes or Y axes separately. The
chart.zooming.type
option is set to either "x", "y" or "xy".With a mouse pointer, the zooming is performed by dragging out a rectangle in
the chart. If the
chart.panKey
is set, the user can press that key and drag the mouse in order to pan.
Otherwise, the user can't pan the zoomed area but has to zoom out then in again
on a new area.When zooming, a button appears that lets the user zoom out. Programmatically,
the Chart.zoomOut function can be used to the same effect.On touch devices, the user can zoom by pinching in the chart area. On these
devices, the user may also move the zoomed area by panning with one finger
across the chart.The Y axes do not scale to zoomed areas by default like X axes do. This
behavior will become active, when the axis options
startOnTick
and
endOnTick
are set to false.Since v11.1, mouse wheel zooming is available through the zooming.mouseWheel option set. It requires a separate module
file for Highcharts Core,
but is bundled in Highcharts Stock.Highcharts StockIn Highcharts Stock, we also have the Navigator, Range Selector, and Scrollbar to ease
navigation, so zooming is disabled by default. Instead, panning is enabled so
that moving the zoomed area is easier. On touch devices, both zooming and panning are enabled through the
chart.zooming.pinchType
option, which defaults to "x".Mouse wheel zooming
is enabled in Highcharts Stock by default since v11.1.Edit this pagePrevious« Plot bands and plot lines NextLabels and string formatting  »Highcharts CoreHighcharts Stock\n\n\n\nLabels and string formattingAnywhere in Highcharts where text strings occur, they allow modification by formatters or format options. All format string options have matching formatter callbacks. While formatter callbacks have greater flexibility, format strings are typically more compact, and they are JSON compatible.HTML in HighchartsTexts and labels in Highcharts are given in HTML, but as the HTML is parsed and rendered in SVG, only a subset is supported. The following tags are supported: <a>, <b>, <strong>, <i>, <em>, <br/>, <span>. Spans can be styled with a style attribute, but only text-related CSS that is shared with SVG is handled.Most places where text is handled in Highcharts, it is also followed by an
option called useHTML. When this is true, the text is laid out as HTML on top
of the chart. This allows for full HTML support and can be a good idea if you
want to add images in your labels, tables in your tooltip etc.Prior to Highcharts v12.2, the downsides are:It will always be laid out on top of all other SVG content. Specifically the
tooltip may be rendered below the useHTML label, unless
tooltip.outside is
set to true.It is not rendered the same way in exported charts, unless you use the
experimental
exporting.allowHTML
option.Since v12.2, we implemented an experimental feature to render HTML inside
foreignObject elements in SVG. This fixed the z-index issue, and works across
all modern browsers. Our goal is to make this the default behavior, but want to
try it out behind a flag first. To enable this feature, set
Highcharts.HTMLElement.useForeignObject to true. See the live demo of
useHTML with foreign
object.For the default behavior (a parallel HTML structure outside the SVG), see the
live demo of
useHTML
in some common elements.Using HTML also works around some older browser bugs with bi-directional text.
Read more
under Internationalization.FilteringFor security reasons, Highcharts since version 9 filters out unknown tags and attributes. See the security page for details.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyFormat stringsFormat strings are templates for labels. Since v11.1 the format strings support logic. We recommend using format strings if youNeed to save the chart configuration to JSON.Need to provide a GUI for end users so that callbacks are not practical, or XSS is a concern.Need to send the charts over to our export server to execute (all callbacks are stripped out).Are creating a wrapper for another programming language than JavaScript.Examples of format strings are xAxis.labels.format, tooltip.pointFormat and legend.labelFormat. For a full overview over templating in format strings, read the Templating article.Formatter callbacksFor full control over string handling and additional scripting capabilities around the labels, you might need to use formatter callbacks. These formatters return HTML (subset). Examples of these are xAxis.labels.formatter, tooltip.formatter and legend.labelFormatter. Often times you'll need to call Highcharts.dateFormat() and Highcharts.numberFormat() from the formatters.\n\nLabels and string formattingAnywhere in Highcharts where text strings occur, they allow modification by formatters or format options. All format string options have matching formatter callbacks. While formatter callbacks have greater flexibility, format strings are typically more compact, and they are JSON compatible.HTML in HighchartsTexts and labels in Highcharts are given in HTML, but as the HTML is parsed and rendered in SVG, only a subset is supported. The following tags are supported: <a>, <b>, <strong>, <i>, <em>, <br/>, <span>. Spans can be styled with a style attribute, but only text-related CSS that is shared with SVG is handled.Most places where text is handled in Highcharts, it is also followed by an
option called useHTML. When this is true, the text is laid out as HTML on top
of the chart. This allows for full HTML support and can be a good idea if you
want to add images in your labels, tables in your tooltip etc.Prior to Highcharts v12.2, the downsides are:It will always be laid out on top of all other SVG content. Specifically the
tooltip may be rendered below the useHTML label, unless
tooltip.outside is
set to true.It is not rendered the same way in exported charts, unless you use the
experimental
exporting.allowHTML
option.Since v12.2, we implemented an experimental feature to render HTML inside
foreignObject elements in SVG. This fixed the z-index issue, and works across
all modern browsers. Our goal is to make this the default behavior, but want to
try it out behind a flag first. To enable this feature, set
Highcharts.HTMLElement.useForeignObject to true. See the live demo of
useHTML with foreign
object.For the default behavior (a parallel HTML structure outside the SVG), see the
live demo of
useHTML
in some common elements.Using HTML also works around some older browser bugs with bi-directional text.
Read more
under Internationalization.FilteringFor security reasons, Highcharts since version 9 filters out unknown tags and attributes. See the security page for details.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyFormat stringsFormat strings are templates for labels. Since v11.1 the format strings support logic. We recommend using format strings if youNeed to save the chart configuration to JSON.Need to provide a GUI for end users so that callbacks are not practical, or XSS is a concern.Need to send the charts over to our export server to execute (all callbacks are stripped out).Are creating a wrapper for another programming language than JavaScript.Examples of format strings are xAxis.labels.format, tooltip.pointFormat and legend.labelFormat. For a full overview over templating in format strings, read the Templating article.Formatter callbacksFor full control over string handling and additional scripting capabilities around the labels, you might need to use formatter callbacks. These formatters return HTML (subset). Examples of these are xAxis.labels.formatter, tooltip.formatter and legend.labelFormatter. Often times you'll need to call Highcharts.dateFormat() and Highcharts.numberFormat() from the formatters.Edit this pagePrevious« Zooming NextTemplating  »HTML in HighchartsFilteringFormat stringsFormatter callbacks\n\nLabels and string formattingAnywhere in Highcharts where text strings occur, they allow modification by formatters or format options. All format string options have matching formatter callbacks. While formatter callbacks have greater flexibility, format strings are typically more compact, and they are JSON compatible.HTML in HighchartsTexts and labels in Highcharts are given in HTML, but as the HTML is parsed and rendered in SVG, only a subset is supported. The following tags are supported: <a>, <b>, <strong>, <i>, <em>, <br/>, <span>. Spans can be styled with a style attribute, but only text-related CSS that is shared with SVG is handled.Most places where text is handled in Highcharts, it is also followed by an
option called useHTML. When this is true, the text is laid out as HTML on top
of the chart. This allows for full HTML support and can be a good idea if you
want to add images in your labels, tables in your tooltip etc.Prior to Highcharts v12.2, the downsides are:It will always be laid out on top of all other SVG content. Specifically the
tooltip may be rendered below the useHTML label, unless
tooltip.outside is
set to true.It is not rendered the same way in exported charts, unless you use the
experimental
exporting.allowHTML
option.Since v12.2, we implemented an experimental feature to render HTML inside
foreignObject elements in SVG. This fixed the z-index issue, and works across
all modern browsers. Our goal is to make this the default behavior, but want to
try it out behind a flag first. To enable this feature, set
Highcharts.HTMLElement.useForeignObject to true. See the live demo of
useHTML with foreign
object.For the default behavior (a parallel HTML structure outside the SVG), see the
live demo of
useHTML
in some common elements.Using HTML also works around some older browser bugs with bi-directional text.
Read more
under Internationalization.FilteringFor security reasons, Highcharts since version 9 filters out unknown tags and attributes. See the security page for details.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyFormat stringsFormat strings are templates for labels. Since v11.1 the format strings support logic. We recommend using format strings if youNeed to save the chart configuration to JSON.Need to provide a GUI for end users so that callbacks are not practical, or XSS is a concern.Need to send the charts over to our export server to execute (all callbacks are stripped out).Are creating a wrapper for another programming language than JavaScript.Examples of format strings are xAxis.labels.format, tooltip.pointFormat and legend.labelFormat. For a full overview over templating in format strings, read the Templating article.Formatter callbacksFor full control over string handling and additional scripting capabilities around the labels, you might need to use formatter callbacks. These formatters return HTML (subset). Examples of these are xAxis.labels.formatter, tooltip.formatter and legend.labelFormatter. Often times you'll need to call Highcharts.dateFormat() and Highcharts.numberFormat() from the formatters.Edit this pagePrevious« Zooming NextTemplating  »HTML in HighchartsFilteringFormat stringsFormatter callbacks\n\n\n\nTemplatingHighcharts supports templating in format strings. Since v11.1 (2023) the templates support logic, and are generally recommended over formatter callbacks when the configuration needs to be secure and JSON compatible. The Highcharts templating style is inspired by well-proven languages like Handlebars and Mustache, but is more focused on numeric operations since charting is all about numeric data.ExpressionsExpressions in format strings are enclosed by {single brackets}. They can be simple variables or constants, or conditional blocks or functions called helpers.Variables and properties are inserted directly inside the bracket, for example "The point value at {point.x} is {point.y}". Nested properties are supported using the dot notation. Arrays are also indexed using dot notation, for example {series.xAxis.categories.0}, or more practical, with a subexpression {series.xAxis.categories.(point.x)}Numbers are formatted with a subset of float formatting conventions from the C library function sprintf. The formatting is appended inside the expression, separated from the value by a colon. Note that even though a dot and a comma symbolizes the decimal point and the thousands separator respectively, how it is actually rendered depends on the language settings. For example:Two decimal places: "{point.y:.2f}" [Demo]Thousands separator, no decimal places: {point.y:,.0f} [Demo]Thousands separator, one decimal place: {point.y:,.1f} [Demo, internationalized]Dates allow, like numbers, the format to be appended behind a colon. The format conventions allowed are the same as those of Highcharts.dateFormat(). For example:Full date: {value:%Y-%m-%d} [Demo]Locale-aware full date: {value:%[Ymd]} [Demo]HelpersHelpers define either a conditional block or a function to be used in an expression. Highcharts includes a number of built-in helpers, and allows custom helpers to be added.// Add two literal number using the `add` helperformat: '{add 1 2}' // => prints 3// Add a literal number and a variableformat: '{add point.index 1}' // => prints a 1-based index from zero-basedCopyBlock helpers include a block that is executed conditionally. Block helpers start with a #, and end with a closing expression. They may also include an {else} expression to execute if the condition is falsy.// A simple #if helperformat: '{#if point.isNull}Null{else}{point.y:.2f} USD{/if}'// A block helper looping through points, with nested expressionsformat: '{#each points}{add this.index 1}) {this.name}{/each}CopySee demo of an #each helper in a shared tooltip.Custom helpers can be defined by extending Highcharts.Templating.helpers. Each helper has a fixed number of arguments. A match object is then appended to the arguments, for use in case a block helper needs access to the context or the body of the block. Helpers can either return a boolean, in which case the helper works as a condition, or a string or number, in which case that is inserted for the whole block or expression.// Define a helper to return the absolute of a numberHighcharts.Templating.helpers.abs = value => Math.abs(value);// Use it like thisformat: 'Absolute value: {abs point.y}'CopyView live demo.SubexpressionsSubexpressions provide a powerful way to invoke multiple helpers, and pass the results of the inner helper to the outer helper. Subexpressions are delimited by parentheses.// Celsius to Fahrenheit conversion, where point.y is degrees Celsiusformat: '{add (multiply point.y (divide 9 5)) 32}℉'CopyWhen doing math like this, we sometimes end up with too many decimals or other results that we want to run through number or date formatting. In that case, we use a subexpression then apply the formatting as explained above.// Celsius to Fahrenheit conversion, where point.y is degrees Celsius.// Format the result with 1 decimal place.format: '{(add (multiply point.y (divide 9 5)) 32):.1f}℉'CopyView live demo.Subexpressions can also be used inside conditions to asses whether a statement is truthy.// A subexpression inside a condition. Decide plural form.format: 'The series exists of {points.length} ' +    '{#if (eq 1 points.length)}point{else}points{/if}.'CopyDebuggingOne of the downsides of working with string formats versus formatter callbacks is the ability to log and debug inside callback. To alleviate that, you can define custom helpers allowing you to inspect the context.// Custom helper to log the contextHighcharts.Templating.helpers.log = function () {    console.log(arguments[0].ctx);};// Usageformat: '{log}'CopyView live demo.Built-in helpersadd. Add two numbers. For example {add index 1} where index is a zero-based index from the context. Demo.divide. Divide the first number with the second. For example {divide 10 2} prints 5. Division by zero returns an empty string. Demo.eq. Returns true for loose equality (JavaScript ==) between the first and second argument. Can be used either as a block helper, {#eq index 0}First item{/eq}, or in a subexpression {#if (eq index 0)}First item{/if}.#each. Iterate over an array of items. The context of each child is given as {this} in the block body. Additional variables in the block body are @index, @first and @last. Example {#each points}{@index}) {name}, {#if @last}and {/if}. Demo.ge. Greater than or equal, JavaScript >=. Doubles as block helper and subexpression.gt. Greater than, JavaScript >. Doubles as block helper and subexpression.#if. Conditional block helper. {#if point.isNull}The point is null{else}The value is {point.y}{/if}.le. Less than or equal, JavaScript <=. Doubles as block helper and subexpression.lt. Less than, JavaScript <. Doubles as block helper and subexpression.multiply. Multiply two numbers. For example {multiply value 1000}. Demo.ne. Not equal, JavaScript !=. Doubles as block helper and subexpression.subtract. Subtract the second number from the first. Example {subtract 5 2} prints 3.#unless. The inverse of #if. {#unless point.isNull}The value is {point.y}{/unless}.LimitationsThe templating system only works on the context that is passed in to each item. For data label, the context is the point, for tooltip formats the context holds the series, points, suggested header, for axis labels it holds the axis value etc. In most of these cases the context holds deep access to DOM elements (for example through series.chart.container.ownerDocument), but these properties are not accessible in templates due to XSS filtering. Preventing DOM access is one of the reasons for choosing string formats over formatter callbacks.In cases where helpers are not sufficient to reach the desired formatting, it is better to preprocess the data set. Use the custom option for series and points, and access that from the format string.In the column-comparison demo, we prepare a lookup object for axis labels and the tooltip, append that to the options on chart level, and access it from the axis and tooltip format strings.Deprecated format functionsThe accessibility module prior to v11.1 had two advanced functions, #each() and #plural(). These have been deprecated and replaced in the default language strings by the new #each and #eq. See Advanced format strings on GitHub for details.\n\nTemplatingHighcharts supports templating in format strings. Since v11.1 (2023) the templates support logic, and are generally recommended over formatter callbacks when the configuration needs to be secure and JSON compatible. The Highcharts templating style is inspired by well-proven languages like Handlebars and Mustache, but is more focused on numeric operations since charting is all about numeric data.ExpressionsExpressions in format strings are enclosed by {single brackets}. They can be simple variables or constants, or conditional blocks or functions called helpers.Variables and properties are inserted directly inside the bracket, for example "The point value at {point.x} is {point.y}". Nested properties are supported using the dot notation. Arrays are also indexed using dot notation, for example {series.xAxis.categories.0}, or more practical, with a subexpression {series.xAxis.categories.(point.x)}Numbers are formatted with a subset of float formatting conventions from the C library function sprintf. The formatting is appended inside the expression, separated from the value by a colon. Note that even though a dot and a comma symbolizes the decimal point and the thousands separator respectively, how it is actually rendered depends on the language settings. For example:Two decimal places: "{point.y:.2f}" [Demo]Thousands separator, no decimal places: {point.y:,.0f} [Demo]Thousands separator, one decimal place: {point.y:,.1f} [Demo, internationalized]Dates allow, like numbers, the format to be appended behind a colon. The format conventions allowed are the same as those of Highcharts.dateFormat(). For example:Full date: {value:%Y-%m-%d} [Demo]Locale-aware full date: {value:%[Ymd]} [Demo]HelpersHelpers define either a conditional block or a function to be used in an expression. Highcharts includes a number of built-in helpers, and allows custom helpers to be added.// Add two literal number using the `add` helperformat: '{add 1 2}' // => prints 3// Add a literal number and a variableformat: '{add point.index 1}' // => prints a 1-based index from zero-basedCopyBlock helpers include a block that is executed conditionally. Block helpers start with a #, and end with a closing expression. They may also include an {else} expression to execute if the condition is falsy.// A simple #if helperformat: '{#if point.isNull}Null{else}{point.y:.2f} USD{/if}'// A block helper looping through points, with nested expressionsformat: '{#each points}{add this.index 1}) {this.name}{/each}CopySee demo of an #each helper in a shared tooltip.Custom helpers can be defined by extending Highcharts.Templating.helpers. Each helper has a fixed number of arguments. A match object is then appended to the arguments, for use in case a block helper needs access to the context or the body of the block. Helpers can either return a boolean, in which case the helper works as a condition, or a string or number, in which case that is inserted for the whole block or expression.// Define a helper to return the absolute of a numberHighcharts.Templating.helpers.abs = value => Math.abs(value);// Use it like thisformat: 'Absolute value: {abs point.y}'CopyView live demo.SubexpressionsSubexpressions provide a powerful way to invoke multiple helpers, and pass the results of the inner helper to the outer helper. Subexpressions are delimited by parentheses.// Celsius to Fahrenheit conversion, where point.y is degrees Celsiusformat: '{add (multiply point.y (divide 9 5)) 32}℉'CopyWhen doing math like this, we sometimes end up with too many decimals or other results that we want to run through number or date formatting. In that case, we use a subexpression then apply the formatting as explained above.// Celsius to Fahrenheit conversion, where point.y is degrees Celsius.// Format the result with 1 decimal place.format: '{(add (multiply point.y (divide 9 5)) 32):.1f}℉'CopyView live demo.Subexpressions can also be used inside conditions to asses whether a statement is truthy.// A subexpression inside a condition. Decide plural form.format: 'The series exists of {points.length} ' +    '{#if (eq 1 points.length)}point{else}points{/if}.'CopyDebuggingOne of the downsides of working with string formats versus formatter callbacks is the ability to log and debug inside callback. To alleviate that, you can define custom helpers allowing you to inspect the context.// Custom helper to log the contextHighcharts.Templating.helpers.log = function () {    console.log(arguments[0].ctx);};// Usageformat: '{log}'CopyView live demo.Built-in helpersadd. Add two numbers. For example {add index 1} where index is a zero-based index from the context. Demo.divide. Divide the first number with the second. For example {divide 10 2} prints 5. Division by zero returns an empty string. Demo.eq. Returns true for loose equality (JavaScript ==) between the first and second argument. Can be used either as a block helper, {#eq index 0}First item{/eq}, or in a subexpression {#if (eq index 0)}First item{/if}.#each. Iterate over an array of items. The context of each child is given as {this} in the block body. Additional variables in the block body are @index, @first and @last. Example {#each points}{@index}) {name}, {#if @last}and {/if}. Demo.ge. Greater than or equal, JavaScript >=. Doubles as block helper and subexpression.gt. Greater than, JavaScript >. Doubles as block helper and subexpression.#if. Conditional block helper. {#if point.isNull}The point is null{else}The value is {point.y}{/if}.le. Less than or equal, JavaScript <=. Doubles as block helper and subexpression.lt. Less than, JavaScript <. Doubles as block helper and subexpression.multiply. Multiply two numbers. For example {multiply value 1000}. Demo.ne. Not equal, JavaScript !=. Doubles as block helper and subexpression.subtract. Subtract the second number from the first. Example {subtract 5 2} prints 3.#unless. The inverse of #if. {#unless point.isNull}The value is {point.y}{/unless}.LimitationsThe templating system only works on the context that is passed in to each item. For data label, the context is the point, for tooltip formats the context holds the series, points, suggested header, for axis labels it holds the axis value etc. In most of these cases the context holds deep access to DOM elements (for example through series.chart.container.ownerDocument), but these properties are not accessible in templates due to XSS filtering. Preventing DOM access is one of the reasons for choosing string formats over formatter callbacks.In cases where helpers are not sufficient to reach the desired formatting, it is better to preprocess the data set. Use the custom option for series and points, and access that from the format string.In the column-comparison demo, we prepare a lookup object for axis labels and the tooltip, append that to the options on chart level, and access it from the axis and tooltip format strings.Deprecated format functionsThe accessibility module prior to v11.1 had two advanced functions, #each() and #plural(). These have been deprecated and replaced in the default language strings by the new #each and #eq. See Advanced format strings on GitHub for details.Edit this pagePrevious« Labels and string formatting NextDrill down  »ExpressionsHelpersSubexpressionsDebuggingBuilt-in helpersLimitationsDeprecated format functions\n\nTemplatingHighcharts supports templating in format strings. Since v11.1 (2023) the templates support logic, and are generally recommended over formatter callbacks when the configuration needs to be secure and JSON compatible. The Highcharts templating style is inspired by well-proven languages like Handlebars and Mustache, but is more focused on numeric operations since charting is all about numeric data.ExpressionsExpressions in format strings are enclosed by {single brackets}. They can be simple variables or constants, or conditional blocks or functions called helpers.Variables and properties are inserted directly inside the bracket, for example "The point value at {point.x} is {point.y}". Nested properties are supported using the dot notation. Arrays are also indexed using dot notation, for example {series.xAxis.categories.0}, or more practical, with a subexpression {series.xAxis.categories.(point.x)}Numbers are formatted with a subset of float formatting conventions from the C library function sprintf. The formatting is appended inside the expression, separated from the value by a colon. Note that even though a dot and a comma symbolizes the decimal point and the thousands separator respectively, how it is actually rendered depends on the language settings. For example:Two decimal places: "{point.y:.2f}" [Demo]Thousands separator, no decimal places: {point.y:,.0f} [Demo]Thousands separator, one decimal place: {point.y:,.1f} [Demo, internationalized]Dates allow, like numbers, the format to be appended behind a colon. The format conventions allowed are the same as those of Highcharts.dateFormat(). For example:Full date: {value:%Y-%m-%d} [Demo]Locale-aware full date: {value:%[Ymd]} [Demo]HelpersHelpers define either a conditional block or a function to be used in an expression. Highcharts includes a number of built-in helpers, and allows custom helpers to be added.// Add two literal number using the `add` helperformat: '{add 1 2}' // => prints 3// Add a literal number and a variableformat: '{add point.index 1}' // => prints a 1-based index from zero-basedCopyBlock helpers include a block that is executed conditionally. Block helpers start with a #, and end with a closing expression. They may also include an {else} expression to execute if the condition is falsy.// A simple #if helperformat: '{#if point.isNull}Null{else}{point.y:.2f} USD{/if}'// A block helper looping through points, with nested expressionsformat: '{#each points}{add this.index 1}) {this.name}{/each}CopySee demo of an #each helper in a shared tooltip.Custom helpers can be defined by extending Highcharts.Templating.helpers. Each helper has a fixed number of arguments. A match object is then appended to the arguments, for use in case a block helper needs access to the context or the body of the block. Helpers can either return a boolean, in which case the helper works as a condition, or a string or number, in which case that is inserted for the whole block or expression.// Define a helper to return the absolute of a numberHighcharts.Templating.helpers.abs = value => Math.abs(value);// Use it like thisformat: 'Absolute value: {abs point.y}'CopyView live demo.SubexpressionsSubexpressions provide a powerful way to invoke multiple helpers, and pass the results of the inner helper to the outer helper. Subexpressions are delimited by parentheses.// Celsius to Fahrenheit conversion, where point.y is degrees Celsiusformat: '{add (multiply point.y (divide 9 5)) 32}℉'CopyWhen doing math like this, we sometimes end up with too many decimals or other results that we want to run through number or date formatting. In that case, we use a subexpression then apply the formatting as explained above.// Celsius to Fahrenheit conversion, where point.y is degrees Celsius.// Format the result with 1 decimal place.format: '{(add (multiply point.y (divide 9 5)) 32):.1f}℉'CopyView live demo.Subexpressions can also be used inside conditions to asses whether a statement is truthy.// A subexpression inside a condition. Decide plural form.format: 'The series exists of {points.length} ' +    '{#if (eq 1 points.length)}point{else}points{/if}.'CopyDebuggingOne of the downsides of working with string formats versus formatter callbacks is the ability to log and debug inside callback. To alleviate that, you can define custom helpers allowing you to inspect the context.// Custom helper to log the contextHighcharts.Templating.helpers.log = function () {    console.log(arguments[0].ctx);};// Usageformat: '{log}'CopyView live demo.Built-in helpersadd. Add two numbers. For example {add index 1} where index is a zero-based index from the context. Demo.divide. Divide the first number with the second. For example {divide 10 2} prints 5. Division by zero returns an empty string. Demo.eq. Returns true for loose equality (JavaScript ==) between the first and second argument. Can be used either as a block helper, {#eq index 0}First item{/eq}, or in a subexpression {#if (eq index 0)}First item{/if}.#each. Iterate over an array of items. The context of each child is given as {this} in the block body. Additional variables in the block body are @index, @first and @last. Example {#each points}{@index}) {name}, {#if @last}and {/if}. Demo.ge. Greater than or equal, JavaScript >=. Doubles as block helper and subexpression.gt. Greater than, JavaScript >. Doubles as block helper and subexpression.#if. Conditional block helper. {#if point.isNull}The point is null{else}The value is {point.y}{/if}.le. Less than or equal, JavaScript <=. Doubles as block helper and subexpression.lt. Less than, JavaScript <. Doubles as block helper and subexpression.multiply. Multiply two numbers. For example {multiply value 1000}. Demo.ne. Not equal, JavaScript !=. Doubles as block helper and subexpression.subtract. Subtract the second number from the first. Example {subtract 5 2} prints 3.#unless. The inverse of #if. {#unless point.isNull}The value is {point.y}{/unless}.LimitationsThe templating system only works on the context that is passed in to each item. For data label, the context is the point, for tooltip formats the context holds the series, points, suggested header, for axis labels it holds the axis value etc. In most of these cases the context holds deep access to DOM elements (for example through series.chart.container.ownerDocument), but these properties are not accessible in templates due to XSS filtering. Preventing DOM access is one of the reasons for choosing string formats over formatter callbacks.In cases where helpers are not sufficient to reach the desired formatting, it is better to preprocess the data set. Use the custom option for series and points, and access that from the format string.In the column-comparison demo, we prepare a lookup object for axis labels and the tooltip, append that to the options on chart level, and access it from the axis and tooltip format strings.Deprecated format functionsThe accessibility module prior to v11.1 had two advanced functions, #each() and #plural(). These have been deprecated and replaced in the default language strings by the new #each and #eq. See Advanced format strings on GitHub for details.Edit this pagePrevious« Labels and string formatting NextDrill down  »ExpressionsHelpersSubexpressionsDebuggingBuilt-in helpersLimitationsDeprecated format functions\n\n\n\nDrill downFor full detailed documentation and more samples of the drilldown feature, see the Highcharts API.Since version 3.0.8, Highcharts has built-in support for drilldown. By giving a point configuration a drilldown option that corresponds to a series configuration in the drilldown.series array, the point is linked to a hidden series. When the point is clicked, this series is loaded in the chart and replaces the existing series. For column, bar and pie series, an animation occurs to help visualize that the single clicked point is extracted into a drilldown series. Multiple levels of drilling can be applied by chaining points to series.Basic setupFor a basic setup, the drilldown series are defined in a separate array under the drilldown configuration. Each series configuration is given an id, which is used for the drilldown parent point to identify its series. series: [{    name: 'Things',    colorByPoint: true,    data: [{        name: 'Animals',        y: 5,        drilldown: 'animals'    }, {        name: 'Fruits',        y: 2,        drilldown: 'fruits'    }, {        name: 'Cars',        y: 4,        drilldown: 'cars'    }]}],drilldown: {    series: [{        id: 'animals',        data: [            ['Cats', 4],            ['Dogs', 2],            ['Cows', 1],            ['Sheep', 2],            ['Pigs', 1]        ]    }, {        id: 'fruits',        data: [            ['Apples', 4],            ['Oranges', 2]        ]    }, {        id: 'cars',        data: [            ['Toyota', 4],            ['Opel', 2],            ['Volkswagen', 2]        ]    }]}CopySee it live on jsFiddle.Async setupIn many cases you may want to load the drilldown series dynamically. In this case we set the point.drilldown option to true, and use the chart's drilldown event to load the drilldown series configuration based on the clicked point. When the series data arrives, we add it by calling the Chart.addSeriesAsDrilldown method.See the async drilldown demo.\n\nDrill downFor full detailed documentation and more samples of the drilldown feature, see the Highcharts API.Since version 3.0.8, Highcharts has built-in support for drilldown. By giving a point configuration a drilldown option that corresponds to a series configuration in the drilldown.series array, the point is linked to a hidden series. When the point is clicked, this series is loaded in the chart and replaces the existing series. For column, bar and pie series, an animation occurs to help visualize that the single clicked point is extracted into a drilldown series. Multiple levels of drilling can be applied by chaining points to series.Basic setupFor a basic setup, the drilldown series are defined in a separate array under the drilldown configuration. Each series configuration is given an id, which is used for the drilldown parent point to identify its series. series: [{    name: 'Things',    colorByPoint: true,    data: [{        name: 'Animals',        y: 5,        drilldown: 'animals'    }, {        name: 'Fruits',        y: 2,        drilldown: 'fruits'    }, {        name: 'Cars',        y: 4,        drilldown: 'cars'    }]}],drilldown: {    series: [{        id: 'animals',        data: [            ['Cats', 4],            ['Dogs', 2],            ['Cows', 1],            ['Sheep', 2],            ['Pigs', 1]        ]    }, {        id: 'fruits',        data: [            ['Apples', 4],            ['Oranges', 2]        ]    }, {        id: 'cars',        data: [            ['Toyota', 4],            ['Opel', 2],            ['Volkswagen', 2]        ]    }]}CopySee it live on jsFiddle.Async setupIn many cases you may want to load the drilldown series dynamically. In this case we set the point.drilldown option to true, and use the chart's drilldown event to load the drilldown series configuration based on the clicked point. When the series data arrives, we add it by calling the Chart.addSeriesAsDrilldown method.See the async drilldown demo.Edit this pagePrevious« Templating NextGetting started with Highcharts 3D support  »Basic setupAsync setup\n\nDrill downFor full detailed documentation and more samples of the drilldown feature, see the Highcharts API.Since version 3.0.8, Highcharts has built-in support for drilldown. By giving a point configuration a drilldown option that corresponds to a series configuration in the drilldown.series array, the point is linked to a hidden series. When the point is clicked, this series is loaded in the chart and replaces the existing series. For column, bar and pie series, an animation occurs to help visualize that the single clicked point is extracted into a drilldown series. Multiple levels of drilling can be applied by chaining points to series.Basic setupFor a basic setup, the drilldown series are defined in a separate array under the drilldown configuration. Each series configuration is given an id, which is used for the drilldown parent point to identify its series. series: [{    name: 'Things',    colorByPoint: true,    data: [{        name: 'Animals',        y: 5,        drilldown: 'animals'    }, {        name: 'Fruits',        y: 2,        drilldown: 'fruits'    }, {        name: 'Cars',        y: 4,        drilldown: 'cars'    }]}],drilldown: {    series: [{        id: 'animals',        data: [            ['Cats', 4],            ['Dogs', 2],            ['Cows', 1],            ['Sheep', 2],            ['Pigs', 1]        ]    }, {        id: 'fruits',        data: [            ['Apples', 4],            ['Oranges', 2]        ]    }, {        id: 'cars',        data: [            ['Toyota', 4],            ['Opel', 2],            ['Volkswagen', 2]        ]    }]}CopySee it live on jsFiddle.Async setupIn many cases you may want to load the drilldown series dynamically. In this case we set the point.drilldown option to true, and use the chart's drilldown event to load the drilldown series configuration based on the clicked point. When the series data arrives, we add it by calling the Chart.addSeriesAsDrilldown method.See the async drilldown demo.Edit this pagePrevious« Templating NextGetting started with Highcharts 3D support  »Basic setupAsync setup\n\n\n\nGetting started with Highcharts 3D supportHighcharts 3D is a Highcharts module providing limited 3D support to charts. It currently allows to create 3D Column charts, 3D Pie charts and 3D Scatter charts.Load the required files.To be able to use Highcharts 3D you first have to load Highcharts as usual and load the additional 3D plugin module:<script src="https://code.highcharts.com/highcharts-3d.js"><script>Copy(This should be included after highcharts.js)Configuring the 3D options for a chart.Loading the 3D module will not alter existing charts unless they are specifically set up to be 3D, this allows you to have both 3D Charts and regular charts on one page. The configuration for the 3D chart in general is done the chart section of the options, while some specific settings for different chart type can be found under plotOptions; here you see the fully extended 3D options with the type of value it expects:chart: {    ....    options3d: {        enabled: 'boolean value',        alpha: 'numeric value',        beta: 'numeric value',        depth: 'numeric value',        viewDistance: 'numeric value',        frame: {            bottom: {                size: 'numeric value',                color: 'color value'            },            side: {                size: 'numeric value',                color: 'color value'            },            back: {                size: 'numeric value',                color: 'color value'            }       }   },   ...}...plotOptions: {    ...    column: {        ...        depth: 'numeric value',        groupZPadding: 'numeric value',        ...    },    ...    pie: {        depth: 'numeric value'    },    ...}CopyGeneralFor all 3D charts the following options are the most important (part of chart.options3d):enabled                   This indicates whether the chart has to have 3D or not, set this to true.depth                        The total depth of the chart, defaults to 100.viewDistance          This defines how far a viewer is from the chart.alpha & beta           The angles to rotate the view of the chart.Beware that setting a low viewDistance can result in twisted effects in the perspective because the view point is too close to the chart.In chart.options3d there is also the possibility to construct three panes around the chart called the frame, by default these panes are invisible but they can each be configured separately in chart.options.3d.frame:bottom|side|back: {    size:   The thickness of the pane (defaults to 0)    color:  The color of the pane (default to transparent)}Copy3D ColumnsA 3D chart of type columns will draw each column as a cuboid and thus create a 3D effect. By default the depth of this column is set to 25. To define another depth you have to go into the plotOptions and define one for the columns:plotOptions.column.depth: The depth of each individual column.CopyDisplaying multiple columnsJust like in normal column charts, the Highcharts 3D plugin does allow to display a series of charts and to order these as desired using techniques like grouping and stacking.By default, grouping is true in Highcharts, displaying the columns next to each other, in Highcharts 3D this is still the same: the columns will be standing next to each other on the front row of your chart. By setting grouping to false, the columns will be placed behind each other in order of appearance. The default behaviour is to place the columns without any spacing against each other, this can be modified by setting the groupZPadding optionplotOptions.column.groupZPadding: Spacing between columns on the z-axis.CopyMake sure the depth of the chart is sufficient to display all your columns. You will need at least the following depth: number of columns * (depth of column + z-padding)A regular Highcharts column chart also offers the possibility to stack columns together, this is of course still available in 3D charts and works in exactly the same way by setting stacking to true and defining a stack number for each series.3D PieFor a pie chart the depth of the total chart is not important and setting the frame does not do anything (the frame is linked to the axis line and pies do not have these in the same way the other charts have). For pie charts it is important to set the depth property in plotOptions.plotOptions.pie.depth: Defines the 'thickness' of the pie.Copy3D ScatterIn addition to x & y coordinates like in a regular scatter chart, the 3D plugin adds an extra z coordinate to each point to place in 3 dimensions. Similar to the normal chart these coordinates can be sent either literally or using an array:{x: 1, y: 1, z: 1} is the same point as [1,1,1]Copy3D AreaA 3D chart of type area is working similar to the column series. It will draw each area series as a 3D plane. By default the depth of an area series is set to 25.Displaying multiple areasJust like in normal area charts, the Highcharts 3D plugin does allow to display multiple area series and to order these as desired with grouping and stacking.Make sure the depth of the chart is sufficient to display all your area series. You will need at least the following depth: (number of area series - 1) * (depth of single area series)Stacking is still available in 3D charts and works in exactly the same way by setting stacking to true.\n\nGetting started with Highcharts 3D supportHighcharts 3D is a Highcharts module providing limited 3D support to charts. It currently allows to create 3D Column charts, 3D Pie charts and 3D Scatter charts.Load the required files.To be able to use Highcharts 3D you first have to load Highcharts as usual and load the additional 3D plugin module:<script src="https://code.highcharts.com/highcharts-3d.js"><script>Copy(This should be included after highcharts.js)Configuring the 3D options for a chart.Loading the 3D module will not alter existing charts unless they are specifically set up to be 3D, this allows you to have both 3D Charts and regular charts on one page. The configuration for the 3D chart in general is done the chart section of the options, while some specific settings for different chart type can be found under plotOptions; here you see the fully extended 3D options with the type of value it expects:chart: {    ....    options3d: {        enabled: 'boolean value',        alpha: 'numeric value',        beta: 'numeric value',        depth: 'numeric value',        viewDistance: 'numeric value',        frame: {            bottom: {                size: 'numeric value',                color: 'color value'            },            side: {                size: 'numeric value',                color: 'color value'            },            back: {                size: 'numeric value',                color: 'color value'            }       }   },   ...}...plotOptions: {    ...    column: {        ...        depth: 'numeric value',        groupZPadding: 'numeric value',        ...    },    ...    pie: {        depth: 'numeric value'    },    ...}CopyGeneralFor all 3D charts the following options are the most important (part of chart.options3d):enabled                   This indicates whether the chart has to have 3D or not, set this to true.depth                        The total depth of the chart, defaults to 100.viewDistance          This defines how far a viewer is from the chart.alpha & beta           The angles to rotate the view of the chart.Beware that setting a low viewDistance can result in twisted effects in the perspective because the view point is too close to the chart.In chart.options3d there is also the possibility to construct three panes around the chart called the frame, by default these panes are invisible but they can each be configured separately in chart.options.3d.frame:bottom|side|back: {    size:   The thickness of the pane (defaults to 0)    color:  The color of the pane (default to transparent)}Copy3D ColumnsA 3D chart of type columns will draw each column as a cuboid and thus create a 3D effect. By default the depth of this column is set to 25. To define another depth you have to go into the plotOptions and define one for the columns:plotOptions.column.depth: The depth of each individual column.CopyDisplaying multiple columnsJust like in normal column charts, the Highcharts 3D plugin does allow to display a series of charts and to order these as desired using techniques like grouping and stacking.By default, grouping is true in Highcharts, displaying the columns next to each other, in Highcharts 3D this is still the same: the columns will be standing next to each other on the front row of your chart. By setting grouping to false, the columns will be placed behind each other in order of appearance. The default behaviour is to place the columns without any spacing against each other, this can be modified by setting the groupZPadding optionplotOptions.column.groupZPadding: Spacing between columns on the z-axis.CopyMake sure the depth of the chart is sufficient to display all your columns. You will need at least the following depth: number of columns * (depth of column + z-padding)A regular Highcharts column chart also offers the possibility to stack columns together, this is of course still available in 3D charts and works in exactly the same way by setting stacking to true and defining a stack number for each series.3D PieFor a pie chart the depth of the total chart is not important and setting the frame does not do anything (the frame is linked to the axis line and pies do not have these in the same way the other charts have). For pie charts it is important to set the depth property in plotOptions.plotOptions.pie.depth: Defines the 'thickness' of the pie.Copy3D ScatterIn addition to x & y coordinates like in a regular scatter chart, the 3D plugin adds an extra z coordinate to each point to place in 3 dimensions. Similar to the normal chart these coordinates can be sent either literally or using an array:{x: 1, y: 1, z: 1} is the same point as [1,1,1]Copy3D AreaA 3D chart of type area is working similar to the column series. It will draw each area series as a 3D plane. By default the depth of an area series is set to 25.Displaying multiple areasJust like in normal area charts, the Highcharts 3D plugin does allow to display multiple area series and to order these as desired with grouping and stacking.Make sure the depth of the chart is sufficient to display all your area series. You will need at least the following depth: (number of area series - 1) * (depth of single area series)Stacking is still available in 3D charts and works in exactly the same way by setting stacking to true.Edit this pagePrevious« Drill down NextResponsive charts  »Load the required files.Configuring the 3D options for a chart.General3D ColumnsDisplaying multiple columns3D Pie3D Scatter3D AreaDisplaying multiple areas\n\nGetting started with Highcharts 3D supportHighcharts 3D is a Highcharts module providing limited 3D support to charts. It currently allows to create 3D Column charts, 3D Pie charts and 3D Scatter charts.Load the required files.To be able to use Highcharts 3D you first have to load Highcharts as usual and load the additional 3D plugin module:<script src="https://code.highcharts.com/highcharts-3d.js"><script>Copy(This should be included after highcharts.js)Configuring the 3D options for a chart.Loading the 3D module will not alter existing charts unless they are specifically set up to be 3D, this allows you to have both 3D Charts and regular charts on one page. The configuration for the 3D chart in general is done the chart section of the options, while some specific settings for different chart type can be found under plotOptions; here you see the fully extended 3D options with the type of value it expects:chart: {    ....    options3d: {        enabled: 'boolean value',        alpha: 'numeric value',        beta: 'numeric value',        depth: 'numeric value',        viewDistance: 'numeric value',        frame: {            bottom: {                size: 'numeric value',                color: 'color value'            },            side: {                size: 'numeric value',                color: 'color value'            },            back: {                size: 'numeric value',                color: 'color value'            }       }   },   ...}...plotOptions: {    ...    column: {        ...        depth: 'numeric value',        groupZPadding: 'numeric value',        ...    },    ...    pie: {        depth: 'numeric value'    },    ...}CopyGeneralFor all 3D charts the following options are the most important (part of chart.options3d):enabled                   This indicates whether the chart has to have 3D or not, set this to true.depth                        The total depth of the chart, defaults to 100.viewDistance          This defines how far a viewer is from the chart.alpha & beta           The angles to rotate the view of the chart.Beware that setting a low viewDistance can result in twisted effects in the perspective because the view point is too close to the chart.In chart.options3d there is also the possibility to construct three panes around the chart called the frame, by default these panes are invisible but they can each be configured separately in chart.options.3d.frame:bottom|side|back: {    size:   The thickness of the pane (defaults to 0)    color:  The color of the pane (default to transparent)}Copy3D ColumnsA 3D chart of type columns will draw each column as a cuboid and thus create a 3D effect. By default the depth of this column is set to 25. To define another depth you have to go into the plotOptions and define one for the columns:plotOptions.column.depth: The depth of each individual column.CopyDisplaying multiple columnsJust like in normal column charts, the Highcharts 3D plugin does allow to display a series of charts and to order these as desired using techniques like grouping and stacking.By default, grouping is true in Highcharts, displaying the columns next to each other, in Highcharts 3D this is still the same: the columns will be standing next to each other on the front row of your chart. By setting grouping to false, the columns will be placed behind each other in order of appearance. The default behaviour is to place the columns without any spacing against each other, this can be modified by setting the groupZPadding optionplotOptions.column.groupZPadding: Spacing between columns on the z-axis.CopyMake sure the depth of the chart is sufficient to display all your columns. You will need at least the following depth: number of columns * (depth of column + z-padding)A regular Highcharts column chart also offers the possibility to stack columns together, this is of course still available in 3D charts and works in exactly the same way by setting stacking to true and defining a stack number for each series.3D PieFor a pie chart the depth of the total chart is not important and setting the frame does not do anything (the frame is linked to the axis line and pies do not have these in the same way the other charts have). For pie charts it is important to set the depth property in plotOptions.plotOptions.pie.depth: Defines the 'thickness' of the pie.Copy3D ScatterIn addition to x & y coordinates like in a regular scatter chart, the 3D plugin adds an extra z coordinate to each point to place in 3 dimensions. Similar to the normal chart these coordinates can be sent either literally or using an array:{x: 1, y: 1, z: 1} is the same point as [1,1,1]Copy3D AreaA 3D chart of type area is working similar to the column series. It will draw each area series as a 3D plane. By default the depth of an area series is set to 25.Displaying multiple areasJust like in normal area charts, the Highcharts 3D plugin does allow to display multiple area series and to order these as desired with grouping and stacking.Make sure the depth of the chart is sufficient to display all your area series. You will need at least the following depth: (number of area series - 1) * (depth of single area series)Stacking is still available in 3D charts and works in exactly the same way by setting stacking to true.Edit this pagePrevious« Drill down NextResponsive charts  »Load the required files.Configuring the 3D options for a chart.General3D ColumnsDisplaying multiple columns3D Pie3D Scatter3D AreaDisplaying multiple areas\n\n\n\nResponsive chartsSince Highcharts 5.0 you can create responsive charts much the same way you work with responsive web pages. A top-level option, responsive, exists in the configuration.It lets you define a set of rules, each with a condition, for example maxWidth: 500, and a separate set of chartOptions that is applied on top of the general chart options. The chartOptions work as overrides to the regular chart options, which apply when the rule applies. For example, the following rule will hide the legend for charts less than 500 pixels wide: responsive: {  rules: [{    condition: {      maxWidth: 500    },    chartOptions: {      legend: {        enabled: false      }    }  }]}CopyOne of the most handy options is chart.className that can be used to control the style of all other elements in Highcharts styled mode.In general, the responsive configuration lets you define size-dependent settings for all aspects of the chart. Typical use could be to move the legend or modify how much space the axes take up. Responsiveness is also a great concept in charts with many graphical elements, like stock charts.Watch what happens to the legend in this sample as you scale up or down the browser window size:\n\nResponsive chartsSince Highcharts 5.0 you can create responsive charts much the same way you work with responsive web pages. A top-level option, responsive, exists in the configuration.It lets you define a set of rules, each with a condition, for example maxWidth: 500, and a separate set of chartOptions that is applied on top of the general chart options. The chartOptions work as overrides to the regular chart options, which apply when the rule applies. For example, the following rule will hide the legend for charts less than 500 pixels wide: responsive: {  rules: [{    condition: {      maxWidth: 500    },    chartOptions: {      legend: {        enabled: false      }    }  }]}CopyOne of the most handy options is chart.className that can be used to control the style of all other elements in Highcharts styled mode.In general, the responsive configuration lets you define size-dependent settings for all aspects of the chart. Typical use could be to move the legend or modify how much space the axes take up. Responsiveness is also a great concept in charts with many graphical elements, like stock charts.Watch what happens to the legend in this sample as you scale up or down the browser window size:Edit this pagePrevious« Getting started with Highcharts 3D support NextHighcharts Security  »\n\nResponsive chartsSince Highcharts 5.0 you can create responsive charts much the same way you work with responsive web pages. A top-level option, responsive, exists in the configuration.It lets you define a set of rules, each with a condition, for example maxWidth: 500, and a separate set of chartOptions that is applied on top of the general chart options. The chartOptions work as overrides to the regular chart options, which apply when the rule applies. For example, the following rule will hide the legend for charts less than 500 pixels wide: responsive: {  rules: [{    condition: {      maxWidth: 500    },    chartOptions: {      legend: {        enabled: false      }    }  }]}CopyOne of the most handy options is chart.className that can be used to control the style of all other elements in Highcharts styled mode.In general, the responsive configuration lets you define size-dependent settings for all aspects of the chart. Typical use could be to move the legend or modify how much space the axes take up. Responsiveness is also a great concept in charts with many graphical elements, like stock charts.Watch what happens to the legend in this sample as you scale up or down the browser window size:Edit this pagePrevious« Getting started with Highcharts 3D support NextHighcharts Security  »\n\n\n\nHighcharts SecurityAdding HTML from an untrusted source into the DOM is a potential security risk, as it may execute unauthorized code in the browser. This is known as cross-site scripting or XSS. Since Highcharts v9 we aim to filter all HTML that is added through the chart options structure - except function callbacks, which are already by definition executing code in the browser. Our design goal is that as long as the chart options are valid JSON, they should be XSS safe.In practice we do this by using the browser's built-in DOMParser to parse incoming strings, transform the result into an abstract syntax tree, then check the tags and attributes against allow lists. Unknown tags and attributes are removed.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyYou may also opt to bypass the filtering completely through the
bypassHTMLFiltering
flag.Since v9.3.2 Highcharts supports Trusted Types under the built-in policy name highcharts. Our Cypress tests and developer tools are set up with Trusted Types enabled, which enforces an added layer of security and greatly reduces the risk for one of our developers to accidentally introduce a DOM XSS vulnerability.ScopeChart configuration options that are valid JSON are filtered for known XSS vectors. JSON support types of object, strings, numbers, arrays, boolean or null. This implies that function callbacks and event handlers in the chart options structure is not covered by our scope. Functions are inherently unsafe because they by nature allow scripting towards the web page.Good: This option set is valid JSON, and the evil code is stripped out internally:Highcharts.chart('container', {    "title": {        // Filtered        "text": "<a href='javascript:console.log(document.domain)'>Click me</a>"    }});CopyBad: In this case the options set includes a function, and evil code may execute:Highcharts.chart('container', {    "chart": {        "events": {            // Unsafe            "load": () => console.log(document.domain)        }    }});CopyGood: If we run the options through JSON.parse, it will throw on the arrow function, revealing that this is not valid JSON:const options = JSON.parse(`{    "chart": {        "events": {            "load": () => console.log(document.domain)        }    }}`); // => Throws SyntaxErrorHighcharts.chart('container', options);CopyGood: The XSS filtering also applies to partial options given as parameters to functions that add or update chart elements:const chart = Highcharts.chart('container', {});chart.setTitle({    // Filtered    text: "<a href='javascript:console.log(document.domain)'>Click me</a>"});CopyBackwards compatibilityIn Highcharts prior to version 9, inputs were not filtered for XSS vectors. Some sporadic issues were handled, but all in all it should be considered giving direct access to the DOM. For example, when useHTML was true, any text strings or formats were passed directly to the DOM using innerHTML. Highcharts prior to version 9 assumed that the chart configuration was already checked for malicious code, as should any scripting content with user-defined input.The changes brought to v9 were a deep refactoring of how the whole concept of pseudo HTML in SVG was handled. Therefore it is unfortunately not possible to backport the fix to earlier major versions.If you are using earlier Highcharts versions, consider either of these points:The increased security only makes sense if you include content from untrusted sources in your charts. This may be user-defined chart titles, series names, point names, axis labels etc. - in short any text content that is rendered in the chart. If your chart configuration is static and trusted, there's no need for any action.Consider the architecture of your application. If the user-defined input is allowed to pass unfiltered to the point where it is inserted into a chart, sanitation should probably be added at an earlier stage, regardless of Highcharts version.Upgrade to Highcharts v9. It is fully backwards compatible and there is no need for changing any configuration.If you are not using any of the pseudo-HTML capabilities of Highcharts to format text inputs, stripping the texts of HTML is a simple way to filter out malicious code. See the example of allow-listing characters. While this does not render gracefully, it does effectively strip out HTML.For more sophisticated sanitizing of the options, consider using a third party library like DOMPurify, either on the server or client side. See the example. This will strip out malicious code in a fast and secure way, while maintaining harmless markup.Security reports and SAST code scanningWe take security seriously and strive to ensure the safety of our codebase. We encourage our users and the community to report any security vulnerabilities they discover using the information that on our GitHub repository. If you have discovered a security vulnerability or have any security-related concerns, please report them to us.In addition to community reports, we also employ Static Application Security Testing (SAST) as part of our development workflow. SAST code scanning helps us identify and mitigate security risks by analyzing our codebase for potential vulnerabilities, such as common coding mistakes, insecure coding patterns, and known security issues.\n\nHighcharts SecurityAdding HTML from an untrusted source into the DOM is a potential security risk, as it may execute unauthorized code in the browser. This is known as cross-site scripting or XSS. Since Highcharts v9 we aim to filter all HTML that is added through the chart options structure - except function callbacks, which are already by definition executing code in the browser. Our design goal is that as long as the chart options are valid JSON, they should be XSS safe.In practice we do this by using the browser's built-in DOMParser to parse incoming strings, transform the result into an abstract syntax tree, then check the tags and attributes against allow lists. Unknown tags and attributes are removed.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyYou may also opt to bypass the filtering completely through the
bypassHTMLFiltering
flag.Since v9.3.2 Highcharts supports Trusted Types under the built-in policy name highcharts. Our Cypress tests and developer tools are set up with Trusted Types enabled, which enforces an added layer of security and greatly reduces the risk for one of our developers to accidentally introduce a DOM XSS vulnerability.ScopeChart configuration options that are valid JSON are filtered for known XSS vectors. JSON support types of object, strings, numbers, arrays, boolean or null. This implies that function callbacks and event handlers in the chart options structure is not covered by our scope. Functions are inherently unsafe because they by nature allow scripting towards the web page.Good: This option set is valid JSON, and the evil code is stripped out internally:Highcharts.chart('container', {    "title": {        // Filtered        "text": "<a href='javascript:console.log(document.domain)'>Click me</a>"    }});CopyBad: In this case the options set includes a function, and evil code may execute:Highcharts.chart('container', {    "chart": {        "events": {            // Unsafe            "load": () => console.log(document.domain)        }    }});CopyGood: If we run the options through JSON.parse, it will throw on the arrow function, revealing that this is not valid JSON:const options = JSON.parse(`{    "chart": {        "events": {            "load": () => console.log(document.domain)        }    }}`); // => Throws SyntaxErrorHighcharts.chart('container', options);CopyGood: The XSS filtering also applies to partial options given as parameters to functions that add or update chart elements:const chart = Highcharts.chart('container', {});chart.setTitle({    // Filtered    text: "<a href='javascript:console.log(document.domain)'>Click me</a>"});CopyBackwards compatibilityIn Highcharts prior to version 9, inputs were not filtered for XSS vectors. Some sporadic issues were handled, but all in all it should be considered giving direct access to the DOM. For example, when useHTML was true, any text strings or formats were passed directly to the DOM using innerHTML. Highcharts prior to version 9 assumed that the chart configuration was already checked for malicious code, as should any scripting content with user-defined input.The changes brought to v9 were a deep refactoring of how the whole concept of pseudo HTML in SVG was handled. Therefore it is unfortunately not possible to backport the fix to earlier major versions.If you are using earlier Highcharts versions, consider either of these points:The increased security only makes sense if you include content from untrusted sources in your charts. This may be user-defined chart titles, series names, point names, axis labels etc. - in short any text content that is rendered in the chart. If your chart configuration is static and trusted, there's no need for any action.Consider the architecture of your application. If the user-defined input is allowed to pass unfiltered to the point where it is inserted into a chart, sanitation should probably be added at an earlier stage, regardless of Highcharts version.Upgrade to Highcharts v9. It is fully backwards compatible and there is no need for changing any configuration.If you are not using any of the pseudo-HTML capabilities of Highcharts to format text inputs, stripping the texts of HTML is a simple way to filter out malicious code. See the example of allow-listing characters. While this does not render gracefully, it does effectively strip out HTML.For more sophisticated sanitizing of the options, consider using a third party library like DOMPurify, either on the server or client side. See the example. This will strip out malicious code in a fast and secure way, while maintaining harmless markup.Security reports and SAST code scanningWe take security seriously and strive to ensure the safety of our codebase. We encourage our users and the community to report any security vulnerabilities they discover using the information that on our GitHub repository. If you have discovered a security vulnerability or have any security-related concerns, please report them to us.In addition to community reports, we also employ Static Application Security Testing (SAST) as part of our development workflow. SAST code scanning helps us identify and mitigate security risks by analyzing our codebase for potential vulnerabilities, such as common coding mistakes, insecure coding patterns, and known security issues.Edit this pagePrevious« Responsive charts NextDataviz Glossary  »ScopeBackwards compatibilitySecurity reports and SAST code scanning\n\nHighcharts SecurityAdding HTML from an untrusted source into the DOM is a potential security risk, as it may execute unauthorized code in the browser. This is known as cross-site scripting or XSS. Since Highcharts v9 we aim to filter all HTML that is added through the chart options structure - except function callbacks, which are already by definition executing code in the browser. Our design goal is that as long as the chart options are valid JSON, they should be XSS safe.In practice we do this by using the browser's built-in DOMParser to parse incoming strings, transform the result into an abstract syntax tree, then check the tags and attributes against allow lists. Unknown tags and attributes are removed.If your config comes from a trusted source, you may add tags, attributes or reference patterns to the allow lists:Highcharts.AST.allowedTags.push('blink');Highcharts.AST.allowedAttributes.push('data-value');// Allow links to the `tel` protocolHighcharts.AST.allowedReferences.push('tel:');CopyYou may also opt to bypass the filtering completely through the
bypassHTMLFiltering
flag.Since v9.3.2 Highcharts supports Trusted Types under the built-in policy name highcharts. Our Cypress tests and developer tools are set up with Trusted Types enabled, which enforces an added layer of security and greatly reduces the risk for one of our developers to accidentally introduce a DOM XSS vulnerability.ScopeChart configuration options that are valid JSON are filtered for known XSS vectors. JSON support types of object, strings, numbers, arrays, boolean or null. This implies that function callbacks and event handlers in the chart options structure is not covered by our scope. Functions are inherently unsafe because they by nature allow scripting towards the web page.Good: This option set is valid JSON, and the evil code is stripped out internally:Highcharts.chart('container', {    "title": {        // Filtered        "text": "<a href='javascript:console.log(document.domain)'>Click me</a>"    }});CopyBad: In this case the options set includes a function, and evil code may execute:Highcharts.chart('container', {    "chart": {        "events": {            // Unsafe            "load": () => console.log(document.domain)        }    }});CopyGood: If we run the options through JSON.parse, it will throw on the arrow function, revealing that this is not valid JSON:const options = JSON.parse(`{    "chart": {        "events": {            "load": () => console.log(document.domain)        }    }}`); // => Throws SyntaxErrorHighcharts.chart('container', options);CopyGood: The XSS filtering also applies to partial options given as parameters to functions that add or update chart elements:const chart = Highcharts.chart('container', {});chart.setTitle({    // Filtered    text: "<a href='javascript:console.log(document.domain)'>Click me</a>"});CopyBackwards compatibilityIn Highcharts prior to version 9, inputs were not filtered for XSS vectors. Some sporadic issues were handled, but all in all it should be considered giving direct access to the DOM. For example, when useHTML was true, any text strings or formats were passed directly to the DOM using innerHTML. Highcharts prior to version 9 assumed that the chart configuration was already checked for malicious code, as should any scripting content with user-defined input.The changes brought to v9 were a deep refactoring of how the whole concept of pseudo HTML in SVG was handled. Therefore it is unfortunately not possible to backport the fix to earlier major versions.If you are using earlier Highcharts versions, consider either of these points:The increased security only makes sense if you include content from untrusted sources in your charts. This may be user-defined chart titles, series names, point names, axis labels etc. - in short any text content that is rendered in the chart. If your chart configuration is static and trusted, there's no need for any action.Consider the architecture of your application. If the user-defined input is allowed to pass unfiltered to the point where it is inserted into a chart, sanitation should probably be added at an earlier stage, regardless of Highcharts version.Upgrade to Highcharts v9. It is fully backwards compatible and there is no need for changing any configuration.If you are not using any of the pseudo-HTML capabilities of Highcharts to format text inputs, stripping the texts of HTML is a simple way to filter out malicious code. See the example of allow-listing characters. While this does not render gracefully, it does effectively strip out HTML.For more sophisticated sanitizing of the options, consider using a third party library like DOMPurify, either on the server or client side. See the example. This will strip out malicious code in a fast and secure way, while maintaining harmless markup.Security reports and SAST code scanningWe take security seriously and strive to ensure the safety of our codebase. We encourage our users and the community to report any security vulnerabilities they discover using the information that on our GitHub repository. If you have discovered a security vulnerability or have any security-related concerns, please report them to us.In addition to community reports, we also employ Static Application Security Testing (SAST) as part of our development workflow. SAST code scanning helps us identify and mitigate security risks by analyzing our codebase for potential vulnerabilities, such as common coding mistakes, insecure coding patterns, and known security issues.Edit this pagePrevious« Responsive charts NextDataviz Glossary  »ScopeBackwards compatibilitySecurity reports and SAST code scanning\n\n\n\nDataviz GlossaryThe Dataviz Glossary provides concise definitions of key terms and concepts
commonly used in data visualization. Whether you're new to charting or looking
to refresh your understanding of specific terms, this glossary serves as a quick
reference to enhance your knowledge and improve communication within the field
of data visualization.Cartesian coordinate systemDefinition: A coordinate system that specifies each point uniquely using a
pair of numerical values, typically denoted as (x, y), representing horizontal
and vertical positions on a two-dimensional plane.Example: Line and column charts in Highcharts commonly use the Cartesian
coordinate system to map data points.Related Highcharts concepts: Axes,
Series.Choropleth mapDefinition: A thematic map that uses differences in shading, coloring, or
patterns within predefined areas (e.g., countries or regions) to represent the
magnitude of a variable, such as population density or income levels.  Example: A map showing average rainfall levels across regions, where
darker shades indicate higher rainfall.Related Highcharts concepts: Map series,
Color axis.Mosaic plotDefinition: A graphical display that uses rectangular segments to
represent categorical data. The area of each segment is proportional to the
frequency or proportion of the categories it represents. Also known as
Marimekko or Mekko chart.Example: Mosaic plots are used to display multi-dimensional categorical
data, where each rectangle size visually indicates the relationship between
different variables.Related Highcharts concepts: Variwide series,
Treemap series.Tree (data structure)Definition: A hierarchical data structure used to organize elements in a
parent-child relationship. Each element, called a node, can have multiple child
nodes but only one parent (except for the root node, which has none).Example:  Used to represent relationships such as organizational charts or
file directories. Tree maps and sunburst charts use tree data structures to
represent nested data.Related Highcharts concepts: Treemap series,
Treegraph series,
Sunburst series.\n\nDataviz GlossaryThe Dataviz Glossary provides concise definitions of key terms and concepts
commonly used in data visualization. Whether you're new to charting or looking
to refresh your understanding of specific terms, this glossary serves as a quick
reference to enhance your knowledge and improve communication within the field
of data visualization.Cartesian coordinate systemDefinition: A coordinate system that specifies each point uniquely using a
pair of numerical values, typically denoted as (x, y), representing horizontal
and vertical positions on a two-dimensional plane.Example: Line and column charts in Highcharts commonly use the Cartesian
coordinate system to map data points.Related Highcharts concepts: Axes,
Series.Choropleth mapDefinition: A thematic map that uses differences in shading, coloring, or
patterns within predefined areas (e.g., countries or regions) to represent the
magnitude of a variable, such as population density or income levels.  Example: A map showing average rainfall levels across regions, where
darker shades indicate higher rainfall.Related Highcharts concepts: Map series,
Color axis.Mosaic plotDefinition: A graphical display that uses rectangular segments to
represent categorical data. The area of each segment is proportional to the
frequency or proportion of the categories it represents. Also known as
Marimekko or Mekko chart.Example: Mosaic plots are used to display multi-dimensional categorical
data, where each rectangle size visually indicates the relationship between
different variables.Related Highcharts concepts: Variwide series,
Treemap series.Tree (data structure)Definition: A hierarchical data structure used to organize elements in a
parent-child relationship. Each element, called a node, can have multiple child
nodes but only one parent (except for the root node, which has none).Example:  Used to represent relationships such as organizational charts or
file directories. Tree maps and sunburst charts use tree data structures to
represent nested data.Related Highcharts concepts: Treemap series,
Treegraph series,
Sunburst series.Edit this pagePrevious« Highcharts Security NextGetting started with Highcharts Stock  »Cartesian coordinate systemChoropleth mapMosaic plotTree (data structure)\n\nDataviz GlossaryThe Dataviz Glossary provides concise definitions of key terms and concepts
commonly used in data visualization. Whether you're new to charting or looking
to refresh your understanding of specific terms, this glossary serves as a quick
reference to enhance your knowledge and improve communication within the field
of data visualization.Cartesian coordinate systemDefinition: A coordinate system that specifies each point uniquely using a
pair of numerical values, typically denoted as (x, y), representing horizontal
and vertical positions on a two-dimensional plane.Example: Line and column charts in Highcharts commonly use the Cartesian
coordinate system to map data points.Related Highcharts concepts: Axes,
Series.Choropleth mapDefinition: A thematic map that uses differences in shading, coloring, or
patterns within predefined areas (e.g., countries or regions) to represent the
magnitude of a variable, such as population density or income levels.  Example: A map showing average rainfall levels across regions, where
darker shades indicate higher rainfall.Related Highcharts concepts: Map series,
Color axis.Mosaic plotDefinition: A graphical display that uses rectangular segments to
represent categorical data. The area of each segment is proportional to the
frequency or proportion of the categories it represents. Also known as
Marimekko or Mekko chart.Example: Mosaic plots are used to display multi-dimensional categorical
data, where each rectangle size visually indicates the relationship between
different variables.Related Highcharts concepts: Variwide series,
Treemap series.Tree (data structure)Definition: A hierarchical data structure used to organize elements in a
parent-child relationship. Each element, called a node, can have multiple child
nodes but only one parent (except for the root node, which has none).Example:  Used to represent relationships such as organizational charts or
file directories. Tree maps and sunburst charts use tree data structures to
represent nested data.Related Highcharts concepts: Treemap series,
Treegraph series,
Sunburst series.Edit this pagePrevious« Highcharts Security NextGetting started with Highcharts Stock  »Cartesian coordinate systemChoropleth mapMosaic plotTree (data structure)\n\n\n\nGetting started with Highcharts StockHighcharts Stock allows to create financial and general timeline charts for your web and mobile applications. Features sophisticated navigation for high-volume data, user annotations, advanced data grouping and over 40 built-in Technical Indicators.Find demos of Highcharts Stock charts here to quickly get an overview of its capabilities.Get startedExample of loading Highcharts Stock into a webpage as a standalone library when there is no need for other Highcharts dependencies:<script src="https://code.highcharts.com/stock/highstock.js"></script>CopyLoad Highcharts Stock as a module when a project needs both Highcharts and Highcharts Stock loaded at the same time. Place the script tag or import statement after loading the main library:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/stock/modules/stock.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Stock follows the same patterns as described for Highcharts.ConstructorRun the stockChart constructor for initializing a Stock chart visualization. The constructor takes two required parameters (container ID and a config object) and a third optional parameter, which is the callback function run after the chart has loaded.Highcharts.stockChart(containerID, {    // configuration options object}, callback);CopycontainerID: The HTML element used for rendering the chart.config: An object with configuration options for defining the Stock chart.callback: (Optional) A callback for getting a handle on the chart once it's loaded.See also explained here in Stock APIBasic exampleTo create your first basic stock chart, all you need to do is to define the dataset appropriate for the series type that you choose. The default series type is a line series.That's all you need to get started with Highcharts Stock:Highcharts.stockChart('container', {    series: [{        data: [1, 2, 3]    }]});CopyInstead of hardcoded data, see how you can use the data from external API/database below.Learn more about Stock specific chart features at Understanding Highcharts Stock.\n\nGetting started with Highcharts StockHighcharts Stock allows to create financial and general timeline charts for your web and mobile applications. Features sophisticated navigation for high-volume data, user annotations, advanced data grouping and over 40 built-in Technical Indicators.Find demos of Highcharts Stock charts here to quickly get an overview of its capabilities.Get startedExample of loading Highcharts Stock into a webpage as a standalone library when there is no need for other Highcharts dependencies:<script src="https://code.highcharts.com/stock/highstock.js"></script>CopyLoad Highcharts Stock as a module when a project needs both Highcharts and Highcharts Stock loaded at the same time. Place the script tag or import statement after loading the main library:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/stock/modules/stock.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Stock follows the same patterns as described for Highcharts.ConstructorRun the stockChart constructor for initializing a Stock chart visualization. The constructor takes two required parameters (container ID and a config object) and a third optional parameter, which is the callback function run after the chart has loaded.Highcharts.stockChart(containerID, {    // configuration options object}, callback);CopycontainerID: The HTML element used for rendering the chart.config: An object with configuration options for defining the Stock chart.callback: (Optional) A callback for getting a handle on the chart once it's loaded.See also explained here in Stock APIBasic exampleTo create your first basic stock chart, all you need to do is to define the dataset appropriate for the series type that you choose. The default series type is a line series.That's all you need to get started with Highcharts Stock:Highcharts.stockChart('container', {    series: [{        data: [1, 2, 3]    }]});CopyInstead of hardcoded data, see how you can use the data from external API/database below.Learn more about Stock specific chart features at Understanding Highcharts Stock.Edit this pagePrevious« Dataviz Glossary NextUnderstanding Highcharts Stock  »Get startedConstructorBasic example\n\nGetting started with Highcharts StockHighcharts Stock allows to create financial and general timeline charts for your web and mobile applications. Features sophisticated navigation for high-volume data, user annotations, advanced data grouping and over 40 built-in Technical Indicators.Find demos of Highcharts Stock charts here to quickly get an overview of its capabilities.Get startedExample of loading Highcharts Stock into a webpage as a standalone library when there is no need for other Highcharts dependencies:<script src="https://code.highcharts.com/stock/highstock.js"></script>CopyLoad Highcharts Stock as a module when a project needs both Highcharts and Highcharts Stock loaded at the same time. Place the script tag or import statement after loading the main library:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/stock/modules/stock.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Stock follows the same patterns as described for Highcharts.ConstructorRun the stockChart constructor for initializing a Stock chart visualization. The constructor takes two required parameters (container ID and a config object) and a third optional parameter, which is the callback function run after the chart has loaded.Highcharts.stockChart(containerID, {    // configuration options object}, callback);CopycontainerID: The HTML element used for rendering the chart.config: An object with configuration options for defining the Stock chart.callback: (Optional) A callback for getting a handle on the chart once it's loaded.See also explained here in Stock APIBasic exampleTo create your first basic stock chart, all you need to do is to define the dataset appropriate for the series type that you choose. The default series type is a line series.That's all you need to get started with Highcharts Stock:Highcharts.stockChart('container', {    series: [{        data: [1, 2, 3]    }]});CopyInstead of hardcoded data, see how you can use the data from external API/database below.Learn more about Stock specific chart features at Understanding Highcharts Stock.Edit this pagePrevious« Dataviz Glossary NextUnderstanding Highcharts Stock  »Get startedConstructorBasic example\n\n\n\nUnderstanding Highcharts StockHighcharts Stock is based on Highcharts, meaning it has all the core functionality of Highcharts, plus some additional features.Highcharts Stock also supports various financial series types.chart.series[0].update({    type: 'candlestick'});CopySee Update series method and series API options.Navigator and scrollbarAllows you to fine tune the range of the chart which is displayed and scroll through it.See Navigator for more information.chart.update({    navigator: {        enabled: true,        height: 100    },    scrollbar: {        enabled: false    }});CopyTo update navigator and scrollbar use Chart update. See navigator API options.Range selectorAllows you to quickly select a range to be shown on the chart or specify the exact interval to be shown.See Range selector for more information.chart.update({    rangeSelector: {        enabled: true    }});CopyTo update range selector use Chart update. See range selector API options.CrosshairShows a line perpendicular to the corresponding axis which is following the mouse position or nearest point, depending on the crosshair.snap property. This functionality can be found in the axis API options. Crosshairs can also be used in Highcharts Core (without Stock module), but are not enabled by default.chart.xAxis[0].update({    crosshair: {        snap: false    }});CopyCrosshair is an axis property, therefore update it via Axis update. See axis API options.Data groupingAutomatically groups multiple points into a single point to improve readability. The displayed value for a grouped point depends on the approximation function which is set by default depending on the series type, but can be manually overwritten. The amount of points in a single group is selected based on the zoom level, data density and user options.See Data grouping for more information.chart.series[0].update({    dataGrouping: {        groupAll: true    }});CopyData grouping is a series property, therefore update it via Series update. See data grouping API options.\n\nUnderstanding Highcharts StockHighcharts Stock is based on Highcharts, meaning it has all the core functionality of Highcharts, plus some additional features.Highcharts Stock also supports various financial series types.chart.series[0].update({    type: 'candlestick'});CopySee Update series method and series API options.Navigator and scrollbarAllows you to fine tune the range of the chart which is displayed and scroll through it.See Navigator for more information.chart.update({    navigator: {        enabled: true,        height: 100    },    scrollbar: {        enabled: false    }});CopyTo update navigator and scrollbar use Chart update. See navigator API options.Range selectorAllows you to quickly select a range to be shown on the chart or specify the exact interval to be shown.See Range selector for more information.chart.update({    rangeSelector: {        enabled: true    }});CopyTo update range selector use Chart update. See range selector API options.CrosshairShows a line perpendicular to the corresponding axis which is following the mouse position or nearest point, depending on the crosshair.snap property. This functionality can be found in the axis API options. Crosshairs can also be used in Highcharts Core (without Stock module), but are not enabled by default.chart.xAxis[0].update({    crosshair: {        snap: false    }});CopyCrosshair is an axis property, therefore update it via Axis update. See axis API options.Data groupingAutomatically groups multiple points into a single point to improve readability. The displayed value for a grouped point depends on the approximation function which is set by default depending on the series type, but can be manually overwritten. The amount of points in a single group is selected based on the zoom level, data density and user options.See Data grouping for more information.chart.series[0].update({    dataGrouping: {        groupAll: true    }});CopyData grouping is a series property, therefore update it via Series update. See data grouping API options.Edit this pagePrevious« Getting started with Highcharts Stock NextStock tools  »Navigator and scrollbarRange selectorCrosshairData grouping\n\nUnderstanding Highcharts StockHighcharts Stock is based on Highcharts, meaning it has all the core functionality of Highcharts, plus some additional features.Highcharts Stock also supports various financial series types.chart.series[0].update({    type: 'candlestick'});CopySee Update series method and series API options.Navigator and scrollbarAllows you to fine tune the range of the chart which is displayed and scroll through it.See Navigator for more information.chart.update({    navigator: {        enabled: true,        height: 100    },    scrollbar: {        enabled: false    }});CopyTo update navigator and scrollbar use Chart update. See navigator API options.Range selectorAllows you to quickly select a range to be shown on the chart or specify the exact interval to be shown.See Range selector for more information.chart.update({    rangeSelector: {        enabled: true    }});CopyTo update range selector use Chart update. See range selector API options.CrosshairShows a line perpendicular to the corresponding axis which is following the mouse position or nearest point, depending on the crosshair.snap property. This functionality can be found in the axis API options. Crosshairs can also be used in Highcharts Core (without Stock module), but are not enabled by default.chart.xAxis[0].update({    crosshair: {        snap: false    }});CopyCrosshair is an axis property, therefore update it via Axis update. See axis API options.Data groupingAutomatically groups multiple points into a single point to improve readability. The displayed value for a grouped point depends on the approximation function which is set by default depending on the series type, but can be manually overwritten. The amount of points in a single group is selected based on the zoom level, data density and user options.See Data grouping for more information.chart.series[0].update({    dataGrouping: {        groupAll: true    }});CopyData grouping is a series property, therefore update it via Series update. See data grouping API options.Edit this pagePrevious« Getting started with Highcharts Stock NextStock tools  »Navigator and scrollbarRange selectorCrosshairData grouping\n\n\n\nStock toolsStock Tools is a Highcharts Stock module for building a GUI that enables user interaction with the chart, such as adding annotations, technical indicators or just for zooming in or out. The module is released with Highcharts Stock 7 and won't work with previous versions.Building the GUI is facilitated by the Stock Tools module, where your HTML elements for user interaction are automatically bound to predefined events in this module. Full list of the available bindings can be found in the API navigation.bindings.
Quick startTo get started quickly it's recommended to use the default toolbar of the Stock Tools module. We need to load the JavaScript files in the following order.First load Highcharts Stock and the bundle with all the technical indicators for convenience.<script src="https://code.highcharts.com/indicators/indicators-all.js"></script>CopySee the example below when you only need some specific indicators for your project. Load first the indicator.js base module and specific indicators successively. Technical indicators require the indicators/indicators.js base module. The base module includes SMA (Simple Moving Average). Find here a list of available technical indicators.See example below for loading specific indicators.<script src="https://code.highcharts.com/indicators/indicators.js"></script><script src="https://code.highcharts.com/indicators/rsi.js"></script><script src="https://code.highcharts.com/indicators/ema.js"></script><script src="https://code.highcharts.com/indicators/macd.js"></script><script src="/ .... other technical indicators ...  "CopyLoad also the other modules needed by the default toolbar: Resizable panes, Annotations, Full screen, and Current Price.<script src="https://code.highcharts.com/modules/drag-panes.js"></script><script src="https://code.highcharts.com/modules/annotations-advanced.js"></script><script src="https://code.highcharts.com/modules/price-indicator.js"></script><script src="https://code.highcharts.com/modules/full-screen.js"></script>CopyIt is necessary to load the Stock Tools module last, so it will pick up on all available plugins above:<script src="https://code.highcharts.com/modules/stock-tools.js">CopyThe build-in toolbar, needs the following CSS files:<link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/stocktools/gui.css"><link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/annotations/popup.css">CopyNow you have loaded all required files, create a stock chart as you normally would, see the below example.Highcharts.stockChart('container', {    series: [{        type: 'ohlc',            data: [ ... ]        }]    });CopyAnd Stock Tools toolbar will show up on the left side of the chart, see the demo below.  Note: The buttons graphics of the Stock Toolbar buttons are by default loaded from the Highcharts CDN. If you want to load Stock Tools from your local package, you might also want to set the symbol properties for each of the stockTools.gui.definitions. The icons are available in the Highcharts NPM package or clone the highcharts-dist GitHub repository.  Find the icons in the /gfx/stocktools folder of this package.Build a custom UIWhile the built-in Stock Tools GUI provides a comprehensive interface for adding annotations, technical indicators, and other interactions, you might want to create a fully customized user interface for your specific needs. For detailed instructions on building a custom UI, binding events to HTML elements, and creating custom dialog windows, please refer to the Annotations GUI page.\n\nStock toolsStock Tools is a Highcharts Stock module for building a GUI that enables user interaction with the chart, such as adding annotations, technical indicators or just for zooming in or out. The module is released with Highcharts Stock 7 and won't work with previous versions.Building the GUI is facilitated by the Stock Tools module, where your HTML elements for user interaction are automatically bound to predefined events in this module. Full list of the available bindings can be found in the API navigation.bindings.
Quick startTo get started quickly it's recommended to use the default toolbar of the Stock Tools module. We need to load the JavaScript files in the following order.First load Highcharts Stock and the bundle with all the technical indicators for convenience.<script src="https://code.highcharts.com/indicators/indicators-all.js"></script>CopySee the example below when you only need some specific indicators for your project. Load first the indicator.js base module and specific indicators successively. Technical indicators require the indicators/indicators.js base module. The base module includes SMA (Simple Moving Average). Find here a list of available technical indicators.See example below for loading specific indicators.<script src="https://code.highcharts.com/indicators/indicators.js"></script><script src="https://code.highcharts.com/indicators/rsi.js"></script><script src="https://code.highcharts.com/indicators/ema.js"></script><script src="https://code.highcharts.com/indicators/macd.js"></script><script src="/ .... other technical indicators ...  "CopyLoad also the other modules needed by the default toolbar: Resizable panes, Annotations, Full screen, and Current Price.<script src="https://code.highcharts.com/modules/drag-panes.js"></script><script src="https://code.highcharts.com/modules/annotations-advanced.js"></script><script src="https://code.highcharts.com/modules/price-indicator.js"></script><script src="https://code.highcharts.com/modules/full-screen.js"></script>CopyIt is necessary to load the Stock Tools module last, so it will pick up on all available plugins above:<script src="https://code.highcharts.com/modules/stock-tools.js">CopyThe build-in toolbar, needs the following CSS files:<link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/stocktools/gui.css"><link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/annotations/popup.css">CopyNow you have loaded all required files, create a stock chart as you normally would, see the below example.Highcharts.stockChart('container', {    series: [{        type: 'ohlc',            data: [ ... ]        }]    });CopyAnd Stock Tools toolbar will show up on the left side of the chart, see the demo below.  Note: The buttons graphics of the Stock Toolbar buttons are by default loaded from the Highcharts CDN. If you want to load Stock Tools from your local package, you might also want to set the symbol properties for each of the stockTools.gui.definitions. The icons are available in the Highcharts NPM package or clone the highcharts-dist GitHub repository.  Find the icons in the /gfx/stocktools folder of this package.Build a custom UIWhile the built-in Stock Tools GUI provides a comprehensive interface for adding annotations, technical indicators, and other interactions, you might want to create a fully customized user interface for your specific needs. For detailed instructions on building a custom UI, binding events to HTML elements, and creating custom dialog windows, please refer to the Annotations GUI page.Edit this pagePrevious« Understanding Highcharts Stock NextAdvanced Annotations module  »Quick startBuild a custom UI\n\nStock toolsStock Tools is a Highcharts Stock module for building a GUI that enables user interaction with the chart, such as adding annotations, technical indicators or just for zooming in or out. The module is released with Highcharts Stock 7 and won't work with previous versions.Building the GUI is facilitated by the Stock Tools module, where your HTML elements for user interaction are automatically bound to predefined events in this module. Full list of the available bindings can be found in the API navigation.bindings.
Quick startTo get started quickly it's recommended to use the default toolbar of the Stock Tools module. We need to load the JavaScript files in the following order.First load Highcharts Stock and the bundle with all the technical indicators for convenience.<script src="https://code.highcharts.com/indicators/indicators-all.js"></script>CopySee the example below when you only need some specific indicators for your project. Load first the indicator.js base module and specific indicators successively. Technical indicators require the indicators/indicators.js base module. The base module includes SMA (Simple Moving Average). Find here a list of available technical indicators.See example below for loading specific indicators.<script src="https://code.highcharts.com/indicators/indicators.js"></script><script src="https://code.highcharts.com/indicators/rsi.js"></script><script src="https://code.highcharts.com/indicators/ema.js"></script><script src="https://code.highcharts.com/indicators/macd.js"></script><script src="/ .... other technical indicators ...  "CopyLoad also the other modules needed by the default toolbar: Resizable panes, Annotations, Full screen, and Current Price.<script src="https://code.highcharts.com/modules/drag-panes.js"></script><script src="https://code.highcharts.com/modules/annotations-advanced.js"></script><script src="https://code.highcharts.com/modules/price-indicator.js"></script><script src="https://code.highcharts.com/modules/full-screen.js"></script>CopyIt is necessary to load the Stock Tools module last, so it will pick up on all available plugins above:<script src="https://code.highcharts.com/modules/stock-tools.js">CopyThe build-in toolbar, needs the following CSS files:<link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/stocktools/gui.css"><link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/annotations/popup.css">CopyNow you have loaded all required files, create a stock chart as you normally would, see the below example.Highcharts.stockChart('container', {    series: [{        type: 'ohlc',            data: [ ... ]        }]    });CopyAnd Stock Tools toolbar will show up on the left side of the chart, see the demo below.  Note: The buttons graphics of the Stock Toolbar buttons are by default loaded from the Highcharts CDN. If you want to load Stock Tools from your local package, you might also want to set the symbol properties for each of the stockTools.gui.definitions. The icons are available in the Highcharts NPM package or clone the highcharts-dist GitHub repository.  Find the icons in the /gfx/stocktools folder of this package.Build a custom UIWhile the built-in Stock Tools GUI provides a comprehensive interface for adding annotations, technical indicators, and other interactions, you might want to create a fully customized user interface for your specific needs. For detailed instructions on building a custom UI, binding events to HTML elements, and creating custom dialog windows, please refer to the Annotations GUI page.Edit this pagePrevious« Understanding Highcharts Stock NextAdvanced Annotations module  »Quick startBuild a custom UI\n\n\n\nAdvanced Annotations moduleCombining multiple shapes and labels to create a meaningful highlight can be challenging and time consuming. The advanced annotations module simplifies this process, enabling users to add complex yet practical annotations to charts—particularly valuable for technical analysis. Below is a list of all available advanced annotations. See here for basic annotations.Include the following file modules/annotations-advanced.js after highcharts.js or highstock.js to enable advanced annotations.The conceptAdvanced annotations are composed of one or more shapes combined with labels. The type option specifies the type of advanced annotation to use. This code snippet shows how to easily create the Fibonacci retracement above.annotations: [{        type: 'fibonacci',        typeOptions: {            points: [{                x: 2,                y: 4            }, {                x: 10,                y: 6.5            }]        }    }]CopyThe type options and label optionsThe typeOptions feature allows users to customize the appearance and design of an annotation, including its individual shapes and labels. It’s important to note that typeOptions settings are specific to each annotation type. Some annotations that use labels also have labelOptions where users may configure the label appearance. Below is an example demonstrating how to apply different colors to various shapes using typeOptions for the Fibonacci Retracement annotation. Click the "Apply colors" button in the demo to see the effect....    labelOptions: {        style: {            color: '#071952'        }    },    typeOptions: {        backgroundColors: [            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)'        ],        lineColor: 'rgba(0, 0, 0, 0.8)'    }CopyLook for the typeOptions and labelOptions for a specific annotation.Points and control pointsMost of the advanced annotations have some control points defined by default. These control points enable users to adjust the annotation by dragging points within the chart, allowing for easy resizing and reshaping. Control points can be modified using controlPointOptions, within the overall annotation object, or directly in the points array with controlPoint. For certain advanced annotations, the typeOptions includes an additional heightControlPoint, which specifically controls the height. See the Tunnel example below:By default, all control points are set to visible: false. To make them visible, change the setting to true in the controlPointOptions. Read more about controlPointOptions and heightControlPoint.List of advanced annotations with examplesNote the demos with an interactive "Apply colors" button to see how various options such as typeOptions are applied with different annotations.Vertical lineTunnelTime cyclesPitchforkMeasureInfinity lineFibonacciFibonacci time zonesElliot waveCrooked line\n\nAdvanced Annotations moduleCombining multiple shapes and labels to create a meaningful highlight can be challenging and time consuming. The advanced annotations module simplifies this process, enabling users to add complex yet practical annotations to charts—particularly valuable for technical analysis. Below is a list of all available advanced annotations. See here for basic annotations.Include the following file modules/annotations-advanced.js after highcharts.js or highstock.js to enable advanced annotations.The conceptAdvanced annotations are composed of one or more shapes combined with labels. The type option specifies the type of advanced annotation to use. This code snippet shows how to easily create the Fibonacci retracement above.annotations: [{        type: 'fibonacci',        typeOptions: {            points: [{                x: 2,                y: 4            }, {                x: 10,                y: 6.5            }]        }    }]CopyThe type options and label optionsThe typeOptions feature allows users to customize the appearance and design of an annotation, including its individual shapes and labels. It’s important to note that typeOptions settings are specific to each annotation type. Some annotations that use labels also have labelOptions where users may configure the label appearance. Below is an example demonstrating how to apply different colors to various shapes using typeOptions for the Fibonacci Retracement annotation. Click the "Apply colors" button in the demo to see the effect....    labelOptions: {        style: {            color: '#071952'        }    },    typeOptions: {        backgroundColors: [            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)'        ],        lineColor: 'rgba(0, 0, 0, 0.8)'    }CopyLook for the typeOptions and labelOptions for a specific annotation.Points and control pointsMost of the advanced annotations have some control points defined by default. These control points enable users to adjust the annotation by dragging points within the chart, allowing for easy resizing and reshaping. Control points can be modified using controlPointOptions, within the overall annotation object, or directly in the points array with controlPoint. For certain advanced annotations, the typeOptions includes an additional heightControlPoint, which specifically controls the height. See the Tunnel example below:By default, all control points are set to visible: false. To make them visible, change the setting to true in the controlPointOptions. Read more about controlPointOptions and heightControlPoint.List of advanced annotations with examplesNote the demos with an interactive "Apply colors" button to see how various options such as typeOptions are applied with different annotations.Vertical lineTunnelTime cyclesPitchforkMeasureInfinity lineFibonacciFibonacci time zonesElliot waveCrooked lineEdit this pagePrevious« Stock tools NextCandlestick chart  »The conceptThe type options and label optionsPoints and control pointsList of advanced annotations with examplesVertical lineTunnelTime cyclesPitchforkMeasureInfinity lineFibonacciFibonacci time zonesElliot waveCrooked line\n\nAdvanced Annotations moduleCombining multiple shapes and labels to create a meaningful highlight can be challenging and time consuming. The advanced annotations module simplifies this process, enabling users to add complex yet practical annotations to charts—particularly valuable for technical analysis. Below is a list of all available advanced annotations. See here for basic annotations.Include the following file modules/annotations-advanced.js after highcharts.js or highstock.js to enable advanced annotations.The conceptAdvanced annotations are composed of one or more shapes combined with labels. The type option specifies the type of advanced annotation to use. This code snippet shows how to easily create the Fibonacci retracement above.annotations: [{        type: 'fibonacci',        typeOptions: {            points: [{                x: 2,                y: 4            }, {                x: 10,                y: 6.5            }]        }    }]CopyThe type options and label optionsThe typeOptions feature allows users to customize the appearance and design of an annotation, including its individual shapes and labels. It’s important to note that typeOptions settings are specific to each annotation type. Some annotations that use labels also have labelOptions where users may configure the label appearance. Below is an example demonstrating how to apply different colors to various shapes using typeOptions for the Fibonacci Retracement annotation. Click the "Apply colors" button in the demo to see the effect....    labelOptions: {        style: {            color: '#071952'        }    },    typeOptions: {        backgroundColors: [            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)',            'rgb(7, 25, 82,   0.4)',            'rgb(8, 131, 149, 0.4)'        ],        lineColor: 'rgba(0, 0, 0, 0.8)'    }CopyLook for the typeOptions and labelOptions for a specific annotation.Points and control pointsMost of the advanced annotations have some control points defined by default. These control points enable users to adjust the annotation by dragging points within the chart, allowing for easy resizing and reshaping. Control points can be modified using controlPointOptions, within the overall annotation object, or directly in the points array with controlPoint. For certain advanced annotations, the typeOptions includes an additional heightControlPoint, which specifically controls the height. See the Tunnel example below:By default, all control points are set to visible: false. To make them visible, change the setting to true in the controlPointOptions. Read more about controlPointOptions and heightControlPoint.List of advanced annotations with examplesNote the demos with an interactive "Apply colors" button to see how various options such as typeOptions are applied with different annotations.Vertical lineTunnelTime cyclesPitchforkMeasureInfinity lineFibonacciFibonacci time zonesElliot waveCrooked lineEdit this pagePrevious« Stock tools NextCandlestick chart  »The conceptThe type options and label optionsPoints and control pointsList of advanced annotations with examplesVertical lineTunnelTime cyclesPitchforkMeasureInfinity lineFibonacciFibonacci time zonesElliot waveCrooked line\n\n\n\nCandlestick chartA candlestick chart is typically used to present the open, high, low and close price over a period of time. A candlestick chart is composed of a body and an upper and a lower wick. The body represents the opening and closing price. If the opening price is higher than the closing price the body is filled. If the closing price is higher than the opening price the body is unfilled. The upper wick represent the highest price during a time period and the lower wick represents the lowest price during a time period.ADJUSTING CANDLES COLORTo highlight candlestick price movement, colors of the candlestick can be easily altered. Any combination of opposing colors can be applied to this type of chart.Example of changing candlestick colors:plotOptions: {    candlestick: {        color: 'pink'        lineColor: 'red',        upColor: 'lightgreen',        upLineColor: 'green',    }}CopyProperties given for candlestick colors are:color - Candle body color when going down (closing value is lower than the opening value)lineColor - Color of the wick when going down (closing value is lower than the opening value)upColor - Candle body color when going up (closing value is higher than the opening value), by default it is transparentupLineColor - Color of the wick when going up (closing value is higher than the opening value)For more information on the candlestick chart, see the API reference.\n\nCandlestick chartA candlestick chart is typically used to present the open, high, low and close price over a period of time. A candlestick chart is composed of a body and an upper and a lower wick. The body represents the opening and closing price. If the opening price is higher than the closing price the body is filled. If the closing price is higher than the opening price the body is unfilled. The upper wick represent the highest price during a time period and the lower wick represents the lowest price during a time period.ADJUSTING CANDLES COLORTo highlight candlestick price movement, colors of the candlestick can be easily altered. Any combination of opposing colors can be applied to this type of chart.Example of changing candlestick colors:plotOptions: {    candlestick: {        color: 'pink'        lineColor: 'red',        upColor: 'lightgreen',        upLineColor: 'green',    }}CopyProperties given for candlestick colors are:color - Candle body color when going down (closing value is lower than the opening value)lineColor - Color of the wick when going down (closing value is lower than the opening value)upColor - Candle body color when going up (closing value is higher than the opening value), by default it is transparentupLineColor - Color of the wick when going up (closing value is higher than the opening value)For more information on the candlestick chart, see the API reference.Edit this pagePrevious« Advanced Annotations module NextCompare  »ADJUSTING CANDLES COLOR\n\nCandlestick chartA candlestick chart is typically used to present the open, high, low and close price over a period of time. A candlestick chart is composed of a body and an upper and a lower wick. The body represents the opening and closing price. If the opening price is higher than the closing price the body is filled. If the closing price is higher than the opening price the body is unfilled. The upper wick represent the highest price during a time period and the lower wick represents the lowest price during a time period.ADJUSTING CANDLES COLORTo highlight candlestick price movement, colors of the candlestick can be easily altered. Any combination of opposing colors can be applied to this type of chart.Example of changing candlestick colors:plotOptions: {    candlestick: {        color: 'pink'        lineColor: 'red',        upColor: 'lightgreen',        upLineColor: 'green',    }}CopyProperties given for candlestick colors are:color - Candle body color when going down (closing value is lower than the opening value)lineColor - Color of the wick when going down (closing value is lower than the opening value)upColor - Candle body color when going up (closing value is higher than the opening value), by default it is transparentupLineColor - Color of the wick when going up (closing value is higher than the opening value)For more information on the candlestick chart, see the API reference.Edit this pagePrevious« Advanced Annotations module NextCompare  »ADJUSTING CANDLES COLOR\n\n\n\nCompareThe compare tool is used to compare each points' value to the first value in a visible range (or to the first point before the range, more info: compareStart).The compare can be enabled in the chart's options, see the API reference. Available options for the series.compare property are:percent - percentage difference (image above), e.g. if the first visible value is 10 and the current value is 8, then the compare equals to 80% (or -20% when the compareBase is set to 0).value - difference between the values, e.g. if the first visible value is 10 and the current value is 8, then the compare equals to -2.The compare can be also enabled/disabled on a specific series by the series.setCompare() method or on all the series belonging to a specific y-axis by the yAxis.setCompare() method.\n\nCompareThe compare tool is used to compare each points' value to the first value in a visible range (or to the first point before the range, more info: compareStart).The compare can be enabled in the chart's options, see the API reference. Available options for the series.compare property are:percent - percentage difference (image above), e.g. if the first visible value is 10 and the current value is 8, then the compare equals to 80% (or -20% when the compareBase is set to 0).value - difference between the values, e.g. if the first visible value is 10 and the current value is 8, then the compare equals to -2.The compare can be also enabled/disabled on a specific series by the series.setCompare() method or on all the series belonging to a specific y-axis by the yAxis.setCompare() method.Edit this pagePrevious« Candlestick chart NextCumulative Sum  »\n\nCompareThe compare tool is used to compare each points' value to the first value in a visible range (or to the first point before the range, more info: compareStart).The compare can be enabled in the chart's options, see the API reference. Available options for the series.compare property are:percent - percentage difference (image above), e.g. if the first visible value is 10 and the current value is 8, then the compare equals to 80% (or -20% when the compareBase is set to 0).value - difference between the values, e.g. if the first visible value is 10 and the current value is 8, then the compare equals to -2.The compare can be also enabled/disabled on a specific series by the series.setCompare() method or on all the series belonging to a specific y-axis by the yAxis.setCompare() method.Edit this pagePrevious« Candlestick chart NextCumulative Sum  »\n\n\n\nCumulative SumThe Cumulative Sum tool sums (cumulates) all the previous values with the current value in a visible range.For the following data: [10, 8, 15, 20, 8, 15] the Cumulative Sum returns [10, 18, 33, 53, 61, 76] (see the graph below):The cumulative can be enabled in the chart's options using the series.cumulative property or enabled/disabled by the series.setCumulative() method or on all the series belonging to a specific y-axis by the yAxis.setCumulative() method.With dataGrouping enabled, default grouping approximation is set to sum.\n\nCumulative SumThe Cumulative Sum tool sums (cumulates) all the previous values with the current value in a visible range.For the following data: [10, 8, 15, 20, 8, 15] the Cumulative Sum returns [10, 18, 33, 53, 61, 76] (see the graph below):The cumulative can be enabled in the chart's options using the series.cumulative property or enabled/disabled by the series.setCumulative() method or on all the series belonging to a specific y-axis by the yAxis.setCumulative() method.With dataGrouping enabled, default grouping approximation is set to sum.Edit this pagePrevious« Compare NextHollow Candlestick chart  »\n\nCumulative SumThe Cumulative Sum tool sums (cumulates) all the previous values with the current value in a visible range.For the following data: [10, 8, 15, 20, 8, 15] the Cumulative Sum returns [10, 18, 33, 53, 61, 76] (see the graph below):The cumulative can be enabled in the chart's options using the series.cumulative property or enabled/disabled by the series.setCumulative() method or on all the series belonging to a specific y-axis by the yAxis.setCumulative() method.With dataGrouping enabled, default grouping approximation is set to sum.Edit this pagePrevious« Compare NextHollow Candlestick chart  »\n\n\n\nHollow Candlestick chartThe hollow candlestick series is similar to the candlestick series, with a few modifications.
The hollow candlestick point is composed of a body and an upper and a lower wick, however, it uses color and fill attributes to show price behavior. If the current closing price is higher than the opening price (bullish candle) the body is transparent.
When the current close is lower than the previous close, the line and filling for bearish candles has a reddish color.
Else (the close is higher than the previous close), the greenish color is applied for the line and the fill of the bearish candle.Candles without the fill are called bullish candles and the ones with filling are bearish.When the data grouping is enabled, points are grouped and then the candles are colored based on grouped points.For more information on the candlestick chart, see the API reference.\n\nHollow Candlestick chartThe hollow candlestick series is similar to the candlestick series, with a few modifications.
The hollow candlestick point is composed of a body and an upper and a lower wick, however, it uses color and fill attributes to show price behavior. If the current closing price is higher than the opening price (bullish candle) the body is transparent.
When the current close is lower than the previous close, the line and filling for bearish candles has a reddish color.
Else (the close is higher than the previous close), the greenish color is applied for the line and the fill of the bearish candle.Candles without the fill are called bullish candles and the ones with filling are bearish.When the data grouping is enabled, points are grouped and then the candles are colored based on grouped points.For more information on the candlestick chart, see the API reference.Edit this pagePrevious« Cumulative Sum NextHeikin Ashi chart  »\n\nHollow Candlestick chartThe hollow candlestick series is similar to the candlestick series, with a few modifications.
The hollow candlestick point is composed of a body and an upper and a lower wick, however, it uses color and fill attributes to show price behavior. If the current closing price is higher than the opening price (bullish candle) the body is transparent.
When the current close is lower than the previous close, the line and filling for bearish candles has a reddish color.
Else (the close is higher than the previous close), the greenish color is applied for the line and the fill of the bearish candle.Candles without the fill are called bullish candles and the ones with filling are bearish.When the data grouping is enabled, points are grouped and then the candles are colored based on grouped points.For more information on the candlestick chart, see the API reference.Edit this pagePrevious« Cumulative Sum NextHeikin Ashi chart  »\n\n\n\nHeikin Ashi chartA Heikin Ashi series is typically used to present the modified open, high, low and close price over a period of time.
A Heikin Ashi point is composed of a body and an upper and a lower wick similarly to the candlestick. The only difference is that the open, high, low and close values have been modified by the formula.When the data grouping is enabled, points are grouped and then the Heikin Ashi values are calculated based on grouped points.Calculating Heikin Ashi pointsnewOpen = (previousOpen + previousClose) / 2;newClose = (open + high + low + close) / 4;newHigh = Math.max(high, newClose, newOpen);newClose = Math.min(low, newClose, newOpen);CopyFor more information on the Heikin Ashi chart, see the API reference.\n\nHeikin Ashi chartA Heikin Ashi series is typically used to present the modified open, high, low and close price over a period of time.
A Heikin Ashi point is composed of a body and an upper and a lower wick similarly to the candlestick. The only difference is that the open, high, low and close values have been modified by the formula.When the data grouping is enabled, points are grouped and then the Heikin Ashi values are calculated based on grouped points.Calculating Heikin Ashi pointsnewOpen = (previousOpen + previousClose) / 2;newClose = (open + high + low + close) / 4;newHigh = Math.max(high, newClose, newOpen);newClose = Math.min(low, newClose, newOpen);CopyFor more information on the Heikin Ashi chart, see the API reference.Edit this pagePrevious« Hollow Candlestick chart NextHighcharts: Understanding Renko Series  »Calculating Heikin Ashi points\n\nHeikin Ashi chartA Heikin Ashi series is typically used to present the modified open, high, low and close price over a period of time.
A Heikin Ashi point is composed of a body and an upper and a lower wick similarly to the candlestick. The only difference is that the open, high, low and close values have been modified by the formula.When the data grouping is enabled, points are grouped and then the Heikin Ashi values are calculated based on grouped points.Calculating Heikin Ashi pointsnewOpen = (previousOpen + previousClose) / 2;newClose = (open + high + low + close) / 4;newHigh = Math.max(high, newClose, newOpen);newClose = Math.min(low, newClose, newOpen);CopyFor more information on the Heikin Ashi chart, see the API reference.Edit this pagePrevious« Hollow Candlestick chart NextHighcharts: Understanding Renko Series  »Calculating Heikin Ashi points\n\n\n\nHighcharts: Understanding Renko SeriesHighcharts offers a variety of charting methods for visualizing price data, and one of these is the Renko series.Renko, a Japanese term that signifies "brick", is a charting method commonly used for technical securities trading. The unique aspect of Renko charts is that they do not factor in time. Instead, they solely focus on price changes that meet a predetermined amount, filling a "price box".Setting Up a Highcharts Renko SeriesImplementing a Renko series in Highcharts requires the highstock.js package together with importing the renko module through the /modules/renko.js. Here is the basic structure of Highcharts Renko Series:Highcharts.stockChart('container', {    chart: {        type: 'renko'    },    series: [{        name: 'Price data',        data: ...  // Array of price data    }]});CopyYou can customize your Renko series using the plotOptions.renko object. One of the primary parameters to adjust is the boxSize, which sets the size of the price boxes.plotOptions: {    renko: {        boxSize: 1   // This signifies that each "brick" represents $1 price changes    }}CopyTime is not a factor in Renko charts but Highcharts allows you to use a datetime axis to indicate a timeline for your price changes, offering a temporal perspective.Highcharts Navigator SeriesBy default, for a brief overview of the price data, a smaller Renko chart is beneath the main chart using the navigator feature:navigator: {    series: {        type: 'renko'    }}CopyRenko vs. Candlestick and Heikin-AshiHighcharts supports multiple charting styles, including Candlestick and Heikin-Ashi. While these charting methods are optimal for detailed view of prices within each period (opening, closing, high, low prices), Renko offers a unique advantage in its simplicity. It abstracts minor fluctuations to highlight significant price changes.In a Candlestick chart, each candle represents a specific timeframe and shows the opening, closing, high and low levels for that period. On the other hand, Renko focuses solely on price movement. A new brick is plotted only when the price changes by a predetermined amount in either direction.The Heikin-Ashi technique differs from Candlestick and Renko methods by using the average prices to provide smoother trend lines, which might be more useful in catching longer-term trends. Even though Renko charts simplify the representation, they can simplify trend identification as compared with the other two types.Data Grouping and Tooltip CustomizationHighcharts optimizes viewer experience with large datasets by providing data grouping options. However, the dataGrouping is disabled for renko series, because it does not make sense to group those points by a unit of time.Moreover, you can provide detailed insights about each data point using customizable tooltips:tooltip: {    pointFormat: '<span> style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.y}<br/>'}CopySummaryHighcharts' Renko series provides a distinct way of visualizing price data. It emphasized considerable price changes over a specified amount, disregarding time and minor fluctuations. This makes it a valuable tool for traders seeking to identify significant market trends, and it is but one of many useful charting techniques supported by Highcharts.\n\nHighcharts: Understanding Renko SeriesHighcharts offers a variety of charting methods for visualizing price data, and one of these is the Renko series.Renko, a Japanese term that signifies "brick", is a charting method commonly used for technical securities trading. The unique aspect of Renko charts is that they do not factor in time. Instead, they solely focus on price changes that meet a predetermined amount, filling a "price box".Setting Up a Highcharts Renko SeriesImplementing a Renko series in Highcharts requires the highstock.js package together with importing the renko module through the /modules/renko.js. Here is the basic structure of Highcharts Renko Series:Highcharts.stockChart('container', {    chart: {        type: 'renko'    },    series: [{        name: 'Price data',        data: ...  // Array of price data    }]});CopyYou can customize your Renko series using the plotOptions.renko object. One of the primary parameters to adjust is the boxSize, which sets the size of the price boxes.plotOptions: {    renko: {        boxSize: 1   // This signifies that each "brick" represents $1 price changes    }}CopyTime is not a factor in Renko charts but Highcharts allows you to use a datetime axis to indicate a timeline for your price changes, offering a temporal perspective.Highcharts Navigator SeriesBy default, for a brief overview of the price data, a smaller Renko chart is beneath the main chart using the navigator feature:navigator: {    series: {        type: 'renko'    }}CopyRenko vs. Candlestick and Heikin-AshiHighcharts supports multiple charting styles, including Candlestick and Heikin-Ashi. While these charting methods are optimal for detailed view of prices within each period (opening, closing, high, low prices), Renko offers a unique advantage in its simplicity. It abstracts minor fluctuations to highlight significant price changes.In a Candlestick chart, each candle represents a specific timeframe and shows the opening, closing, high and low levels for that period. On the other hand, Renko focuses solely on price movement. A new brick is plotted only when the price changes by a predetermined amount in either direction.The Heikin-Ashi technique differs from Candlestick and Renko methods by using the average prices to provide smoother trend lines, which might be more useful in catching longer-term trends. Even though Renko charts simplify the representation, they can simplify trend identification as compared with the other two types.Data Grouping and Tooltip CustomizationHighcharts optimizes viewer experience with large datasets by providing data grouping options. However, the dataGrouping is disabled for renko series, because it does not make sense to group those points by a unit of time.Moreover, you can provide detailed insights about each data point using customizable tooltips:tooltip: {    pointFormat: '<span> style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.y}<br/>'}CopySummaryHighcharts' Renko series provides a distinct way of visualizing price data. It emphasized considerable price changes over a specified amount, disregarding time and minor fluctuations. This makes it a valuable tool for traders seeking to identify significant market trends, and it is but one of many useful charting techniques supported by Highcharts.Edit this pagePrevious« Heikin Ashi chart NextPoint and Figure chart  »Setting Up a Highcharts Renko SeriesHighcharts Navigator SeriesRenko vs. Candlestick and Heikin-AshiData Grouping and Tooltip CustomizationSummary\n\nHighcharts: Understanding Renko SeriesHighcharts offers a variety of charting methods for visualizing price data, and one of these is the Renko series.Renko, a Japanese term that signifies "brick", is a charting method commonly used for technical securities trading. The unique aspect of Renko charts is that they do not factor in time. Instead, they solely focus on price changes that meet a predetermined amount, filling a "price box".Setting Up a Highcharts Renko SeriesImplementing a Renko series in Highcharts requires the highstock.js package together with importing the renko module through the /modules/renko.js. Here is the basic structure of Highcharts Renko Series:Highcharts.stockChart('container', {    chart: {        type: 'renko'    },    series: [{        name: 'Price data',        data: ...  // Array of price data    }]});CopyYou can customize your Renko series using the plotOptions.renko object. One of the primary parameters to adjust is the boxSize, which sets the size of the price boxes.plotOptions: {    renko: {        boxSize: 1   // This signifies that each "brick" represents $1 price changes    }}CopyTime is not a factor in Renko charts but Highcharts allows you to use a datetime axis to indicate a timeline for your price changes, offering a temporal perspective.Highcharts Navigator SeriesBy default, for a brief overview of the price data, a smaller Renko chart is beneath the main chart using the navigator feature:navigator: {    series: {        type: 'renko'    }}CopyRenko vs. Candlestick and Heikin-AshiHighcharts supports multiple charting styles, including Candlestick and Heikin-Ashi. While these charting methods are optimal for detailed view of prices within each period (opening, closing, high, low prices), Renko offers a unique advantage in its simplicity. It abstracts minor fluctuations to highlight significant price changes.In a Candlestick chart, each candle represents a specific timeframe and shows the opening, closing, high and low levels for that period. On the other hand, Renko focuses solely on price movement. A new brick is plotted only when the price changes by a predetermined amount in either direction.The Heikin-Ashi technique differs from Candlestick and Renko methods by using the average prices to provide smoother trend lines, which might be more useful in catching longer-term trends. Even though Renko charts simplify the representation, they can simplify trend identification as compared with the other two types.Data Grouping and Tooltip CustomizationHighcharts optimizes viewer experience with large datasets by providing data grouping options. However, the dataGrouping is disabled for renko series, because it does not make sense to group those points by a unit of time.Moreover, you can provide detailed insights about each data point using customizable tooltips:tooltip: {    pointFormat: '<span> style="color:{point.color}">\u25CF</span> {series.name}: <b>{point.y}<br/>'}CopySummaryHighcharts' Renko series provides a distinct way of visualizing price data. It emphasized considerable price changes over a specified amount, disregarding time and minor fluctuations. This makes it a valuable tool for traders seeking to identify significant market trends, and it is but one of many useful charting techniques supported by Highcharts.Edit this pagePrevious« Heikin Ashi chart NextPoint and Figure chart  »Setting Up a Highcharts Renko SeriesHighcharts Navigator SeriesRenko vs. Candlestick and Heikin-AshiData Grouping and Tooltip CustomizationSummary\n\n\n\nPoint and Figure chartA Point and Figure (P&F) chart is a technical analysis tool used in financial markets to track price movements without too much focus on the time. It uses a series of Xs and Os to represent upward and downward price movements, respectively. The Xs indicate price increases, while the Os indicate price decreases. Each symbol is added to the column only when the boxSize threshold is crossed. A new column is created only when there is a reversal in the price trend of a predefined amount, known as the reversalAmount. This approach filters out minor price fluctuations, focusing only on significant price changes, which helps identify trends, support, and resistance levels. Point and Figure charts are particularly useful for spotting breakouts, trends, and potential entry or exit points in the market.DataPoint and Figure series accepts the data only in [x, close] or {x, close} format, which then gets calculated internally to [{ x, [y], marker }] groups with unique x values for each array element, which creates up and down trend columns. After that, the groups are parsed into Highcharts data format of [{ x, y, marker }], where for each y value in the group column, a new point is created, to create individual points in Point and Figure columns.Options specific to the P&F seriesIn addition to inherited series options, the following options control how the P&F series works:new cross symbol,boxSize API option,reversalAmount API option,separate API options for marker and markerUpFor more information on the Point and Figure chart, see the API reference, and the official demo.\n\nPoint and Figure chartA Point and Figure (P&F) chart is a technical analysis tool used in financial markets to track price movements without too much focus on the time. It uses a series of Xs and Os to represent upward and downward price movements, respectively. The Xs indicate price increases, while the Os indicate price decreases. Each symbol is added to the column only when the boxSize threshold is crossed. A new column is created only when there is a reversal in the price trend of a predefined amount, known as the reversalAmount. This approach filters out minor price fluctuations, focusing only on significant price changes, which helps identify trends, support, and resistance levels. Point and Figure charts are particularly useful for spotting breakouts, trends, and potential entry or exit points in the market.DataPoint and Figure series accepts the data only in [x, close] or {x, close} format, which then gets calculated internally to [{ x, [y], marker }] groups with unique x values for each array element, which creates up and down trend columns. After that, the groups are parsed into Highcharts data format of [{ x, y, marker }], where for each y value in the group column, a new point is created, to create individual points in Point and Figure columns.Options specific to the P&F seriesIn addition to inherited series options, the following options control how the P&F series works:new cross symbol,boxSize API option,reversalAmount API option,separate API options for marker and markerUpFor more information on the Point and Figure chart, see the API reference, and the official demo.Edit this pagePrevious« Highcharts: Understanding Renko Series NextData grouping  »DataOptions specific to the P&F series\n\nPoint and Figure chartA Point and Figure (P&F) chart is a technical analysis tool used in financial markets to track price movements without too much focus on the time. It uses a series of Xs and Os to represent upward and downward price movements, respectively. The Xs indicate price increases, while the Os indicate price decreases. Each symbol is added to the column only when the boxSize threshold is crossed. A new column is created only when there is a reversal in the price trend of a predefined amount, known as the reversalAmount. This approach filters out minor price fluctuations, focusing only on significant price changes, which helps identify trends, support, and resistance levels. Point and Figure charts are particularly useful for spotting breakouts, trends, and potential entry or exit points in the market.DataPoint and Figure series accepts the data only in [x, close] or {x, close} format, which then gets calculated internally to [{ x, [y], marker }] groups with unique x values for each array element, which creates up and down trend columns. After that, the groups are parsed into Highcharts data format of [{ x, y, marker }], where for each y value in the group column, a new point is created, to create individual points in Point and Figure columns.Options specific to the P&F seriesIn addition to inherited series options, the following options control how the P&F series works:new cross symbol,boxSize API option,reversalAmount API option,separate API options for marker and markerUpFor more information on the Point and Figure chart, see the API reference, and the official demo.Edit this pagePrevious« Highcharts: Understanding Renko Series NextData grouping  »DataOptions specific to the P&F series\n\n\n\nData groupingThe dataGrouping feature in Highcharts Stock is a reliable tool for dealing with large sets of data in a more efficient way. By grouping data points into larger chunks, it streamlines the loading and rendering process for your charts.
Data grouping replaces a sequence of data points in a series with one grouped point. The values of each grouped point is calculated from the original values of every point used.
In Highcharts Stock charts, data grouping is done based on the pixel width of the horizontal axis, specifically through the groupPixelWidth. Essentially, each group on the chart holds a pixel width on the x-axis, The default value varies depending on the type of the series, because it is easier to fit more points in e.g. line chart compared to column. If the groupPixelInterval is set to 2 pixels, this means if your chart is displayed within 1000 pixels, it can hold up to 500 data points at once, organized according to the chart's range.Highcharts.stockChart('container', {  series: [{    dataGrouping: {      groupPixelWidth: 5    },    data: [...]  }]});CopyData grouping in Highcharts Stock can be turned on or off using the enabled option. By default, it's set to true.Highcharts.stockChart('container', {    series: [{        dataGrouping: {            enabled: false        },        data: [...]    }]});CopyHere is an example of a difference between two series with the same data, but one of them is grouped:Overview of the most important data grouping optionsApproximationWith the approximation option, you can decide how the final value for each group should be calculated. By default it depends on the series type: Line type series use an average approximation.Column type series compute the sum.Range type series compute the union's range.OHLC type series compute the union's open, high, low and close (OHLC) values.but you can use the custom function to calculate the final value for each group. Here is an example of custom approximation function:UnitsThe available data grouping units can be set using units. By default, it's an array of time units (millisecond, second, minute, hour, day, week, month, year) with their allowed multiples.In the example below, the data grouping is set to only group data points into one, two or three days.Highcharts.stockChart('container', {    series: [{        dataGrouping:{            units: [['day', [1, 2, 3]]]        },        data: [...]    }]});CopygroupAllDefault behavior only groups the points within the visible range of the chart, but sometimes it's useful to group all the points. This can be achieved by setting groupAll to true.Highcharts.stockChart('container', {  series: [{    dataGrouping:{      groupAll: true    },    data: [...]  }]});CopyThe points that would be outside of the visible range might have an impact on the values of the visible groups.
Here is an example of a chart where you can see the difference between the two options:forcedSometimes it's useful to force the data grouping to kick in, even if all of the data points can be easily fitted into the visible range. This can be achieved by setting forced to true, while also deterimining the units option. This way, the series will choose the lowest available option to group the points. This can be used to smoothen the series, similar to what indicators like SMA do.The example below shows how to force the data to be grouped into one second intervals. (the result can be seen in the first example of the page)Highcharts.stockChart('container', {  series: [{    dataGrouping: {      forced: true,      units: [['second', [1]]]    },    data: [...]  }]});CopyThe x-value for a grouped pointGrouped points can be positioned inside the group using anchor property which might take values: start places the point always at the beginning of the group  (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)middle places the point always in the middle of the group (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)end places the point always at the end of the group (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)Additionally firstAnchor and lastAnchor properties can be used to position the first and the last point in the data set (not in the current zoom). In addition to the values described above, they might have values:firstPoint the first point in the group  (e.g. points at 00:13, 00:35, 00:59 -> 00:13)lastPoint the last point in the group (e.g. points at 00:13, 00:35, 00:59 -> 00:59)Performance comparison of data grouping When using data grouping, the performance of the chart is improved. The main reason is that when there are a lot of points to be displayed, the number of said points does not improve readability of the chart, and number of points that are being rendered is greatly reduced. The following chart shows the performance improvement of data grouping for a series with varying number of data points, from 10 to 100 000.\n\nData groupingThe dataGrouping feature in Highcharts Stock is a reliable tool for dealing with large sets of data in a more efficient way. By grouping data points into larger chunks, it streamlines the loading and rendering process for your charts.
Data grouping replaces a sequence of data points in a series with one grouped point. The values of each grouped point is calculated from the original values of every point used.
In Highcharts Stock charts, data grouping is done based on the pixel width of the horizontal axis, specifically through the groupPixelWidth. Essentially, each group on the chart holds a pixel width on the x-axis, The default value varies depending on the type of the series, because it is easier to fit more points in e.g. line chart compared to column. If the groupPixelInterval is set to 2 pixels, this means if your chart is displayed within 1000 pixels, it can hold up to 500 data points at once, organized according to the chart's range.Highcharts.stockChart('container', {  series: [{    dataGrouping: {      groupPixelWidth: 5    },    data: [...]  }]});CopyData grouping in Highcharts Stock can be turned on or off using the enabled option. By default, it's set to true.Highcharts.stockChart('container', {    series: [{        dataGrouping: {            enabled: false        },        data: [...]    }]});CopyHere is an example of a difference between two series with the same data, but one of them is grouped:Overview of the most important data grouping optionsApproximationWith the approximation option, you can decide how the final value for each group should be calculated. By default it depends on the series type: Line type series use an average approximation.Column type series compute the sum.Range type series compute the union's range.OHLC type series compute the union's open, high, low and close (OHLC) values.but you can use the custom function to calculate the final value for each group. Here is an example of custom approximation function:UnitsThe available data grouping units can be set using units. By default, it's an array of time units (millisecond, second, minute, hour, day, week, month, year) with their allowed multiples.In the example below, the data grouping is set to only group data points into one, two or three days.Highcharts.stockChart('container', {    series: [{        dataGrouping:{            units: [['day', [1, 2, 3]]]        },        data: [...]    }]});CopygroupAllDefault behavior only groups the points within the visible range of the chart, but sometimes it's useful to group all the points. This can be achieved by setting groupAll to true.Highcharts.stockChart('container', {  series: [{    dataGrouping:{      groupAll: true    },    data: [...]  }]});CopyThe points that would be outside of the visible range might have an impact on the values of the visible groups.
Here is an example of a chart where you can see the difference between the two options:forcedSometimes it's useful to force the data grouping to kick in, even if all of the data points can be easily fitted into the visible range. This can be achieved by setting forced to true, while also deterimining the units option. This way, the series will choose the lowest available option to group the points. This can be used to smoothen the series, similar to what indicators like SMA do.The example below shows how to force the data to be grouped into one second intervals. (the result can be seen in the first example of the page)Highcharts.stockChart('container', {  series: [{    dataGrouping: {      forced: true,      units: [['second', [1]]]    },    data: [...]  }]});CopyThe x-value for a grouped pointGrouped points can be positioned inside the group using anchor property which might take values: start places the point always at the beginning of the group  (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)middle places the point always in the middle of the group (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)end places the point always at the end of the group (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)Additionally firstAnchor and lastAnchor properties can be used to position the first and the last point in the data set (not in the current zoom). In addition to the values described above, they might have values:firstPoint the first point in the group  (e.g. points at 00:13, 00:35, 00:59 -> 00:13)lastPoint the last point in the group (e.g. points at 00:13, 00:35, 00:59 -> 00:59)Performance comparison of data grouping When using data grouping, the performance of the chart is improved. The main reason is that when there are a lot of points to be displayed, the number of said points does not improve readability of the chart, and number of points that are being rendered is greatly reduced. The following chart shows the performance improvement of data grouping for a series with varying number of data points, from 10 to 100 000.Edit this pagePrevious« Point and Figure chart NextDepth Chart  »The x-value for a grouped pointPerformance comparison of data grouping\n\nData groupingThe dataGrouping feature in Highcharts Stock is a reliable tool for dealing with large sets of data in a more efficient way. By grouping data points into larger chunks, it streamlines the loading and rendering process for your charts.
Data grouping replaces a sequence of data points in a series with one grouped point. The values of each grouped point is calculated from the original values of every point used.
In Highcharts Stock charts, data grouping is done based on the pixel width of the horizontal axis, specifically through the groupPixelWidth. Essentially, each group on the chart holds a pixel width on the x-axis, The default value varies depending on the type of the series, because it is easier to fit more points in e.g. line chart compared to column. If the groupPixelInterval is set to 2 pixels, this means if your chart is displayed within 1000 pixels, it can hold up to 500 data points at once, organized according to the chart's range.Highcharts.stockChart('container', {  series: [{    dataGrouping: {      groupPixelWidth: 5    },    data: [...]  }]});CopyData grouping in Highcharts Stock can be turned on or off using the enabled option. By default, it's set to true.Highcharts.stockChart('container', {    series: [{        dataGrouping: {            enabled: false        },        data: [...]    }]});CopyHere is an example of a difference between two series with the same data, but one of them is grouped:Overview of the most important data grouping optionsApproximationWith the approximation option, you can decide how the final value for each group should be calculated. By default it depends on the series type: Line type series use an average approximation.Column type series compute the sum.Range type series compute the union's range.OHLC type series compute the union's open, high, low and close (OHLC) values.but you can use the custom function to calculate the final value for each group. Here is an example of custom approximation function:UnitsThe available data grouping units can be set using units. By default, it's an array of time units (millisecond, second, minute, hour, day, week, month, year) with their allowed multiples.In the example below, the data grouping is set to only group data points into one, two or three days.Highcharts.stockChart('container', {    series: [{        dataGrouping:{            units: [['day', [1, 2, 3]]]        },        data: [...]    }]});CopygroupAllDefault behavior only groups the points within the visible range of the chart, but sometimes it's useful to group all the points. This can be achieved by setting groupAll to true.Highcharts.stockChart('container', {  series: [{    dataGrouping:{      groupAll: true    },    data: [...]  }]});CopyThe points that would be outside of the visible range might have an impact on the values of the visible groups.
Here is an example of a chart where you can see the difference between the two options:forcedSometimes it's useful to force the data grouping to kick in, even if all of the data points can be easily fitted into the visible range. This can be achieved by setting forced to true, while also deterimining the units option. This way, the series will choose the lowest available option to group the points. This can be used to smoothen the series, similar to what indicators like SMA do.The example below shows how to force the data to be grouped into one second intervals. (the result can be seen in the first example of the page)Highcharts.stockChart('container', {  series: [{    dataGrouping: {      forced: true,      units: [['second', [1]]]    },    data: [...]  }]});CopyThe x-value for a grouped pointGrouped points can be positioned inside the group using anchor property which might take values: start places the point always at the beginning of the group  (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)middle places the point always in the middle of the group (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)end places the point always at the end of the group (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)Additionally firstAnchor and lastAnchor properties can be used to position the first and the last point in the data set (not in the current zoom). In addition to the values described above, they might have values:firstPoint the first point in the group  (e.g. points at 00:13, 00:35, 00:59 -> 00:13)lastPoint the last point in the group (e.g. points at 00:13, 00:35, 00:59 -> 00:59)Performance comparison of data grouping When using data grouping, the performance of the chart is improved. The main reason is that when there are a lot of points to be displayed, the number of said points does not improve readability of the chart, and number of points that are being rendered is greatly reduced. The following chart shows the performance improvement of data grouping for a series with varying number of data points, from 10 to 100 000.Edit this pagePrevious« Point and Figure chart NextDepth Chart  »The x-value for a grouped pointPerformance comparison of data grouping\n\n\n\nDepth ChartA depth chart shows the demand and supply of a specific stock, commodity or currency. To set up a Depth Chart you need two series, Bids (green area) and Asks (red area). The ticks along the vertical axis are the sum of all offers at that price or lower. The x-axis value is the price of the offer for that amount of orders. The Asks series sums all orders descending and the Bids series will sort the sum of orders ascending.\n\nDepth ChartA depth chart shows the demand and supply of a specific stock, commodity or currency. To set up a Depth Chart you need two series, Bids (green area) and Asks (red area). The ticks along the vertical axis are the sum of all offers at that price or lower. The x-axis value is the price of the offer for that amount of orders. The Asks series sums all orders descending and the Bids series will sort the sum of orders ascending.Edit this pagePrevious« Data grouping NextFlag series  »\n\nDepth ChartA depth chart shows the demand and supply of a specific stock, commodity or currency. To set up a Depth Chart you need two series, Bids (green area) and Asks (red area). The ticks along the vertical axis are the sum of all offers at that price or lower. The x-axis value is the price of the offer for that amount of orders. The Asks series sums all orders descending and the Bids series will sort the sum of orders ascending.Edit this pagePrevious« Data grouping NextFlag series  »\n\n\n\nFlag seriesA flag series consists of flags marking events or points of interests. Used alone flag series will make no sense. Flags can be placed on either the series of the chart or on the axis.Flag series belong to Highcharts Stock, but they can also be applied to a regular Highcharts chart created with the Highcharts.Chart() constructor as long as the highstock.js file is loaded in the page. See the FAQ item on the matter. Every flag consists of x, title and text. The attribute "x" must be set to the point where the flag should appear. The attribute "title" is the text which is displayed inside the flag on the chart. The attribute "text" contains the text which will appear when the mouse hover above the flag.To create a flag series, add the following configuration in the series option:{    type : 'flags',    data : [{        x : 0,      // Point where the flag appears        title : '', // Title of flag displayed on the chart         text : ''   // Text displayed when the flag are highlighted.    }],    onSeries : '',  // Id of which series it should be placed on. If not defined                     // the flag series will be put on the X axis    shape : 'flag'  // Defines the shape of the flags.}CopyFor an overview of the flag series options see the API reference.Flags series examplesFlags marking eventsFlags placementFlags shapes and colors\n\nFlag seriesA flag series consists of flags marking events or points of interests. Used alone flag series will make no sense. Flags can be placed on either the series of the chart or on the axis.Flag series belong to Highcharts Stock, but they can also be applied to a regular Highcharts chart created with the Highcharts.Chart() constructor as long as the highstock.js file is loaded in the page. See the FAQ item on the matter. Every flag consists of x, title and text. The attribute "x" must be set to the point where the flag should appear. The attribute "title" is the text which is displayed inside the flag on the chart. The attribute "text" contains the text which will appear when the mouse hover above the flag.To create a flag series, add the following configuration in the series option:{    type : 'flags',    data : [{        x : 0,      // Point where the flag appears        title : '', // Title of flag displayed on the chart         text : ''   // Text displayed when the flag are highlighted.    }],    onSeries : '',  // Id of which series it should be placed on. If not defined                     // the flag series will be put on the X axis    shape : 'flag'  // Defines the shape of the flags.}CopyFor an overview of the flag series options see the API reference.Flags series examplesFlags marking eventsFlags placementFlags shapes and colorsEdit this pagePrevious« Depth Chart NextNavigator  »Flags series examples\n\nFlag seriesA flag series consists of flags marking events or points of interests. Used alone flag series will make no sense. Flags can be placed on either the series of the chart or on the axis.Flag series belong to Highcharts Stock, but they can also be applied to a regular Highcharts chart created with the Highcharts.Chart() constructor as long as the highstock.js file is loaded in the page. See the FAQ item on the matter. Every flag consists of x, title and text. The attribute "x" must be set to the point where the flag should appear. The attribute "title" is the text which is displayed inside the flag on the chart. The attribute "text" contains the text which will appear when the mouse hover above the flag.To create a flag series, add the following configuration in the series option:{    type : 'flags',    data : [{        x : 0,      // Point where the flag appears        title : '', // Title of flag displayed on the chart         text : ''   // Text displayed when the flag are highlighted.    }],    onSeries : '',  // Id of which series it should be placed on. If not defined                     // the flag series will be put on the X axis    shape : 'flag'  // Defines the shape of the flags.}CopyFor an overview of the flag series options see the API reference.Flags series examplesFlags marking eventsFlags placementFlags shapes and colorsEdit this pagePrevious« Depth Chart NextNavigator  »Flags series examples\n\n\n\nNavigatorThe navigator is a small chart below the main chart area, displaying a view of the entire dataset. Its built-in functionality allows zooming in and out on the dataset as well as panning across it. By default, navigator is connected with the scrollbar, but both of them can be enabled and disabled separately. The default series type for navigator is areaspline, but that can be easily changed via navigator.series.type.Navigator, just like any other chart, apart from the series datasets, contains xAxis and yAxis. Therefore all of the Axis options apply to the navigator as well.navigator: {    xAxis: {...},    yAxis: {...}}CopyThe navigator is enabled by default for the first series in all Highcharts Stock charts. To configure which series are shown in the navigator, use the series.showInNavigator option.series: {    showInNavigator: true}CopyTo configure the options for the navigator series, you can set per-series options on series.navigatorOptions and options for all navigator series on navigator.series.Each part of the navigator, like handles, masks, navigator axes, outline, etc. can be individually styled and modified.navigator: {    maskInside: false,    maskFill: "rgba(102,133,194,0.3)"}CopyInverted charts allow users to display the navigator on the opposite side of the chart.navigator: {    opposite: true}CopyFor more information on navigator options see the API reference.Navigator also comes as a Standalone navigator component to help with synchronizing multiple charts.\n\nNavigatorThe navigator is a small chart below the main chart area, displaying a view of the entire dataset. Its built-in functionality allows zooming in and out on the dataset as well as panning across it. By default, navigator is connected with the scrollbar, but both of them can be enabled and disabled separately. The default series type for navigator is areaspline, but that can be easily changed via navigator.series.type.Navigator, just like any other chart, apart from the series datasets, contains xAxis and yAxis. Therefore all of the Axis options apply to the navigator as well.navigator: {    xAxis: {...},    yAxis: {...}}CopyThe navigator is enabled by default for the first series in all Highcharts Stock charts. To configure which series are shown in the navigator, use the series.showInNavigator option.series: {    showInNavigator: true}CopyTo configure the options for the navigator series, you can set per-series options on series.navigatorOptions and options for all navigator series on navigator.series.Each part of the navigator, like handles, masks, navigator axes, outline, etc. can be individually styled and modified.navigator: {    maskInside: false,    maskFill: "rgba(102,133,194,0.3)"}CopyInverted charts allow users to display the navigator on the opposite side of the chart.navigator: {    opposite: true}CopyFor more information on navigator options see the API reference.Navigator also comes as a Standalone navigator component to help with synchronizing multiple charts.Edit this pagePrevious« Flag series NextHLC chart  »\n\nNavigatorThe navigator is a small chart below the main chart area, displaying a view of the entire dataset. Its built-in functionality allows zooming in and out on the dataset as well as panning across it. By default, navigator is connected with the scrollbar, but both of them can be enabled and disabled separately. The default series type for navigator is areaspline, but that can be easily changed via navigator.series.type.Navigator, just like any other chart, apart from the series datasets, contains xAxis and yAxis. Therefore all of the Axis options apply to the navigator as well.navigator: {    xAxis: {...},    yAxis: {...}}CopyThe navigator is enabled by default for the first series in all Highcharts Stock charts. To configure which series are shown in the navigator, use the series.showInNavigator option.series: {    showInNavigator: true}CopyTo configure the options for the navigator series, you can set per-series options on series.navigatorOptions and options for all navigator series on navigator.series.Each part of the navigator, like handles, masks, navigator axes, outline, etc. can be individually styled and modified.navigator: {    maskInside: false,    maskFill: "rgba(102,133,194,0.3)"}CopyInverted charts allow users to display the navigator on the opposite side of the chart.navigator: {    opposite: true}CopyFor more information on navigator options see the API reference.Navigator also comes as a Standalone navigator component to help with synchronizing multiple charts.Edit this pagePrevious« Flag series NextHLC chart  »\n\n\n\nHLC chartThe High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. Single tickmark indicates the close value. This chart type is pretty similar to the OHLC chart, but since open value is the least significant one, you might want to omit it in chart plotting. You can use OHLC, or HLC data type to plot this chart (to use OHLC, you need to add the useOhlcData: true option to series config).For more information on the HLC chart, see the API reference.\n\nHLC chartThe High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. Single tickmark indicates the close value. This chart type is pretty similar to the OHLC chart, but since open value is the least significant one, you might want to omit it in chart plotting. You can use OHLC, or HLC data type to plot this chart (to use OHLC, you need to add the useOhlcData: true option to series config).For more information on the HLC chart, see the API reference.Edit this pagePrevious« Navigator NextOHLC chart  »\n\nHLC chartThe High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. Single tickmark indicates the close value. This chart type is pretty similar to the OHLC chart, but since open value is the least significant one, you might want to omit it in chart plotting. You can use OHLC, or HLC data type to plot this chart (to use OHLC, you need to add the useOhlcData: true option to series config).For more information on the HLC chart, see the API reference.Edit this pagePrevious« Navigator NextOHLC chart  »\n\n\n\nOHLC chartThe Open-High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. A tickmark on the left side of the chart indicates the opening price and a tickmark on the right side indicates the closing price.For more information on the OHLC chart, see the API reference.\n\nOHLC chartThe Open-High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. A tickmark on the left side of the chart indicates the opening price and a tickmark on the right side indicates the closing price.For more information on the OHLC chart, see the API reference.Edit this pagePrevious« HLC chart NextRange selector  »\n\nOHLC chartThe Open-High-Low-Close chart is typically used to show the change in price over a period of time. A vertical line shows the range of the price change where the top of the line is the highest and the bottom is the lowest. A tickmark on the left side of the chart indicates the opening price and a tickmark on the right side indicates the closing price.For more information on the OHLC chart, see the API reference.Edit this pagePrevious« HLC chart NextRange selector  »\n\n\n\nRange selectorThe range selector is a tool for selecting ranges to display within the chart. It provides buttons to select pre-configured ranges in the chart, like 1 day, 1 week, 1 month, etc. It also provides input boxes where min and max dates can be manually input. Vertical positionThe range selector box can be positioned vertically.Allowed properties are:top (by default)middlebottomrangeSelector: {    verticalAlign: 'top',    x: 0,    y: 0},CopyUse the x and y options to customize position. The x and y options offset the selector by pixels from the given alignment.FloatingThe option allows to skip adding extra space for range selector. See a live demo.rangeSelector: {    floating: true,    y: 250},Copy Input position / button positionThe input boxes, which handle the from and to dates, can be positioned individually using the following options:align (left, center, right)xyFor example, we can make them swap places like this:rangeSelector: {    inputPosition: {        align: 'left',        x: 0,        y: 0    },    buttonPosition: {        align: 'right',        x: 0,        y: 0    },},CopyInput typeThe option inputDateFormat is used to determine which type of input to show, datetime-local, date or time and falling back to text when the browser does not support the input type or the format contains milliseconds. The default setting of %b %e, %Y for example is going to show a date input when the browser supports it, while the example below is going to result in a datetime-local input:rangeSelector: {    inputDateFormat: '%b %e, %Y %H:%M'},CopyResponsiveBy default the range selector buttons will collapse into a dropdown when there is not enough room to show everything in a single row, this behaviour can be controlled using the dropdown option. More info on this can be found in the API docsCustom button click eventEach range selector button can get a custom action as shown in this example:rangeSelector: {    buttons: [{        type: 'month',        count: 1,        text: '1m',        events: {            click: function() {                alert('Clicked button');            }        }    }, {        type: 'month',        count: 3,        text: '3m'    }, {        type: 'month',        count: 6,        text: '6m'    }, {        type: 'ytd',        text: 'YTD'    }, {        type: 'year',        count: 1,        text: '1y'    }, {        type: 'all',        text: 'All'    }]},CopySee the API reference for the rangeSelector option for more information on how to set up the range selector tool.\n\nRange selectorThe range selector is a tool for selecting ranges to display within the chart. It provides buttons to select pre-configured ranges in the chart, like 1 day, 1 week, 1 month, etc. It also provides input boxes where min and max dates can be manually input. Vertical positionThe range selector box can be positioned vertically.Allowed properties are:top (by default)middlebottomrangeSelector: {    verticalAlign: 'top',    x: 0,    y: 0},CopyUse the x and y options to customize position. The x and y options offset the selector by pixels from the given alignment.FloatingThe option allows to skip adding extra space for range selector. See a live demo.rangeSelector: {    floating: true,    y: 250},Copy Input position / button positionThe input boxes, which handle the from and to dates, can be positioned individually using the following options:align (left, center, right)xyFor example, we can make them swap places like this:rangeSelector: {    inputPosition: {        align: 'left',        x: 0,        y: 0    },    buttonPosition: {        align: 'right',        x: 0,        y: 0    },},CopyInput typeThe option inputDateFormat is used to determine which type of input to show, datetime-local, date or time and falling back to text when the browser does not support the input type or the format contains milliseconds. The default setting of %b %e, %Y for example is going to show a date input when the browser supports it, while the example below is going to result in a datetime-local input:rangeSelector: {    inputDateFormat: '%b %e, %Y %H:%M'},CopyResponsiveBy default the range selector buttons will collapse into a dropdown when there is not enough room to show everything in a single row, this behaviour can be controlled using the dropdown option. More info on this can be found in the API docsCustom button click eventEach range selector button can get a custom action as shown in this example:rangeSelector: {    buttons: [{        type: 'month',        count: 1,        text: '1m',        events: {            click: function() {                alert('Clicked button');            }        }    }, {        type: 'month',        count: 3,        text: '3m'    }, {        type: 'month',        count: 6,        text: '6m'    }, {        type: 'ytd',        text: 'YTD'    }, {        type: 'year',        count: 1,        text: '1y'    }, {        type: 'all',        text: 'All'    }]},CopySee the API reference for the rangeSelector option for more information on how to set up the range selector tool.Edit this pagePrevious« OHLC chart NextAxis resizer  »Vertical positionFloatingInput position / button positionInput typeResponsiveCustom button click event\n\nRange selectorThe range selector is a tool for selecting ranges to display within the chart. It provides buttons to select pre-configured ranges in the chart, like 1 day, 1 week, 1 month, etc. It also provides input boxes where min and max dates can be manually input. Vertical positionThe range selector box can be positioned vertically.Allowed properties are:top (by default)middlebottomrangeSelector: {    verticalAlign: 'top',    x: 0,    y: 0},CopyUse the x and y options to customize position. The x and y options offset the selector by pixels from the given alignment.FloatingThe option allows to skip adding extra space for range selector. See a live demo.rangeSelector: {    floating: true,    y: 250},Copy Input position / button positionThe input boxes, which handle the from and to dates, can be positioned individually using the following options:align (left, center, right)xyFor example, we can make them swap places like this:rangeSelector: {    inputPosition: {        align: 'left',        x: 0,        y: 0    },    buttonPosition: {        align: 'right',        x: 0,        y: 0    },},CopyInput typeThe option inputDateFormat is used to determine which type of input to show, datetime-local, date or time and falling back to text when the browser does not support the input type or the format contains milliseconds. The default setting of %b %e, %Y for example is going to show a date input when the browser supports it, while the example below is going to result in a datetime-local input:rangeSelector: {    inputDateFormat: '%b %e, %Y %H:%M'},CopyResponsiveBy default the range selector buttons will collapse into a dropdown when there is not enough room to show everything in a single row, this behaviour can be controlled using the dropdown option. More info on this can be found in the API docsCustom button click eventEach range selector button can get a custom action as shown in this example:rangeSelector: {    buttons: [{        type: 'month',        count: 1,        text: '1m',        events: {            click: function() {                alert('Clicked button');            }        }    }, {        type: 'month',        count: 3,        text: '3m'    }, {        type: 'month',        count: 6,        text: '6m'    }, {        type: 'ytd',        text: 'YTD'    }, {        type: 'year',        count: 1,        text: '1y'    }, {        type: 'all',        text: 'All'    }]},CopySee the API reference for the rangeSelector option for more information on how to set up the range selector tool.Edit this pagePrevious« OHLC chart NextAxis resizer  »Vertical positionFloatingInput position / button positionInput typeResponsiveCustom button click event\n\n\n\nAxis resizerThe Resizer module allows the end-user to define which axes can be resized in a multiple-pane Highcharts Stock layout. The module allows controlling multiple axes within one config. This feature is very useful, especially when combining multiple technical indicators, where each of them requires a separate axis.Basic configuration:yAxis: [{  height: '50%',  resize: {    enabled: true  }}, {  height: '50%',  top: '50%'}]CopyThe configuration above generates a resizer between the first and the second yAxis. Now, the end-user can simply resize one yAxis to increase its height, and to decrease the second yAxis:Click here to check the code.RequirementsTo use the axis resizer it is required to include the module modules/drag-panes.js, or js/modules/drag-panes.js if you are using styled mode.New options available with this moduleAxis.maxLength: Maximal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.minLength: Minimal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.resize.enabled: Enable or disable resize by drag for the axis.Axis.resize.x: Horizontal offset of the control line.Axis.resize.y: Vertical offset of the control line.Axis.controlledAxis.next: Array of axes that should move out of the way of resizing being done for the current axis. By default, the next axis is moved.Axis.controlledAxis.prev: Array of axes that should move with the current axis while resizing.StylingIn CSS mode, use highcharts-axis-resizer class for styling the line. For JS mode, styling is available using the following options:Axis.resize.cursor: Cursor style for the control line.Axis.resize.lineWidth: Width of the control line.Axis.resize.lineDashStyle: Dash style of the control line.Axis.resize.lineColor: Color of the control line.\n\nAxis resizerThe Resizer module allows the end-user to define which axes can be resized in a multiple-pane Highcharts Stock layout. The module allows controlling multiple axes within one config. This feature is very useful, especially when combining multiple technical indicators, where each of them requires a separate axis.Basic configuration:yAxis: [{  height: '50%',  resize: {    enabled: true  }}, {  height: '50%',  top: '50%'}]CopyThe configuration above generates a resizer between the first and the second yAxis. Now, the end-user can simply resize one yAxis to increase its height, and to decrease the second yAxis:Click here to check the code.RequirementsTo use the axis resizer it is required to include the module modules/drag-panes.js, or js/modules/drag-panes.js if you are using styled mode.New options available with this moduleAxis.maxLength: Maximal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.minLength: Minimal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.resize.enabled: Enable or disable resize by drag for the axis.Axis.resize.x: Horizontal offset of the control line.Axis.resize.y: Vertical offset of the control line.Axis.controlledAxis.next: Array of axes that should move out of the way of resizing being done for the current axis. By default, the next axis is moved.Axis.controlledAxis.prev: Array of axes that should move with the current axis while resizing.StylingIn CSS mode, use highcharts-axis-resizer class for styling the line. For JS mode, styling is available using the following options:Axis.resize.cursor: Cursor style for the control line.Axis.resize.lineWidth: Width of the control line.Axis.resize.lineDashStyle: Dash style of the control line.Axis.resize.lineColor: Color of the control line.Edit this pagePrevious« Range selector NextTechnical indicators  »RequirementsNew options available with this moduleStyling\n\nAxis resizerThe Resizer module allows the end-user to define which axes can be resized in a multiple-pane Highcharts Stock layout. The module allows controlling multiple axes within one config. This feature is very useful, especially when combining multiple technical indicators, where each of them requires a separate axis.Basic configuration:yAxis: [{  height: '50%',  resize: {    enabled: true  }}, {  height: '50%',  top: '50%'}]CopyThe configuration above generates a resizer between the first and the second yAxis. Now, the end-user can simply resize one yAxis to increase its height, and to decrease the second yAxis:Click here to check the code.RequirementsTo use the axis resizer it is required to include the module modules/drag-panes.js, or js/modules/drag-panes.js if you are using styled mode.New options available with this moduleAxis.maxLength: Maximal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.minLength: Minimal size of a resizable axis. Could be set as a percent of plot area or pixel size.Axis.resize.enabled: Enable or disable resize by drag for the axis.Axis.resize.x: Horizontal offset of the control line.Axis.resize.y: Vertical offset of the control line.Axis.controlledAxis.next: Array of axes that should move out of the way of resizing being done for the current axis. By default, the next axis is moved.Axis.controlledAxis.prev: Array of axes that should move with the current axis while resizing.StylingIn CSS mode, use highcharts-axis-resizer class for styling the line. For JS mode, styling is available using the following options:Axis.resize.cursor: Cursor style for the control line.Axis.resize.lineWidth: Width of the control line.Axis.resize.lineDashStyle: Dash style of the control line.Axis.resize.lineColor: Color of the control line.Edit this pagePrevious« Range selector NextTechnical indicators  »RequirementsNew options available with this moduleStyling\n\n\n\nTechnical indicatorsTechnical Indicators, like annotations, are powerful tools that help to understand charts and make decisions with ease. The mathematical algorithms use the existing data to indicate trends, events, etc. and help to set up boundaries for strategies and to look for patterns.Technical indicators require the indicators/indicators.js main module. The main module includes SMA (Simple Moving Average). Each technical indicator, except the SMA, is a separate module and should be loaded after the main module.A full list of supported technical indicators could be divided into two main groups. Overlays use the same scale and are plotted on the same xAxis and yAxis as the main series. The second group (oscillators and other technical indicators) requires additional yAxis because of the different extremes.OverlaysOscillators and othersAcceleration BandsAbsolute Price OscillatorBollinger BandsA/D (Accumulation/Distribution)DEMA (Double Exponential Moving Average)AroonEMA (Exponential Moving Average)Aroon OscillatorIchimoku Kinko HyoATR (Average True Range)Keltner ChannelsAwesome OscillatorLinear RegressionCCI (Commodity Channel Index)Pivot PointsChaikinPrice ChannelCMF (Chaikin Money Flow)Price EnvelopesCMO (Chande Momentum Oscillator)PSAR (Parabolic SAR)Detrended priceSMA (Simple Moving Average)Disparity IndexSuper TrendDMI (Directional Movement Index)TEMA (Triple Exponential Moving Average)Klinger OscillatorTrendlineLinear Regression AngleVbP (Volume by Price)Linear Regression InterceptVWAP (Volume Weighted Average Price)Linear Regression SlopeWMA (Weighted Moving Average)MACD (Moving Average Convergence Divergence)Zig ZagMFI (Money Flow Index)MomentumNATR (Normalized Average True Range)OBV (On-Balance Volume)Percentage Price oscillatorRoC (Rate of Change)RSI (Relative Strength Index)Slow StochasticStochasticTRIX (Triple exponential average)Williams %RFor more detailed samples and documentation check the API.Technical indicators modules are implemented as series, that means almost all of the default options for series are available. The main option, which needs to be set for an indicator, is series.linkedTo. That option binds an indicator to a series: an indicator will use series.data for all calculations, even when the dataset is changing (e.g. by series.addPoint()). Additionally, each indicator has its own list of parameters, available under params options, which allows easy customization (e.g. params.period, params.algorithm).There are no limitations to the number of technical indicators that can be bound to one main series. The following example creates a chart with four series: one main, two SMA, and one EMA:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 14  }}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 28  }}, {  type: 'ema',  linkedTo: 'main-series',  params: {    period: 7  }}]CopyClick here to check the code.yAxis bindingsAll Overlay type technical indicators (the ones listed in the left column of the above table, e.g. SMA, EMA, etc.) can be placed on the same yAxis as the main series. However, other technical indicators (right column, e.g. Oscillators: MACD, RSI, etc.), should use a separate yAxis. This is caused by values calculated by algorithms: yAxis extremes for the main series can be <250, 255> but for the Stochastic technical indicator, values are within <0, 100> extremes. A technical indicator can be placed on a separate yAxis as any other series:Create required yAxis:yAxis: [{  // Main series yAxis:  height: '50%'}, {  // yAxis for Stochastic technical indicator:  top: '50%',  height: '50%'}]CopyBind indicator to this yAxis:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'stochastic',  linkedTo: 'main-series',  yAxis: 1}]CopyMultiple series bindingsSome of the technical indicators require two series for calculations. Here is a full list of those indicators:Accumulation/DistributionChaikin OscillatorCMFKlinger oscillatorMFIOBV (On Balance Volume)Volume by PriceVolume Weighted Average PriceThese indicators require the following parameter params.volumeSeriesID to calculate properly:series: [{  id: 'main-series',  data: [ … ]}, {  id: 'volume-series',  yAxis: 1,  data: [ … ]}, {  type: 'mfi',  linkedTo: 'main-series',  yAxis: 2,  params: {    volumeSeriesID: 'volume-series'  }}]Copy\n\nTechnical indicatorsTechnical Indicators, like annotations, are powerful tools that help to understand charts and make decisions with ease. The mathematical algorithms use the existing data to indicate trends, events, etc. and help to set up boundaries for strategies and to look for patterns.Technical indicators require the indicators/indicators.js main module. The main module includes SMA (Simple Moving Average). Each technical indicator, except the SMA, is a separate module and should be loaded after the main module.A full list of supported technical indicators could be divided into two main groups. Overlays use the same scale and are plotted on the same xAxis and yAxis as the main series. The second group (oscillators and other technical indicators) requires additional yAxis because of the different extremes.OverlaysOscillators and othersAcceleration BandsAbsolute Price OscillatorBollinger BandsA/D (Accumulation/Distribution)DEMA (Double Exponential Moving Average)AroonEMA (Exponential Moving Average)Aroon OscillatorIchimoku Kinko HyoATR (Average True Range)Keltner ChannelsAwesome OscillatorLinear RegressionCCI (Commodity Channel Index)Pivot PointsChaikinPrice ChannelCMF (Chaikin Money Flow)Price EnvelopesCMO (Chande Momentum Oscillator)PSAR (Parabolic SAR)Detrended priceSMA (Simple Moving Average)Disparity IndexSuper TrendDMI (Directional Movement Index)TEMA (Triple Exponential Moving Average)Klinger OscillatorTrendlineLinear Regression AngleVbP (Volume by Price)Linear Regression InterceptVWAP (Volume Weighted Average Price)Linear Regression SlopeWMA (Weighted Moving Average)MACD (Moving Average Convergence Divergence)Zig ZagMFI (Money Flow Index)MomentumNATR (Normalized Average True Range)OBV (On-Balance Volume)Percentage Price oscillatorRoC (Rate of Change)RSI (Relative Strength Index)Slow StochasticStochasticTRIX (Triple exponential average)Williams %RFor more detailed samples and documentation check the API.Technical indicators modules are implemented as series, that means almost all of the default options for series are available. The main option, which needs to be set for an indicator, is series.linkedTo. That option binds an indicator to a series: an indicator will use series.data for all calculations, even when the dataset is changing (e.g. by series.addPoint()). Additionally, each indicator has its own list of parameters, available under params options, which allows easy customization (e.g. params.period, params.algorithm).There are no limitations to the number of technical indicators that can be bound to one main series. The following example creates a chart with four series: one main, two SMA, and one EMA:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 14  }}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 28  }}, {  type: 'ema',  linkedTo: 'main-series',  params: {    period: 7  }}]CopyClick here to check the code.yAxis bindingsAll Overlay type technical indicators (the ones listed in the left column of the above table, e.g. SMA, EMA, etc.) can be placed on the same yAxis as the main series. However, other technical indicators (right column, e.g. Oscillators: MACD, RSI, etc.), should use a separate yAxis. This is caused by values calculated by algorithms: yAxis extremes for the main series can be <250, 255> but for the Stochastic technical indicator, values are within <0, 100> extremes. A technical indicator can be placed on a separate yAxis as any other series:Create required yAxis:yAxis: [{  // Main series yAxis:  height: '50%'}, {  // yAxis for Stochastic technical indicator:  top: '50%',  height: '50%'}]CopyBind indicator to this yAxis:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'stochastic',  linkedTo: 'main-series',  yAxis: 1}]CopyMultiple series bindingsSome of the technical indicators require two series for calculations. Here is a full list of those indicators:Accumulation/DistributionChaikin OscillatorCMFKlinger oscillatorMFIOBV (On Balance Volume)Volume by PriceVolume Weighted Average PriceThese indicators require the following parameter params.volumeSeriesID to calculate properly:series: [{  id: 'main-series',  data: [ … ]}, {  id: 'volume-series',  yAxis: 1,  data: [ … ]}, {  type: 'mfi',  linkedTo: 'main-series',  yAxis: 2,  params: {    volumeSeriesID: 'volume-series'  }}]CopyEdit this pagePrevious« Axis resizer NextCustom technical indicators  »yAxis bindingsMultiple series bindings\n\nTechnical indicatorsTechnical Indicators, like annotations, are powerful tools that help to understand charts and make decisions with ease. The mathematical algorithms use the existing data to indicate trends, events, etc. and help to set up boundaries for strategies and to look for patterns.Technical indicators require the indicators/indicators.js main module. The main module includes SMA (Simple Moving Average). Each technical indicator, except the SMA, is a separate module and should be loaded after the main module.A full list of supported technical indicators could be divided into two main groups. Overlays use the same scale and are plotted on the same xAxis and yAxis as the main series. The second group (oscillators and other technical indicators) requires additional yAxis because of the different extremes.OverlaysOscillators and othersAcceleration BandsAbsolute Price OscillatorBollinger BandsA/D (Accumulation/Distribution)DEMA (Double Exponential Moving Average)AroonEMA (Exponential Moving Average)Aroon OscillatorIchimoku Kinko HyoATR (Average True Range)Keltner ChannelsAwesome OscillatorLinear RegressionCCI (Commodity Channel Index)Pivot PointsChaikinPrice ChannelCMF (Chaikin Money Flow)Price EnvelopesCMO (Chande Momentum Oscillator)PSAR (Parabolic SAR)Detrended priceSMA (Simple Moving Average)Disparity IndexSuper TrendDMI (Directional Movement Index)TEMA (Triple Exponential Moving Average)Klinger OscillatorTrendlineLinear Regression AngleVbP (Volume by Price)Linear Regression InterceptVWAP (Volume Weighted Average Price)Linear Regression SlopeWMA (Weighted Moving Average)MACD (Moving Average Convergence Divergence)Zig ZagMFI (Money Flow Index)MomentumNATR (Normalized Average True Range)OBV (On-Balance Volume)Percentage Price oscillatorRoC (Rate of Change)RSI (Relative Strength Index)Slow StochasticStochasticTRIX (Triple exponential average)Williams %RFor more detailed samples and documentation check the API.Technical indicators modules are implemented as series, that means almost all of the default options for series are available. The main option, which needs to be set for an indicator, is series.linkedTo. That option binds an indicator to a series: an indicator will use series.data for all calculations, even when the dataset is changing (e.g. by series.addPoint()). Additionally, each indicator has its own list of parameters, available under params options, which allows easy customization (e.g. params.period, params.algorithm).There are no limitations to the number of technical indicators that can be bound to one main series. The following example creates a chart with four series: one main, two SMA, and one EMA:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 14  }}, {  type: 'sma',  linkedTo: 'main-series',  params: {    period: 28  }}, {  type: 'ema',  linkedTo: 'main-series',  params: {    period: 7  }}]CopyClick here to check the code.yAxis bindingsAll Overlay type technical indicators (the ones listed in the left column of the above table, e.g. SMA, EMA, etc.) can be placed on the same yAxis as the main series. However, other technical indicators (right column, e.g. Oscillators: MACD, RSI, etc.), should use a separate yAxis. This is caused by values calculated by algorithms: yAxis extremes for the main series can be <250, 255> but for the Stochastic technical indicator, values are within <0, 100> extremes. A technical indicator can be placed on a separate yAxis as any other series:Create required yAxis:yAxis: [{  // Main series yAxis:  height: '50%'}, {  // yAxis for Stochastic technical indicator:  top: '50%',  height: '50%'}]CopyBind indicator to this yAxis:series: [{  id: 'main-series',  data: [ … ]}, {  type: 'stochastic',  linkedTo: 'main-series',  yAxis: 1}]CopyMultiple series bindingsSome of the technical indicators require two series for calculations. Here is a full list of those indicators:Accumulation/DistributionChaikin OscillatorCMFKlinger oscillatorMFIOBV (On Balance Volume)Volume by PriceVolume Weighted Average PriceThese indicators require the following parameter params.volumeSeriesID to calculate properly:series: [{  id: 'main-series',  data: [ … ]}, {  id: 'volume-series',  yAxis: 1,  data: [ … ]}, {  type: 'mfi',  linkedTo: 'main-series',  yAxis: 2,  params: {    volumeSeriesID: 'volume-series'  }}]CopyEdit this pagePrevious« Axis resizer NextCustom technical indicators  »yAxis bindingsMultiple series bindings\n\n\n\nCustom technical indicatorsThis article shows how to create custom technical indicators, in this case, linear regression. To read more about technical indicators offered by Highcharts click here.Be sure to have at least the Highcharts version 6, as previous Highcharts versions don’t support technical indicators.TECHNICAL INDICATOR SERIESThere are two main steps to create a technical indicator series:Set up the technical indicator structure.Create the technical indicator functionality.1. Set up the structureEach technical indicator requires the method getValues() to be implemented. This method takes two arguments and returns an object. The arguments are the main series and the parameters. The parameters are specific to a technical indicator. Check the structure of the method getValues():function getValues(series, params) {    // calculations    ...    // end of calculations    return {      xData: [...], // array of x-values      yData: [...] // array of y-values      values: [...], // array of points    };  }CopyAll technical indicators are series types, and to create a new series, in Highcharts, the following method Highcharts.seriesType() is used.<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/indicators.js"></script>Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    params: {} // linear regression doesn’t need params  },  {    getValues: function (series, params) {      return this.getLinearRegression(series.xData, series.yData);    },    getLinearRegression: getLinearRegression  });CopyThe method getLinearRegression() includes the technical indicator functionality (mathematical calculation). Notice that the indicators module indicators.js is included when creating technical indicators, as it includes the core-logic for all indicators.Now the structure is set, the next step is to create the main indicator functionality.2. Technical indicator functionalityThe technical indicator functionality is represented by the following method getLinearRegression(), that calculates the regression points according to xData and yData.Here is a simple mathematical representation of the linear regression:Where the slope is: And offset:The JavaScript representation of the formulas above is as follows:function getLinearRegression(xData, yData) {  var sumX = (xValLength - 1) * xValLength / 2,      sumY = 0,      sumXY = 0,      sumX2 = ((xValLength - 1) * (xValLength) * (2 * xValLength - 1)) / 6,      linearData = [],      linearXData = [],      linearYData = [],      n = xData.length,      alpha, beta, i, x, y;  // Get sums:  for (i = 0; i < n; i++) {    y = yData[i];    sumY += y;    sumXY += i * y;  }  // Get slope and offset:  alpha = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);  if (isNaN(alpha)) {    alpha = 0;  }  beta = (sumY - alpha * sumX)/ n;  // Calculate linear regression:  for (i = 0; i < n; i++) {    y = alpha * i + beta;    // Prepare arrays required for getValues() method    linearData[i] = [xData[i], y];    linearXData[i] = xData[i];    linearYData[i] = y;  }  return {    xData: linearXData,    yData: linearYData,    values: linearData  };}CopyNotice that Linear regression series in this example is still a line series, and that means data has to be sorted ascending by x-values.That’s it; the technical indicator is ready to be used. Keep in mind that the technical indicator is connected to the main series by the linkedTo option:series: [{  id: 'main',  type: 'scatter',  data: [ ... ]}, {  type: 'linearregression',  linkedTo: 'main'}]CopyFor live demos check the links below:Scatter Height vs WeightAAPL Stock PriceAverage Monthly Temperature and Rainfall in TokyoRemarkTo improve the user experience when using the linear regression series, try to disable tooltip and/or markers. Go to the seriesType() and set the default options as follows:Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    enableMouseTracking: false, // default options    marker: {      enabled: false    }    params: {} // linear regression doesn’t need params  },  {    getValues: ... ,    getLinearRegression: ...  });CopyModule
The indicator is available as a indicators/trendline.js main module.3. Indicator with multiple linesHighcharts Stock offers many already implemented ready-to-use indicators. Some of them are drawn using multiple lines (e.g. Bollinger Bands). In this section, you will learn how to build a custom indicator consisting of 5 lines.Let's assume we would like to build an indicator with a linear regression main line from the previous example, but this time with the four additional range lines that help to visualize the difference between the main series line and our regression line. For that, we'll add 4 additional lines that will be treated as zones. Those lines' values will be multiplied accordingly by 90%, 95%, 105%, and 110% of the regression line values (step ratio would be possible to change in series.params).Of course, the data from the previous example has to be modified:// ...var zoneDistance = this.options.params.zoneDistance / 100;// ...// Calculate linear regression:for (i = 0; i < n; i++) {  x = xData[i];  y = alpha * x + beta;  // Prepare arrays required for getValues() method  linearData[i] = [x, y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];  linearXData[i] = x;  linearYData[i] = [y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];}return {  xData: linearXData,  yData: linearYData,  values: linearData};CopyTo draw an indicator with multiple lines, we can use the Highcharts MultipleLines mixin that can be accessed after we add any of the Highcharts indicators implementing multiple lines, e.g. Bollinger Bands:<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/bollinger-bands.js"></script>CopyNow, when having access to the MultipleLines mixin, we can prepare Highcharts to draw multiple lines by overwriting the default series prototype methods. We can also name each additional line and define its own styles. Inside the Highcharts.seriesType method we can define the following properties (* - required):params* - indicator's parameters. In our case, we set the default difference between the lines to 5%. This can be changed in the indicator's series options.closeRangeBottomLine, highRangeBottomLine, closeRangeTopLine, highRangeTopLine - separate default styles for each additional line. This can be changed in the indicator's series options.linesApiNames* - an array containing the names of the additional lines.nameBase - the name of the indicator displayed in the legend.nameComponents - an array containing the names of the properties that values should be displayed in parenthesis in the legend next to the indicator's name.pointArrayMap* - an array containing the keys of the points' values.pointValKey* - default value for pointValKeydrawGraph, getTranslatedLinesNames, translate, toYData - overwrite the Highcharts core methods responsible for drawing multiple lines.Here is how the seriesType method's arguments should look like:var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];Highcharts.seriesType(  'linearregressionzones',  'sma',  {    color: '#00ff00',    params: {      zoneDistance: 5    },    tooltip: {      pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}:<br/>' +        '110%: <b>{point.y4}</b><br/>' +        '105%: <b>{point.y3}</b><br/>' +        '100%: <b>{point.y}</b><br/>' +        '95%: <b>{point.y2}</b><br/>' +        '90%: <b>{point.y1}</b>'    },    closeRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    },    closeRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    }  },  {    getValues: function (series) {        return this.getLinearRegressionZones(series.xData, series.yData);    },    getLinearRegressionZones: getLinearRegressionZones,    linesApiNames: ['highRangeBottomLine', 'closeRangeBottomLine', 'closeRangeTopLine', 'highRangeTopLine'],    nameBase: 'Linear regression zones',    nameComponents: ['zoneDistance'],    nameSuffixes: ['%'],    parallelArrays: ['x', 'y', 'y1', 'y2', 'y3', 'y4'],    pointArrayMap: ['y1', 'y2', 'y', 'y3', 'y4'],    pointValKey: 'y'  });var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];if (multipleLinesMixin) {  Highcharts.extend(    Highcharts.seriesTypes.linearregressionzones.prototype,    {      drawGraph: multipleLinesMixin.drawGraph,      getTranslatedLinesNames: multipleLinesMixin.getTranslatedLinesNames,      translate: multipleLinesMixin.translate,      toYData: multipleLinesMixin.toYData    }  );} else { // Highcharts v9.2.3+  Highcharts._modules['Stock/Indicators/MultipleLinesComposition.js'].compose(    Highcharts.seriesTypes.linearregressionzones  );}CopyA live demo of the above multiline indicator can be found here.For more detailed samples and documentation check the API.4. Indicators calculated on events.The idea behind creating a custom indicator that is calculated after some chart event (for example afterSetExtremes) is similar to the ones previously mentioned with a few additions.The most important object to add while creating the indicators is calculateOn where inside are specified two properties:chart - on which chart's event the indicator should be calculated, mainly you can choose from init (before the linked series is processed) and render (after processing the linked series).xAxis - on which xAxis' event the indicator should be recalculated (e.g. afterSetExtremes),Example configuration should look like:Highcharts.seriesType('customIndicator', 'sma', {}, {    getValues: function (series) {        return this.getSum(            series.processedXData || series.xData,            series.processedYData || series.yData        );    },    calculateOn: {        chart: 'init',        xAxis: 'afterSetExtremes'    },    getSum: getSum});CopyA live demo of the example above can be found here.5. Custom column indicator.The principle of creating a custom column indicator is similar to the ordinary one.
Still, the getValues method for calculating points position is required.
Along with that, in order to render the column, some other methods like crispCol, drawPoints, getColumnMetrics, translate
need to be inherited from the column series prototype and the markerAttribs, drawGraph need to be overwritten with an empty function as shown in the code snippet below.Additionally, to correctly render that indicator, the threshold, groupPadding and pointPadding
properties need to be defined.Example configuration should look like:Highcharts.seriesType(    'customIndicator',    'sma', {        name: 'Sum of previous 2 points',        threshold: 0,        groupPadding: 0.2,        pointPadding: 0.2    }, {        getValues: function(series) {            return this.getSum(series.xData, series.yData);        },        getSum: getSum,        markerAttribs: Highcharts.noop,        drawGraph: Highcharts.noop,        crispCol: Highcharts.seriesTypes.column.prototype.crispCol,        drawPoints: Highcharts.seriesTypes.column.prototype.drawPoints,        getColumnMetrics: Highcharts.seriesTypes.column.prototype.getColumnMetrics,        translate: Highcharts.seriesTypes.column.prototype.translate    });CopyA live demo of the example above can be found here.\n\nCustom technical indicatorsThis article shows how to create custom technical indicators, in this case, linear regression. To read more about technical indicators offered by Highcharts click here.Be sure to have at least the Highcharts version 6, as previous Highcharts versions don’t support technical indicators.TECHNICAL INDICATOR SERIESThere are two main steps to create a technical indicator series:Set up the technical indicator structure.Create the technical indicator functionality.1. Set up the structureEach technical indicator requires the method getValues() to be implemented. This method takes two arguments and returns an object. The arguments are the main series and the parameters. The parameters are specific to a technical indicator. Check the structure of the method getValues():function getValues(series, params) {    // calculations    ...    // end of calculations    return {      xData: [...], // array of x-values      yData: [...] // array of y-values      values: [...], // array of points    };  }CopyAll technical indicators are series types, and to create a new series, in Highcharts, the following method Highcharts.seriesType() is used.<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/indicators.js"></script>Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    params: {} // linear regression doesn’t need params  },  {    getValues: function (series, params) {      return this.getLinearRegression(series.xData, series.yData);    },    getLinearRegression: getLinearRegression  });CopyThe method getLinearRegression() includes the technical indicator functionality (mathematical calculation). Notice that the indicators module indicators.js is included when creating technical indicators, as it includes the core-logic for all indicators.Now the structure is set, the next step is to create the main indicator functionality.2. Technical indicator functionalityThe technical indicator functionality is represented by the following method getLinearRegression(), that calculates the regression points according to xData and yData.Here is a simple mathematical representation of the linear regression:Where the slope is: And offset:The JavaScript representation of the formulas above is as follows:function getLinearRegression(xData, yData) {  var sumX = (xValLength - 1) * xValLength / 2,      sumY = 0,      sumXY = 0,      sumX2 = ((xValLength - 1) * (xValLength) * (2 * xValLength - 1)) / 6,      linearData = [],      linearXData = [],      linearYData = [],      n = xData.length,      alpha, beta, i, x, y;  // Get sums:  for (i = 0; i < n; i++) {    y = yData[i];    sumY += y;    sumXY += i * y;  }  // Get slope and offset:  alpha = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);  if (isNaN(alpha)) {    alpha = 0;  }  beta = (sumY - alpha * sumX)/ n;  // Calculate linear regression:  for (i = 0; i < n; i++) {    y = alpha * i + beta;    // Prepare arrays required for getValues() method    linearData[i] = [xData[i], y];    linearXData[i] = xData[i];    linearYData[i] = y;  }  return {    xData: linearXData,    yData: linearYData,    values: linearData  };}CopyNotice that Linear regression series in this example is still a line series, and that means data has to be sorted ascending by x-values.That’s it; the technical indicator is ready to be used. Keep in mind that the technical indicator is connected to the main series by the linkedTo option:series: [{  id: 'main',  type: 'scatter',  data: [ ... ]}, {  type: 'linearregression',  linkedTo: 'main'}]CopyFor live demos check the links below:Scatter Height vs WeightAAPL Stock PriceAverage Monthly Temperature and Rainfall in TokyoRemarkTo improve the user experience when using the linear regression series, try to disable tooltip and/or markers. Go to the seriesType() and set the default options as follows:Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    enableMouseTracking: false, // default options    marker: {      enabled: false    }    params: {} // linear regression doesn’t need params  },  {    getValues: ... ,    getLinearRegression: ...  });CopyModule
The indicator is available as a indicators/trendline.js main module.3. Indicator with multiple linesHighcharts Stock offers many already implemented ready-to-use indicators. Some of them are drawn using multiple lines (e.g. Bollinger Bands). In this section, you will learn how to build a custom indicator consisting of 5 lines.Let's assume we would like to build an indicator with a linear regression main line from the previous example, but this time with the four additional range lines that help to visualize the difference between the main series line and our regression line. For that, we'll add 4 additional lines that will be treated as zones. Those lines' values will be multiplied accordingly by 90%, 95%, 105%, and 110% of the regression line values (step ratio would be possible to change in series.params).Of course, the data from the previous example has to be modified:// ...var zoneDistance = this.options.params.zoneDistance / 100;// ...// Calculate linear regression:for (i = 0; i < n; i++) {  x = xData[i];  y = alpha * x + beta;  // Prepare arrays required for getValues() method  linearData[i] = [x, y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];  linearXData[i] = x;  linearYData[i] = [y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];}return {  xData: linearXData,  yData: linearYData,  values: linearData};CopyTo draw an indicator with multiple lines, we can use the Highcharts MultipleLines mixin that can be accessed after we add any of the Highcharts indicators implementing multiple lines, e.g. Bollinger Bands:<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/bollinger-bands.js"></script>CopyNow, when having access to the MultipleLines mixin, we can prepare Highcharts to draw multiple lines by overwriting the default series prototype methods. We can also name each additional line and define its own styles. Inside the Highcharts.seriesType method we can define the following properties (* - required):params* - indicator's parameters. In our case, we set the default difference between the lines to 5%. This can be changed in the indicator's series options.closeRangeBottomLine, highRangeBottomLine, closeRangeTopLine, highRangeTopLine - separate default styles for each additional line. This can be changed in the indicator's series options.linesApiNames* - an array containing the names of the additional lines.nameBase - the name of the indicator displayed in the legend.nameComponents - an array containing the names of the properties that values should be displayed in parenthesis in the legend next to the indicator's name.pointArrayMap* - an array containing the keys of the points' values.pointValKey* - default value for pointValKeydrawGraph, getTranslatedLinesNames, translate, toYData - overwrite the Highcharts core methods responsible for drawing multiple lines.Here is how the seriesType method's arguments should look like:var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];Highcharts.seriesType(  'linearregressionzones',  'sma',  {    color: '#00ff00',    params: {      zoneDistance: 5    },    tooltip: {      pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}:<br/>' +        '110%: <b>{point.y4}</b><br/>' +        '105%: <b>{point.y3}</b><br/>' +        '100%: <b>{point.y}</b><br/>' +        '95%: <b>{point.y2}</b><br/>' +        '90%: <b>{point.y1}</b>'    },    closeRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    },    closeRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    }  },  {    getValues: function (series) {        return this.getLinearRegressionZones(series.xData, series.yData);    },    getLinearRegressionZones: getLinearRegressionZones,    linesApiNames: ['highRangeBottomLine', 'closeRangeBottomLine', 'closeRangeTopLine', 'highRangeTopLine'],    nameBase: 'Linear regression zones',    nameComponents: ['zoneDistance'],    nameSuffixes: ['%'],    parallelArrays: ['x', 'y', 'y1', 'y2', 'y3', 'y4'],    pointArrayMap: ['y1', 'y2', 'y', 'y3', 'y4'],    pointValKey: 'y'  });var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];if (multipleLinesMixin) {  Highcharts.extend(    Highcharts.seriesTypes.linearregressionzones.prototype,    {      drawGraph: multipleLinesMixin.drawGraph,      getTranslatedLinesNames: multipleLinesMixin.getTranslatedLinesNames,      translate: multipleLinesMixin.translate,      toYData: multipleLinesMixin.toYData    }  );} else { // Highcharts v9.2.3+  Highcharts._modules['Stock/Indicators/MultipleLinesComposition.js'].compose(    Highcharts.seriesTypes.linearregressionzones  );}CopyA live demo of the above multiline indicator can be found here.For more detailed samples and documentation check the API.4. Indicators calculated on events.The idea behind creating a custom indicator that is calculated after some chart event (for example afterSetExtremes) is similar to the ones previously mentioned with a few additions.The most important object to add while creating the indicators is calculateOn where inside are specified two properties:chart - on which chart's event the indicator should be calculated, mainly you can choose from init (before the linked series is processed) and render (after processing the linked series).xAxis - on which xAxis' event the indicator should be recalculated (e.g. afterSetExtremes),Example configuration should look like:Highcharts.seriesType('customIndicator', 'sma', {}, {    getValues: function (series) {        return this.getSum(            series.processedXData || series.xData,            series.processedYData || series.yData        );    },    calculateOn: {        chart: 'init',        xAxis: 'afterSetExtremes'    },    getSum: getSum});CopyA live demo of the example above can be found here.5. Custom column indicator.The principle of creating a custom column indicator is similar to the ordinary one.
Still, the getValues method for calculating points position is required.
Along with that, in order to render the column, some other methods like crispCol, drawPoints, getColumnMetrics, translate
need to be inherited from the column series prototype and the markerAttribs, drawGraph need to be overwritten with an empty function as shown in the code snippet below.Additionally, to correctly render that indicator, the threshold, groupPadding and pointPadding
properties need to be defined.Example configuration should look like:Highcharts.seriesType(    'customIndicator',    'sma', {        name: 'Sum of previous 2 points',        threshold: 0,        groupPadding: 0.2,        pointPadding: 0.2    }, {        getValues: function(series) {            return this.getSum(series.xData, series.yData);        },        getSum: getSum,        markerAttribs: Highcharts.noop,        drawGraph: Highcharts.noop,        crispCol: Highcharts.seriesTypes.column.prototype.crispCol,        drawPoints: Highcharts.seriesTypes.column.prototype.drawPoints,        getColumnMetrics: Highcharts.seriesTypes.column.prototype.getColumnMetrics,        translate: Highcharts.seriesTypes.column.prototype.translate    });CopyA live demo of the example above can be found here.Edit this pagePrevious« Technical indicators NextStandalone Navigator  »TECHNICAL INDICATOR SERIES1. Set up the structure2. Technical indicator functionality3. Indicator with multiple lines4. Indicators calculated on events.5. Custom column indicator.\n\nCustom technical indicatorsThis article shows how to create custom technical indicators, in this case, linear regression. To read more about technical indicators offered by Highcharts click here.Be sure to have at least the Highcharts version 6, as previous Highcharts versions don’t support technical indicators.TECHNICAL INDICATOR SERIESThere are two main steps to create a technical indicator series:Set up the technical indicator structure.Create the technical indicator functionality.1. Set up the structureEach technical indicator requires the method getValues() to be implemented. This method takes two arguments and returns an object. The arguments are the main series and the parameters. The parameters are specific to a technical indicator. Check the structure of the method getValues():function getValues(series, params) {    // calculations    ...    // end of calculations    return {      xData: [...], // array of x-values      yData: [...] // array of y-values      values: [...], // array of points    };  }CopyAll technical indicators are series types, and to create a new series, in Highcharts, the following method Highcharts.seriesType() is used.<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/indicators.js"></script>Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    params: {} // linear regression doesn’t need params  },  {    getValues: function (series, params) {      return this.getLinearRegression(series.xData, series.yData);    },    getLinearRegression: getLinearRegression  });CopyThe method getLinearRegression() includes the technical indicator functionality (mathematical calculation). Notice that the indicators module indicators.js is included when creating technical indicators, as it includes the core-logic for all indicators.Now the structure is set, the next step is to create the main indicator functionality.2. Technical indicator functionalityThe technical indicator functionality is represented by the following method getLinearRegression(), that calculates the regression points according to xData and yData.Here is a simple mathematical representation of the linear regression:Where the slope is: And offset:The JavaScript representation of the formulas above is as follows:function getLinearRegression(xData, yData) {  var sumX = (xValLength - 1) * xValLength / 2,      sumY = 0,      sumXY = 0,      sumX2 = ((xValLength - 1) * (xValLength) * (2 * xValLength - 1)) / 6,      linearData = [],      linearXData = [],      linearYData = [],      n = xData.length,      alpha, beta, i, x, y;  // Get sums:  for (i = 0; i < n; i++) {    y = yData[i];    sumY += y;    sumXY += i * y;  }  // Get slope and offset:  alpha = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);  if (isNaN(alpha)) {    alpha = 0;  }  beta = (sumY - alpha * sumX)/ n;  // Calculate linear regression:  for (i = 0; i < n; i++) {    y = alpha * i + beta;    // Prepare arrays required for getValues() method    linearData[i] = [xData[i], y];    linearXData[i] = xData[i];    linearYData[i] = y;  }  return {    xData: linearXData,    yData: linearYData,    values: linearData  };}CopyNotice that Linear regression series in this example is still a line series, and that means data has to be sorted ascending by x-values.That’s it; the technical indicator is ready to be used. Keep in mind that the technical indicator is connected to the main series by the linkedTo option:series: [{  id: 'main',  type: 'scatter',  data: [ ... ]}, {  type: 'linearregression',  linkedTo: 'main'}]CopyFor live demos check the links below:Scatter Height vs WeightAAPL Stock PriceAverage Monthly Temperature and Rainfall in TokyoRemarkTo improve the user experience when using the linear regression series, try to disable tooltip and/or markers. Go to the seriesType() and set the default options as follows:Highcharts.seriesType(  'linearregression',  'sma',  {    name: 'Linear Regression',    enableMouseTracking: false, // default options    marker: {      enabled: false    }    params: {} // linear regression doesn’t need params  },  {    getValues: ... ,    getLinearRegression: ...  });CopyModule
The indicator is available as a indicators/trendline.js main module.3. Indicator with multiple linesHighcharts Stock offers many already implemented ready-to-use indicators. Some of them are drawn using multiple lines (e.g. Bollinger Bands). In this section, you will learn how to build a custom indicator consisting of 5 lines.Let's assume we would like to build an indicator with a linear regression main line from the previous example, but this time with the four additional range lines that help to visualize the difference between the main series line and our regression line. For that, we'll add 4 additional lines that will be treated as zones. Those lines' values will be multiplied accordingly by 90%, 95%, 105%, and 110% of the regression line values (step ratio would be possible to change in series.params).Of course, the data from the previous example has to be modified:// ...var zoneDistance = this.options.params.zoneDistance / 100;// ...// Calculate linear regression:for (i = 0; i < n; i++) {  x = xData[i];  y = alpha * x + beta;  // Prepare arrays required for getValues() method  linearData[i] = [x, y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];  linearXData[i] = x;  linearYData[i] = [y * (1 - 2 * zoneDistance), y * (1 - zoneDistance), y, y * (1 + zoneDistance), y * (1 + 2 * zoneDistance)];}return {  xData: linearXData,  yData: linearYData,  values: linearData};CopyTo draw an indicator with multiple lines, we can use the Highcharts MultipleLines mixin that can be accessed after we add any of the Highcharts indicators implementing multiple lines, e.g. Bollinger Bands:<script type="text/javascript" src="https://code.highcharts.com/stock/indicators/bollinger-bands.js"></script>CopyNow, when having access to the MultipleLines mixin, we can prepare Highcharts to draw multiple lines by overwriting the default series prototype methods. We can also name each additional line and define its own styles. Inside the Highcharts.seriesType method we can define the following properties (* - required):params* - indicator's parameters. In our case, we set the default difference between the lines to 5%. This can be changed in the indicator's series options.closeRangeBottomLine, highRangeBottomLine, closeRangeTopLine, highRangeTopLine - separate default styles for each additional line. This can be changed in the indicator's series options.linesApiNames* - an array containing the names of the additional lines.nameBase - the name of the indicator displayed in the legend.nameComponents - an array containing the names of the properties that values should be displayed in parenthesis in the legend next to the indicator's name.pointArrayMap* - an array containing the keys of the points' values.pointValKey* - default value for pointValKeydrawGraph, getTranslatedLinesNames, translate, toYData - overwrite the Highcharts core methods responsible for drawing multiple lines.Here is how the seriesType method's arguments should look like:var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];Highcharts.seriesType(  'linearregressionzones',  'sma',  {    color: '#00ff00',    params: {      zoneDistance: 5    },    tooltip: {      pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}:<br/>' +        '110%: <b>{point.y4}</b><br/>' +        '105%: <b>{point.y3}</b><br/>' +        '100%: <b>{point.y}</b><br/>' +        '95%: <b>{point.y2}</b><br/>' +        '90%: <b>{point.y1}</b>'    },    closeRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeBottomLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    },    closeRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ffa500'      }    },    highRangeTopLine: {      styles: {        lineWidth: 1,        lineColor: '#ff0000'      }    }  },  {    getValues: function (series) {        return this.getLinearRegressionZones(series.xData, series.yData);    },    getLinearRegressionZones: getLinearRegressionZones,    linesApiNames: ['highRangeBottomLine', 'closeRangeBottomLine', 'closeRangeTopLine', 'highRangeTopLine'],    nameBase: 'Linear regression zones',    nameComponents: ['zoneDistance'],    nameSuffixes: ['%'],    parallelArrays: ['x', 'y', 'y1', 'y2', 'y3', 'y4'],    pointArrayMap: ['y1', 'y2', 'y', 'y3', 'y4'],    pointValKey: 'y'  });var multipleLinesMixin = Highcharts._modules['Mixins/MultipleLines.js'];if (multipleLinesMixin) {  Highcharts.extend(    Highcharts.seriesTypes.linearregressionzones.prototype,    {      drawGraph: multipleLinesMixin.drawGraph,      getTranslatedLinesNames: multipleLinesMixin.getTranslatedLinesNames,      translate: multipleLinesMixin.translate,      toYData: multipleLinesMixin.toYData    }  );} else { // Highcharts v9.2.3+  Highcharts._modules['Stock/Indicators/MultipleLinesComposition.js'].compose(    Highcharts.seriesTypes.linearregressionzones  );}CopyA live demo of the above multiline indicator can be found here.For more detailed samples and documentation check the API.4. Indicators calculated on events.The idea behind creating a custom indicator that is calculated after some chart event (for example afterSetExtremes) is similar to the ones previously mentioned with a few additions.The most important object to add while creating the indicators is calculateOn where inside are specified two properties:chart - on which chart's event the indicator should be calculated, mainly you can choose from init (before the linked series is processed) and render (after processing the linked series).xAxis - on which xAxis' event the indicator should be recalculated (e.g. afterSetExtremes),Example configuration should look like:Highcharts.seriesType('customIndicator', 'sma', {}, {    getValues: function (series) {        return this.getSum(            series.processedXData || series.xData,            series.processedYData || series.yData        );    },    calculateOn: {        chart: 'init',        xAxis: 'afterSetExtremes'    },    getSum: getSum});CopyA live demo of the example above can be found here.5. Custom column indicator.The principle of creating a custom column indicator is similar to the ordinary one.
Still, the getValues method for calculating points position is required.
Along with that, in order to render the column, some other methods like crispCol, drawPoints, getColumnMetrics, translate
need to be inherited from the column series prototype and the markerAttribs, drawGraph need to be overwritten with an empty function as shown in the code snippet below.Additionally, to correctly render that indicator, the threshold, groupPadding and pointPadding
properties need to be defined.Example configuration should look like:Highcharts.seriesType(    'customIndicator',    'sma', {        name: 'Sum of previous 2 points',        threshold: 0,        groupPadding: 0.2,        pointPadding: 0.2    }, {        getValues: function(series) {            return this.getSum(series.xData, series.yData);        },        getSum: getSum,        markerAttribs: Highcharts.noop,        drawGraph: Highcharts.noop,        crispCol: Highcharts.seriesTypes.column.prototype.crispCol,        drawPoints: Highcharts.seriesTypes.column.prototype.drawPoints,        getColumnMetrics: Highcharts.seriesTypes.column.prototype.getColumnMetrics,        translate: Highcharts.seriesTypes.column.prototype.translate    });CopyA live demo of the example above can be found here.Edit this pagePrevious« Technical indicators NextStandalone Navigator  »TECHNICAL INDICATOR SERIES1. Set up the structure2. Technical indicator functionality3. Indicator with multiple lines4. Indicators calculated on events.5. Custom column indicator.\n\n\n\nStandalone NavigatorThe Standalone Navigator is a versatile Highcharts component, designed to synchronize and manipulate the viewing range across multiple charts. This tool enables users to easily control the range of one or more charts by interacting with a single navigator interface. It's particularly useful in dashboards and data analysis applications where viewing different data sets in parallel is essential.Creating the Standalone NavigatorTo initialize the Standalone Navigator, use the navigator constructor with the container reference and configuration options:Highcharts.navigator('container', {    // Standalone Navigator configuration options});CopyThe configuration options for the Standalone Navigator are the same as those for a chart navigator, and can be found in the API documentation.Including the Standalone Navigator in a ProjectThe Standalone Navigator can be included in a project in two ways:As a separate module, alongside Highcharts:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/navigator.js"></script>CopyAs a bundled package that includes both Highcharts and the Navigator:<script src="https://code.highcharts.com/standalone-navigator.js"></script>CopyBinding Charts to the NavigatorThe bind method binds a chart or an axis to the Standalone Navigator. Once a chart is bound, any range adjustments made using the navigator are automatically reflected in the bound chart. See the bind method documentation for more details.The unbind method is used to detach a chart or axis from the Standalone Navigator. This method can unbind either a single chart or all charts bound to the navigator simultaneously. Detaching charts from the navigator stops it from influencing their range. See the unbind method documentation for additional information.Managing Navigator RangeThe setRange method allows programmatic control of the navigator's range. This method not only updates the navigator's range but also synchronizes this change with all bound charts. Additionally, it triggers the setRange event.The getRange method retrieves the current range of the Standalone Navigator, enabling users to view or use the navigator's existing range settings.See the setRange and getRange methods documentation for more details.APIFor comprehensive information on all available features and options, refer to the API reference for the Standalone Navigator.\n\nStandalone NavigatorThe Standalone Navigator is a versatile Highcharts component, designed to synchronize and manipulate the viewing range across multiple charts. This tool enables users to easily control the range of one or more charts by interacting with a single navigator interface. It's particularly useful in dashboards and data analysis applications where viewing different data sets in parallel is essential.Creating the Standalone NavigatorTo initialize the Standalone Navigator, use the navigator constructor with the container reference and configuration options:Highcharts.navigator('container', {    // Standalone Navigator configuration options});CopyThe configuration options for the Standalone Navigator are the same as those for a chart navigator, and can be found in the API documentation.Including the Standalone Navigator in a ProjectThe Standalone Navigator can be included in a project in two ways:As a separate module, alongside Highcharts:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/navigator.js"></script>CopyAs a bundled package that includes both Highcharts and the Navigator:<script src="https://code.highcharts.com/standalone-navigator.js"></script>CopyBinding Charts to the NavigatorThe bind method binds a chart or an axis to the Standalone Navigator. Once a chart is bound, any range adjustments made using the navigator are automatically reflected in the bound chart. See the bind method documentation for more details.The unbind method is used to detach a chart or axis from the Standalone Navigator. This method can unbind either a single chart or all charts bound to the navigator simultaneously. Detaching charts from the navigator stops it from influencing their range. See the unbind method documentation for additional information.Managing Navigator RangeThe setRange method allows programmatic control of the navigator's range. This method not only updates the navigator's range but also synchronizes this change with all bound charts. Additionally, it triggers the setRange event.The getRange method retrieves the current range of the Standalone Navigator, enabling users to view or use the navigator's existing range settings.See the setRange and getRange methods documentation for more details.APIFor comprehensive information on all available features and options, refer to the API reference for the Standalone Navigator.Edit this pagePrevious« Custom technical indicators NextGetting started with Highcharts Maps  »Creating the Standalone NavigatorIncluding the Standalone Navigator in a ProjectBinding Charts to the NavigatorManaging Navigator RangeAPI\n\nStandalone NavigatorThe Standalone Navigator is a versatile Highcharts component, designed to synchronize and manipulate the viewing range across multiple charts. This tool enables users to easily control the range of one or more charts by interacting with a single navigator interface. It's particularly useful in dashboards and data analysis applications where viewing different data sets in parallel is essential.Creating the Standalone NavigatorTo initialize the Standalone Navigator, use the navigator constructor with the container reference and configuration options:Highcharts.navigator('container', {    // Standalone Navigator configuration options});CopyThe configuration options for the Standalone Navigator are the same as those for a chart navigator, and can be found in the API documentation.Including the Standalone Navigator in a ProjectThe Standalone Navigator can be included in a project in two ways:As a separate module, alongside Highcharts:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/navigator.js"></script>CopyAs a bundled package that includes both Highcharts and the Navigator:<script src="https://code.highcharts.com/standalone-navigator.js"></script>CopyBinding Charts to the NavigatorThe bind method binds a chart or an axis to the Standalone Navigator. Once a chart is bound, any range adjustments made using the navigator are automatically reflected in the bound chart. See the bind method documentation for more details.The unbind method is used to detach a chart or axis from the Standalone Navigator. This method can unbind either a single chart or all charts bound to the navigator simultaneously. Detaching charts from the navigator stops it from influencing their range. See the unbind method documentation for additional information.Managing Navigator RangeThe setRange method allows programmatic control of the navigator's range. This method not only updates the navigator's range but also synchronizes this change with all bound charts. Additionally, it triggers the setRange event.The getRange method retrieves the current range of the Standalone Navigator, enabling users to view or use the navigator's existing range settings.See the setRange and getRange methods documentation for more details.APIFor comprehensive information on all available features and options, refer to the API reference for the Standalone Navigator.Edit this pagePrevious« Custom technical indicators NextGetting started with Highcharts Maps  »Creating the Standalone NavigatorIncluding the Standalone Navigator in a ProjectBinding Charts to the NavigatorManaging Navigator RangeAPI\n\n\n\nGetting started with Highcharts MapsHighcharts Maps is Highcharts for geo maps. Highcharts Maps supports tiled web maps with external tile providers, and choropleth maps where the color intensity relates to some value of a geographic area. It also supports different features like lines (roads, rivers etc.) and points (cities, points of interest) and more, and is closely tied up to the standard TopoJSON and GeoJSON formats. Highcharts Maps comes in two flavors, either as a standalone JavaScript file, or as a plugin for Highcharts.Load the required filesFor basics, see Highcharts installation. The framework requirements and installation is the same for Highcharts Maps as for Highcharts. To load Highcharts Maps as a standalone product (if you don't have a license for Highcharts), include this script tag:<script src="https://code.highcharts.com/maps/highmaps.js"></script>CopyIf you already have Highcharts installed in the web page and want to run Highcharts Maps as a plugin, include this script tag after highcharts.js:<script src="https://code.highcharts.com/maps/modules/map.js"></script>CopyLoad the mapFor working with tiled web maps, see the documentation article.For maps based on geometry objects, Highcharts Maps loads its maps from TopoJSON or GeoJSON which are open standards for description of geographic features. Most GIS software supports these formats as export from for instance Shapefile or KML export. Read more in the API reference and see the live demo.There are three basic sources for your geometry-based map:Use our Map collection. Read the tutorial article on the map collection to get started.Find an SVG map online and convert it using our (experimental) online converter. Create your own map from scratch using an SVG editor, then convert them online. Read our tutorial on Custom maps for Highcharts Maps.Initialize the mapRead more on initializing a chart in Your first chart. The map is constructed with the Highcharts.mapChart constructor:Highcharts.mapChart('container', {   ...});CopyAdd and join data for choropleth mapsTiled web maps do not load data, as they work like a layer with a tile background.Other series types, like the choropleth map series, typically rely on a GeoJSON or TopoJSON map source with geometric information. Once the empty map is in place, we're ready to add the data to the series.data option. For the joining to work, each data point must have some identifier that relates to the same identifier in the map data set. This or these identifiers are then specified in the joinBy option. See detailed documentation and examples there.Another way to join the data is to simply skip the mapData and set the geometry directly on the data point. This mixes the data and the structure and is not generally recommended, but it performs faster, and may be considered in situations where you have static data and a backend to perform the joining.\n\nGetting started with Highcharts MapsHighcharts Maps is Highcharts for geo maps. Highcharts Maps supports tiled web maps with external tile providers, and choropleth maps where the color intensity relates to some value of a geographic area. It also supports different features like lines (roads, rivers etc.) and points (cities, points of interest) and more, and is closely tied up to the standard TopoJSON and GeoJSON formats. Highcharts Maps comes in two flavors, either as a standalone JavaScript file, or as a plugin for Highcharts.Load the required filesFor basics, see Highcharts installation. The framework requirements and installation is the same for Highcharts Maps as for Highcharts. To load Highcharts Maps as a standalone product (if you don't have a license for Highcharts), include this script tag:<script src="https://code.highcharts.com/maps/highmaps.js"></script>CopyIf you already have Highcharts installed in the web page and want to run Highcharts Maps as a plugin, include this script tag after highcharts.js:<script src="https://code.highcharts.com/maps/modules/map.js"></script>CopyLoad the mapFor working with tiled web maps, see the documentation article.For maps based on geometry objects, Highcharts Maps loads its maps from TopoJSON or GeoJSON which are open standards for description of geographic features. Most GIS software supports these formats as export from for instance Shapefile or KML export. Read more in the API reference and see the live demo.There are three basic sources for your geometry-based map:Use our Map collection. Read the tutorial article on the map collection to get started.Find an SVG map online and convert it using our (experimental) online converter. Create your own map from scratch using an SVG editor, then convert them online. Read our tutorial on Custom maps for Highcharts Maps.Initialize the mapRead more on initializing a chart in Your first chart. The map is constructed with the Highcharts.mapChart constructor:Highcharts.mapChart('container', {   ...});CopyAdd and join data for choropleth mapsTiled web maps do not load data, as they work like a layer with a tile background.Other series types, like the choropleth map series, typically rely on a GeoJSON or TopoJSON map source with geometric information. Once the empty map is in place, we're ready to add the data to the series.data option. For the joining to work, each data point must have some identifier that relates to the same identifier in the map data set. This or these identifiers are then specified in the joinBy option. See detailed documentation and examples there.Another way to join the data is to simply skip the mapData and set the geometry directly on the data point. This mixes the data and the structure and is not generally recommended, but it performs faster, and may be considered in situations where you have static data and a backend to perform the joining.Edit this pagePrevious« Standalone Navigator NextMap View and Projection  »Load the required filesLoad the mapInitialize the mapAdd and join data for choropleth maps\n\nGetting started with Highcharts MapsHighcharts Maps is Highcharts for geo maps. Highcharts Maps supports tiled web maps with external tile providers, and choropleth maps where the color intensity relates to some value of a geographic area. It also supports different features like lines (roads, rivers etc.) and points (cities, points of interest) and more, and is closely tied up to the standard TopoJSON and GeoJSON formats. Highcharts Maps comes in two flavors, either as a standalone JavaScript file, or as a plugin for Highcharts.Load the required filesFor basics, see Highcharts installation. The framework requirements and installation is the same for Highcharts Maps as for Highcharts. To load Highcharts Maps as a standalone product (if you don't have a license for Highcharts), include this script tag:<script src="https://code.highcharts.com/maps/highmaps.js"></script>CopyIf you already have Highcharts installed in the web page and want to run Highcharts Maps as a plugin, include this script tag after highcharts.js:<script src="https://code.highcharts.com/maps/modules/map.js"></script>CopyLoad the mapFor working with tiled web maps, see the documentation article.For maps based on geometry objects, Highcharts Maps loads its maps from TopoJSON or GeoJSON which are open standards for description of geographic features. Most GIS software supports these formats as export from for instance Shapefile or KML export. Read more in the API reference and see the live demo.There are three basic sources for your geometry-based map:Use our Map collection. Read the tutorial article on the map collection to get started.Find an SVG map online and convert it using our (experimental) online converter. Create your own map from scratch using an SVG editor, then convert them online. Read our tutorial on Custom maps for Highcharts Maps.Initialize the mapRead more on initializing a chart in Your first chart. The map is constructed with the Highcharts.mapChart constructor:Highcharts.mapChart('container', {   ...});CopyAdd and join data for choropleth mapsTiled web maps do not load data, as they work like a layer with a tile background.Other series types, like the choropleth map series, typically rely on a GeoJSON or TopoJSON map source with geometric information. Once the empty map is in place, we're ready to add the data to the series.data option. For the joining to work, each data point must have some identifier that relates to the same identifier in the map data set. This or these identifiers are then specified in the joinBy option. See detailed documentation and examples there.Another way to join the data is to simply skip the mapData and set the geometry directly on the data point. This mixes the data and the structure and is not generally recommended, but it performs faster, and may be considered in situations where you have static data and a backend to perform the joining.Edit this pagePrevious« Standalone Navigator NextMap View and Projection  »Load the required filesLoad the mapInitialize the mapAdd and join data for choropleth maps\n\n\n\nMap View and ProjectionThe map view is the basic class and options set dealing with how the map is projected and displayed inside the chart.API optionsClass referenceCenter and zoomBy default, a map is centered within the plot area of the chart. For custom zoom and placement, use the center and zoom options, where center is given as [longitude, latitude] and zoom is a number where 0 renders the world as 256x256 pixels, and increase of 1 zooms in to a quarter of the viewed area.The center and zoom options can be updated in run time by the setView function.ProjectionThe map view also controls the map's projection settings. Highcharts Maps includes some basic built-in projections, other projections can be custom built and plugged in. By default, Highcharts will guess the best projection to use for a map, based on the geographic extent. For more details see the API docs or try out the Projection Explorer below.InsetsInsets are small maps that are inset in parts of the main map. Highcharts Maps typically uses insets for rendering non-contiguous areas of a country closer to the mainland. Examples are Alaska and Hawaii for the USA, or the France map with multiple overseas territories. Many of the TopoJSON maps of the Map Collection come with built-in recommended mapView settings, where insets are included. These recommended insets can all be overridden by supplying options with the same id. By overriding them, the insets can for example be placed in different areas of the main map. For more details, see the general insetOptions and the item specific insets.Coordinate systemsA map view operates with three different coordinate systems:The geographic coordinatesThe projected plane on which the geographic coordinates are projected, andThe pixel positions within the plot area, onto which the projected plane is scaled and translated.The MapView class contains conversion functions between these coordinate systems. In addition to that, all pointer events are extended with lon and lat properties, allowing longitude and latitude to be read directly from for example a click event.\n\nMap View and ProjectionThe map view is the basic class and options set dealing with how the map is projected and displayed inside the chart.API optionsClass referenceCenter and zoomBy default, a map is centered within the plot area of the chart. For custom zoom and placement, use the center and zoom options, where center is given as [longitude, latitude] and zoom is a number where 0 renders the world as 256x256 pixels, and increase of 1 zooms in to a quarter of the viewed area.The center and zoom options can be updated in run time by the setView function.ProjectionThe map view also controls the map's projection settings. Highcharts Maps includes some basic built-in projections, other projections can be custom built and plugged in. By default, Highcharts will guess the best projection to use for a map, based on the geographic extent. For more details see the API docs or try out the Projection Explorer below.InsetsInsets are small maps that are inset in parts of the main map. Highcharts Maps typically uses insets for rendering non-contiguous areas of a country closer to the mainland. Examples are Alaska and Hawaii for the USA, or the France map with multiple overseas territories. Many of the TopoJSON maps of the Map Collection come with built-in recommended mapView settings, where insets are included. These recommended insets can all be overridden by supplying options with the same id. By overriding them, the insets can for example be placed in different areas of the main map. For more details, see the general insetOptions and the item specific insets.Coordinate systemsA map view operates with three different coordinate systems:The geographic coordinatesThe projected plane on which the geographic coordinates are projected, andThe pixel positions within the plot area, onto which the projected plane is scaled and translated.The MapView class contains conversion functions between these coordinate systems. In addition to that, all pointer events are extended with lon and lat properties, allowing longitude and latitude to be read directly from for example a click event.Edit this pagePrevious« Getting started with Highcharts Maps NextMap navigation  »Center and zoomProjectionInsetsCoordinate systems\n\nMap View and ProjectionThe map view is the basic class and options set dealing with how the map is projected and displayed inside the chart.API optionsClass referenceCenter and zoomBy default, a map is centered within the plot area of the chart. For custom zoom and placement, use the center and zoom options, where center is given as [longitude, latitude] and zoom is a number where 0 renders the world as 256x256 pixels, and increase of 1 zooms in to a quarter of the viewed area.The center and zoom options can be updated in run time by the setView function.ProjectionThe map view also controls the map's projection settings. Highcharts Maps includes some basic built-in projections, other projections can be custom built and plugged in. By default, Highcharts will guess the best projection to use for a map, based on the geographic extent. For more details see the API docs or try out the Projection Explorer below.InsetsInsets are small maps that are inset in parts of the main map. Highcharts Maps typically uses insets for rendering non-contiguous areas of a country closer to the mainland. Examples are Alaska and Hawaii for the USA, or the France map with multiple overseas territories. Many of the TopoJSON maps of the Map Collection come with built-in recommended mapView settings, where insets are included. These recommended insets can all be overridden by supplying options with the same id. By overriding them, the insets can for example be placed in different areas of the main map. For more details, see the general insetOptions and the item specific insets.Coordinate systemsA map view operates with three different coordinate systems:The geographic coordinatesThe projected plane on which the geographic coordinates are projected, andThe pixel positions within the plot area, onto which the projected plane is scaled and translated.The MapView class contains conversion functions between these coordinate systems. In addition to that, all pointer events are extended with lon and lat properties, allowing longitude and latitude to be read directly from for example a click event.Edit this pagePrevious« Getting started with Highcharts Maps NextMap navigation  »Center and zoomProjectionInsetsCoordinate systems\n\n\n\nMap navigationHighcharts Maps supports different ways of navigating around the map - zooming, panning, zooming to an area etc. The API options related to this can be viewed at mapNavigation.Please note that mapNavigation is disabled by default because the implementer should be concious that it may interfere with the navigation of the web page in general. When scrolling the mouse wheel over a map, the user may expect the web page to scroll, while Highcharts Maps will capture the mousewheel event and zoom the map. The same goes for touch devices, where unless used right, the map may trap the user unable to zoom out to the page outside the map. So zooming should only be enabled in cases where the map actually needs it.ButtonsTwo buttons, [+] and [-], are by default shown on each map when navigation is enabled. These provide zooming in and zooming out.MultitouchOn touch devices, zooming and panning may be performed by pinch and touch-drag gestures.MousewheelThe mouse wheel zooms in and out the map around the point under the mouse.DoubleclickDoubleclick by default zooms in, focused on the point under the mouse. Following the enableDoubleClickZoomTo option, double clicking may zoom fully in to a specific point.Programmatic control through MapViewSetting the map view programmatically is done through the Chart.mapView object. It can be zoomed through the mapView.zoomBy function or directly by Point.zoomTo methods.\n\nMap navigationHighcharts Maps supports different ways of navigating around the map - zooming, panning, zooming to an area etc. The API options related to this can be viewed at mapNavigation.Please note that mapNavigation is disabled by default because the implementer should be concious that it may interfere with the navigation of the web page in general. When scrolling the mouse wheel over a map, the user may expect the web page to scroll, while Highcharts Maps will capture the mousewheel event and zoom the map. The same goes for touch devices, where unless used right, the map may trap the user unable to zoom out to the page outside the map. So zooming should only be enabled in cases where the map actually needs it.ButtonsTwo buttons, [+] and [-], are by default shown on each map when navigation is enabled. These provide zooming in and zooming out.MultitouchOn touch devices, zooming and panning may be performed by pinch and touch-drag gestures.MousewheelThe mouse wheel zooms in and out the map around the point under the mouse.DoubleclickDoubleclick by default zooms in, focused on the point under the mouse. Following the enableDoubleClickZoomTo option, double clicking may zoom fully in to a specific point.Programmatic control through MapViewSetting the map view programmatically is done through the Chart.mapView object. It can be zoomed through the mapView.zoomBy function or directly by Point.zoomTo methods.Edit this pagePrevious« Map View and Projection NextColor axis  »ButtonsMultitouchMousewheelDoubleclickProgrammatic control through MapView\n\nMap navigationHighcharts Maps supports different ways of navigating around the map - zooming, panning, zooming to an area etc. The API options related to this can be viewed at mapNavigation.Please note that mapNavigation is disabled by default because the implementer should be concious that it may interfere with the navigation of the web page in general. When scrolling the mouse wheel over a map, the user may expect the web page to scroll, while Highcharts Maps will capture the mousewheel event and zoom the map. The same goes for touch devices, where unless used right, the map may trap the user unable to zoom out to the page outside the map. So zooming should only be enabled in cases where the map actually needs it.ButtonsTwo buttons, [+] and [-], are by default shown on each map when navigation is enabled. These provide zooming in and zooming out.MultitouchOn touch devices, zooming and panning may be performed by pinch and touch-drag gestures.MousewheelThe mouse wheel zooms in and out the map around the point under the mouse.DoubleclickDoubleclick by default zooms in, focused on the point under the mouse. Following the enableDoubleClickZoomTo option, double clicking may zoom fully in to a specific point.Programmatic control through MapViewSetting the map view programmatically is done through the Chart.mapView object. It can be zoomed through the mapView.zoomBy function or directly by Point.zoomTo methods.Edit this pagePrevious« Map View and Projection NextColor axis  »ButtonsMultitouchMousewheelDoubleclickProgrammatic control through MapView\n\n\n\nColor axisThe values on a choropleth geo map or heat map are plotted against a color axis. The Highcharts Maps color axis is a special case of an axis that is drawn inside the legend, displaying a gradient or single items depending on whether the axis is scalar or has data classes. See detailed reference and live examples in the API.Scalar axisA scalar color axis is represented by a gradient. The colors either range between the minColor and the maxColor, or for more fine grained control the colors can be defined in stops. Often times, the color axis needs to be adjusted to get the right color spread for the data. In addition to stops, consider using a logarithmic axis type, or setting min and max to avoid the colors being determined by outliers.Data classesWhen dataClasses are used, the ranges are subdivided into separate classes like categories based on their values. This can be used for ranges between two values, but also for a true category. However, when your data is categorized, it may be as convenient to add each category to a separate series.\n\nColor axisThe values on a choropleth geo map or heat map are plotted against a color axis. The Highcharts Maps color axis is a special case of an axis that is drawn inside the legend, displaying a gradient or single items depending on whether the axis is scalar or has data classes. See detailed reference and live examples in the API.Scalar axisA scalar color axis is represented by a gradient. The colors either range between the minColor and the maxColor, or for more fine grained control the colors can be defined in stops. Often times, the color axis needs to be adjusted to get the right color spread for the data. In addition to stops, consider using a logarithmic axis type, or setting min and max to avoid the colors being determined by outliers.Data classesWhen dataClasses are used, the ranges are subdivided into separate classes like categories based on their values. This can be used for ranges between two values, but also for a true category. However, when your data is categorized, it may be as convenient to add each category to a separate series.Edit this pagePrevious« Map navigation NextMap Collection  »Scalar axisData classes\n\nColor axisThe values on a choropleth geo map or heat map are plotted against a color axis. The Highcharts Maps color axis is a special case of an axis that is drawn inside the legend, displaying a gradient or single items depending on whether the axis is scalar or has data classes. See detailed reference and live examples in the API.Scalar axisA scalar color axis is represented by a gradient. The colors either range between the minColor and the maxColor, or for more fine grained control the colors can be defined in stops. Often times, the color axis needs to be adjusted to get the right color spread for the data. In addition to stops, consider using a logarithmic axis type, or setting min and max to avoid the colors being determined by outliers.Data classesWhen dataClasses are used, the ranges are subdivided into separate classes like categories based on their values. This can be used for ranges between two values, but also for a true category. However, when your data is categorized, it may be as convenient to add each category to a separate series.Edit this pagePrevious« Map navigation NextMap Collection  »Scalar axisData classes\n\n\n\nMap CollectionFor your convenience, Highcharts Maps offers a free collection of maps, optimized for use with Highcharts Maps. For common maps, it saves you the trouble of finding or drawing suitable SVG or GeoJSON/TopoJSON maps. Instead, you can choose between hundreds of pre-generated maps of countries, regions and other administration levels.The Highcharts Maps Collection maps mainly follow United Nations cartographic standards. These maps are specifically designed to reflect internationally recognized boundaries and regions. For users requiring a specific geopolitical perspective, such as World with Palestine areas, the collection offers three different resolutions. These maps detail regions like the West Bank and Gaza to ensure accurate representation based on the UN's view of world borders.LicenseThe Highcharts Maps Map Collection comes with the license of the source data. For most of Admin0 (countries) and Admin1 (US states, German Bundesländer, Dutch regions, etc.), the source data is Natural Earth, which is a public domain dataset. For Admin2, we have only compiled selected countries, and most of these maps are created from national files with their own license which is specified on the SVG map and in the other format files as meta data. If your country is missing from the list, please contact us and we'll try to find a suitable shapefile and generate more maps.For maps loaded using the default TopoJSON or GeoJSON input into the series.mapData or chart.map options, a short version of the copyright will be printed in the chart's credits label.Using the Map CollectionInstall from our CDNIn the Map Collection reference, each map name is followed by links to demos and data. Click the TopoJSON link and copy the URL.Load the map and parse the JSONconst topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());CopyYou can alternatively link to a specific version or subversion of the map at https://code.highcharts.com/mapdata/1.1/custom/world.topo.json.Apply it in chart.map to make it the default map for all series:chart: {    map: topology,    ...CopyAlternatively, you can apply different maps for different series (view demo):series: [{    mapData: topology,    ...CopyJoin your data with the map. By default Highcharts Maps is set up to map your data against the hc-key property of the Map Collection, allowing you to define your data like this:data: [['us-ny', 0], ['us-mi', 5], ['us-tx', 3], ['us-ak', 5]]CopyFor other data joining options, see the series.joinBy and series.keys options.Install from npmThe Map Collection is available on npm as @highcharts/map-collection and can be installed as following:npm i @highcharts/map-collectionCopyTo load a map in Node.js and use it in Highcharts Maps you can do the following:const Highcharts = require('highcharts/highmaps.js'),    map = require('@highcharts/map-collection/custom/world.topo.json');Highcharts.mapChart('container', {    chart: {        map    },    // ...});CopyMap propertiesThe following table outlines the properties available in the Highcharts Maps Map Collection maps, and their meaning. The properties are accessible from the point.properties object (example).PropertyExample valuesDescriptionAvailabilityhc-groupadmin1, admin2, specialThe administrative group the area belongs to. Admin0 is countries, admin1 is first level administrative division (USA States, German Bundesländer, Canada Provinces). Admin2 is second level administrative division (USA counties, German Kreise, Norwegian Kommuner). "Special" is used to denote an area where this grouping does not make sense (e.g. congressional districts, historical maps).All mapshc-middle-lon47.885Data label X position. Defined as longitude on the map.All mapshc-middle-lat15.932Data label Y position. Defined as a latitude on the map.All mapshc-middle-x0.65Data label X position used if hc-middle-lon is not defined. Defined as fraction of map bounding box width. 0 is left aligned, 1 is right aligned.All mapshc-middle-y0.65Data label Y position used if hc-middle-lat is not defined. Defined as fraction of map bounding box height. 0 is top aligned, 1 is bottom alignedAll mapshc-keyus, us-ma-027, gb-hiUnique hierarchical identifier for the area. Consistent across maps, and reflected in the naming convention of the maps. More detailed description below.All mapshc-a2KV, PA, BBTwo letter abbreviation of area name. Usually same as postal code/ISO code, but not always. Not guaranteed to be unique within map.All mapsnameFremont, Brandenburg, SaipanName of the areaAll mapsiso-a2US, MC, LVISO 2 letter country codeMost admin0 areasiso-a3USA, MCO, LVAISO 3 letter country codeMost admin0 areascontinentAsia, North AmericaContinent the area lies withinMost admin0 areascountry-abbrevPan., C.R.Abbreviated country nameMost admin0 areasregionMidwest, South, Highlands and IslandsThe region the area lies withinMost admin1 areas within country mapssubregionSouthern Europe, HighlandThe subregion the area lies withinMost admin0 and admin1 areasfips120, GM10, US05, 56031FIPS code for the area. Format may vary between maps as to whether the country code is included.Most admin1 areas within country maps, as well as USA admin2 mapshascDE.BB, US.ARHASC code for the areaMost admin1 areas within country mapspostal-codeAK, NY, TIPostal code for the area, usually two letters wideMost admin1 areas within country mapstypeState, Emirate, Fylke, LandDescription of the area typeMost admin1 areas within country mapsThe hc-key property reflects the naming convention of the maps, and can be used for dynamic drilldown purposes. This is illustrated in the Map drilldown demo. The property follows the following format:<unique admin0 id>-<unique admin1 id>-<unique admin2 id>-...CopyAttempts are made to use commonly known codes for each level, to increase readability. As an example, most countries are identified by their two letter ISO-3166 code. Most admin1 areas are identified by their postal codes. For United States, admin2 (county) areas are identified by their FIPS codes.In addition to the above mentioned properties, all points have an id property that is stored on the point itself, rather than in the properties object. The id property is a unique ID for the point within the map. It follows a hierarchical system identical to that of the hc-key property, but uses capital letters and periods as delimiters.Some maps may provide additional properties that are not mentioned in the above table. Open the GeoJSON/Javascript source of the map in a text editor to find all available properties.Using parts of a mapIf you can't find the exact map that you want in the Map Collection, it is easy to use only selected parts of a larger area. Say you want a comparative map of Canada, USA and Mexico. Since we don't have that exact combination in the Map Collection (as of now), you can use the map called "North America without Central". This map also contains Greenland as well as Caribbean islands. So we apply a data set only for the three countries we want, and set the allAreas option to false. This option makes sure all null points (the countries that don't have data), are hidden. See demo on jsFiddle.Combine mapsAnother way to approach the same problem, is to combine two or more map sources into the same chart. This is supported since Highcharts v9.3, where client-side projection is available. To achieve this, the unprojected TopoJSON maps must be used. See the demo on jsFiddle. See also the demo for the series.affectsMapView feature, which lets you load one map as a backdrop that doesn't affect the map view.Modify our mapsOur maps are also a good starting points for your own modified maps. Borders can be moved, areas joined, and labels modified by loading the SVG map in Inkscape, the free SVG editor. Our article on Custom maps explains in detail how to draw your maps from scratch. Modifying existing maps is easier - instead of drawing shapes use the existing ones (SVG files can be downloaded from here) and perform the same operations as described in the article. Alternatively, follow the article on Custom GeoJSON maps to edit the map with a GIS editor for even more control and advanced mapping features.DisclaimerWe offer the map collection for free to use with Highcharts Maps, for your convenience. We will not be held responsible for errors in the maps, although we will strive to respond to bug reports and keep the maps correct.\n\nMap CollectionFor your convenience, Highcharts Maps offers a free collection of maps, optimized for use with Highcharts Maps. For common maps, it saves you the trouble of finding or drawing suitable SVG or GeoJSON/TopoJSON maps. Instead, you can choose between hundreds of pre-generated maps of countries, regions and other administration levels.The Highcharts Maps Collection maps mainly follow United Nations cartographic standards. These maps are specifically designed to reflect internationally recognized boundaries and regions. For users requiring a specific geopolitical perspective, such as World with Palestine areas, the collection offers three different resolutions. These maps detail regions like the West Bank and Gaza to ensure accurate representation based on the UN's view of world borders.LicenseThe Highcharts Maps Map Collection comes with the license of the source data. For most of Admin0 (countries) and Admin1 (US states, German Bundesländer, Dutch regions, etc.), the source data is Natural Earth, which is a public domain dataset. For Admin2, we have only compiled selected countries, and most of these maps are created from national files with their own license which is specified on the SVG map and in the other format files as meta data. If your country is missing from the list, please contact us and we'll try to find a suitable shapefile and generate more maps.For maps loaded using the default TopoJSON or GeoJSON input into the series.mapData or chart.map options, a short version of the copyright will be printed in the chart's credits label.Using the Map CollectionInstall from our CDNIn the Map Collection reference, each map name is followed by links to demos and data. Click the TopoJSON link and copy the URL.Load the map and parse the JSONconst topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());CopyYou can alternatively link to a specific version or subversion of the map at https://code.highcharts.com/mapdata/1.1/custom/world.topo.json.Apply it in chart.map to make it the default map for all series:chart: {    map: topology,    ...CopyAlternatively, you can apply different maps for different series (view demo):series: [{    mapData: topology,    ...CopyJoin your data with the map. By default Highcharts Maps is set up to map your data against the hc-key property of the Map Collection, allowing you to define your data like this:data: [['us-ny', 0], ['us-mi', 5], ['us-tx', 3], ['us-ak', 5]]CopyFor other data joining options, see the series.joinBy and series.keys options.Install from npmThe Map Collection is available on npm as @highcharts/map-collection and can be installed as following:npm i @highcharts/map-collectionCopyTo load a map in Node.js and use it in Highcharts Maps you can do the following:const Highcharts = require('highcharts/highmaps.js'),    map = require('@highcharts/map-collection/custom/world.topo.json');Highcharts.mapChart('container', {    chart: {        map    },    // ...});CopyMap propertiesThe following table outlines the properties available in the Highcharts Maps Map Collection maps, and their meaning. The properties are accessible from the point.properties object (example).PropertyExample valuesDescriptionAvailabilityhc-groupadmin1, admin2, specialThe administrative group the area belongs to. Admin0 is countries, admin1 is first level administrative division (USA States, German Bundesländer, Canada Provinces). Admin2 is second level administrative division (USA counties, German Kreise, Norwegian Kommuner). "Special" is used to denote an area where this grouping does not make sense (e.g. congressional districts, historical maps).All mapshc-middle-lon47.885Data label X position. Defined as longitude on the map.All mapshc-middle-lat15.932Data label Y position. Defined as a latitude on the map.All mapshc-middle-x0.65Data label X position used if hc-middle-lon is not defined. Defined as fraction of map bounding box width. 0 is left aligned, 1 is right aligned.All mapshc-middle-y0.65Data label Y position used if hc-middle-lat is not defined. Defined as fraction of map bounding box height. 0 is top aligned, 1 is bottom alignedAll mapshc-keyus, us-ma-027, gb-hiUnique hierarchical identifier for the area. Consistent across maps, and reflected in the naming convention of the maps. More detailed description below.All mapshc-a2KV, PA, BBTwo letter abbreviation of area name. Usually same as postal code/ISO code, but not always. Not guaranteed to be unique within map.All mapsnameFremont, Brandenburg, SaipanName of the areaAll mapsiso-a2US, MC, LVISO 2 letter country codeMost admin0 areasiso-a3USA, MCO, LVAISO 3 letter country codeMost admin0 areascontinentAsia, North AmericaContinent the area lies withinMost admin0 areascountry-abbrevPan., C.R.Abbreviated country nameMost admin0 areasregionMidwest, South, Highlands and IslandsThe region the area lies withinMost admin1 areas within country mapssubregionSouthern Europe, HighlandThe subregion the area lies withinMost admin0 and admin1 areasfips120, GM10, US05, 56031FIPS code for the area. Format may vary between maps as to whether the country code is included.Most admin1 areas within country maps, as well as USA admin2 mapshascDE.BB, US.ARHASC code for the areaMost admin1 areas within country mapspostal-codeAK, NY, TIPostal code for the area, usually two letters wideMost admin1 areas within country mapstypeState, Emirate, Fylke, LandDescription of the area typeMost admin1 areas within country mapsThe hc-key property reflects the naming convention of the maps, and can be used for dynamic drilldown purposes. This is illustrated in the Map drilldown demo. The property follows the following format:<unique admin0 id>-<unique admin1 id>-<unique admin2 id>-...CopyAttempts are made to use commonly known codes for each level, to increase readability. As an example, most countries are identified by their two letter ISO-3166 code. Most admin1 areas are identified by their postal codes. For United States, admin2 (county) areas are identified by their FIPS codes.In addition to the above mentioned properties, all points have an id property that is stored on the point itself, rather than in the properties object. The id property is a unique ID for the point within the map. It follows a hierarchical system identical to that of the hc-key property, but uses capital letters and periods as delimiters.Some maps may provide additional properties that are not mentioned in the above table. Open the GeoJSON/Javascript source of the map in a text editor to find all available properties.Using parts of a mapIf you can't find the exact map that you want in the Map Collection, it is easy to use only selected parts of a larger area. Say you want a comparative map of Canada, USA and Mexico. Since we don't have that exact combination in the Map Collection (as of now), you can use the map called "North America without Central". This map also contains Greenland as well as Caribbean islands. So we apply a data set only for the three countries we want, and set the allAreas option to false. This option makes sure all null points (the countries that don't have data), are hidden. See demo on jsFiddle.Combine mapsAnother way to approach the same problem, is to combine two or more map sources into the same chart. This is supported since Highcharts v9.3, where client-side projection is available. To achieve this, the unprojected TopoJSON maps must be used. See the demo on jsFiddle. See also the demo for the series.affectsMapView feature, which lets you load one map as a backdrop that doesn't affect the map view.Modify our mapsOur maps are also a good starting points for your own modified maps. Borders can be moved, areas joined, and labels modified by loading the SVG map in Inkscape, the free SVG editor. Our article on Custom maps explains in detail how to draw your maps from scratch. Modifying existing maps is easier - instead of drawing shapes use the existing ones (SVG files can be downloaded from here) and perform the same operations as described in the article. Alternatively, follow the article on Custom GeoJSON maps to edit the map with a GIS editor for even more control and advanced mapping features.DisclaimerWe offer the map collection for free to use with Highcharts Maps, for your convenience. We will not be held responsible for errors in the maps, although we will strive to respond to bug reports and keep the maps correct.Edit this pagePrevious« Color axis NextCreating custom maps  »LicenseUsing the Map CollectionInstall from our CDNInstall from npmMap propertiesUsing parts of a mapCombine mapsModify our mapsDisclaimer\n\nMap CollectionFor your convenience, Highcharts Maps offers a free collection of maps, optimized for use with Highcharts Maps. For common maps, it saves you the trouble of finding or drawing suitable SVG or GeoJSON/TopoJSON maps. Instead, you can choose between hundreds of pre-generated maps of countries, regions and other administration levels.The Highcharts Maps Collection maps mainly follow United Nations cartographic standards. These maps are specifically designed to reflect internationally recognized boundaries and regions. For users requiring a specific geopolitical perspective, such as World with Palestine areas, the collection offers three different resolutions. These maps detail regions like the West Bank and Gaza to ensure accurate representation based on the UN's view of world borders.LicenseThe Highcharts Maps Map Collection comes with the license of the source data. For most of Admin0 (countries) and Admin1 (US states, German Bundesländer, Dutch regions, etc.), the source data is Natural Earth, which is a public domain dataset. For Admin2, we have only compiled selected countries, and most of these maps are created from national files with their own license which is specified on the SVG map and in the other format files as meta data. If your country is missing from the list, please contact us and we'll try to find a suitable shapefile and generate more maps.For maps loaded using the default TopoJSON or GeoJSON input into the series.mapData or chart.map options, a short version of the copyright will be printed in the chart's credits label.Using the Map CollectionInstall from our CDNIn the Map Collection reference, each map name is followed by links to demos and data. Click the TopoJSON link and copy the URL.Load the map and parse the JSONconst topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());CopyYou can alternatively link to a specific version or subversion of the map at https://code.highcharts.com/mapdata/1.1/custom/world.topo.json.Apply it in chart.map to make it the default map for all series:chart: {    map: topology,    ...CopyAlternatively, you can apply different maps for different series (view demo):series: [{    mapData: topology,    ...CopyJoin your data with the map. By default Highcharts Maps is set up to map your data against the hc-key property of the Map Collection, allowing you to define your data like this:data: [['us-ny', 0], ['us-mi', 5], ['us-tx', 3], ['us-ak', 5]]CopyFor other data joining options, see the series.joinBy and series.keys options.Install from npmThe Map Collection is available on npm as @highcharts/map-collection and can be installed as following:npm i @highcharts/map-collectionCopyTo load a map in Node.js and use it in Highcharts Maps you can do the following:const Highcharts = require('highcharts/highmaps.js'),    map = require('@highcharts/map-collection/custom/world.topo.json');Highcharts.mapChart('container', {    chart: {        map    },    // ...});CopyMap propertiesThe following table outlines the properties available in the Highcharts Maps Map Collection maps, and their meaning. The properties are accessible from the point.properties object (example).PropertyExample valuesDescriptionAvailabilityhc-groupadmin1, admin2, specialThe administrative group the area belongs to. Admin0 is countries, admin1 is first level administrative division (USA States, German Bundesländer, Canada Provinces). Admin2 is second level administrative division (USA counties, German Kreise, Norwegian Kommuner). "Special" is used to denote an area where this grouping does not make sense (e.g. congressional districts, historical maps).All mapshc-middle-lon47.885Data label X position. Defined as longitude on the map.All mapshc-middle-lat15.932Data label Y position. Defined as a latitude on the map.All mapshc-middle-x0.65Data label X position used if hc-middle-lon is not defined. Defined as fraction of map bounding box width. 0 is left aligned, 1 is right aligned.All mapshc-middle-y0.65Data label Y position used if hc-middle-lat is not defined. Defined as fraction of map bounding box height. 0 is top aligned, 1 is bottom alignedAll mapshc-keyus, us-ma-027, gb-hiUnique hierarchical identifier for the area. Consistent across maps, and reflected in the naming convention of the maps. More detailed description below.All mapshc-a2KV, PA, BBTwo letter abbreviation of area name. Usually same as postal code/ISO code, but not always. Not guaranteed to be unique within map.All mapsnameFremont, Brandenburg, SaipanName of the areaAll mapsiso-a2US, MC, LVISO 2 letter country codeMost admin0 areasiso-a3USA, MCO, LVAISO 3 letter country codeMost admin0 areascontinentAsia, North AmericaContinent the area lies withinMost admin0 areascountry-abbrevPan., C.R.Abbreviated country nameMost admin0 areasregionMidwest, South, Highlands and IslandsThe region the area lies withinMost admin1 areas within country mapssubregionSouthern Europe, HighlandThe subregion the area lies withinMost admin0 and admin1 areasfips120, GM10, US05, 56031FIPS code for the area. Format may vary between maps as to whether the country code is included.Most admin1 areas within country maps, as well as USA admin2 mapshascDE.BB, US.ARHASC code for the areaMost admin1 areas within country mapspostal-codeAK, NY, TIPostal code for the area, usually two letters wideMost admin1 areas within country mapstypeState, Emirate, Fylke, LandDescription of the area typeMost admin1 areas within country mapsThe hc-key property reflects the naming convention of the maps, and can be used for dynamic drilldown purposes. This is illustrated in the Map drilldown demo. The property follows the following format:<unique admin0 id>-<unique admin1 id>-<unique admin2 id>-...CopyAttempts are made to use commonly known codes for each level, to increase readability. As an example, most countries are identified by their two letter ISO-3166 code. Most admin1 areas are identified by their postal codes. For United States, admin2 (county) areas are identified by their FIPS codes.In addition to the above mentioned properties, all points have an id property that is stored on the point itself, rather than in the properties object. The id property is a unique ID for the point within the map. It follows a hierarchical system identical to that of the hc-key property, but uses capital letters and periods as delimiters.Some maps may provide additional properties that are not mentioned in the above table. Open the GeoJSON/Javascript source of the map in a text editor to find all available properties.Using parts of a mapIf you can't find the exact map that you want in the Map Collection, it is easy to use only selected parts of a larger area. Say you want a comparative map of Canada, USA and Mexico. Since we don't have that exact combination in the Map Collection (as of now), you can use the map called "North America without Central". This map also contains Greenland as well as Caribbean islands. So we apply a data set only for the three countries we want, and set the allAreas option to false. This option makes sure all null points (the countries that don't have data), are hidden. See demo on jsFiddle.Combine mapsAnother way to approach the same problem, is to combine two or more map sources into the same chart. This is supported since Highcharts v9.3, where client-side projection is available. To achieve this, the unprojected TopoJSON maps must be used. See the demo on jsFiddle. See also the demo for the series.affectsMapView feature, which lets you load one map as a backdrop that doesn't affect the map view.Modify our mapsOur maps are also a good starting points for your own modified maps. Borders can be moved, areas joined, and labels modified by loading the SVG map in Inkscape, the free SVG editor. Our article on Custom maps explains in detail how to draw your maps from scratch. Modifying existing maps is easier - instead of drawing shapes use the existing ones (SVG files can be downloaded from here) and perform the same operations as described in the article. Alternatively, follow the article on Custom GeoJSON maps to edit the map with a GIS editor for even more control and advanced mapping features.DisclaimerWe offer the map collection for free to use with Highcharts Maps, for your convenience. We will not be held responsible for errors in the maps, although we will strive to respond to bug reports and keep the maps correct.Edit this pagePrevious« Color axis NextCreating custom maps  »LicenseUsing the Map CollectionInstall from our CDNInstall from npmMap propertiesUsing parts of a mapCombine mapsModify our mapsDisclaimer\n\n\n\nCreating custom mapsHighcharts Maps can be used for more than geographic data, and more than the featured maps provided in the demos. This article goes through the process of drawing your own map in Inkscape, and using our online map converter tool to construct an interactive map with data values. We use a map of Australia for demo purposes. (Do not use that in production, we have a better one in our mapdata collection).The first step is to install Inkscape on your system. This is the only tool you need to install, and it's free. Open up Inkscape, it opens a new document by default.We will use a PNG image in the background and draw actual SVG shapes on top of it. Open the PNG image in Inkscape. Inkscape ask if you want to link or embed the image, choose either of the two.In the left toolbar, select the tool called "Draw bezier curves and straight lines (Shift + F6)".Start drawing around a territory by clicking repeatedly around the perimeter. Nodes can be moved and added if you do mistakes. To start over again with a shape, select it using the "Select and transform objects (F1)" tool, and hit Delete. In the image below we have drawn the shape for Western Australia.The Highcharts Maps converter tool expects fills for areas in order to distinguish it from separators and other lines. In the lower left corner of Inkscape, it says Fill: None. Click the text None to bring up the Fill and Stroke dialog. Next to the cross depicting no fill, select the solid fill button. Pick a color.Next, we want to give the territory a name that Highcharts Maps can use for labels and identification. In the Object menu, select Object Properties (Shift + Ctrl + O). Set an id and a label. The label is used by Highcharts Maps. Remember to click the Set button, otherwise Inkscape won't apply the information.For the second territory we want to do exactly the same, but there is also another thing to consider. We want the border between the two shapes to align, so that when we zoom in we don't see borders lying close but not on top of each other. We ensure this by selecting the Snap to path button in the right toolbar. Now when we're drawing the second shape, we will get a small cross and a label saying Handle to path when we're getting close to the first shape.Continue like this for the other simple shapes. The next items, #10-#12, will be about special cases; islands, enclaves and separator lines. If you don't have those, jump to #13.Islands. Start by drawing one of the islands or associated mainland like any other shape. Give it a fill. Then draw the island and give it a fill. Now select both (or all) shapes by using the Select tool and holding down the Shift key while clicking. In the Object menu, select Group (Ctrl + G). Now you can give the new group an id and a label like in #7.Enclaves are territories within another territory. Start by drawing the outer territory like any other shape. Give it a fill and label. Now in the fill and stroke dialog, set the opacity to 50% so that you can see the underlying enclave. Now you are able to draw the enclave on top.Separator lines are typically used when an offshore territory is drawn close to the mainland, and the distance is not to scale. In our sample we will move Tasmania to the west and draw a separator. Use the Bezier tool again, and draw the separator where you want it. Double click to close it. That's it. As long as you don't add a fill, the map parser will treat it as a line object.After you're finished drawing, save the file. Inkscape saves as SVG by default. Open the file in a text editor so that you see the SVG/XML markup. Select all and copy. Using a modern browser (tested with Chrome), go to highcharts.github.io/map-from-svg. In the textarea labeled "Online SVG URL or SVG markup", paste your SVG markup. Hit the Load button. Now an interactive map should display on the right.The actual map shape data is available under the "View data" link. Click it and copy the whole contents of the text area to the right. This is a JSON object containing the template for the entire series options of a new map chart, combining real area data and separator lines.Go to this link, where you can find an empty boilerplate for Highcharts Maps. Add a series configuration object and paste your data. It should now look like this demo.// Initiate the chartHighcharts.mapChart('container', {    series: /* paste your content here */});CopyNow all you have to do is add values to the points to make a useful chart. Alternatively, use the paths in the mapData option and add data separately.Good luck, and don't hesitate to contact us via our Support Page if you have any problems or corrections to this article.\n\nCreating custom mapsHighcharts Maps can be used for more than geographic data, and more than the featured maps provided in the demos. This article goes through the process of drawing your own map in Inkscape, and using our online map converter tool to construct an interactive map with data values. We use a map of Australia for demo purposes. (Do not use that in production, we have a better one in our mapdata collection).The first step is to install Inkscape on your system. This is the only tool you need to install, and it's free. Open up Inkscape, it opens a new document by default.We will use a PNG image in the background and draw actual SVG shapes on top of it. Open the PNG image in Inkscape. Inkscape ask if you want to link or embed the image, choose either of the two.In the left toolbar, select the tool called "Draw bezier curves and straight lines (Shift + F6)".Start drawing around a territory by clicking repeatedly around the perimeter. Nodes can be moved and added if you do mistakes. To start over again with a shape, select it using the "Select and transform objects (F1)" tool, and hit Delete. In the image below we have drawn the shape for Western Australia.The Highcharts Maps converter tool expects fills for areas in order to distinguish it from separators and other lines. In the lower left corner of Inkscape, it says Fill: None. Click the text None to bring up the Fill and Stroke dialog. Next to the cross depicting no fill, select the solid fill button. Pick a color.Next, we want to give the territory a name that Highcharts Maps can use for labels and identification. In the Object menu, select Object Properties (Shift + Ctrl + O). Set an id and a label. The label is used by Highcharts Maps. Remember to click the Set button, otherwise Inkscape won't apply the information.For the second territory we want to do exactly the same, but there is also another thing to consider. We want the border between the two shapes to align, so that when we zoom in we don't see borders lying close but not on top of each other. We ensure this by selecting the Snap to path button in the right toolbar. Now when we're drawing the second shape, we will get a small cross and a label saying Handle to path when we're getting close to the first shape.Continue like this for the other simple shapes. The next items, #10-#12, will be about special cases; islands, enclaves and separator lines. If you don't have those, jump to #13.Islands. Start by drawing one of the islands or associated mainland like any other shape. Give it a fill. Then draw the island and give it a fill. Now select both (or all) shapes by using the Select tool and holding down the Shift key while clicking. In the Object menu, select Group (Ctrl + G). Now you can give the new group an id and a label like in #7.Enclaves are territories within another territory. Start by drawing the outer territory like any other shape. Give it a fill and label. Now in the fill and stroke dialog, set the opacity to 50% so that you can see the underlying enclave. Now you are able to draw the enclave on top.Separator lines are typically used when an offshore territory is drawn close to the mainland, and the distance is not to scale. In our sample we will move Tasmania to the west and draw a separator. Use the Bezier tool again, and draw the separator where you want it. Double click to close it. That's it. As long as you don't add a fill, the map parser will treat it as a line object.After you're finished drawing, save the file. Inkscape saves as SVG by default. Open the file in a text editor so that you see the SVG/XML markup. Select all and copy. Using a modern browser (tested with Chrome), go to highcharts.github.io/map-from-svg. In the textarea labeled "Online SVG URL or SVG markup", paste your SVG markup. Hit the Load button. Now an interactive map should display on the right.The actual map shape data is available under the "View data" link. Click it and copy the whole contents of the text area to the right. This is a JSON object containing the template for the entire series options of a new map chart, combining real area data and separator lines.Go to this link, where you can find an empty boilerplate for Highcharts Maps. Add a series configuration object and paste your data. It should now look like this demo.// Initiate the chartHighcharts.mapChart('container', {    series: /* paste your content here */});CopyNow all you have to do is add values to the points to make a useful chart. Alternatively, use the paths in the mapData option and add data separately.Good luck, and don't hesitate to contact us via our Support Page if you have any problems or corrections to this article.Edit this pagePrevious« Map Collection NextCustom GeoJSON maps  »\n\nCreating custom mapsHighcharts Maps can be used for more than geographic data, and more than the featured maps provided in the demos. This article goes through the process of drawing your own map in Inkscape, and using our online map converter tool to construct an interactive map with data values. We use a map of Australia for demo purposes. (Do not use that in production, we have a better one in our mapdata collection).The first step is to install Inkscape on your system. This is the only tool you need to install, and it's free. Open up Inkscape, it opens a new document by default.We will use a PNG image in the background and draw actual SVG shapes on top of it. Open the PNG image in Inkscape. Inkscape ask if you want to link or embed the image, choose either of the two.In the left toolbar, select the tool called "Draw bezier curves and straight lines (Shift + F6)".Start drawing around a territory by clicking repeatedly around the perimeter. Nodes can be moved and added if you do mistakes. To start over again with a shape, select it using the "Select and transform objects (F1)" tool, and hit Delete. In the image below we have drawn the shape for Western Australia.The Highcharts Maps converter tool expects fills for areas in order to distinguish it from separators and other lines. In the lower left corner of Inkscape, it says Fill: None. Click the text None to bring up the Fill and Stroke dialog. Next to the cross depicting no fill, select the solid fill button. Pick a color.Next, we want to give the territory a name that Highcharts Maps can use for labels and identification. In the Object menu, select Object Properties (Shift + Ctrl + O). Set an id and a label. The label is used by Highcharts Maps. Remember to click the Set button, otherwise Inkscape won't apply the information.For the second territory we want to do exactly the same, but there is also another thing to consider. We want the border between the two shapes to align, so that when we zoom in we don't see borders lying close but not on top of each other. We ensure this by selecting the Snap to path button in the right toolbar. Now when we're drawing the second shape, we will get a small cross and a label saying Handle to path when we're getting close to the first shape.Continue like this for the other simple shapes. The next items, #10-#12, will be about special cases; islands, enclaves and separator lines. If you don't have those, jump to #13.Islands. Start by drawing one of the islands or associated mainland like any other shape. Give it a fill. Then draw the island and give it a fill. Now select both (or all) shapes by using the Select tool and holding down the Shift key while clicking. In the Object menu, select Group (Ctrl + G). Now you can give the new group an id and a label like in #7.Enclaves are territories within another territory. Start by drawing the outer territory like any other shape. Give it a fill and label. Now in the fill and stroke dialog, set the opacity to 50% so that you can see the underlying enclave. Now you are able to draw the enclave on top.Separator lines are typically used when an offshore territory is drawn close to the mainland, and the distance is not to scale. In our sample we will move Tasmania to the west and draw a separator. Use the Bezier tool again, and draw the separator where you want it. Double click to close it. That's it. As long as you don't add a fill, the map parser will treat it as a line object.After you're finished drawing, save the file. Inkscape saves as SVG by default. Open the file in a text editor so that you see the SVG/XML markup. Select all and copy. Using a modern browser (tested with Chrome), go to highcharts.github.io/map-from-svg. In the textarea labeled "Online SVG URL or SVG markup", paste your SVG markup. Hit the Load button. Now an interactive map should display on the right.The actual map shape data is available under the "View data" link. Click it and copy the whole contents of the text area to the right. This is a JSON object containing the template for the entire series options of a new map chart, combining real area data and separator lines.Go to this link, where you can find an empty boilerplate for Highcharts Maps. Add a series configuration object and paste your data. It should now look like this demo.// Initiate the chartHighcharts.mapChart('container', {    series: /* paste your content here */});CopyNow all you have to do is add values to the points to make a useful chart. Alternatively, use the paths in the mapData option and add data separately.Good luck, and don't hesitate to contact us via our Support Page if you have any problems or corrections to this article.Edit this pagePrevious« Map Collection NextCustom GeoJSON maps  »\n\n\n\nCustom GeoJSON mapsThis article contains information on creating maps from data in common mapping formats, as well as modifying the Highcharts Maps Map Collection. For information on drawing your own maps and creating maps from SVG, see our article on creating custom maps.We see that many users have map data in ESRI Shapefile format or other common mapping formats. These can easily be converted for use with Highcharts Maps using an editor with GeoJSON exporting capabilities, as Highcharts Maps supports the GeoJSON format natively. Most full-featured GIS editors will be able to perform this conversion. QGIS is a free alternative that supports both Shapefile, KML, and a number of other formats. See this demo for an example of how to load polygonal data from a GeoJSON file, and this demo for a more complex example with line and point data.The Highcharts Maps map collection is supplied in SVG, GeoJSON and TopoJSON formats, and can be edited using any compatible editor. Simple changes can be made using a text editor. InkScape is a free visual editor for SVG files. The map collection is also supplied as executable JavaScript files. These JavaScript files are identical to the GeoJSON files, except for a small amount of wrapping code.Please note that different coordinate systems are used in the Map Collection's TopoJSON, GeoJSON and SVG files, mainly for optimization reasons.TopoJSON files, available since Map Collection v1.1.4, are not projected, meaning coordinates are given as [longitude, latitude]. This relies on projection being done in Highcharts, which is more intuitive and allows easier navigation, re-projection, addition of points and lines etc.GeoJSON files in the Map Collection date back to when projection was not supported natively in Highcharts. The coordinates are pre-projected with the projection given in the crs property, in addition to some compression defined in hc-transform. In order to deal with longitude and latitude on the client side, the proj4.js library must be used. Since v9.3, Highcharts has built-in support for projection, so custom GeoJSON maps may dropp pre-projection.SVG files don't deal with geographic information at all. In general, these are only recommended for simple choropleth maps.Creating maps for Highcharts MapsWe will now go through the process of importing a Shapefile in QGIS and converting it for use with Highcharts Maps. The process is the same when editing the GeoJSON files from our map collection. Note that there are many ways of accomplishing this with QGIS, and that details might vary depending on program version and platform. If you have issues using QGIS, check out their extensive documentation.Once QGIS is installed, the first step is to import your data. To do this, select the "Add Vector Layer" option from the Layer menu. For demonstration purposes, we will use a dataset with USA Zip Code Tabulation Areas available from the US Census Bureau. Our goal is to create a map of the Alaskan Zip codes for use with Highcharts Maps.To extract Alaska from the dataset, choose the box-selection tool in the toolbar, and draw a rectangle around the area you want to select. Then, click "Save Selection as Vector File" in the Layer menu, and save the selected area to a new file.Now, start a new project and import the file you saved, following the same procedure as in step 1. The result should look something like this:While this looks okay, we would like to modify the data before exporting it. To get access to the more advanced features of QGIS, open the Processing Toolbox (View->Panels->Toolbox).We want to reproject our data to a projection more suitable for Alaska. To do this, open the "Reproject layer" tool in the Toolbox, found under Geoalgorithms->Vector->General tools. As target CRS (Coordinate Reference System), select "NAD27 / Alaska zone 2", EPSG code 26732. Save the result to a temporary file, and make sure to tick the "Open output file after running algorithm" box. After running the tool, you should get a new layer, somewhere out of view. To zoom in on the new layer, right click it in the table of contents, and select "Zoom to Layer Extent". If the process failed somehow, you might need to tweak your projection settings. Refer to the QGIS documentation for details. Now, we would like to simplify the geometry. The less detail we include in our map, the faster Highcharts Maps will work, and the faster your page will load. QGIS has several tools for this, but the simplest can be found in the Vector menu, under Geometry Tools. Set a tolerance of around 1000, and select a new file to save the result to. Also tick the "Add result to canvas" box. Once the process has finished, you should have a new layer with the simplified geometry.Before exporting, we might want to inspect and modify the properties of our map. To do this, right click the layer in the table of contents and select "Open Attribute Table". These attributes will be included in the GeoJSON when we export our map. Highcharts Maps was designed to be used with user defined maps, and is very flexible in the way that it handles map data. There are therefore no special requirements for metadata in the maps. When you are satisfied with your map, you need to export it to GeoJSON format in order to use it with Highcharts Maps. To export your map, right click the layer you want to export in the table of contents, and select "Save As". Make sure to select to save in GeoJSON format. The resulting file can be used directly with Highcharts Maps. You will notice that QGIS by default includes a large amount of decimals in the GeoJSON coordinates. These can be stripped using a Regex or similar, for optimization. Try using this jsFiddle tool on the resulting file contents.To quickly test your map, paste your GeoJSON into this boilerplate jsFiddle. The result should look something like this:You now have your map ready for use with Highcharts Maps.\n\nCustom GeoJSON mapsThis article contains information on creating maps from data in common mapping formats, as well as modifying the Highcharts Maps Map Collection. For information on drawing your own maps and creating maps from SVG, see our article on creating custom maps.We see that many users have map data in ESRI Shapefile format or other common mapping formats. These can easily be converted for use with Highcharts Maps using an editor with GeoJSON exporting capabilities, as Highcharts Maps supports the GeoJSON format natively. Most full-featured GIS editors will be able to perform this conversion. QGIS is a free alternative that supports both Shapefile, KML, and a number of other formats. See this demo for an example of how to load polygonal data from a GeoJSON file, and this demo for a more complex example with line and point data.The Highcharts Maps map collection is supplied in SVG, GeoJSON and TopoJSON formats, and can be edited using any compatible editor. Simple changes can be made using a text editor. InkScape is a free visual editor for SVG files. The map collection is also supplied as executable JavaScript files. These JavaScript files are identical to the GeoJSON files, except for a small amount of wrapping code.Please note that different coordinate systems are used in the Map Collection's TopoJSON, GeoJSON and SVG files, mainly for optimization reasons.TopoJSON files, available since Map Collection v1.1.4, are not projected, meaning coordinates are given as [longitude, latitude]. This relies on projection being done in Highcharts, which is more intuitive and allows easier navigation, re-projection, addition of points and lines etc.GeoJSON files in the Map Collection date back to when projection was not supported natively in Highcharts. The coordinates are pre-projected with the projection given in the crs property, in addition to some compression defined in hc-transform. In order to deal with longitude and latitude on the client side, the proj4.js library must be used. Since v9.3, Highcharts has built-in support for projection, so custom GeoJSON maps may dropp pre-projection.SVG files don't deal with geographic information at all. In general, these are only recommended for simple choropleth maps.Creating maps for Highcharts MapsWe will now go through the process of importing a Shapefile in QGIS and converting it for use with Highcharts Maps. The process is the same when editing the GeoJSON files from our map collection. Note that there are many ways of accomplishing this with QGIS, and that details might vary depending on program version and platform. If you have issues using QGIS, check out their extensive documentation.Once QGIS is installed, the first step is to import your data. To do this, select the "Add Vector Layer" option from the Layer menu. For demonstration purposes, we will use a dataset with USA Zip Code Tabulation Areas available from the US Census Bureau. Our goal is to create a map of the Alaskan Zip codes for use with Highcharts Maps.To extract Alaska from the dataset, choose the box-selection tool in the toolbar, and draw a rectangle around the area you want to select. Then, click "Save Selection as Vector File" in the Layer menu, and save the selected area to a new file.Now, start a new project and import the file you saved, following the same procedure as in step 1. The result should look something like this:While this looks okay, we would like to modify the data before exporting it. To get access to the more advanced features of QGIS, open the Processing Toolbox (View->Panels->Toolbox).We want to reproject our data to a projection more suitable for Alaska. To do this, open the "Reproject layer" tool in the Toolbox, found under Geoalgorithms->Vector->General tools. As target CRS (Coordinate Reference System), select "NAD27 / Alaska zone 2", EPSG code 26732. Save the result to a temporary file, and make sure to tick the "Open output file after running algorithm" box. After running the tool, you should get a new layer, somewhere out of view. To zoom in on the new layer, right click it in the table of contents, and select "Zoom to Layer Extent". If the process failed somehow, you might need to tweak your projection settings. Refer to the QGIS documentation for details. Now, we would like to simplify the geometry. The less detail we include in our map, the faster Highcharts Maps will work, and the faster your page will load. QGIS has several tools for this, but the simplest can be found in the Vector menu, under Geometry Tools. Set a tolerance of around 1000, and select a new file to save the result to. Also tick the "Add result to canvas" box. Once the process has finished, you should have a new layer with the simplified geometry.Before exporting, we might want to inspect and modify the properties of our map. To do this, right click the layer in the table of contents and select "Open Attribute Table". These attributes will be included in the GeoJSON when we export our map. Highcharts Maps was designed to be used with user defined maps, and is very flexible in the way that it handles map data. There are therefore no special requirements for metadata in the maps. When you are satisfied with your map, you need to export it to GeoJSON format in order to use it with Highcharts Maps. To export your map, right click the layer you want to export in the table of contents, and select "Save As". Make sure to select to save in GeoJSON format. The resulting file can be used directly with Highcharts Maps. You will notice that QGIS by default includes a large amount of decimals in the GeoJSON coordinates. These can be stripped using a Regex or similar, for optimization. Try using this jsFiddle tool on the resulting file contents.To quickly test your map, paste your GeoJSON into this boilerplate jsFiddle. The result should look something like this:You now have your map ready for use with Highcharts Maps.Edit this pagePrevious« Creating custom maps NextAdding points and lines  »Creating maps for Highcharts Maps\n\nCustom GeoJSON mapsThis article contains information on creating maps from data in common mapping formats, as well as modifying the Highcharts Maps Map Collection. For information on drawing your own maps and creating maps from SVG, see our article on creating custom maps.We see that many users have map data in ESRI Shapefile format or other common mapping formats. These can easily be converted for use with Highcharts Maps using an editor with GeoJSON exporting capabilities, as Highcharts Maps supports the GeoJSON format natively. Most full-featured GIS editors will be able to perform this conversion. QGIS is a free alternative that supports both Shapefile, KML, and a number of other formats. See this demo for an example of how to load polygonal data from a GeoJSON file, and this demo for a more complex example with line and point data.The Highcharts Maps map collection is supplied in SVG, GeoJSON and TopoJSON formats, and can be edited using any compatible editor. Simple changes can be made using a text editor. InkScape is a free visual editor for SVG files. The map collection is also supplied as executable JavaScript files. These JavaScript files are identical to the GeoJSON files, except for a small amount of wrapping code.Please note that different coordinate systems are used in the Map Collection's TopoJSON, GeoJSON and SVG files, mainly for optimization reasons.TopoJSON files, available since Map Collection v1.1.4, are not projected, meaning coordinates are given as [longitude, latitude]. This relies on projection being done in Highcharts, which is more intuitive and allows easier navigation, re-projection, addition of points and lines etc.GeoJSON files in the Map Collection date back to when projection was not supported natively in Highcharts. The coordinates are pre-projected with the projection given in the crs property, in addition to some compression defined in hc-transform. In order to deal with longitude and latitude on the client side, the proj4.js library must be used. Since v9.3, Highcharts has built-in support for projection, so custom GeoJSON maps may dropp pre-projection.SVG files don't deal with geographic information at all. In general, these are only recommended for simple choropleth maps.Creating maps for Highcharts MapsWe will now go through the process of importing a Shapefile in QGIS and converting it for use with Highcharts Maps. The process is the same when editing the GeoJSON files from our map collection. Note that there are many ways of accomplishing this with QGIS, and that details might vary depending on program version and platform. If you have issues using QGIS, check out their extensive documentation.Once QGIS is installed, the first step is to import your data. To do this, select the "Add Vector Layer" option from the Layer menu. For demonstration purposes, we will use a dataset with USA Zip Code Tabulation Areas available from the US Census Bureau. Our goal is to create a map of the Alaskan Zip codes for use with Highcharts Maps.To extract Alaska from the dataset, choose the box-selection tool in the toolbar, and draw a rectangle around the area you want to select. Then, click "Save Selection as Vector File" in the Layer menu, and save the selected area to a new file.Now, start a new project and import the file you saved, following the same procedure as in step 1. The result should look something like this:While this looks okay, we would like to modify the data before exporting it. To get access to the more advanced features of QGIS, open the Processing Toolbox (View->Panels->Toolbox).We want to reproject our data to a projection more suitable for Alaska. To do this, open the "Reproject layer" tool in the Toolbox, found under Geoalgorithms->Vector->General tools. As target CRS (Coordinate Reference System), select "NAD27 / Alaska zone 2", EPSG code 26732. Save the result to a temporary file, and make sure to tick the "Open output file after running algorithm" box. After running the tool, you should get a new layer, somewhere out of view. To zoom in on the new layer, right click it in the table of contents, and select "Zoom to Layer Extent". If the process failed somehow, you might need to tweak your projection settings. Refer to the QGIS documentation for details. Now, we would like to simplify the geometry. The less detail we include in our map, the faster Highcharts Maps will work, and the faster your page will load. QGIS has several tools for this, but the simplest can be found in the Vector menu, under Geometry Tools. Set a tolerance of around 1000, and select a new file to save the result to. Also tick the "Add result to canvas" box. Once the process has finished, you should have a new layer with the simplified geometry.Before exporting, we might want to inspect and modify the properties of our map. To do this, right click the layer in the table of contents and select "Open Attribute Table". These attributes will be included in the GeoJSON when we export our map. Highcharts Maps was designed to be used with user defined maps, and is very flexible in the way that it handles map data. There are therefore no special requirements for metadata in the maps. When you are satisfied with your map, you need to export it to GeoJSON format in order to use it with Highcharts Maps. To export your map, right click the layer you want to export in the table of contents, and select "Save As". Make sure to select to save in GeoJSON format. The resulting file can be used directly with Highcharts Maps. You will notice that QGIS by default includes a large amount of decimals in the GeoJSON coordinates. These can be stripped using a Regex or similar, for optimization. Try using this jsFiddle tool on the resulting file contents.To quickly test your map, paste your GeoJSON into this boilerplate jsFiddle. The result should look something like this:You now have your map ready for use with Highcharts Maps.Edit this pagePrevious« Creating custom maps NextAdding points and lines  »Creating maps for Highcharts Maps\n\n\n\nAdding points and linesMap points and lines are added to the map by points or arrays of longitude and latitude. Highcharts Maps since v10 uses the GeoJSON geometry definitions for defining points and linestrings:Map point definitionFor a map point data point, the shorthand point configuration is to set the lon and lat properties directly in the options.{    type: 'mappoint',    data: [{        lon: 4.90,        lat: 53.38,        name: 'Amsterdam'    }, {        lon: -118.24,        lat: 34.05,        name: 'LA'    }]}CopyThe long configuration is to add a geometry where the coordinates is a tuple of longitude and latitude, and the type is Point. The reason why Highcharts supports both forms, is that the geometry definition allows applying maps directly from GeoJSON and TopoJSON sources.{    type: 'mappoint',    data: [{        geometry: {            type: 'Point',            coordinates: [4.90, 53.38]        },        name: 'Amsterdam'    }, {        geometry: {            type: 'Point',            coordinates: [-118.24, 34.05]        },        name: 'LA'    }]}CopyMap line definitionFor map lines, add a geometry of type LineString or MultiLineString. When LineString, the coordinates should be a two-dimensional array of longitude-latitude tuples, while a MultiLineString requires a three-dimensional coordinates array.Note that, depending on the projection, a map line between two points may render as a curve. This is because Highcharts renders the geodesic, the shortest path between two points on the Earth's surface.{    type: 'mapline',    data: [{        geometry: {            type: 'LineString',            coordinates: [                [4.90, 53.38], // Amsterdam                [-118.24, 34.05] // Los Angeles            ]        }    }]}CopyDemosThe above geometry examples can be viewed live in the Projection Explorer, where the geodesic rendering is also shown. The mapline series type main demo shows how mapline geometries are loaded from a TopoJSON map source.LegacyPrior to v10, the coordinate system used in most of our maps was a custom one, where both the X and Y values ranged from 0 to some thousands. This still applies when loading GeoJSON maps rather than TopoJSON maps from the Map Collection. With the support of the proj4js library, points could be placed by the lon and lat options. Without proj4.js, points were added as x, y pairs on the same coordinate system as the map. Maplines however were given as paths.\n\nAdding points and linesMap points and lines are added to the map by points or arrays of longitude and latitude. Highcharts Maps since v10 uses the GeoJSON geometry definitions for defining points and linestrings:Map point definitionFor a map point data point, the shorthand point configuration is to set the lon and lat properties directly in the options.{    type: 'mappoint',    data: [{        lon: 4.90,        lat: 53.38,        name: 'Amsterdam'    }, {        lon: -118.24,        lat: 34.05,        name: 'LA'    }]}CopyThe long configuration is to add a geometry where the coordinates is a tuple of longitude and latitude, and the type is Point. The reason why Highcharts supports both forms, is that the geometry definition allows applying maps directly from GeoJSON and TopoJSON sources.{    type: 'mappoint',    data: [{        geometry: {            type: 'Point',            coordinates: [4.90, 53.38]        },        name: 'Amsterdam'    }, {        geometry: {            type: 'Point',            coordinates: [-118.24, 34.05]        },        name: 'LA'    }]}CopyMap line definitionFor map lines, add a geometry of type LineString or MultiLineString. When LineString, the coordinates should be a two-dimensional array of longitude-latitude tuples, while a MultiLineString requires a three-dimensional coordinates array.Note that, depending on the projection, a map line between two points may render as a curve. This is because Highcharts renders the geodesic, the shortest path between two points on the Earth's surface.{    type: 'mapline',    data: [{        geometry: {            type: 'LineString',            coordinates: [                [4.90, 53.38], // Amsterdam                [-118.24, 34.05] // Los Angeles            ]        }    }]}CopyDemosThe above geometry examples can be viewed live in the Projection Explorer, where the geodesic rendering is also shown. The mapline series type main demo shows how mapline geometries are loaded from a TopoJSON map source.LegacyPrior to v10, the coordinate system used in most of our maps was a custom one, where both the X and Y values ranged from 0 to some thousands. This still applies when loading GeoJSON maps rather than TopoJSON maps from the Map Collection. With the support of the proj4js library, points could be placed by the lon and lat options. Without proj4.js, points were added as x, y pairs on the same coordinate system as the map. Maplines however were given as paths.Edit this pagePrevious« Custom GeoJSON maps NextMap drill down  »Map point definitionMap line definitionDemosLegacy\n\nAdding points and linesMap points and lines are added to the map by points or arrays of longitude and latitude. Highcharts Maps since v10 uses the GeoJSON geometry definitions for defining points and linestrings:Map point definitionFor a map point data point, the shorthand point configuration is to set the lon and lat properties directly in the options.{    type: 'mappoint',    data: [{        lon: 4.90,        lat: 53.38,        name: 'Amsterdam'    }, {        lon: -118.24,        lat: 34.05,        name: 'LA'    }]}CopyThe long configuration is to add a geometry where the coordinates is a tuple of longitude and latitude, and the type is Point. The reason why Highcharts supports both forms, is that the geometry definition allows applying maps directly from GeoJSON and TopoJSON sources.{    type: 'mappoint',    data: [{        geometry: {            type: 'Point',            coordinates: [4.90, 53.38]        },        name: 'Amsterdam'    }, {        geometry: {            type: 'Point',            coordinates: [-118.24, 34.05]        },        name: 'LA'    }]}CopyMap line definitionFor map lines, add a geometry of type LineString or MultiLineString. When LineString, the coordinates should be a two-dimensional array of longitude-latitude tuples, while a MultiLineString requires a three-dimensional coordinates array.Note that, depending on the projection, a map line between two points may render as a curve. This is because Highcharts renders the geodesic, the shortest path between two points on the Earth's surface.{    type: 'mapline',    data: [{        geometry: {            type: 'LineString',            coordinates: [                [4.90, 53.38], // Amsterdam                [-118.24, 34.05] // Los Angeles            ]        }    }]}CopyDemosThe above geometry examples can be viewed live in the Projection Explorer, where the geodesic rendering is also shown. The mapline series type main demo shows how mapline geometries are loaded from a TopoJSON map source.LegacyPrior to v10, the coordinate system used in most of our maps was a custom one, where both the X and Y values ranged from 0 to some thousands. This still applies when loading GeoJSON maps rather than TopoJSON maps from the Map Collection. With the support of the proj4js library, points could be placed by the lon and lat options. Without proj4.js, points were added as x, y pairs on the same coordinate system as the map. Maplines however were given as paths.Edit this pagePrevious« Custom GeoJSON maps NextMap drill down  »Map point definitionMap line definitionDemosLegacy\n\n\n\nMap drill downMap drill down allows users to interactively explore hierarchical geographic data by clicking on regions to reveal more detailed maps or information. This feature enhances data visualization by letting users focus on specific areas of interest while maintaining the context of the overall dataset. Highcharts Maps' drilldown functionality provides smooth transitions, customizable animations, and supports both static and dynamic data loading for flexibility in various use cases.For full detailed documentation and more samples of the drilldown feature, see the Highcharts Maps API.For an in-depth overview of drilldown functionality, see Drill down.Map zooming and animationThe mapZooming option controls whether the map zooms into a region when drilling down into a specific point. If set to false, the drilldown and drill-up animations will only fade in and out without zooming into the selected area. By default, this feature is enabled (set to true).The following demo illustrates a basic drilldown map with static data preloaded for both the main map and drilldown levels. This setup allows for smooth transitions between regions without additional data fetching during interaction.Async setupIn most cases, maps are loaded asynchronously to optimize performance and user experience. With this setup, only the top-level map is loaded initially, and the drilldown maps are fetched dynamically when needed. This ensures that your application doesn't load unnecessary data upfront, reducing initial load times.The asynchronous drilldown process leverages event handling to load map data on demand, improving responsiveness and resource management. This is especially useful for complex or large datasets, ensuring a faster and more efficient user experience.\n\nMap drill downMap drill down allows users to interactively explore hierarchical geographic data by clicking on regions to reveal more detailed maps or information. This feature enhances data visualization by letting users focus on specific areas of interest while maintaining the context of the overall dataset. Highcharts Maps' drilldown functionality provides smooth transitions, customizable animations, and supports both static and dynamic data loading for flexibility in various use cases.For full detailed documentation and more samples of the drilldown feature, see the Highcharts Maps API.For an in-depth overview of drilldown functionality, see Drill down.Map zooming and animationThe mapZooming option controls whether the map zooms into a region when drilling down into a specific point. If set to false, the drilldown and drill-up animations will only fade in and out without zooming into the selected area. By default, this feature is enabled (set to true).The following demo illustrates a basic drilldown map with static data preloaded for both the main map and drilldown levels. This setup allows for smooth transitions between regions without additional data fetching during interaction.Async setupIn most cases, maps are loaded asynchronously to optimize performance and user experience. With this setup, only the top-level map is loaded initially, and the drilldown maps are fetched dynamically when needed. This ensures that your application doesn't load unnecessary data upfront, reducing initial load times.The asynchronous drilldown process leverages event handling to load map data on demand, improving responsiveness and resource management. This is especially useful for complex or large datasets, ensuring a faster and more efficient user experience.Edit this pagePrevious« Adding points and lines NextMap series  »Map zooming and animationAsync setup\n\nMap drill downMap drill down allows users to interactively explore hierarchical geographic data by clicking on regions to reveal more detailed maps or information. This feature enhances data visualization by letting users focus on specific areas of interest while maintaining the context of the overall dataset. Highcharts Maps' drilldown functionality provides smooth transitions, customizable animations, and supports both static and dynamic data loading for flexibility in various use cases.For full detailed documentation and more samples of the drilldown feature, see the Highcharts Maps API.For an in-depth overview of drilldown functionality, see Drill down.Map zooming and animationThe mapZooming option controls whether the map zooms into a region when drilling down into a specific point. If set to false, the drilldown and drill-up animations will only fade in and out without zooming into the selected area. By default, this feature is enabled (set to true).The following demo illustrates a basic drilldown map with static data preloaded for both the main map and drilldown levels. This setup allows for smooth transitions between regions without additional data fetching during interaction.Async setupIn most cases, maps are loaded asynchronously to optimize performance and user experience. With this setup, only the top-level map is loaded initially, and the drilldown maps are fetched dynamically when needed. This ensures that your application doesn't load unnecessary data upfront, reducing initial load times.The asynchronous drilldown process leverages event handling to load map data on demand, improving responsiveness and resource management. This is especially useful for complex or large datasets, ensuring a faster and more efficient user experience.Edit this pagePrevious« Adding points and lines NextMap series  »Map zooming and animationAsync setup\n\n\n\nMap seriesThe map series is the basic series type in Highcharts Maps. It creates a
choropleth map offering
the ability to create map shapes and visualize their values through color coding
or patterns.Initialize the constructorWhen setting the mapChart constructor, the default series type is map.
If the type option is not specified, it is inherited from chart.type.
For an overview of the map series options see the API reference.Highcharts.mapChart('container', {   ...});CopyLoad the mapHighcharts Maps loads its maps from TopoJSON or GeoJSON.
A more detailed instruction on how to work with it is written here: Load the mapAdd and join dataIn this link, you can find detailed descriptions of how to work with series.map.data, and series.joinBy.You can also find there another way of joining the data by omitting mapData and setting the path directly on the data point.\n\nMap seriesThe map series is the basic series type in Highcharts Maps. It creates a
choropleth map offering
the ability to create map shapes and visualize their values through color coding
or patterns.Initialize the constructorWhen setting the mapChart constructor, the default series type is map.
If the type option is not specified, it is inherited from chart.type.
For an overview of the map series options see the API reference.Highcharts.mapChart('container', {   ...});CopyLoad the mapHighcharts Maps loads its maps from TopoJSON or GeoJSON.
A more detailed instruction on how to work with it is written here: Load the mapAdd and join dataIn this link, you can find detailed descriptions of how to work with series.map.data, and series.joinBy.You can also find there another way of joining the data by omitting mapData and setting the path directly on the data point.Edit this pagePrevious« Map drill down NextMap line series  »Initialize the constructorLoad the mapAdd and join data\n\nMap seriesThe map series is the basic series type in Highcharts Maps. It creates a
choropleth map offering
the ability to create map shapes and visualize their values through color coding
or patterns.Initialize the constructorWhen setting the mapChart constructor, the default series type is map.
If the type option is not specified, it is inherited from chart.type.
For an overview of the map series options see the API reference.Highcharts.mapChart('container', {   ...});CopyLoad the mapHighcharts Maps loads its maps from TopoJSON or GeoJSON.
A more detailed instruction on how to work with it is written here: Load the mapAdd and join dataIn this link, you can find detailed descriptions of how to work with series.map.data, and series.joinBy.You can also find there another way of joining the data by omitting mapData and setting the path directly on the data point.Edit this pagePrevious« Map drill down NextMap line series  »Initialize the constructorLoad the mapAdd and join data\n\n\n\nMap line seriesA mapline series is a special case of the map series where the value colors are applied to the strokes rather than the fills.
It can also be used for freeform drawing of lines in the map.ConfigurationTo create a mapline series, set the series type to
mapline. More information
about data formatting and available options can be found in the
API. As you can see
in the demo above we can create a mapline series in combination with a standard
map series, then plot our shape data via the
geometry options. To achieve a better
separation between the structure and the data, it is recommended to use
mapData to define
the geometry instead of defining it on the data points themselves.The geometry object is compatible to that of a feature in GeoJSON, so features of GeoJSON can be passed directly into the data, optionally after first filtering and processing it.A more advanced demo with customized line shapes to indicate flight routes\n\nMap line seriesA mapline series is a special case of the map series where the value colors are applied to the strokes rather than the fills.
It can also be used for freeform drawing of lines in the map.ConfigurationTo create a mapline series, set the series type to
mapline. More information
about data formatting and available options can be found in the
API. As you can see
in the demo above we can create a mapline series in combination with a standard
map series, then plot our shape data via the
geometry options. To achieve a better
separation between the structure and the data, it is recommended to use
mapData to define
the geometry instead of defining it on the data points themselves.The geometry object is compatible to that of a feature in GeoJSON, so features of GeoJSON can be passed directly into the data, optionally after first filtering and processing it.A more advanced demo with customized line shapes to indicate flight routesEdit this pagePrevious« Map series NextMap point series  »ConfigurationA more advanced demo with customized line shapes to indicate flight routes\n\nMap line seriesA mapline series is a special case of the map series where the value colors are applied to the strokes rather than the fills.
It can also be used for freeform drawing of lines in the map.ConfigurationTo create a mapline series, set the series type to
mapline. More information
about data formatting and available options can be found in the
API. As you can see
in the demo above we can create a mapline series in combination with a standard
map series, then plot our shape data via the
geometry options. To achieve a better
separation between the structure and the data, it is recommended to use
mapData to define
the geometry instead of defining it on the data points themselves.The geometry object is compatible to that of a feature in GeoJSON, so features of GeoJSON can be passed directly into the data, optionally after first filtering and processing it.A more advanced demo with customized line shapes to indicate flight routesEdit this pagePrevious« Map series NextMap point series  »ConfigurationA more advanced demo with customized line shapes to indicate flight routes\n\n\n\nMap point seriesA mappoint series is a special form of scatter series where points are laid out on top of a map using lon and lat coordinates.This allows us to place a marker on a specific position determined from mappoint.data. It is useful to mark any point of interest, like cities or the location of events in new stories. We can set these positions with the values of lat and lon coordinates.It also supports setting the location as a geometry object. A geometry is directly compliant to GeoJSON feature collections and TopoJSON geometries, so that these can be used directly either as data or mapData.For generalization of dense map points, the marker-clusters module can be used. It interactively combines points into clusters which respond to zooming in and out or dynamically updating the data.API ReferenceYou can find more available options and information in the API.\n\nMap point seriesA mappoint series is a special form of scatter series where points are laid out on top of a map using lon and lat coordinates.This allows us to place a marker on a specific position determined from mappoint.data. It is useful to mark any point of interest, like cities or the location of events in new stories. We can set these positions with the values of lat and lon coordinates.It also supports setting the location as a geometry object. A geometry is directly compliant to GeoJSON feature collections and TopoJSON geometries, so that these can be used directly either as data or mapData.For generalization of dense map points, the marker-clusters module can be used. It interactively combines points into clusters which respond to zooming in and out or dynamically updating the data.API ReferenceYou can find more available options and information in the API.Edit this pagePrevious« Map line series NextTiledWebMap  »\n\nMap point seriesA mappoint series is a special form of scatter series where points are laid out on top of a map using lon and lat coordinates.This allows us to place a marker on a specific position determined from mappoint.data. It is useful to mark any point of interest, like cities or the location of events in new stories. We can set these positions with the values of lat and lon coordinates.It also supports setting the location as a geometry object. A geometry is directly compliant to GeoJSON feature collections and TopoJSON geometries, so that these can be used directly either as data or mapData.For generalization of dense map points, the marker-clusters module can be used. It interactively combines points into clusters which respond to zooming in and out or dynamically updating the data.API ReferenceYou can find more available options and information in the API.Edit this pagePrevious« Map line series NextTiledWebMap  »\n\n\n\nTiledWebMapTiled web map, in short TWM, allows users to dynamically create maps from small (most often 256x256 pixels) images called tiles, that are dynamically pulled from a third party provider's server by using a custom URL. These tiles are later joined and displayed seamlessly as a Highcharts map.ConfigurationIn order to use the tiledwebmap series as a base map, firstly import the tiledwebmap.js module.<script src="https://code.highcharts.com/maps/modules/tiledwebmap.js"></script>CopySecondly, set the series type to tiledwebmap. The tiled web map series can be considered a map layer. It does not require any data or GeoJSON geometry to run. The implementer only has to specify which provider should be used to fetch the tiles from. This series doesn’t have information about what region we want to focus at, so in most cases the implementer wants to set either mapView.center and mapView.zoom or mapView.fitToGeometry or add another series with geometry data, which will calculate the proper bounds for the map view. There are additional options such as a theme for the tiles, a subdomain for the provider’s URL and an API key if needed.Sample code:series: [{    type: 'tiledwebmap',    name: 'Basemap Tiles',    provider: {        type: 'OpenStreetMap',        theme: 'Standard',        subdomain: 'a'    }}]CopyAlternatively, you can enter your own URL template, and omit all of the aforementioned properties. The URL has to include variables for {x}, {y} and {z}/{zoom} in a given format.series: [{    type: 'tiledwebmap',    url: 'https://yourcustomprovider.com/{x}/{y}/{z}.png'}]CopyGenerally in Highcharts Maps, the series array can be thought of as layers that are stacked on top of each other, and the ordering of the layers is determined by source order and can be overridden through the index option or the zIndex option.Providers propertiesHighcharts by default supports the following tile providers: OpenStreetMap, Thunderforest, Esri, Stamen, USGS and LimaLabs. Each provider has their own themes and possible subdomains. Tiles are provided in a specific map projection, usually it is a WebMercator projection.Providers supported natively by Highcharts force map chart configuration to set an appropriate map projection. If the user sets their own projection, which is not supported, there will be a warning in the console and tiles might not load properly. Other providers can be added by using a custom URL in the provider.url property or another provider can be custom built and plugged in.Available providersOpenStreetMap  OpenStreetMap (OSM) is a free, open geographic database updated and maintained by a community of volunteers via open collaboration. URL: https://www.openstreetmap.org/  Available properties:theme: 'Standard’, ‘Hot’, ‘Mapnik’, ‘OpenTopoMap’  subdomain: ‘a’, ‘b’, ‘c’CopyThunderforest  Thunderforest is a global provider of thoughtfully-created activity maps. URL: https://www.thunderforest.com/  Available properties:theme: ‘OpenCycleMap’, ‘Transport’, ‘TransportDark’, ‘SpinalMap’, ‘Landscape’, ‘Outdoors’, ‘Pioneer’, ‘MobileAtlas’, ‘Neighbourhood’  subdomain: ‘a’, ‘b’, ‘c’CopyEsri  Esri is the global market leader in geographic information system (GIS) software, location intelligence, and mapping. URL: https://www.esri.com/  Available properties:theme: ‘WorldStreetMap’, ‘DeLorme’, ‘WorldTopoMap’, ‘WorldImagery’, ‘WorldTerrain’, ‘WorldShadedRelief’, ‘WorldPhysical’, ‘NatGeoWorldMap’, ‘WorldGrayCanvas’CopyStamen  Stamen is a San Francisco design and development studio focused on data visualization and map-making. Stamen heavily uses OpenStreetMap data in many of their map visualizations, and their developers have worked on many important tools and product offerings around OpenStreetMap.
URL: https://maps.stamen.com/  Available properties:theme: ‘Toner’, ‘TonerBackground’, ‘TonerLite’, ‘Terrain’, ‘TerrainBackground’, ‘Watercolor’  subdomain: ‘a’, ‘b’, ‘c’, ‘d’CopyUSGS  The United States Geological Survey (USGS), formerly simply known as the Geological Survey, is a scientific agency of the United States government.
URL: https://www.usgs.gov/  Available properties:theme: ‘USTopo’, ‘USImagery’, ‘USImageryTopo’CopyLimaLabs  LimaLabs provides tiles as free for any user needing < 20,000,000 tiles yearly. URL: https://maps.lima-labs.com/Available properties:    theme: ‘Standard’CopyAPI ReferenceFor an overview of the tiledwebmap series options see the API reference.\n\nTiledWebMapTiled web map, in short TWM, allows users to dynamically create maps from small (most often 256x256 pixels) images called tiles, that are dynamically pulled from a third party provider's server by using a custom URL. These tiles are later joined and displayed seamlessly as a Highcharts map.ConfigurationIn order to use the tiledwebmap series as a base map, firstly import the tiledwebmap.js module.<script src="https://code.highcharts.com/maps/modules/tiledwebmap.js"></script>CopySecondly, set the series type to tiledwebmap. The tiled web map series can be considered a map layer. It does not require any data or GeoJSON geometry to run. The implementer only has to specify which provider should be used to fetch the tiles from. This series doesn’t have information about what region we want to focus at, so in most cases the implementer wants to set either mapView.center and mapView.zoom or mapView.fitToGeometry or add another series with geometry data, which will calculate the proper bounds for the map view. There are additional options such as a theme for the tiles, a subdomain for the provider’s URL and an API key if needed.Sample code:series: [{    type: 'tiledwebmap',    name: 'Basemap Tiles',    provider: {        type: 'OpenStreetMap',        theme: 'Standard',        subdomain: 'a'    }}]CopyAlternatively, you can enter your own URL template, and omit all of the aforementioned properties. The URL has to include variables for {x}, {y} and {z}/{zoom} in a given format.series: [{    type: 'tiledwebmap',    url: 'https://yourcustomprovider.com/{x}/{y}/{z}.png'}]CopyGenerally in Highcharts Maps, the series array can be thought of as layers that are stacked on top of each other, and the ordering of the layers is determined by source order and can be overridden through the index option or the zIndex option.Providers propertiesHighcharts by default supports the following tile providers: OpenStreetMap, Thunderforest, Esri, Stamen, USGS and LimaLabs. Each provider has their own themes and possible subdomains. Tiles are provided in a specific map projection, usually it is a WebMercator projection.Providers supported natively by Highcharts force map chart configuration to set an appropriate map projection. If the user sets their own projection, which is not supported, there will be a warning in the console and tiles might not load properly. Other providers can be added by using a custom URL in the provider.url property or another provider can be custom built and plugged in.Available providersOpenStreetMap  OpenStreetMap (OSM) is a free, open geographic database updated and maintained by a community of volunteers via open collaboration. URL: https://www.openstreetmap.org/  Available properties:theme: 'Standard’, ‘Hot’, ‘Mapnik’, ‘OpenTopoMap’  subdomain: ‘a’, ‘b’, ‘c’CopyThunderforest  Thunderforest is a global provider of thoughtfully-created activity maps. URL: https://www.thunderforest.com/  Available properties:theme: ‘OpenCycleMap’, ‘Transport’, ‘TransportDark’, ‘SpinalMap’, ‘Landscape’, ‘Outdoors’, ‘Pioneer’, ‘MobileAtlas’, ‘Neighbourhood’  subdomain: ‘a’, ‘b’, ‘c’CopyEsri  Esri is the global market leader in geographic information system (GIS) software, location intelligence, and mapping. URL: https://www.esri.com/  Available properties:theme: ‘WorldStreetMap’, ‘DeLorme’, ‘WorldTopoMap’, ‘WorldImagery’, ‘WorldTerrain’, ‘WorldShadedRelief’, ‘WorldPhysical’, ‘NatGeoWorldMap’, ‘WorldGrayCanvas’CopyStamen  Stamen is a San Francisco design and development studio focused on data visualization and map-making. Stamen heavily uses OpenStreetMap data in many of their map visualizations, and their developers have worked on many important tools and product offerings around OpenStreetMap.
URL: https://maps.stamen.com/  Available properties:theme: ‘Toner’, ‘TonerBackground’, ‘TonerLite’, ‘Terrain’, ‘TerrainBackground’, ‘Watercolor’  subdomain: ‘a’, ‘b’, ‘c’, ‘d’CopyUSGS  The United States Geological Survey (USGS), formerly simply known as the Geological Survey, is a scientific agency of the United States government.
URL: https://www.usgs.gov/  Available properties:theme: ‘USTopo’, ‘USImagery’, ‘USImageryTopo’CopyLimaLabs  LimaLabs provides tiles as free for any user needing < 20,000,000 tiles yearly. URL: https://maps.lima-labs.com/Available properties:    theme: ‘Standard’CopyAPI ReferenceFor an overview of the tiledwebmap series options see the API reference.Edit this pagePrevious« Map point series NextFlow map  »ConfigurationProviders propertiesAvailable providersAPI Reference\n\nTiledWebMapTiled web map, in short TWM, allows users to dynamically create maps from small (most often 256x256 pixels) images called tiles, that are dynamically pulled from a third party provider's server by using a custom URL. These tiles are later joined and displayed seamlessly as a Highcharts map.ConfigurationIn order to use the tiledwebmap series as a base map, firstly import the tiledwebmap.js module.<script src="https://code.highcharts.com/maps/modules/tiledwebmap.js"></script>CopySecondly, set the series type to tiledwebmap. The tiled web map series can be considered a map layer. It does not require any data or GeoJSON geometry to run. The implementer only has to specify which provider should be used to fetch the tiles from. This series doesn’t have information about what region we want to focus at, so in most cases the implementer wants to set either mapView.center and mapView.zoom or mapView.fitToGeometry or add another series with geometry data, which will calculate the proper bounds for the map view. There are additional options such as a theme for the tiles, a subdomain for the provider’s URL and an API key if needed.Sample code:series: [{    type: 'tiledwebmap',    name: 'Basemap Tiles',    provider: {        type: 'OpenStreetMap',        theme: 'Standard',        subdomain: 'a'    }}]CopyAlternatively, you can enter your own URL template, and omit all of the aforementioned properties. The URL has to include variables for {x}, {y} and {z}/{zoom} in a given format.series: [{    type: 'tiledwebmap',    url: 'https://yourcustomprovider.com/{x}/{y}/{z}.png'}]CopyGenerally in Highcharts Maps, the series array can be thought of as layers that are stacked on top of each other, and the ordering of the layers is determined by source order and can be overridden through the index option or the zIndex option.Providers propertiesHighcharts by default supports the following tile providers: OpenStreetMap, Thunderforest, Esri, Stamen, USGS and LimaLabs. Each provider has their own themes and possible subdomains. Tiles are provided in a specific map projection, usually it is a WebMercator projection.Providers supported natively by Highcharts force map chart configuration to set an appropriate map projection. If the user sets their own projection, which is not supported, there will be a warning in the console and tiles might not load properly. Other providers can be added by using a custom URL in the provider.url property or another provider can be custom built and plugged in.Available providersOpenStreetMap  OpenStreetMap (OSM) is a free, open geographic database updated and maintained by a community of volunteers via open collaboration. URL: https://www.openstreetmap.org/  Available properties:theme: 'Standard’, ‘Hot’, ‘Mapnik’, ‘OpenTopoMap’  subdomain: ‘a’, ‘b’, ‘c’CopyThunderforest  Thunderforest is a global provider of thoughtfully-created activity maps. URL: https://www.thunderforest.com/  Available properties:theme: ‘OpenCycleMap’, ‘Transport’, ‘TransportDark’, ‘SpinalMap’, ‘Landscape’, ‘Outdoors’, ‘Pioneer’, ‘MobileAtlas’, ‘Neighbourhood’  subdomain: ‘a’, ‘b’, ‘c’CopyEsri  Esri is the global market leader in geographic information system (GIS) software, location intelligence, and mapping. URL: https://www.esri.com/  Available properties:theme: ‘WorldStreetMap’, ‘DeLorme’, ‘WorldTopoMap’, ‘WorldImagery’, ‘WorldTerrain’, ‘WorldShadedRelief’, ‘WorldPhysical’, ‘NatGeoWorldMap’, ‘WorldGrayCanvas’CopyStamen  Stamen is a San Francisco design and development studio focused on data visualization and map-making. Stamen heavily uses OpenStreetMap data in many of their map visualizations, and their developers have worked on many important tools and product offerings around OpenStreetMap.
URL: https://maps.stamen.com/  Available properties:theme: ‘Toner’, ‘TonerBackground’, ‘TonerLite’, ‘Terrain’, ‘TerrainBackground’, ‘Watercolor’  subdomain: ‘a’, ‘b’, ‘c’, ‘d’CopyUSGS  The United States Geological Survey (USGS), formerly simply known as the Geological Survey, is a scientific agency of the United States government.
URL: https://www.usgs.gov/  Available properties:theme: ‘USTopo’, ‘USImagery’, ‘USImageryTopo’CopyLimaLabs  LimaLabs provides tiles as free for any user needing < 20,000,000 tiles yearly. URL: https://maps.lima-labs.com/Available properties:    theme: ‘Standard’CopyAPI ReferenceFor an overview of the tiledwebmap series options see the API reference.Edit this pagePrevious« Map point series NextFlow map  »ConfigurationProviders propertiesAvailable providersAPI Reference\n\n\n\nFlow mapA flow map is a series type that allows to display route paths (e.g. flights or ships routes) or flows (e.g. import/export between regions) on a map.Setting the Flow Map SeriesIn the above example, our map data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen you can add the mappoint series which will be the base series responsible for connecting the flowmap to specific map points (nodes):series: [{    type: 'mappoint',    name: 'Cities',    data: [{          id: 'Oslo',          lat: 60.1975501,          lon: 11.1004152,        }, {          id: 'Warszawa',          lat: 52.169192,          lon: 20.973514        },        ...    ],    ...}]CopyThe last step is to add our flow map series configuration with series.type set to 'flowmap'. If you choose to use the data points from mappoint series, they will be connected by their id, otherwise simple [longitude, latitude] coordinates can be used for the end points. The important options that you may notice in the example below are curveFactor and markerEnd:series: [{    type: 'flowmap',    name: 'Flowmap with mappoint series',    data: [{        from: 'Warszawa',        to: 'Oslo',        curveFactor: 0.4,        weight: 5,        growTorwards: true,        markerEnd: {            enabled: true,            height: 15,            width: 10        }        ...    }],    ...}]CopyAlternatively, you can omit the creation of mappoint series, and create the flows directly with [longitude, latitude] coordinates specified in from/to properties.series: [{    type: 'flowmap',    name: 'Flowmap with lon/lat coordinates',    data: [        {            from: [52.2662, 20.9969],            to: [59.9170, 10.7511]        },        ...    ],    ...}]CopyAPI ReferenceFor an overview of the flowmap map series options see the API reference.\n\nFlow mapA flow map is a series type that allows to display route paths (e.g. flights or ships routes) or flows (e.g. import/export between regions) on a map.Setting the Flow Map SeriesIn the above example, our map data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen you can add the mappoint series which will be the base series responsible for connecting the flowmap to specific map points (nodes):series: [{    type: 'mappoint',    name: 'Cities',    data: [{          id: 'Oslo',          lat: 60.1975501,          lon: 11.1004152,        }, {          id: 'Warszawa',          lat: 52.169192,          lon: 20.973514        },        ...    ],    ...}]CopyThe last step is to add our flow map series configuration with series.type set to 'flowmap'. If you choose to use the data points from mappoint series, they will be connected by their id, otherwise simple [longitude, latitude] coordinates can be used for the end points. The important options that you may notice in the example below are curveFactor and markerEnd:series: [{    type: 'flowmap',    name: 'Flowmap with mappoint series',    data: [{        from: 'Warszawa',        to: 'Oslo',        curveFactor: 0.4,        weight: 5,        growTorwards: true,        markerEnd: {            enabled: true,            height: 15,            width: 10        }        ...    }],    ...}]CopyAlternatively, you can omit the creation of mappoint series, and create the flows directly with [longitude, latitude] coordinates specified in from/to properties.series: [{    type: 'flowmap',    name: 'Flowmap with lon/lat coordinates',    data: [        {            from: [52.2662, 20.9969],            to: [59.9170, 10.7511]        },        ...    ],    ...}]CopyAPI ReferenceFor an overview of the flowmap map series options see the API reference.Edit this pagePrevious« TiledWebMap NextMap Bubble  »Setting the Flow Map SeriesAPI Reference\n\nFlow mapA flow map is a series type that allows to display route paths (e.g. flights or ships routes) or flows (e.g. import/export between regions) on a map.Setting the Flow Map SeriesIn the above example, our map data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen you can add the mappoint series which will be the base series responsible for connecting the flowmap to specific map points (nodes):series: [{    type: 'mappoint',    name: 'Cities',    data: [{          id: 'Oslo',          lat: 60.1975501,          lon: 11.1004152,        }, {          id: 'Warszawa',          lat: 52.169192,          lon: 20.973514        },        ...    ],    ...}]CopyThe last step is to add our flow map series configuration with series.type set to 'flowmap'. If you choose to use the data points from mappoint series, they will be connected by their id, otherwise simple [longitude, latitude] coordinates can be used for the end points. The important options that you may notice in the example below are curveFactor and markerEnd:series: [{    type: 'flowmap',    name: 'Flowmap with mappoint series',    data: [{        from: 'Warszawa',        to: 'Oslo',        curveFactor: 0.4,        weight: 5,        growTorwards: true,        markerEnd: {            enabled: true,            height: 15,            width: 10        }        ...    }],    ...}]CopyAlternatively, you can omit the creation of mappoint series, and create the flows directly with [longitude, latitude] coordinates specified in from/to properties.series: [{    type: 'flowmap',    name: 'Flowmap with lon/lat coordinates',    data: [        {            from: [52.2662, 20.9969],            to: [59.9170, 10.7511]        },        ...    ],    ...}]CopyAPI ReferenceFor an overview of the flowmap map series options see the API reference.Edit this pagePrevious« TiledWebMap NextMap Bubble  »Setting the Flow Map SeriesAPI Reference\n\n\n\nMap BubbleThe MapBubble series is a combination of the standard bubble chart and map, where each bubble point is displayed over a specific map point shape.Setting the Map Bubble SeriesIn the above example, our mapbubble data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen we can add our mapbubble series config. The series.type has to be set to 'mapbubble' and the data can be mapped to our main map by the series.joinBy property:series: [{    type: 'mapbubble',    name: 'Population 2016',    joinBy: ['iso-a3', 'code3'],    data: [        { code3: 'ABW', z: 105, code: 'AW' },        { code3: 'AFG', z: 34656, code: 'AF' },        ...    ],    ...}]CopyAll other information about bubble options can be found in the standard bubble chart documentation.API ReferenceFor an overview of the mapbubble series options see the API reference.\n\nMap BubbleThe MapBubble series is a combination of the standard bubble chart and map, where each bubble point is displayed over a specific map point shape.Setting the Map Bubble SeriesIn the above example, our mapbubble data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen we can add our mapbubble series config. The series.type has to be set to 'mapbubble' and the data can be mapped to our main map by the series.joinBy property:series: [{    type: 'mapbubble',    name: 'Population 2016',    joinBy: ['iso-a3', 'code3'],    data: [        { code3: 'ABW', z: 105, code: 'AW' },        { code3: 'AFG', z: 34656, code: 'AF' },        ...    ],    ...}]CopyAll other information about bubble options can be found in the standard bubble chart documentation.API ReferenceFor an overview of the mapbubble series options see the API reference.Edit this pagePrevious« Flow map NextMarker clusters  »Setting the Map Bubble SeriesAPI Reference\n\nMap BubbleThe MapBubble series is a combination of the standard bubble chart and map, where each bubble point is displayed over a specific map point shape.Setting the Map Bubble SeriesIn the above example, our mapbubble data is based on regions, so we need to load and add a base map first:const topology = await fetch(    'https://code.highcharts.com/mapdata/custom/world.topo.json').then(response => response.json());Copychart: {    map: topology}CopyThen we can add our mapbubble series config. The series.type has to be set to 'mapbubble' and the data can be mapped to our main map by the series.joinBy property:series: [{    type: 'mapbubble',    name: 'Population 2016',    joinBy: ['iso-a3', 'code3'],    data: [        { code3: 'ABW', z: 105, code: 'AW' },        { code3: 'AFG', z: 34656, code: 'AF' },        ...    ],    ...}]CopyAll other information about bubble options can be found in the standard bubble chart documentation.API ReferenceFor an overview of the mapbubble series options see the API reference.Edit this pagePrevious« Flow map NextMarker clusters  »Setting the Map Bubble SeriesAPI Reference\n\n\n\nMarker clustersIntroductionMarker clusters is the concept of sampling the data values into larger blocks in order to ease readability and increase performance. It is a simple solution to display a large number of map points on a map. The number label on a cluster graphic shows how many data points it represents. As you zoom into the map the individual points will start to show, and the cluster will contain fewer markers.The marker-clusters module supports mappoint and scatter series types.Map demoMap demo with optimalized K-Means algorithmInstallationRequires modules/marker-clusters.js. To display marker clusters, set series.cluster.enabled to true.API documentationFor more details and options check the marker-clusters in Highcharts article and the API documentation.\n\nMarker clustersIntroductionMarker clusters is the concept of sampling the data values into larger blocks in order to ease readability and increase performance. It is a simple solution to display a large number of map points on a map. The number label on a cluster graphic shows how many data points it represents. As you zoom into the map the individual points will start to show, and the cluster will contain fewer markers.The marker-clusters module supports mappoint and scatter series types.Map demoMap demo with optimalized K-Means algorithmInstallationRequires modules/marker-clusters.js. To display marker clusters, set series.cluster.enabled to true.API documentationFor more details and options check the marker-clusters in Highcharts article and the API documentation.Edit this pagePrevious« Map Bubble NextTilemaps  »IntroductionInstallationAPI documentation\n\nMarker clustersIntroductionMarker clusters is the concept of sampling the data values into larger blocks in order to ease readability and increase performance. It is a simple solution to display a large number of map points on a map. The number label on a cluster graphic shows how many data points it represents. As you zoom into the map the individual points will start to show, and the cluster will contain fewer markers.The marker-clusters module supports mappoint and scatter series types.Map demoMap demo with optimalized K-Means algorithmInstallationRequires modules/marker-clusters.js. To display marker clusters, set series.cluster.enabled to true.API documentationFor more details and options check the marker-clusters in Highcharts article and the API documentation.Edit this pagePrevious« Map Bubble NextTilemaps  »IntroductionInstallationAPI documentation\n\n\n\nTilemapsTilemaps are maps where each area is represented by tiles of equal shape. Highcharts Maps supports four different tilemap types: Circlemap, Diamondmap, Honeycomb, and Squaremap, each with a different tile shape.For more detailed samples and documentation check the API.Honeycomb mapsHoneycomb maps use offset hexagonal tiles in a honeycomb pattern. This is the default tilemap type.Click here to check the code.CirclemapsCirclemaps use offset circular tiles.Click here to check the code.DiamondmapsDiamondmaps use offset rhombus tiles in a diamond weave pattern.Click here to check the code.SquaremapsSquare tilemaps are just Heatmap series with slightly different default values. Heatmaps are covered in detail in our Heatmap series article.How to create a tilemapTilemaps require the following module modules/tilemap.js with Highcharts Maps only. Add also this module modules/heatmap.js in case of using Highcharts.Use the series.tileShape option to switch between the different tile shapes. Currently, four shapes are supported “circle”, “diamond”, “hexagon”and “square”. The default shape is “hexagon”.Data structureThe data structure is the same for all tilemap types. x and y properties set the position of the tile on the grid, and value sets the value of the tile for use with a colorAxis. For more options see the series document. Note that for hexagon, circle and diamond tile shapes, the grid is offset with coordinates as follows:Click here to check the code.TipsThe orientation of tilemaps can be inverted by using the chart.inverted option. For more control over offset tile positioning, also see the xAxis.reversed and yAxis.reversed options.Click here to check the code.The spacing between points in tilemaps can be controlled with the series.pointPadding option. Point padding can also be set per point.Click here to check the code.\n\nTilemapsTilemaps are maps where each area is represented by tiles of equal shape. Highcharts Maps supports four different tilemap types: Circlemap, Diamondmap, Honeycomb, and Squaremap, each with a different tile shape.For more detailed samples and documentation check the API.Honeycomb mapsHoneycomb maps use offset hexagonal tiles in a honeycomb pattern. This is the default tilemap type.Click here to check the code.CirclemapsCirclemaps use offset circular tiles.Click here to check the code.DiamondmapsDiamondmaps use offset rhombus tiles in a diamond weave pattern.Click here to check the code.SquaremapsSquare tilemaps are just Heatmap series with slightly different default values. Heatmaps are covered in detail in our Heatmap series article.How to create a tilemapTilemaps require the following module modules/tilemap.js with Highcharts Maps only. Add also this module modules/heatmap.js in case of using Highcharts.Use the series.tileShape option to switch between the different tile shapes. Currently, four shapes are supported “circle”, “diamond”, “hexagon”and “square”. The default shape is “hexagon”.Data structureThe data structure is the same for all tilemap types. x and y properties set the position of the tile on the grid, and value sets the value of the tile for use with a colorAxis. For more options see the series document. Note that for hexagon, circle and diamond tile shapes, the grid is offset with coordinates as follows:Click here to check the code.TipsThe orientation of tilemaps can be inverted by using the chart.inverted option. For more control over offset tile positioning, also see the xAxis.reversed and yAxis.reversed options.Click here to check the code.The spacing between points in tilemaps can be controlled with the series.pointPadding option. Point padding can also be set per point.Click here to check the code.Edit this pagePrevious« Marker clusters NextGeoHeatMap Series  »Honeycomb mapsCirclemapsDiamondmapsSquaremapsHow to create a tilemapData structureTips\n\nTilemapsTilemaps are maps where each area is represented by tiles of equal shape. Highcharts Maps supports four different tilemap types: Circlemap, Diamondmap, Honeycomb, and Squaremap, each with a different tile shape.For more detailed samples and documentation check the API.Honeycomb mapsHoneycomb maps use offset hexagonal tiles in a honeycomb pattern. This is the default tilemap type.Click here to check the code.CirclemapsCirclemaps use offset circular tiles.Click here to check the code.DiamondmapsDiamondmaps use offset rhombus tiles in a diamond weave pattern.Click here to check the code.SquaremapsSquare tilemaps are just Heatmap series with slightly different default values. Heatmaps are covered in detail in our Heatmap series article.How to create a tilemapTilemaps require the following module modules/tilemap.js with Highcharts Maps only. Add also this module modules/heatmap.js in case of using Highcharts.Use the series.tileShape option to switch between the different tile shapes. Currently, four shapes are supported “circle”, “diamond”, “hexagon”and “square”. The default shape is “hexagon”.Data structureThe data structure is the same for all tilemap types. x and y properties set the position of the tile on the grid, and value sets the value of the tile for use with a colorAxis. For more options see the series document. Note that for hexagon, circle and diamond tile shapes, the grid is offset with coordinates as follows:Click here to check the code.TipsThe orientation of tilemaps can be inverted by using the chart.inverted option. For more control over offset tile positioning, also see the xAxis.reversed and yAxis.reversed options.Click here to check the code.The spacing between points in tilemaps can be controlled with the series.pointPadding option. Point padding can also be set per point.Click here to check the code.Edit this pagePrevious« Marker clusters NextGeoHeatMap Series  »Honeycomb mapsCirclemapsDiamondmapsSquaremapsHow to create a tilemapData structureTips\n\n\n\nGeoHeatMap SeriesA GeoHeatMap series is a graphical representation of data on different map projections where the individual values contained in a matrix are represented as colors.GeoHeatMap similar to regular HeatMap is commonly used to visualize hot spots within data sets and to show patterns or correlations. In the GeoHeatmap, the matrix represents geographic coordinates. Due to their compact nature, they are often used with large sets of data.Setting Up The GeoHeatMap SeriesGeoHeatMap requires the modules/geoheatmap.js file to be loaded.The GeoHeatMap series is defined by setting the type to geoheatmap. In GeoHeatMap the definitions of the point, take three values, lon, lat as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers. To determine the size of the grid, we use colsize and rowsize, respecting the longitude and latitude - how many units each GeoHeatMap point should span.series: [{    type: 'geoheatmap',    data: [{        lon: 10,        lat: 50,        value: 5    }],    colsize: 10,    rowsize: 10}]CopyThe color axisGeoHeatMap series borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for details.InterpolationGeoHeatMap series have an interpolation feature, which allows for displaying seamlessly transitioning data points.ResourcesSee geoheatmap in the Highcharts Maps docs.\n\nGeoHeatMap SeriesA GeoHeatMap series is a graphical representation of data on different map projections where the individual values contained in a matrix are represented as colors.GeoHeatMap similar to regular HeatMap is commonly used to visualize hot spots within data sets and to show patterns or correlations. In the GeoHeatmap, the matrix represents geographic coordinates. Due to their compact nature, they are often used with large sets of data.Setting Up The GeoHeatMap SeriesGeoHeatMap requires the modules/geoheatmap.js file to be loaded.The GeoHeatMap series is defined by setting the type to geoheatmap. In GeoHeatMap the definitions of the point, take three values, lon, lat as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers. To determine the size of the grid, we use colsize and rowsize, respecting the longitude and latitude - how many units each GeoHeatMap point should span.series: [{    type: 'geoheatmap',    data: [{        lon: 10,        lat: 50,        value: 5    }],    colsize: 10,    rowsize: 10}]CopyThe color axisGeoHeatMap series borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for details.InterpolationGeoHeatMap series have an interpolation feature, which allows for displaying seamlessly transitioning data points.ResourcesSee geoheatmap in the Highcharts Maps docs.Edit this pagePrevious« Tilemaps NextGetting started with Gantt  »Setting Up The GeoHeatMap SeriesThe color axisInterpolationResources\n\nGeoHeatMap SeriesA GeoHeatMap series is a graphical representation of data on different map projections where the individual values contained in a matrix are represented as colors.GeoHeatMap similar to regular HeatMap is commonly used to visualize hot spots within data sets and to show patterns or correlations. In the GeoHeatmap, the matrix represents geographic coordinates. Due to their compact nature, they are often used with large sets of data.Setting Up The GeoHeatMap SeriesGeoHeatMap requires the modules/geoheatmap.js file to be loaded.The GeoHeatMap series is defined by setting the type to geoheatmap. In GeoHeatMap the definitions of the point, take three values, lon, lat as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers. To determine the size of the grid, we use colsize and rowsize, respecting the longitude and latitude - how many units each GeoHeatMap point should span.series: [{    type: 'geoheatmap',    data: [{        lon: 10,        lat: 50,        value: 5    }],    colsize: 10,    rowsize: 10}]CopyThe color axisGeoHeatMap series borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for details.InterpolationGeoHeatMap series have an interpolation feature, which allows for displaying seamlessly transitioning data points.ResourcesSee geoheatmap in the Highcharts Maps docs.Edit this pagePrevious« Tilemaps NextGetting started with Gantt  »Setting Up The GeoHeatMap SeriesThe color axisInterpolationResources\n\n\n\nGetting started with GanttGantt chart visualizes the work breakdown structure for projects. It illustrates the time intervals of the project tasks and their dependencies. The breakdown of the project is described in tasks which are listed on the vertical axis where the duration of the tasks is offset against the horizontal axis.Find demos of Gantt charts here to quickly get an overview of Highcharts Gantt’s capabilities.Get startedLoad Highcharts Gantt as a standalone library when there is no need for other Highcharts dependencies.Example of loading Highcharts Gantt into a webpage<script src="https://code.highcharts.com/gantt/highcharts-gantt.js"></script>CopyLoad Highcharts Gantt as a module when a project needs both Highcharts and Gantt loaded at the same time. Place the script tag or import statement after loading the main library, Highcharts or Highcharts Stock.Example of loading both libraries in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/gantt/modules/gantt.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Gantt follows the same patterns as described for Highcharts.ConstructorRun the ganttChart constructor for initializing a Gantt chart visualization. The constructor takes two required parameters and a third optional parameter.Highcharts.ganttChart('container', {    title: { .. },    // other configuration options}, myCallback);Copyid: The id of the HTML element used for rendering the chart.config: An object with configuration options for defining the Gantt chart.callback: Optional, a callback for getting a handle on the chart, after rendering.See also explained here in Gantt APISimple exampleSee below the simple live example of a Gantt chart\n\nGetting started with GanttGantt chart visualizes the work breakdown structure for projects. It illustrates the time intervals of the project tasks and their dependencies. The breakdown of the project is described in tasks which are listed on the vertical axis where the duration of the tasks is offset against the horizontal axis.Find demos of Gantt charts here to quickly get an overview of Highcharts Gantt’s capabilities.Get startedLoad Highcharts Gantt as a standalone library when there is no need for other Highcharts dependencies.Example of loading Highcharts Gantt into a webpage<script src="https://code.highcharts.com/gantt/highcharts-gantt.js"></script>CopyLoad Highcharts Gantt as a module when a project needs both Highcharts and Gantt loaded at the same time. Place the script tag or import statement after loading the main library, Highcharts or Highcharts Stock.Example of loading both libraries in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/gantt/modules/gantt.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Gantt follows the same patterns as described for Highcharts.ConstructorRun the ganttChart constructor for initializing a Gantt chart visualization. The constructor takes two required parameters and a third optional parameter.Highcharts.ganttChart('container', {    title: { .. },    // other configuration options}, myCallback);Copyid: The id of the HTML element used for rendering the chart.config: An object with configuration options for defining the Gantt chart.callback: Optional, a callback for getting a handle on the chart, after rendering.See also explained here in Gantt APISimple exampleSee below the simple live example of a Gantt chartEdit this pagePrevious« GeoHeatMap Series NextGrouping tasks in a hierarchy  »Get startedConstructorSimple example\n\nGetting started with GanttGantt chart visualizes the work breakdown structure for projects. It illustrates the time intervals of the project tasks and their dependencies. The breakdown of the project is described in tasks which are listed on the vertical axis where the duration of the tasks is offset against the horizontal axis.Find demos of Gantt charts here to quickly get an overview of Highcharts Gantt’s capabilities.Get startedLoad Highcharts Gantt as a standalone library when there is no need for other Highcharts dependencies.Example of loading Highcharts Gantt into a webpage<script src="https://code.highcharts.com/gantt/highcharts-gantt.js"></script>CopyLoad Highcharts Gantt as a module when a project needs both Highcharts and Gantt loaded at the same time. Place the script tag or import statement after loading the main library, Highcharts or Highcharts Stock.Example of loading both libraries in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/gantt/modules/gantt.js"></script>CopyFor alternative loading and bundling patterns, for UMD, AMD, CommonJS or ES6 modules, find more information here. Highcharts Gantt follows the same patterns as described for Highcharts.ConstructorRun the ganttChart constructor for initializing a Gantt chart visualization. The constructor takes two required parameters and a third optional parameter.Highcharts.ganttChart('container', {    title: { .. },    // other configuration options}, myCallback);Copyid: The id of the HTML element used for rendering the chart.config: An object with configuration options for defining the Gantt chart.callback: Optional, a callback for getting a handle on the chart, after rendering.See also explained here in Gantt APISimple exampleSee below the simple live example of a Gantt chartEdit this pagePrevious« GeoHeatMap Series NextGrouping tasks in a hierarchy  »Get startedConstructorSimple example\n\n\n\nGrouping tasks in a hierarchySplit bigger tasks up in subtasks or group resources together if they belong to the same parent task. Use the parent property of a data point (i.e. the sub task) which value points to the id of the parent task. The duration of the parent task will then span all sub tasks.Example of defining subtasks and grouping them with one parent task.Gantt charts have a vertical axis of type treegrid by default. Notice in the above example how that results automatically in collapsable subtasks. Set the parent task's data point with collapsed: true to render the task collapsed from the start.Group tasks verticallyFor grouping tasks in a Gantt chart on horizontal tracks, use a vertical category axis. This type of Gantt chart is often used to visualize resource allocation or availability schedules.Code example for setting a category axisyAxis: {    categories: ['Resource 1', 'Resource 2', 'Resource 3']  }CopySee example below for grouping tasks vertically in horizontal tracks\n\nGrouping tasks in a hierarchySplit bigger tasks up in subtasks or group resources together if they belong to the same parent task. Use the parent property of a data point (i.e. the sub task) which value points to the id of the parent task. The duration of the parent task will then span all sub tasks.Example of defining subtasks and grouping them with one parent task.Gantt charts have a vertical axis of type treegrid by default. Notice in the above example how that results automatically in collapsable subtasks. Set the parent task's data point with collapsed: true to render the task collapsed from the start.Group tasks verticallyFor grouping tasks in a Gantt chart on horizontal tracks, use a vertical category axis. This type of Gantt chart is often used to visualize resource allocation or availability schedules.Code example for setting a category axisyAxis: {    categories: ['Resource 1', 'Resource 2', 'Resource 3']  }CopySee example below for grouping tasks vertically in horizontal tracksEdit this pagePrevious« Getting started with Gantt NextDependencies between tasks  »Group tasks vertically\n\nGrouping tasks in a hierarchySplit bigger tasks up in subtasks or group resources together if they belong to the same parent task. Use the parent property of a data point (i.e. the sub task) which value points to the id of the parent task. The duration of the parent task will then span all sub tasks.Example of defining subtasks and grouping them with one parent task.Gantt charts have a vertical axis of type treegrid by default. Notice in the above example how that results automatically in collapsable subtasks. Set the parent task's data point with collapsed: true to render the task collapsed from the start.Group tasks verticallyFor grouping tasks in a Gantt chart on horizontal tracks, use a vertical category axis. This type of Gantt chart is often used to visualize resource allocation or availability schedules.Code example for setting a category axisyAxis: {    categories: ['Resource 1', 'Resource 2', 'Resource 3']  }CopySee example below for grouping tasks vertically in horizontal tracksEdit this pagePrevious« Getting started with Gantt NextDependencies between tasks  »Group tasks vertically\n\n\n\nDependencies between tasksVisualizing the work breakdown structure of a project involves also describing the dependencies between tasks. They indicate when a task should start or end. Highcharts Gantt uses the dependency property on the data point for determining relations between dependant tasks and draws arrows between them. Note that the dependency property also takes an Array<String|Object> in case of multiple dependencies.Code example of defining dependenciesCustomize dependency connectorsThe default for drawing dependencies between tasks in Highcharts Gantt is with arrows. The connectors are customizable through the object specified for the pathfinder property. Configure here for example other type of start- or end markers instead of arrows, change the line color or the dash pattern of the connector. How the connector path is drawn from task to task is determined by algorithm specified for the pathfinder.type option. The default algorithm of Highcharts Gantt, is simpleConnect, which finds a path between tasks using right angles only. Other available algorithms are straight and fastAvoid. It is possible to define custom algorithms by adding them to the Highcharts.Pathfinder.prototype.algorithms object after the chart has been created.The pathfinder property is also available on data series, see series.pathfinder. This allows for specifying custom connectors per data series.See code example for configuring dependenciesA single dependency is composed by setting the dependency property on a data point (task) to an object. This object has defined pathfinder options allowing for configuration of a singular dependencySee example below, where the color and endmarker are defined on the successor task\n\nDependencies between tasksVisualizing the work breakdown structure of a project involves also describing the dependencies between tasks. They indicate when a task should start or end. Highcharts Gantt uses the dependency property on the data point for determining relations between dependant tasks and draws arrows between them. Note that the dependency property also takes an Array<String|Object> in case of multiple dependencies.Code example of defining dependenciesCustomize dependency connectorsThe default for drawing dependencies between tasks in Highcharts Gantt is with arrows. The connectors are customizable through the object specified for the pathfinder property. Configure here for example other type of start- or end markers instead of arrows, change the line color or the dash pattern of the connector. How the connector path is drawn from task to task is determined by algorithm specified for the pathfinder.type option. The default algorithm of Highcharts Gantt, is simpleConnect, which finds a path between tasks using right angles only. Other available algorithms are straight and fastAvoid. It is possible to define custom algorithms by adding them to the Highcharts.Pathfinder.prototype.algorithms object after the chart has been created.The pathfinder property is also available on data series, see series.pathfinder. This allows for specifying custom connectors per data series.See code example for configuring dependenciesA single dependency is composed by setting the dependency property on a data point (task) to an object. This object has defined pathfinder options allowing for configuration of a singular dependencySee example below, where the color and endmarker are defined on the successor taskEdit this pagePrevious« Grouping tasks in a hierarchy NextGantt axis grid  »Customize dependency connectors\n\nDependencies between tasksVisualizing the work breakdown structure of a project involves also describing the dependencies between tasks. They indicate when a task should start or end. Highcharts Gantt uses the dependency property on the data point for determining relations between dependant tasks and draws arrows between them. Note that the dependency property also takes an Array<String|Object> in case of multiple dependencies.Code example of defining dependenciesCustomize dependency connectorsThe default for drawing dependencies between tasks in Highcharts Gantt is with arrows. The connectors are customizable through the object specified for the pathfinder property. Configure here for example other type of start- or end markers instead of arrows, change the line color or the dash pattern of the connector. How the connector path is drawn from task to task is determined by algorithm specified for the pathfinder.type option. The default algorithm of Highcharts Gantt, is simpleConnect, which finds a path between tasks using right angles only. Other available algorithms are straight and fastAvoid. It is possible to define custom algorithms by adding them to the Highcharts.Pathfinder.prototype.algorithms object after the chart has been created.The pathfinder property is also available on data series, see series.pathfinder. This allows for specifying custom connectors per data series.See code example for configuring dependenciesA single dependency is composed by setting the dependency property on a data point (task) to an object. This object has defined pathfinder options allowing for configuration of a singular dependencySee example below, where the color and endmarker are defined on the successor taskEdit this pagePrevious« Grouping tasks in a hierarchy NextGantt axis grid  »Customize dependency connectors\n\n\n\nGantt axis gridBoth vertical and horizontal axis of a Gantt Chart are rendered with the Axis.grid option enabled by default, which turns axis ticks into table cells.Horizontal axisThe default settings for Gantt renders a dual datetime horizontal axis on the top of the chart. The tickInterval for the bottom horizontal axis is automatically determined, by the distribution of the series data points and available screen size. Respectively, the top axis is then assigned a higher date time interval. E.g. days-week, weeks-months, months-years. This logic is helpful when displaying Gantt charts on different devices. Highcharts Gantt automatically adapts and finds the right distribution of axis ticks based upon the screen size available.Test the automatic date interval logic of the horizontal axis in the below example, by dragging the navigators handlebars.If the min and maximum width of the chart is set, there is more control over the number of ticks displayed in the Gantt chart. This would allow for further customization of the labels and tickInterval properties on axis.See example below for setting tickIntervals per Axis grid.xAxis: [{    labels: {      format: '{value:%w}' // day of the week    },    grid: { // default setting      enabled: true    }    tickInterval: 1000 * 60 * 60 * 24, // Day  }, {    labels: {      format: '{value:%W}'    },    tickInterval: 1000 * 60 * 60 * 24 * 7 // week  }],CopySee live code example for setting tickInterval per Axis gridVertical AxisIn a Gantt chart it is common to display a table on the left side of the chart to display task information, like task name, assignee and duration. The tasks will be lined up and mapped to the table after setting the point.y value for each data point (task).Example of defining a table along the vertical axis with Axis.grid option\n\nGantt axis gridBoth vertical and horizontal axis of a Gantt Chart are rendered with the Axis.grid option enabled by default, which turns axis ticks into table cells.Horizontal axisThe default settings for Gantt renders a dual datetime horizontal axis on the top of the chart. The tickInterval for the bottom horizontal axis is automatically determined, by the distribution of the series data points and available screen size. Respectively, the top axis is then assigned a higher date time interval. E.g. days-week, weeks-months, months-years. This logic is helpful when displaying Gantt charts on different devices. Highcharts Gantt automatically adapts and finds the right distribution of axis ticks based upon the screen size available.Test the automatic date interval logic of the horizontal axis in the below example, by dragging the navigators handlebars.If the min and maximum width of the chart is set, there is more control over the number of ticks displayed in the Gantt chart. This would allow for further customization of the labels and tickInterval properties on axis.See example below for setting tickIntervals per Axis grid.xAxis: [{    labels: {      format: '{value:%w}' // day of the week    },    grid: { // default setting      enabled: true    }    tickInterval: 1000 * 60 * 60 * 24, // Day  }, {    labels: {      format: '{value:%W}'    },    tickInterval: 1000 * 60 * 60 * 24 * 7 // week  }],CopySee live code example for setting tickInterval per Axis gridVertical AxisIn a Gantt chart it is common to display a table on the left side of the chart to display task information, like task name, assignee and duration. The tasks will be lined up and mapped to the table after setting the point.y value for each data point (task).Example of defining a table along the vertical axis with Axis.grid optionEdit this pagePrevious« Dependencies between tasks NextGantt task configuration  »Horizontal axisVertical Axis\n\nGantt axis gridBoth vertical and horizontal axis of a Gantt Chart are rendered with the Axis.grid option enabled by default, which turns axis ticks into table cells.Horizontal axisThe default settings for Gantt renders a dual datetime horizontal axis on the top of the chart. The tickInterval for the bottom horizontal axis is automatically determined, by the distribution of the series data points and available screen size. Respectively, the top axis is then assigned a higher date time interval. E.g. days-week, weeks-months, months-years. This logic is helpful when displaying Gantt charts on different devices. Highcharts Gantt automatically adapts and finds the right distribution of axis ticks based upon the screen size available.Test the automatic date interval logic of the horizontal axis in the below example, by dragging the navigators handlebars.If the min and maximum width of the chart is set, there is more control over the number of ticks displayed in the Gantt chart. This would allow for further customization of the labels and tickInterval properties on axis.See example below for setting tickIntervals per Axis grid.xAxis: [{    labels: {      format: '{value:%w}' // day of the week    },    grid: { // default setting      enabled: true    }    tickInterval: 1000 * 60 * 60 * 24, // Day  }, {    labels: {      format: '{value:%W}'    },    tickInterval: 1000 * 60 * 60 * 24 * 7 // week  }],CopySee live code example for setting tickInterval per Axis gridVertical AxisIn a Gantt chart it is common to display a table on the left side of the chart to display task information, like task name, assignee and duration. The tasks will be lined up and mapped to the table after setting the point.y value for each data point (task).Example of defining a table along the vertical axis with Axis.grid optionEdit this pagePrevious« Dependencies between tasks NextGantt task configuration  »Horizontal axisVertical Axis\n\n\n\nGantt task configurationThe bars in the Gantt chart are showing the full duration of a task which are calculated from the start and end data point properties.MilestoneTurn a task into a Milestone when completion of the task is critical, before the progress on other tasks can continue. In a way, this will schedule the project in intervals and allows for checking the health of a project at a glance.Set the milestone property to true for turning a task into a milestone.See milestone example below, one of the data points in the series has the milestone property set to trueProgress barUse a progress bar to get a quick overview of the percent complete of a task. Turn a regular task into a progress bar by setting the completed property on the series.data point. This property takes an object with the options fill and amount for setting the contrast color  and the amount percentage completed. The completed property can also be set directly with a decimal value between 0 and 1. Then it sets the amount property and applies the fill color by selecting a natural contrast color automatically.See example below, for demonstrating progress bars\n\nGantt task configurationThe bars in the Gantt chart are showing the full duration of a task which are calculated from the start and end data point properties.MilestoneTurn a task into a Milestone when completion of the task is critical, before the progress on other tasks can continue. In a way, this will schedule the project in intervals and allows for checking the health of a project at a glance.Set the milestone property to true for turning a task into a milestone.See milestone example below, one of the data points in the series has the milestone property set to trueProgress barUse a progress bar to get a quick overview of the percent complete of a task. Turn a regular task into a progress bar by setting the completed property on the series.data point. This property takes an object with the options fill and amount for setting the contrast color  and the amount percentage completed. The completed property can also be set directly with a decimal value between 0 and 1. Then it sets the amount property and applies the fill color by selecting a natural contrast color automatically.See example below, for demonstrating progress barsEdit this pagePrevious« Gantt axis grid NextInstallation  »MilestoneProgress bar\n\nGantt task configurationThe bars in the Gantt chart are showing the full duration of a task which are calculated from the start and end data point properties.MilestoneTurn a task into a Milestone when completion of the task is critical, before the progress on other tasks can continue. In a way, this will schedule the project in intervals and allows for checking the health of a project at a glance.Set the milestone property to true for turning a task into a milestone.See milestone example below, one of the data points in the series has the milestone property set to trueProgress barUse a progress bar to get a quick overview of the percent complete of a task. Turn a regular task into a progress bar by setting the completed property on the series.data point. This property takes an object with the options fill and amount for setting the contrast color  and the amount percentage completed. The completed property can also be set directly with a decimal value between 0 and 1. Then it sets the amount property and applies the fill color by selecting a natural contrast color automatically.See example below, for demonstrating progress barsEdit this pagePrevious« Gantt axis grid NextInstallation  »MilestoneProgress bar\n\n\n\nInstallationInstall via NPMOne way to add the Highcharts Dashboards to your web page is via npm script. You can get all Dashboards functionality through packages, which can be installed using the following script:npm install @highcharts/dashboardsCopyThen import the package into your project:import * as Dashboards from '@highcharts/dashboards';CopyIf you don't intend to use your own custom layout, import and register the layout module as well:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyInclude Dashboards by script tagInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyLoad files from your domainIn the example above, the Javascript files are loaded from code.highcharts.com, but you can download the files from highcharts.com and include them on your web page. Here is an example with Highcharts Dashboards served from your own server:<script src="../code/dashboards/dashboards.js"></script><script src="../code/dashboards/modules/layout.js"></script>CopyLoad additional modulesYou might want to include some additional modules in your webpage that are not included in the basic dashboards.js module.
The basic module lets you create the elementary dashboard with HTMLComponents, but if you want to use predefined component types, you need to add the necessary modules. E.g. to use a Highcharts component, you need to add the following scripts:../highcharts.js../dashboards/dashboards.jsCopyIf you are using npm, you can import the modules as follows:import * as Highcharts from 'highcharts';import * as Dashboards from '@highcharts/dashboards';CopyThen, you can use the HighchartsPlugin to connect the Highcharts component with the Dashboards.
It works similarly for other plugins, e.g., Grid.Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyGet startedNow, you are ready to use Dashboards. Check out Your first Dashboard to get started.\n\nInstallationInstall via NPMOne way to add the Highcharts Dashboards to your web page is via npm script. You can get all Dashboards functionality through packages, which can be installed using the following script:npm install @highcharts/dashboardsCopyThen import the package into your project:import * as Dashboards from '@highcharts/dashboards';CopyIf you don't intend to use your own custom layout, import and register the layout module as well:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyInclude Dashboards by script tagInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyLoad files from your domainIn the example above, the Javascript files are loaded from code.highcharts.com, but you can download the files from highcharts.com and include them on your web page. Here is an example with Highcharts Dashboards served from your own server:<script src="../code/dashboards/dashboards.js"></script><script src="../code/dashboards/modules/layout.js"></script>CopyLoad additional modulesYou might want to include some additional modules in your webpage that are not included in the basic dashboards.js module.
The basic module lets you create the elementary dashboard with HTMLComponents, but if you want to use predefined component types, you need to add the necessary modules. E.g. to use a Highcharts component, you need to add the following scripts:../highcharts.js../dashboards/dashboards.jsCopyIf you are using npm, you can import the modules as follows:import * as Highcharts from 'highcharts';import * as Dashboards from '@highcharts/dashboards';CopyThen, you can use the HighchartsPlugin to connect the Highcharts component with the Dashboards.
It works similarly for other plugins, e.g., Grid.Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyGet startedNow, you are ready to use Dashboards. Check out Your first Dashboard to get started.Edit this pagePrevious« Gantt task configuration NextYour first dashboard  »Install via NPMInclude Dashboards by script tagLoad files from your domainLoad additional modulesGet started\n\nInstallationInstall via NPMOne way to add the Highcharts Dashboards to your web page is via npm script. You can get all Dashboards functionality through packages, which can be installed using the following script:npm install @highcharts/dashboardsCopyThen import the package into your project:import * as Dashboards from '@highcharts/dashboards';CopyIf you don't intend to use your own custom layout, import and register the layout module as well:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyInclude Dashboards by script tagInclude the JavaScript files in the <head> section of your web page as shown below.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyLoad files from your domainIn the example above, the Javascript files are loaded from code.highcharts.com, but you can download the files from highcharts.com and include them on your web page. Here is an example with Highcharts Dashboards served from your own server:<script src="../code/dashboards/dashboards.js"></script><script src="../code/dashboards/modules/layout.js"></script>CopyLoad additional modulesYou might want to include some additional modules in your webpage that are not included in the basic dashboards.js module.
The basic module lets you create the elementary dashboard with HTMLComponents, but if you want to use predefined component types, you need to add the necessary modules. E.g. to use a Highcharts component, you need to add the following scripts:../highcharts.js../dashboards/dashboards.jsCopyIf you are using npm, you can import the modules as follows:import * as Highcharts from 'highcharts';import * as Dashboards from '@highcharts/dashboards';CopyThen, you can use the HighchartsPlugin to connect the Highcharts component with the Dashboards.
It works similarly for other plugins, e.g., Grid.Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyGet startedNow, you are ready to use Dashboards. Check out Your first Dashboard to get started.Edit this pagePrevious« Gantt task configuration NextYour first dashboard  »Install via NPMInclude Dashboards by script tagLoad files from your domainLoad additional modulesGet started\n\n\n\nYour first dashboardThis document explains how to add a basic Highcharts dashboard to your webpage.Create the dashboardWhen you are ready to create your first simple dashboard, please follow these steps:1. Add a div element The first required step in creating a dashboard is to define a div element where the dashboard is to be rendered. The id of the 'div' identifies the HTML element and is needed by the script that manages the dashboard. This div is generally  referred to as the Dashboards container.<div id="container">Copy2. Create the dashboardIn this example, we will create a simple dashboard with two cells. The first cell contains some static HTML, while the second contains a Highcharts chart. For this dashboard to work, we need both the Highcharts library and the Dashboards library, as well as the layout module. The required JS modules are imported as follows:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyHowever, there are other ways to import Dashboards packages. For alternative approaches, e.g. install via npm, see this article.3. Add CSSWe need CSS styling to display the dashboard properly. The default styles of the dashboard is contained is the Dashboards CSS file, and imported as shown below.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");Copy4. Add the scriptWe are now ready to start working on the actual Dashboards configuration. Create a new dashboard instance inside the script tag.To do so, you have to pass two arguments:the container div’s ID where the dashboard should be placed (see point 1).the object with dashboard options.To do so, you can use the factory function Dashboards.board:Dashboards.board('container', {...})Copyor the class Dashboards.Board to create a new instance of the dashboard:const board = new Dashboards.Board('container', {...})Copy5. Add mandatory optionsFor the dashboard to work, two options are mandatory:gui
This is an objects that is used to define the layout of the dashboard by specifying rows and cellsgui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }, {                id: 'dashboard-col-1'            }]        }]    }]}Copycomponents
This is an array of components to be inserted into the dashboard. To place a component in a cell, use the cell ID defined in the gui option.
You also have to declare the type of the component and its options.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [        {            tagName: 'h1',            textContent: 'Your first dashboard'        }    ]}, {    renderTo: 'dashboard-col-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}]CopyView the resultWith the above configuration, your dashboard should look like this:\n\nYour first dashboardThis document explains how to add a basic Highcharts dashboard to your webpage.Create the dashboardWhen you are ready to create your first simple dashboard, please follow these steps:1. Add a div element The first required step in creating a dashboard is to define a div element where the dashboard is to be rendered. The id of the 'div' identifies the HTML element and is needed by the script that manages the dashboard. This div is generally  referred to as the Dashboards container.<div id="container">Copy2. Create the dashboardIn this example, we will create a simple dashboard with two cells. The first cell contains some static HTML, while the second contains a Highcharts chart. For this dashboard to work, we need both the Highcharts library and the Dashboards library, as well as the layout module. The required JS modules are imported as follows:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyHowever, there are other ways to import Dashboards packages. For alternative approaches, e.g. install via npm, see this article.3. Add CSSWe need CSS styling to display the dashboard properly. The default styles of the dashboard is contained is the Dashboards CSS file, and imported as shown below.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");Copy4. Add the scriptWe are now ready to start working on the actual Dashboards configuration. Create a new dashboard instance inside the script tag.To do so, you have to pass two arguments:the container div’s ID where the dashboard should be placed (see point 1).the object with dashboard options.To do so, you can use the factory function Dashboards.board:Dashboards.board('container', {...})Copyor the class Dashboards.Board to create a new instance of the dashboard:const board = new Dashboards.Board('container', {...})Copy5. Add mandatory optionsFor the dashboard to work, two options are mandatory:gui
This is an objects that is used to define the layout of the dashboard by specifying rows and cellsgui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }, {                id: 'dashboard-col-1'            }]        }]    }]}Copycomponents
This is an array of components to be inserted into the dashboard. To place a component in a cell, use the cell ID defined in the gui option.
You also have to declare the type of the component and its options.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [        {            tagName: 'h1',            textContent: 'Your first dashboard'        }    ]}, {    renderTo: 'dashboard-col-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}]CopyView the resultWith the above configuration, your dashboard should look like this:Edit this pagePrevious« Installation NextHighcharts Dashboards with Angular  »Create the dashboard1. Add a div element2. Create the dashboard3. Add CSS4. Add the script5. Add mandatory optionsView the result\n\nYour first dashboardThis document explains how to add a basic Highcharts dashboard to your webpage.Create the dashboardWhen you are ready to create your first simple dashboard, please follow these steps:1. Add a div element The first required step in creating a dashboard is to define a div element where the dashboard is to be rendered. The id of the 'div' identifies the HTML element and is needed by the script that manages the dashboard. This div is generally  referred to as the Dashboards container.<div id="container">Copy2. Create the dashboardIn this example, we will create a simple dashboard with two cells. The first cell contains some static HTML, while the second contains a Highcharts chart. For this dashboard to work, we need both the Highcharts library and the Dashboards library, as well as the layout module. The required JS modules are imported as follows:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyHowever, there are other ways to import Dashboards packages. For alternative approaches, e.g. install via npm, see this article.3. Add CSSWe need CSS styling to display the dashboard properly. The default styles of the dashboard is contained is the Dashboards CSS file, and imported as shown below.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");Copy4. Add the scriptWe are now ready to start working on the actual Dashboards configuration. Create a new dashboard instance inside the script tag.To do so, you have to pass two arguments:the container div’s ID where the dashboard should be placed (see point 1).the object with dashboard options.To do so, you can use the factory function Dashboards.board:Dashboards.board('container', {...})Copyor the class Dashboards.Board to create a new instance of the dashboard:const board = new Dashboards.Board('container', {...})Copy5. Add mandatory optionsFor the dashboard to work, two options are mandatory:gui
This is an objects that is used to define the layout of the dashboard by specifying rows and cellsgui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }, {                id: 'dashboard-col-1'            }]        }]    }]}Copycomponents
This is an array of components to be inserted into the dashboard. To place a component in a cell, use the cell ID defined in the gui option.
You also have to declare the type of the component and its options.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [        {            tagName: 'h1',            textContent: 'Your first dashboard'        }    ]}, {    renderTo: 'dashboard-col-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}]CopyView the resultWith the above configuration, your dashboard should look like this:Edit this pagePrevious« Installation NextHighcharts Dashboards with Angular  »Create the dashboard1. Add a div element2. Create the dashboard3. Add CSS4. Add the script5. Add mandatory optionsView the result\n\n\n\nHighcharts Dashboards with AngularTo create a dashboard with Angular, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live example\n\nHighcharts Dashboards with AngularTo create a dashboard with Angular, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleEdit this pagePrevious« Your first dashboard NextHighcharts Dashboards with React  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure5. Create a dashboardDemos\n\nHighcharts Dashboards with AngularTo create a dashboard with Angular, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleEdit this pagePrevious« Your first dashboard NextHighcharts Dashboards with React  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure5. Create a dashboardDemos\n\n\n\nHighcharts Dashboards with ReactTo create a dashboard with React, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleComponent live example\n\nHighcharts Dashboards with ReactTo create a dashboard with React, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleComponent live exampleEdit this pagePrevious« Highcharts Dashboards with Angular NextHighcharts Dashboards with Vue  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure5. Create a dashboardDemos\n\nHighcharts Dashboards with ReactTo create a dashboard with React, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div id="dashboard"></div>CopyYou can refer to the element by its ID or use the ElementRef to get it.Declare your HTML structureRead more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleComponent live exampleEdit this pagePrevious« Highcharts Dashboards with Angular NextHighcharts Dashboards with Vue  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure5. Create a dashboardDemos\n\n\n\nHighcharts Dashboards with VueTo create a dashboard with Vue, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);CopyPlease Note: If you are using the Visual Studio Code editor with the
Volar extension, you should change the extension setting
"vue.server.maxFileSize" to a value of at least 25000000 bytes to get
full editor support for all Highcharts modules. You will find it in the menu
File -> Preferences -> Settings, where you have to scroll to the
Vue: Max File Size value.4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div ref="dashboardContainer"></div>CopyDeclare your HTML structure.Read more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live example\n\nHighcharts Dashboards with VueTo create a dashboard with Vue, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);CopyPlease Note: If you are using the Visual Studio Code editor with the
Volar extension, you should change the extension setting
"vue.server.maxFileSize" to a value of at least 25000000 bytes to get
full editor support for all Highcharts modules. You will find it in the menu
File -> Preferences -> Settings, where you have to scroll to the
Vue: Max File Size value.4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div ref="dashboardContainer"></div>CopyDeclare your HTML structure.Read more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleEdit this pagePrevious« Highcharts Dashboards with React NextLayout  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure.5. Create a dashboardDemos\n\nHighcharts Dashboards with VueTo create a dashboard with Vue, please follow the steps below:1. Install the Dashboards packagenpm install @highcharts/dashboardsCopy2. Import the Dashboards packageimport Dashboards from '@highcharts/dashboards';Copy3. Additional packagesConsider additional packages like Highcharts or Grid to fully utilize the Dashboards potential.First, install the package.npm install highchartsCopyThen, import the package and the dedicated plug to connect it to the Dashboards.import Highcharts from 'highcharts/es-modules/masters/highcharts.src.js';import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src.js';Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);CopyPlease Note: If you are using the Visual Studio Code editor with the
Volar extension, you should change the extension setting
"vue.server.maxFileSize" to a value of at least 25000000 bytes to get
full editor support for all Highcharts modules. You will find it in the menu
File -> Preferences -> Settings, where you have to scroll to the
Vue: Max File Size value.4. Create an HTML structure for the dashboardThere are two ways to do it:Use the Dashboards layout systemTo do that, first import the layout module and initialize it:import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyThen add a div where you want to render the dashboard:<div ref="dashboardContainer"></div>CopyDeclare your HTML structure.Read more in the documentation.5. Create a dashboardThe dashboard is created using the factory function Dashboards.board. The function takes three arguments:container - the element where the dashboard will be rendered, can be an id of the element or the direct reference to the elementoptions - the options object for the dashboardisAsync - whether the dashboard should be rendered asynchronously or not- functional when using external data resourcesDemosSee how it works in the following demos:Basic live exampleCustom layout live exampleEdit this pagePrevious« Highcharts Dashboards with React NextLayout  »1. Install the Dashboards package2. Import the Dashboards package3. Additional packages4. Create an HTML structure for the dashboardUse the Dashboards layout systemDeclare your HTML structure.5. Create a dashboardDemos\n\n\n\nLayoutOverviewThe positioning of its components is an essential part of any dashboard. The layout can initially be defined from the configuration object and then changed when Edit mode is enabled. Here are the building blocks of a dashboard layout.Green boxes: rowsRed boxes: individual cellsBlue boxes: nested layout inside a cellTo use Dashboards with a layout system and edit mode, you first have to load the layout module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package likenpm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyRowsEach layout consists of at least one row, which spans the entire width of the outer layout it's defined in. Using Edit mode, you can change the row's width and height and resize the cells inside it.
Each row can have its own style defined, and its cells can be defined as a JS object or a JSON.CellsEach row consists of at least one cell, but there can be many cells in the same row. These cells are the containers for the components or the nested layout.Nested layout demoHow the dashboard layout engine makes your dashboard responsiveThe layout calculates the position of the components. Generally, each row is placed in columns, and cells are placed in rows. When dealing with the resizer module, things get more complicated, which lets you change the width and height of the row and cell. The dashboard layout engine is based on Flexbox, and by setting width and height in percentage values, cell and row sizes are adjusted dynamically when the outer container resizes. This can happen in nested layouts when several rows are positioned inside a cell, which can also be resized.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}  /* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}  /* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyInstead of regular CSS media queries, you can also use container queries, which will make more sense if your dashboard does not cover the entire window horizontally. See a demo that uses this.Example:/* Create a containment context */#container {    container: dashboard / inline-size;}/* LARGE */@container dashboard (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@container dashboard (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@container dashboard (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyCustom layoutIf you prefer to use your custom layout structure, feel free to do so. The only thing you need to do is disable the GUI by option. Also, the layout.js module is not needed then. Please remember that each container should have a unique id for the rendered component.gui: {        enabled: false    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            chart: {                type: 'pie'            },            series: [{                data: [1,2,3]            }]        },    }]CopyHere is the standalone demo and the tailwind demo.*NB! Disabled gui does not allow you to use the Edit Mode module.\n\nLayoutOverviewThe positioning of its components is an essential part of any dashboard. The layout can initially be defined from the configuration object and then changed when Edit mode is enabled. Here are the building blocks of a dashboard layout.Green boxes: rowsRed boxes: individual cellsBlue boxes: nested layout inside a cellTo use Dashboards with a layout system and edit mode, you first have to load the layout module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package likenpm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyRowsEach layout consists of at least one row, which spans the entire width of the outer layout it's defined in. Using Edit mode, you can change the row's width and height and resize the cells inside it.
Each row can have its own style defined, and its cells can be defined as a JS object or a JSON.CellsEach row consists of at least one cell, but there can be many cells in the same row. These cells are the containers for the components or the nested layout.Nested layout demoHow the dashboard layout engine makes your dashboard responsiveThe layout calculates the position of the components. Generally, each row is placed in columns, and cells are placed in rows. When dealing with the resizer module, things get more complicated, which lets you change the width and height of the row and cell. The dashboard layout engine is based on Flexbox, and by setting width and height in percentage values, cell and row sizes are adjusted dynamically when the outer container resizes. This can happen in nested layouts when several rows are positioned inside a cell, which can also be resized.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}  /* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}  /* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyInstead of regular CSS media queries, you can also use container queries, which will make more sense if your dashboard does not cover the entire window horizontally. See a demo that uses this.Example:/* Create a containment context */#container {    container: dashboard / inline-size;}/* LARGE */@container dashboard (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@container dashboard (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@container dashboard (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyCustom layoutIf you prefer to use your custom layout structure, feel free to do so. The only thing you need to do is disable the GUI by option. Also, the layout.js module is not needed then. Please remember that each container should have a unique id for the rendered component.gui: {        enabled: false    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            chart: {                type: 'pie'            },            series: [{                data: [1,2,3]            }]        },    }]CopyHere is the standalone demo and the tailwind demo.*NB! Disabled gui does not allow you to use the Edit Mode module.Edit this pagePrevious« Highcharts Dashboards with Vue NextStyle by CSS  »OverviewRowsCellsNested layout demoHow the dashboard layout engine makes your dashboard responsiveCustom layout\n\nLayoutOverviewThe positioning of its components is an essential part of any dashboard. The layout can initially be defined from the configuration object and then changed when Edit mode is enabled. Here are the building blocks of a dashboard layout.Green boxes: rowsRed boxes: individual cellsBlue boxes: nested layout inside a cellTo use Dashboards with a layout system and edit mode, you first have to load the layout module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package likenpm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyRowsEach layout consists of at least one row, which spans the entire width of the outer layout it's defined in. Using Edit mode, you can change the row's width and height and resize the cells inside it.
Each row can have its own style defined, and its cells can be defined as a JS object or a JSON.CellsEach row consists of at least one cell, but there can be many cells in the same row. These cells are the containers for the components or the nested layout.Nested layout demoHow the dashboard layout engine makes your dashboard responsiveThe layout calculates the position of the components. Generally, each row is placed in columns, and cells are placed in rows. When dealing with the resizer module, things get more complicated, which lets you change the width and height of the row and cell. The dashboard layout engine is based on Flexbox, and by setting width and height in percentage values, cell and row sizes are adjusted dynamically when the outer container resizes. This can happen in nested layouts when several rows are positioned inside a cell, which can also be resized.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}  /* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}  /* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyInstead of regular CSS media queries, you can also use container queries, which will make more sense if your dashboard does not cover the entire window horizontally. See a demo that uses this.Example:/* Create a containment context */#container {    container: dashboard / inline-size;}/* LARGE */@container dashboard (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@container dashboard (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@container dashboard (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyCustom layoutIf you prefer to use your custom layout structure, feel free to do so. The only thing you need to do is disable the GUI by option. Also, the layout.js module is not needed then. Please remember that each container should have a unique id for the rendered component.gui: {        enabled: false    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            chart: {                type: 'pie'            },            series: [{                data: [1,2,3]            }]        },    }]CopyHere is the standalone demo and the tailwind demo.*NB! Disabled gui does not allow you to use the Edit Mode module.Edit this pagePrevious« Highcharts Dashboards with Vue NextStyle by CSS  »OverviewRowsCellsNested layout demoHow the dashboard layout engine makes your dashboard responsiveCustom layout\n\n\n\nStyle by CSSEach dashboard and most child elements are styled using CSS by default. This method offers
the possibility to change the dashboard's look and feel without changing its configuration
or the underlying application's code. Most of the HTML elements are provided with CSS classes, and it is also
possible to use custom classes or element identifiers.If you prefer to use a custom layout in HTML, you need to disable the GUI or leave it out altogether.
Remember that each container must be rendered to an HTML div with a unique id.gui: {        enabled: false    }CopyHere is the standalone demo.
Here is the tailwind demo.*Please note that that Edit Mode can not be used when
using a custom HTML layout.Importing the CSSThe CSS must be explicitly imported, as shown here:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyThe file datagrid.css is needed only if the Grid component is used in the dashboard.General CSS classesEach class name contains the prefix highcharts-dashboards and a suffix that
describes the element. For example, the class name for the dashboard's row is highcharts-dashboards-row.These are the most essential elements and their associated CSS classes:highcharts-dashboards - the main class for the dashboardhighcharts-dashboards-row - the class for the dashboard's rowshighcharts-dashboards-cell - the class for the dashboard's cellshighcharts-dashboards-component - the class for the dashboard's componentThe rest of the classes are specific for each component or element.To access and style the whole dashboard, its background and its components, you can use the following:.highcharts-dashboards,.highcharts-dashboards-wrapper {    background-color: #f2f9fd;}CopyTo style the dashboard's rows:.highcharts-dashboards-row {    padding: 10px;}CopyTo style the dashboard's cells:.highcharts-dashboards-cell {    text-align: left;}CopyTo style the dashboard's component div and its content:.highcharts-dashboards-component {    border-radius: 10px;}CopyComponent classesEach component has the generic component CSS class highcharts-dashboards-component
and its own CSS class specific to the component. For example, the KPI component
has the class highcharts-dashboards-component-kpi.To style the dashboard's component title:.highcharts-dashboards-component-title {    font-size: 12px;}CopyTo style the dashboard's component subtitle:.highcharts-dashboards-component-subtitle {    font-size: 10px;}CopyKPI componentTo style the dashboard's KPI component div and its content:.highcharts-dashboards-component-kpi {    border-radius: 10px;}CopyTo style the dashboard's KPI value:.highcharts-dashboards-component-kpi-value {    color: red;}CopyTo properly style the chart element of the KPI, you need to set the styledMode option to true in the component's configuration.{    type: 'KPI',    renderTo: 'kpi-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyHighcharts componentTo style the dashboard's Highcharts component div and its content:.highcharts-dashboards-component-highcharts {    background-color: gray;}CopyTo style the chart element of the Highcharts component, you need to set the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyFor information on how to individually style the dashboard's Highcharts chart see the article style Highcharts Chart.Grid componentTo style the dashboard's Grid Component div and its content:.highcharts-datagrid-container {    border-radius: 10px;}CopyTo style the dashboard's Grid header:.highcharts-datagrid-column-header {    background-color: gray;}CopyTo style the dashboard's Grid row:.highcharts-datagrid-row {    background-color: gray;}CopyNote that you can use the child selector to style even and odd rows:.highcharts-datagrid-row:nth-child(even) {    background-color: white;}CopyHTML componentSince the user defines the whole structure of the HTML component, it differs between use cases.
In effect, HTML can be styled the same way as any HTML div with its child elements, and it is recommended that you use custom classes and IDs to style it.More information is in the section below.Custom classesEach component or element can have a custom class or ID in the dashboard config.
You can use it to define better CSS selectors and style the dashboard.See how the HTML component was configured and how the id and class were used:{    type: 'HTML',    renderTo: 'dashboard-row-1-cell-3',    elements: [        {            tagName: 'div',            children: [                {                    tagName: 'h4',                    textContent: 'Check how you can save more!',                    attributes: {                        class: 'main-title'                    }                },                {                    tagName: 'button',                    textContent: 'Go to the saving account',                    attributes: {                        id: 'saving-button'                    }                }            ]        }    ]},CopyCustom classes and IDs can be used to style the dashboard:#saving-button {    border: none;    cursor: pointer;}CopyThe final result might look like:Edit Mode classesYou can also change how the Edit Mode looks like. The Edit mode is based on the
elements like the sidebar, toolbar, popup, etc. Each has its class
that you can use to style it.Confirmation popupTo style the dashboard's popup:.highcharts-dashboards-confirmation-popup {    border-radius: 10px;}CopyTo style the dashboard's overlay:.highcharts-dashboards-overlay {    background-color: gray;}CopyTo style the dashboard's popup close button:.highcharts-dashboards-popup-close {    background-color: gray;}CopySidebar (Accordion menu)To style the dashboard's accordion menu in the sidebar:.highcharts-dashboards-accordion-menu {    background-color: gray;}CopyTo style the dashboard's sidebar header in the accordion menu:.highcharts-dashboards-accordion-header {    font-size: 12px;}CopyToolbarsTo style the dashboard's toolbar in Edit Mode:.highcharts-dashboards-toolbar {    background-color: gray;}CopyHighlightsTo style the highlights of an edited cell:.highcharts-dashboards-toolbar-cell-outline {    border-color: red;}CopyTo style the highlights of an edited row:.highcharts-dashboards-toolbar-row-outline {    border-color: blue;}Copy\n\nStyle by CSSEach dashboard and most child elements are styled using CSS by default. This method offers
the possibility to change the dashboard's look and feel without changing its configuration
or the underlying application's code. Most of the HTML elements are provided with CSS classes, and it is also
possible to use custom classes or element identifiers.If you prefer to use a custom layout in HTML, you need to disable the GUI or leave it out altogether.
Remember that each container must be rendered to an HTML div with a unique id.gui: {        enabled: false    }CopyHere is the standalone demo.
Here is the tailwind demo.*Please note that that Edit Mode can not be used when
using a custom HTML layout.Importing the CSSThe CSS must be explicitly imported, as shown here:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyThe file datagrid.css is needed only if the Grid component is used in the dashboard.General CSS classesEach class name contains the prefix highcharts-dashboards and a suffix that
describes the element. For example, the class name for the dashboard's row is highcharts-dashboards-row.These are the most essential elements and their associated CSS classes:highcharts-dashboards - the main class for the dashboardhighcharts-dashboards-row - the class for the dashboard's rowshighcharts-dashboards-cell - the class for the dashboard's cellshighcharts-dashboards-component - the class for the dashboard's componentThe rest of the classes are specific for each component or element.To access and style the whole dashboard, its background and its components, you can use the following:.highcharts-dashboards,.highcharts-dashboards-wrapper {    background-color: #f2f9fd;}CopyTo style the dashboard's rows:.highcharts-dashboards-row {    padding: 10px;}CopyTo style the dashboard's cells:.highcharts-dashboards-cell {    text-align: left;}CopyTo style the dashboard's component div and its content:.highcharts-dashboards-component {    border-radius: 10px;}CopyComponent classesEach component has the generic component CSS class highcharts-dashboards-component
and its own CSS class specific to the component. For example, the KPI component
has the class highcharts-dashboards-component-kpi.To style the dashboard's component title:.highcharts-dashboards-component-title {    font-size: 12px;}CopyTo style the dashboard's component subtitle:.highcharts-dashboards-component-subtitle {    font-size: 10px;}CopyKPI componentTo style the dashboard's KPI component div and its content:.highcharts-dashboards-component-kpi {    border-radius: 10px;}CopyTo style the dashboard's KPI value:.highcharts-dashboards-component-kpi-value {    color: red;}CopyTo properly style the chart element of the KPI, you need to set the styledMode option to true in the component's configuration.{    type: 'KPI',    renderTo: 'kpi-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyHighcharts componentTo style the dashboard's Highcharts component div and its content:.highcharts-dashboards-component-highcharts {    background-color: gray;}CopyTo style the chart element of the Highcharts component, you need to set the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyFor information on how to individually style the dashboard's Highcharts chart see the article style Highcharts Chart.Grid componentTo style the dashboard's Grid Component div and its content:.highcharts-datagrid-container {    border-radius: 10px;}CopyTo style the dashboard's Grid header:.highcharts-datagrid-column-header {    background-color: gray;}CopyTo style the dashboard's Grid row:.highcharts-datagrid-row {    background-color: gray;}CopyNote that you can use the child selector to style even and odd rows:.highcharts-datagrid-row:nth-child(even) {    background-color: white;}CopyHTML componentSince the user defines the whole structure of the HTML component, it differs between use cases.
In effect, HTML can be styled the same way as any HTML div with its child elements, and it is recommended that you use custom classes and IDs to style it.More information is in the section below.Custom classesEach component or element can have a custom class or ID in the dashboard config.
You can use it to define better CSS selectors and style the dashboard.See how the HTML component was configured and how the id and class were used:{    type: 'HTML',    renderTo: 'dashboard-row-1-cell-3',    elements: [        {            tagName: 'div',            children: [                {                    tagName: 'h4',                    textContent: 'Check how you can save more!',                    attributes: {                        class: 'main-title'                    }                },                {                    tagName: 'button',                    textContent: 'Go to the saving account',                    attributes: {                        id: 'saving-button'                    }                }            ]        }    ]},CopyCustom classes and IDs can be used to style the dashboard:#saving-button {    border: none;    cursor: pointer;}CopyThe final result might look like:Edit Mode classesYou can also change how the Edit Mode looks like. The Edit mode is based on the
elements like the sidebar, toolbar, popup, etc. Each has its class
that you can use to style it.Confirmation popupTo style the dashboard's popup:.highcharts-dashboards-confirmation-popup {    border-radius: 10px;}CopyTo style the dashboard's overlay:.highcharts-dashboards-overlay {    background-color: gray;}CopyTo style the dashboard's popup close button:.highcharts-dashboards-popup-close {    background-color: gray;}CopySidebar (Accordion menu)To style the dashboard's accordion menu in the sidebar:.highcharts-dashboards-accordion-menu {    background-color: gray;}CopyTo style the dashboard's sidebar header in the accordion menu:.highcharts-dashboards-accordion-header {    font-size: 12px;}CopyToolbarsTo style the dashboard's toolbar in Edit Mode:.highcharts-dashboards-toolbar {    background-color: gray;}CopyHighlightsTo style the highlights of an edited cell:.highcharts-dashboards-toolbar-cell-outline {    border-color: red;}CopyTo style the highlights of an edited row:.highcharts-dashboards-toolbar-row-outline {    border-color: blue;}CopyEdit this pagePrevious« Layout NextEdit mode  »Importing the CSSGeneral CSS classesComponent classesKPI componentHighcharts componentGrid componentHTML componentCustom classesEdit Mode classesConfirmation popupSidebar (Accordion menu)ToolbarsHighlights\n\nStyle by CSSEach dashboard and most child elements are styled using CSS by default. This method offers
the possibility to change the dashboard's look and feel without changing its configuration
or the underlying application's code. Most of the HTML elements are provided with CSS classes, and it is also
possible to use custom classes or element identifiers.If you prefer to use a custom layout in HTML, you need to disable the GUI or leave it out altogether.
Remember that each container must be rendered to an HTML div with a unique id.gui: {        enabled: false    }CopyHere is the standalone demo.
Here is the tailwind demo.*Please note that that Edit Mode can not be used when
using a custom HTML layout.Importing the CSSThe CSS must be explicitly imported, as shown here:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyThe file datagrid.css is needed only if the Grid component is used in the dashboard.General CSS classesEach class name contains the prefix highcharts-dashboards and a suffix that
describes the element. For example, the class name for the dashboard's row is highcharts-dashboards-row.These are the most essential elements and their associated CSS classes:highcharts-dashboards - the main class for the dashboardhighcharts-dashboards-row - the class for the dashboard's rowshighcharts-dashboards-cell - the class for the dashboard's cellshighcharts-dashboards-component - the class for the dashboard's componentThe rest of the classes are specific for each component or element.To access and style the whole dashboard, its background and its components, you can use the following:.highcharts-dashboards,.highcharts-dashboards-wrapper {    background-color: #f2f9fd;}CopyTo style the dashboard's rows:.highcharts-dashboards-row {    padding: 10px;}CopyTo style the dashboard's cells:.highcharts-dashboards-cell {    text-align: left;}CopyTo style the dashboard's component div and its content:.highcharts-dashboards-component {    border-radius: 10px;}CopyComponent classesEach component has the generic component CSS class highcharts-dashboards-component
and its own CSS class specific to the component. For example, the KPI component
has the class highcharts-dashboards-component-kpi.To style the dashboard's component title:.highcharts-dashboards-component-title {    font-size: 12px;}CopyTo style the dashboard's component subtitle:.highcharts-dashboards-component-subtitle {    font-size: 10px;}CopyKPI componentTo style the dashboard's KPI component div and its content:.highcharts-dashboards-component-kpi {    border-radius: 10px;}CopyTo style the dashboard's KPI value:.highcharts-dashboards-component-kpi-value {    color: red;}CopyTo properly style the chart element of the KPI, you need to set the styledMode option to true in the component's configuration.{    type: 'KPI',    renderTo: 'kpi-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyHighcharts componentTo style the dashboard's Highcharts component div and its content:.highcharts-dashboards-component-highcharts {    background-color: gray;}CopyTo style the chart element of the Highcharts component, you need to set the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}CopyFor information on how to individually style the dashboard's Highcharts chart see the article style Highcharts Chart.Grid componentTo style the dashboard's Grid Component div and its content:.highcharts-datagrid-container {    border-radius: 10px;}CopyTo style the dashboard's Grid header:.highcharts-datagrid-column-header {    background-color: gray;}CopyTo style the dashboard's Grid row:.highcharts-datagrid-row {    background-color: gray;}CopyNote that you can use the child selector to style even and odd rows:.highcharts-datagrid-row:nth-child(even) {    background-color: white;}CopyHTML componentSince the user defines the whole structure of the HTML component, it differs between use cases.
In effect, HTML can be styled the same way as any HTML div with its child elements, and it is recommended that you use custom classes and IDs to style it.More information is in the section below.Custom classesEach component or element can have a custom class or ID in the dashboard config.
You can use it to define better CSS selectors and style the dashboard.See how the HTML component was configured and how the id and class were used:{    type: 'HTML',    renderTo: 'dashboard-row-1-cell-3',    elements: [        {            tagName: 'div',            children: [                {                    tagName: 'h4',                    textContent: 'Check how you can save more!',                    attributes: {                        class: 'main-title'                    }                },                {                    tagName: 'button',                    textContent: 'Go to the saving account',                    attributes: {                        id: 'saving-button'                    }                }            ]        }    ]},CopyCustom classes and IDs can be used to style the dashboard:#saving-button {    border: none;    cursor: pointer;}CopyThe final result might look like:Edit Mode classesYou can also change how the Edit Mode looks like. The Edit mode is based on the
elements like the sidebar, toolbar, popup, etc. Each has its class
that you can use to style it.Confirmation popupTo style the dashboard's popup:.highcharts-dashboards-confirmation-popup {    border-radius: 10px;}CopyTo style the dashboard's overlay:.highcharts-dashboards-overlay {    background-color: gray;}CopyTo style the dashboard's popup close button:.highcharts-dashboards-popup-close {    background-color: gray;}CopySidebar (Accordion menu)To style the dashboard's accordion menu in the sidebar:.highcharts-dashboards-accordion-menu {    background-color: gray;}CopyTo style the dashboard's sidebar header in the accordion menu:.highcharts-dashboards-accordion-header {    font-size: 12px;}CopyToolbarsTo style the dashboard's toolbar in Edit Mode:.highcharts-dashboards-toolbar {    background-color: gray;}CopyHighlightsTo style the highlights of an edited cell:.highcharts-dashboards-toolbar-cell-outline {    border-color: red;}CopyTo style the highlights of an edited row:.highcharts-dashboards-toolbar-row-outline {    border-color: blue;}CopyEdit this pagePrevious« Layout NextEdit mode  »Importing the CSSGeneral CSS classesComponent classesKPI componentHighcharts componentGrid componentHTML componentCustom classesEdit Mode classesConfirmation popupSidebar (Accordion menu)ToolbarsHighlights\n\n\n\nEdit modeEdit mode is a mode in which the user can change the appearance of the dashboard through the User Interface (UI).
When the dashboard is declared with custom HTML structure, the edit mode is limited to the component settings only.IntroductionTo be able to use Dashboards with the layout system and edit mode, you first have to load the layout module.
The order of the imports is important, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyIn addition, this option has to be enabled in the dashboard configuration:editMode: {    enabled: true,    contextMenu: {        enabled: true    }},CopyEdit mode can now be enabled by the burger menu in the upper right corner.When edit mode is enabled, the appearance of the dashboard changes. When hovering over a cell a blue border appears around it. The border of the row containing the cell turns green. Additionally, both the row and the cell get a tooltip, which allows the user to change its position, change its options, or just delete it.Note that when dashboard is declared with custom HTML structure, only the component setting can be edited. The layout cannot be changed.Next to the burger menu, the Add Component button is added.Add ComponentAvailable only when Dashboarda is declared with the layout system- using the gui configuration.The Add Component button allows the user to add a new component. When clicked, a sidebar appears, and it lets you choose the type of component you want to add and then by drag&drop, the component type can be selected and dragged to the correct place, indicated by the drop marker.The sidebar lists the component types provided by the Dashboards API but only the ones whose modules are loaded. If other types are needed, add the extra modules. The order and the components on the list can be changed by setting the components array in the editMode option - API.In order to add other custom components to the list, please follow the custom component guide.After dragging a component into the preferred place in the layout, a sidebar with the component settings will appear.Component settingsEach component type has its own properties. The most important ones can be set using the settings sidebar. It opens automatically after adding any component, but it can also be opened by clicking on the gear icon that appears in the toolbar that opens after clicking on a cell in the edit mode.Below you can see the settings categories for the Highcharts Component.The first three categories, Connector name, Title and Caption, are options that are also shared by other components. In Connector name you can connect an existing connector that will provide data to the component (in this case, a chart). The rest of the options are typical for this component. You can use them to configure the appearance of the chart.If you do not intend to use the connector, you can set the data using the component's internal options. In Highcharts Component you can do this by defining data in the series.data option. In the KPI Component, by setting the value option.Check how the component settings sidebar works in practice using the edit mode live example.Customizing the component settingsWhat is displayed in the settings sidebar can be customized by setting the editableOptions property in the component options.The editableOptions property is an array of objects, where each object represents a category in the settings sidebar. Each object can have the following properties:name - the name of the category,propertyPath - the path to the property in the component options that should be edited,type - the type of the input field. It can be one of the following:input - a simple text input,textarea - a textarea,toggle - a toggle switch,select - a select input requiring selectOptions property,nested - a nested category, requiring nestedOptions property,isStandalone - a boolean value that indicates whether the category should be displayed as a standalone category or as a part of the parent category....    renderTo: 'dashboard-cell-0',    type: 'Highcharts',    editableOptions: [{        isStandalone: true,        name: 'Component title',        propertyPath: ['title'],        type: 'input'      }, {        name: 'chartOptions',        type: 'nested',        nestedOptions: [{          name: 'Marker Radius',          options: [{            name: 'Marker Radius',            propertyPath: [              'chartOptions',              'plotOptions',              'series',              'marker',              'radius'            ],            type: 'select',            selectOptions: [{              name: 3            }, {              name: 5            }]          }]        }]      }    ]CopySee how it works in the edit mode live example.Customizing the context menuThe contextMenu option also allows you to edit, what should be inside the menu, which shows after clicking on the burger menu.  The items can either be a string like editMode if it is a default button, or an object, which defines the button name, onclick event and some more options. Here is the example snippet of context menu button configuration:items: [{    id: 'custom-id',    type: 'toggle',    text: 'Custom Name',    events: {        click: function () {            // onClick Event        }    }}]CopyEdit mode live exampleUse the context menu on the upper-right corner to enable and explore the edit mode.Edit mode eventsEvent listeners can be added to the board.editMode object, which will call callback functions when editing the layout or any component.The available events are:componentChanged - fired after accepting changes in the component editing sidebar.componentChangesDiscarded - fired after discarding changes in the component editing sidebar.layoutChanged - called after changes to the layout are changed. It has 6 types:newLayout - called after a new layout was added to a board,newComponent - called after a new component was added to a board,rowDestroyed - called after a row was deleted,cellDestroyed - called after a cell was deleted,cellDragEnd - called after a cell was moved,rowDragEnd - called after a row was moved.Example:U.addEvent(editMode, 'componentChanged', e => {    console.log('Component Changed', e);});U.addEvent(editMode, 'componentChangesDiscarded', e => {    console.log('Component Changes Discarded', e);});U.addEvent(editMode, 'layoutChanged', e => {    console.log('Layout Changed', e);});CopySee the live demo here.StylingAll default styles for the edit mode are defined in the dashboards.css file. It can be imported to your project by adding the following line to your CSS file:@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyYou can override them by adding your own styles to your project, for example:.highcharts-dashboards-edit-sidebar {    background-color: #f0f0f0;    border: 1px solid #ccc;    border-radius: 5px;    padding: 10px;}CopyNote that most elements used for editing the dashboard (popups, toolbars, handles, etc.) have a high (~9999) z-index value, so they are always on top of the other elements.
If you want to change this behavior, you can override the z-index value in your CSS file.\n\nEdit modeEdit mode is a mode in which the user can change the appearance of the dashboard through the User Interface (UI).
When the dashboard is declared with custom HTML structure, the edit mode is limited to the component settings only.IntroductionTo be able to use Dashboards with the layout system and edit mode, you first have to load the layout module.
The order of the imports is important, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyIn addition, this option has to be enabled in the dashboard configuration:editMode: {    enabled: true,    contextMenu: {        enabled: true    }},CopyEdit mode can now be enabled by the burger menu in the upper right corner.When edit mode is enabled, the appearance of the dashboard changes. When hovering over a cell a blue border appears around it. The border of the row containing the cell turns green. Additionally, both the row and the cell get a tooltip, which allows the user to change its position, change its options, or just delete it.Note that when dashboard is declared with custom HTML structure, only the component setting can be edited. The layout cannot be changed.Next to the burger menu, the Add Component button is added.Add ComponentAvailable only when Dashboarda is declared with the layout system- using the gui configuration.The Add Component button allows the user to add a new component. When clicked, a sidebar appears, and it lets you choose the type of component you want to add and then by drag&drop, the component type can be selected and dragged to the correct place, indicated by the drop marker.The sidebar lists the component types provided by the Dashboards API but only the ones whose modules are loaded. If other types are needed, add the extra modules. The order and the components on the list can be changed by setting the components array in the editMode option - API.In order to add other custom components to the list, please follow the custom component guide.After dragging a component into the preferred place in the layout, a sidebar with the component settings will appear.Component settingsEach component type has its own properties. The most important ones can be set using the settings sidebar. It opens automatically after adding any component, but it can also be opened by clicking on the gear icon that appears in the toolbar that opens after clicking on a cell in the edit mode.Below you can see the settings categories for the Highcharts Component.The first three categories, Connector name, Title and Caption, are options that are also shared by other components. In Connector name you can connect an existing connector that will provide data to the component (in this case, a chart). The rest of the options are typical for this component. You can use them to configure the appearance of the chart.If you do not intend to use the connector, you can set the data using the component's internal options. In Highcharts Component you can do this by defining data in the series.data option. In the KPI Component, by setting the value option.Check how the component settings sidebar works in practice using the edit mode live example.Customizing the component settingsWhat is displayed in the settings sidebar can be customized by setting the editableOptions property in the component options.The editableOptions property is an array of objects, where each object represents a category in the settings sidebar. Each object can have the following properties:name - the name of the category,propertyPath - the path to the property in the component options that should be edited,type - the type of the input field. It can be one of the following:input - a simple text input,textarea - a textarea,toggle - a toggle switch,select - a select input requiring selectOptions property,nested - a nested category, requiring nestedOptions property,isStandalone - a boolean value that indicates whether the category should be displayed as a standalone category or as a part of the parent category....    renderTo: 'dashboard-cell-0',    type: 'Highcharts',    editableOptions: [{        isStandalone: true,        name: 'Component title',        propertyPath: ['title'],        type: 'input'      }, {        name: 'chartOptions',        type: 'nested',        nestedOptions: [{          name: 'Marker Radius',          options: [{            name: 'Marker Radius',            propertyPath: [              'chartOptions',              'plotOptions',              'series',              'marker',              'radius'            ],            type: 'select',            selectOptions: [{              name: 3            }, {              name: 5            }]          }]        }]      }    ]CopySee how it works in the edit mode live example.Customizing the context menuThe contextMenu option also allows you to edit, what should be inside the menu, which shows after clicking on the burger menu.  The items can either be a string like editMode if it is a default button, or an object, which defines the button name, onclick event and some more options. Here is the example snippet of context menu button configuration:items: [{    id: 'custom-id',    type: 'toggle',    text: 'Custom Name',    events: {        click: function () {            // onClick Event        }    }}]CopyEdit mode live exampleUse the context menu on the upper-right corner to enable and explore the edit mode.Edit mode eventsEvent listeners can be added to the board.editMode object, which will call callback functions when editing the layout or any component.The available events are:componentChanged - fired after accepting changes in the component editing sidebar.componentChangesDiscarded - fired after discarding changes in the component editing sidebar.layoutChanged - called after changes to the layout are changed. It has 6 types:newLayout - called after a new layout was added to a board,newComponent - called after a new component was added to a board,rowDestroyed - called after a row was deleted,cellDestroyed - called after a cell was deleted,cellDragEnd - called after a cell was moved,rowDragEnd - called after a row was moved.Example:U.addEvent(editMode, 'componentChanged', e => {    console.log('Component Changed', e);});U.addEvent(editMode, 'componentChangesDiscarded', e => {    console.log('Component Changes Discarded', e);});U.addEvent(editMode, 'layoutChanged', e => {    console.log('Layout Changed', e);});CopySee the live demo here.StylingAll default styles for the edit mode are defined in the dashboards.css file. It can be imported to your project by adding the following line to your CSS file:@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyYou can override them by adding your own styles to your project, for example:.highcharts-dashboards-edit-sidebar {    background-color: #f0f0f0;    border: 1px solid #ccc;    border-radius: 5px;    padding: 10px;}CopyNote that most elements used for editing the dashboard (popups, toolbars, handles, etc.) have a high (~9999) z-index value, so they are always on top of the other elements.
If you want to change this behavior, you can override the z-index value in your CSS file.Edit this pagePrevious« Style by CSS NextTypes of Dashboards components  »IntroductionAdd ComponentComponent settingsCustomizing the component settingsCustomizing the context menuEdit mode live exampleEdit mode eventsStyling\n\nEdit modeEdit mode is a mode in which the user can change the appearance of the dashboard through the User Interface (UI).
When the dashboard is declared with custom HTML structure, the edit mode is limited to the component settings only.IntroductionTo be able to use Dashboards with the layout system and edit mode, you first have to load the layout module.
The order of the imports is important, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);CopyIf you use ESM, you can also import the modules directly from the package:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src.js';import '@highcharts/dashboards/es-modules/masters/modules/layout.src.js';CopyIn addition, this option has to be enabled in the dashboard configuration:editMode: {    enabled: true,    contextMenu: {        enabled: true    }},CopyEdit mode can now be enabled by the burger menu in the upper right corner.When edit mode is enabled, the appearance of the dashboard changes. When hovering over a cell a blue border appears around it. The border of the row containing the cell turns green. Additionally, both the row and the cell get a tooltip, which allows the user to change its position, change its options, or just delete it.Note that when dashboard is declared with custom HTML structure, only the component setting can be edited. The layout cannot be changed.Next to the burger menu, the Add Component button is added.Add ComponentAvailable only when Dashboarda is declared with the layout system- using the gui configuration.The Add Component button allows the user to add a new component. When clicked, a sidebar appears, and it lets you choose the type of component you want to add and then by drag&drop, the component type can be selected and dragged to the correct place, indicated by the drop marker.The sidebar lists the component types provided by the Dashboards API but only the ones whose modules are loaded. If other types are needed, add the extra modules. The order and the components on the list can be changed by setting the components array in the editMode option - API.In order to add other custom components to the list, please follow the custom component guide.After dragging a component into the preferred place in the layout, a sidebar with the component settings will appear.Component settingsEach component type has its own properties. The most important ones can be set using the settings sidebar. It opens automatically after adding any component, but it can also be opened by clicking on the gear icon that appears in the toolbar that opens after clicking on a cell in the edit mode.Below you can see the settings categories for the Highcharts Component.The first three categories, Connector name, Title and Caption, are options that are also shared by other components. In Connector name you can connect an existing connector that will provide data to the component (in this case, a chart). The rest of the options are typical for this component. You can use them to configure the appearance of the chart.If you do not intend to use the connector, you can set the data using the component's internal options. In Highcharts Component you can do this by defining data in the series.data option. In the KPI Component, by setting the value option.Check how the component settings sidebar works in practice using the edit mode live example.Customizing the component settingsWhat is displayed in the settings sidebar can be customized by setting the editableOptions property in the component options.The editableOptions property is an array of objects, where each object represents a category in the settings sidebar. Each object can have the following properties:name - the name of the category,propertyPath - the path to the property in the component options that should be edited,type - the type of the input field. It can be one of the following:input - a simple text input,textarea - a textarea,toggle - a toggle switch,select - a select input requiring selectOptions property,nested - a nested category, requiring nestedOptions property,isStandalone - a boolean value that indicates whether the category should be displayed as a standalone category or as a part of the parent category....    renderTo: 'dashboard-cell-0',    type: 'Highcharts',    editableOptions: [{        isStandalone: true,        name: 'Component title',        propertyPath: ['title'],        type: 'input'      }, {        name: 'chartOptions',        type: 'nested',        nestedOptions: [{          name: 'Marker Radius',          options: [{            name: 'Marker Radius',            propertyPath: [              'chartOptions',              'plotOptions',              'series',              'marker',              'radius'            ],            type: 'select',            selectOptions: [{              name: 3            }, {              name: 5            }]          }]        }]      }    ]CopySee how it works in the edit mode live example.Customizing the context menuThe contextMenu option also allows you to edit, what should be inside the menu, which shows after clicking on the burger menu.  The items can either be a string like editMode if it is a default button, or an object, which defines the button name, onclick event and some more options. Here is the example snippet of context menu button configuration:items: [{    id: 'custom-id',    type: 'toggle',    text: 'Custom Name',    events: {        click: function () {            // onClick Event        }    }}]CopyEdit mode live exampleUse the context menu on the upper-right corner to enable and explore the edit mode.Edit mode eventsEvent listeners can be added to the board.editMode object, which will call callback functions when editing the layout or any component.The available events are:componentChanged - fired after accepting changes in the component editing sidebar.componentChangesDiscarded - fired after discarding changes in the component editing sidebar.layoutChanged - called after changes to the layout are changed. It has 6 types:newLayout - called after a new layout was added to a board,newComponent - called after a new component was added to a board,rowDestroyed - called after a row was deleted,cellDestroyed - called after a cell was deleted,cellDragEnd - called after a cell was moved,rowDragEnd - called after a row was moved.Example:U.addEvent(editMode, 'componentChanged', e => {    console.log('Component Changed', e);});U.addEvent(editMode, 'componentChangesDiscarded', e => {    console.log('Component Changes Discarded', e);});U.addEvent(editMode, 'layoutChanged', e => {    console.log('Layout Changed', e);});CopySee the live demo here.StylingAll default styles for the edit mode are defined in the dashboards.css file. It can be imported to your project by adding the following line to your CSS file:@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyYou can override them by adding your own styles to your project, for example:.highcharts-dashboards-edit-sidebar {    background-color: #f0f0f0;    border: 1px solid #ccc;    border-radius: 5px;    padding: 10px;}CopyNote that most elements used for editing the dashboard (popups, toolbars, handles, etc.) have a high (~9999) z-index value, so they are always on top of the other elements.
If you want to change this behavior, you can override the z-index value in your CSS file.Edit this pagePrevious« Style by CSS NextTypes of Dashboards components  »IntroductionAdd ComponentComponent settingsCustomizing the component settingsCustomizing the context menuEdit mode live exampleEdit mode eventsStyling\n\n\n\nTypes of Dashboards componentsComponents are the building blocks of Dashboards layout. Several types of components are provided and can be used out of the box. The KPI, Highcharts, and Grid components come pre-configured with default configurations, whereas the HTML component can be customized to fit specific needs. It is also possible to create and register Custom components. OverviewThis is an overview of the most critical parameters of a component:id - The unique identifier of the component, which is later used to identify it by dashboard and/or used to set CSS styles.renderTo - id of the cell to which the component should be renderedclassName - CSS class that is applied to the component's containertype - the type of the component. It can be HTML, KPI, Highcharts,
Grid or custom defined.events - an object containing a pair of names for the event and a callback function that should be called on a given event. The list of events can be found in the API Reference, but the most common is mount.sync - list of events that should be synchronized between components.HTML ComponentThe most basic and generic component type allows you to add everything that could be defined as HTML, as well as some custom events.The HTML component can be defined in two ways:  1. Abstract Syntax Tree (AST) styleDefines the HTML code as a nested tree structure.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    elements: [{        tagName: 'img',        attributes: {            src: 'https://www.highcharts.com/samples/graphics/stock-dark.svg'        }    }]}Copy2. HTML stringDefines the HTML code as a standard HTML string.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    html: '<img src="https://www.highcharts.com/samples/graphics/stock-dark.svg">'}CopyThis example exhibits both approaches to defining HTML components.Custom HTML components are explained in the Custom Component section below.See the HTML Component page for detailed information.Highcharts ComponentDashboards support the use of Highcharts charts or maps out of the box.The highcharts module must be imported before the dashboards module, as shown here:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe HighchartsCSS file must be included for the correct chart rendering.@import url("https://code.highcharts.com/css/highcharts.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Highcharts must be specified, the renderTo option set must be set, and data must be provided as part of the chartOptions.
In addition, the chartOptions object allows you to configure anything that can be configured in a stand-alone Highcharts chart.Data may be provided directly in the chart option, but in a Dashboards application, one often wants to share data between components. In this case, the Data Pool mechanism offers a convenient solution.Code snippet with data embedded in the chart options, no data connector used:{    renderTo: 'dashboard-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}CopyThe above code snippet is part of a Highcharts Component example that uses embedded data.Code snippet using the Data Connector mechanism.dataPool: {    connectors: [{        id: 'micro-element',        type: 'JSON',        options: {            firstRowAsNames: false,            columnNames: ['Food', 'Vitamin A',  'Iron'],            data: [                ['Beef Liver', 6421, 6.5],                ['Lamb Liver', 2122, 6.5],                ['Cod Liver Oil', 1350, 0.9],                ['Mackerel', 388, 1],                ['Tuna', 214, 0.6]            ]        }    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    connector: {        id: 'micro-element',        columnAssignment: [{            seriesId: 'Vitamin A',            data: ['Food', 'Vitamin A']        }]    }}]CopyThe above code snippet is part of a Highcharts Component example that uses data shared via a DataConnector.When using a Data Connector, the data is parsed and organized in rows, with columnNames either given explicitly or used as column names in the first row.The chart then uses the columnAssignment option to map the values of a specific column to the chart's series.
Here is an example that uses column assignment.You can load the Highcharts drag-drop module if the data connector is connected.
This allows the user to change the value and sync the changes of this value with other
components. If a mathModifier is applied to the data from the connector,
chart editing is disabled. See the dataPool section for more details.See the HighchartsComponent page for detailed information.Grid ComponentTo visualize data in a row-column layout, you can use the Grid component. The Grid module must be imported before the Dashboards module as shown here:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe Grid module has its own style set, so the CSS file must be imported for correct rendering.@import url("https://code.highcharts.com/dashboards/css/datagrid.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Grid must be specified, the renderTo option set, and data must be provided as an embedded dataTable object or via a DataConnector. In addition, the dataGridOptions object allows you to configure Grid specific parameters like cell formatting, column assignment, etc.The Grid may have the series data directly embedded as part of the dataGridOptions. However, a more common usage is the Dashboards' data pool mechanism, which shares data between the dashboard components. In this case, the id of the DataConnector must be included in the data grid's configuration.Code snippet with data embedded in the Grid data table; no data connector used.{    renderTo: 'dashboard-1',    type: 'Grid',    dataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5]        }    }}CopyThe above code snippet is part of a Grid example that uses embedded data.Code snippet using a data connector.dataPool: {    connectors: [{        id: 'data',        type: 'JSON',        options: {            data: [                ['Product Name', 'Quantity', 'Revenue', 'Category'],                ['Laptop', 100, 2000, 'Electronics'],                ['Smartphone', 150, 3300, 'Electronics'],                ['Desk Chair', 120, 2160, 'Furniture'],                ['Coffee Maker', 90, 1890, 'Appliances'],                ['Headphones', 200, 3200, 'Electronics'],                ['Dining Table', 130, 2470, 'Furniture'],                ['Refrigerator', 170, 2890, 'Appliances']            ]        }    }]},{    type: 'Grid',    renderTo: 'cell-id-2',    connector: {        id: 'data'    }}CopyThe above code snippet is part of a Grid example that uses data shared via a DataConnector.When using the data connector, the Grid is automatically populated. If other components are using the same data connector, they will be automatically updated when the user edits a data grid cell. Here is the example.NB! If the data was created by the mathModifier, cell editing is disabled by default.See the Grid Component page for more information.KPI ComponentThe KPI component (Key Performance Indicator) facilitates the visualization of one single value in a data set. It is a simple component that displays a title and a value but can also include a Highcharts component to visualize the value, typically a gauge. Additionally, the component can be configured with threshold values, which can adapt its style according to its current value.This component type is bundled with the Highcharts plugin, and you need to connect the Highcharts with the dashboard plugin to use it (similar to the Highcharts component).Code snippet:{    renderTo: 'kpi-00',    type: 'KPI',    title: 'Average revenue',    value: 888,    threshold: [200, 800],    thresholdColors: ['#f45b5b', '#f7a35c', '#90ed7d']},CopyThe above code snippet is part of a KPI component example.See the KPI Component page for more information.\n\nTypes of Dashboards componentsComponents are the building blocks of Dashboards layout. Several types of components are provided and can be used out of the box. The KPI, Highcharts, and Grid components come pre-configured with default configurations, whereas the HTML component can be customized to fit specific needs. It is also possible to create and register Custom components. OverviewThis is an overview of the most critical parameters of a component:id - The unique identifier of the component, which is later used to identify it by dashboard and/or used to set CSS styles.renderTo - id of the cell to which the component should be renderedclassName - CSS class that is applied to the component's containertype - the type of the component. It can be HTML, KPI, Highcharts,
Grid or custom defined.events - an object containing a pair of names for the event and a callback function that should be called on a given event. The list of events can be found in the API Reference, but the most common is mount.sync - list of events that should be synchronized between components.HTML ComponentThe most basic and generic component type allows you to add everything that could be defined as HTML, as well as some custom events.The HTML component can be defined in two ways:  1. Abstract Syntax Tree (AST) styleDefines the HTML code as a nested tree structure.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    elements: [{        tagName: 'img',        attributes: {            src: 'https://www.highcharts.com/samples/graphics/stock-dark.svg'        }    }]}Copy2. HTML stringDefines the HTML code as a standard HTML string.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    html: '<img src="https://www.highcharts.com/samples/graphics/stock-dark.svg">'}CopyThis example exhibits both approaches to defining HTML components.Custom HTML components are explained in the Custom Component section below.See the HTML Component page for detailed information.Highcharts ComponentDashboards support the use of Highcharts charts or maps out of the box.The highcharts module must be imported before the dashboards module, as shown here:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe HighchartsCSS file must be included for the correct chart rendering.@import url("https://code.highcharts.com/css/highcharts.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Highcharts must be specified, the renderTo option set must be set, and data must be provided as part of the chartOptions.
In addition, the chartOptions object allows you to configure anything that can be configured in a stand-alone Highcharts chart.Data may be provided directly in the chart option, but in a Dashboards application, one often wants to share data between components. In this case, the Data Pool mechanism offers a convenient solution.Code snippet with data embedded in the chart options, no data connector used:{    renderTo: 'dashboard-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}CopyThe above code snippet is part of a Highcharts Component example that uses embedded data.Code snippet using the Data Connector mechanism.dataPool: {    connectors: [{        id: 'micro-element',        type: 'JSON',        options: {            firstRowAsNames: false,            columnNames: ['Food', 'Vitamin A',  'Iron'],            data: [                ['Beef Liver', 6421, 6.5],                ['Lamb Liver', 2122, 6.5],                ['Cod Liver Oil', 1350, 0.9],                ['Mackerel', 388, 1],                ['Tuna', 214, 0.6]            ]        }    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    connector: {        id: 'micro-element',        columnAssignment: [{            seriesId: 'Vitamin A',            data: ['Food', 'Vitamin A']        }]    }}]CopyThe above code snippet is part of a Highcharts Component example that uses data shared via a DataConnector.When using a Data Connector, the data is parsed and organized in rows, with columnNames either given explicitly or used as column names in the first row.The chart then uses the columnAssignment option to map the values of a specific column to the chart's series.
Here is an example that uses column assignment.You can load the Highcharts drag-drop module if the data connector is connected.
This allows the user to change the value and sync the changes of this value with other
components. If a mathModifier is applied to the data from the connector,
chart editing is disabled. See the dataPool section for more details.See the HighchartsComponent page for detailed information.Grid ComponentTo visualize data in a row-column layout, you can use the Grid component. The Grid module must be imported before the Dashboards module as shown here:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe Grid module has its own style set, so the CSS file must be imported for correct rendering.@import url("https://code.highcharts.com/dashboards/css/datagrid.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Grid must be specified, the renderTo option set, and data must be provided as an embedded dataTable object or via a DataConnector. In addition, the dataGridOptions object allows you to configure Grid specific parameters like cell formatting, column assignment, etc.The Grid may have the series data directly embedded as part of the dataGridOptions. However, a more common usage is the Dashboards' data pool mechanism, which shares data between the dashboard components. In this case, the id of the DataConnector must be included in the data grid's configuration.Code snippet with data embedded in the Grid data table; no data connector used.{    renderTo: 'dashboard-1',    type: 'Grid',    dataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5]        }    }}CopyThe above code snippet is part of a Grid example that uses embedded data.Code snippet using a data connector.dataPool: {    connectors: [{        id: 'data',        type: 'JSON',        options: {            data: [                ['Product Name', 'Quantity', 'Revenue', 'Category'],                ['Laptop', 100, 2000, 'Electronics'],                ['Smartphone', 150, 3300, 'Electronics'],                ['Desk Chair', 120, 2160, 'Furniture'],                ['Coffee Maker', 90, 1890, 'Appliances'],                ['Headphones', 200, 3200, 'Electronics'],                ['Dining Table', 130, 2470, 'Furniture'],                ['Refrigerator', 170, 2890, 'Appliances']            ]        }    }]},{    type: 'Grid',    renderTo: 'cell-id-2',    connector: {        id: 'data'    }}CopyThe above code snippet is part of a Grid example that uses data shared via a DataConnector.When using the data connector, the Grid is automatically populated. If other components are using the same data connector, they will be automatically updated when the user edits a data grid cell. Here is the example.NB! If the data was created by the mathModifier, cell editing is disabled by default.See the Grid Component page for more information.KPI ComponentThe KPI component (Key Performance Indicator) facilitates the visualization of one single value in a data set. It is a simple component that displays a title and a value but can also include a Highcharts component to visualize the value, typically a gauge. Additionally, the component can be configured with threshold values, which can adapt its style according to its current value.This component type is bundled with the Highcharts plugin, and you need to connect the Highcharts with the dashboard plugin to use it (similar to the Highcharts component).Code snippet:{    renderTo: 'kpi-00',    type: 'KPI',    title: 'Average revenue',    value: 888,    threshold: [200, 800],    thresholdColors: ['#f45b5b', '#f7a35c', '#90ed7d']},CopyThe above code snippet is part of a KPI component example.See the KPI Component page for more information.Edit this pagePrevious« Edit mode NextGrid Component  »OverviewHTML Component1. Abstract Syntax Tree (AST) style2. HTML stringHighcharts ComponentGrid ComponentKPI Component\n\nTypes of Dashboards componentsComponents are the building blocks of Dashboards layout. Several types of components are provided and can be used out of the box. The KPI, Highcharts, and Grid components come pre-configured with default configurations, whereas the HTML component can be customized to fit specific needs. It is also possible to create and register Custom components. OverviewThis is an overview of the most critical parameters of a component:id - The unique identifier of the component, which is later used to identify it by dashboard and/or used to set CSS styles.renderTo - id of the cell to which the component should be renderedclassName - CSS class that is applied to the component's containertype - the type of the component. It can be HTML, KPI, Highcharts,
Grid or custom defined.events - an object containing a pair of names for the event and a callback function that should be called on a given event. The list of events can be found in the API Reference, but the most common is mount.sync - list of events that should be synchronized between components.HTML ComponentThe most basic and generic component type allows you to add everything that could be defined as HTML, as well as some custom events.The HTML component can be defined in two ways:  1. Abstract Syntax Tree (AST) styleDefines the HTML code as a nested tree structure.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    elements: [{        tagName: 'img',        attributes: {            src: 'https://www.highcharts.com/samples/graphics/stock-dark.svg'        }    }]}Copy2. HTML stringDefines the HTML code as a standard HTML string.Code snippet:{    type: 'HTML',    renderTo: 'dashboard-1',    html: '<img src="https://www.highcharts.com/samples/graphics/stock-dark.svg">'}CopyThis example exhibits both approaches to defining HTML components.Custom HTML components are explained in the Custom Component section below.See the HTML Component page for detailed information.Highcharts ComponentDashboards support the use of Highcharts charts or maps out of the box.The highcharts module must be imported before the dashboards module, as shown here:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe HighchartsCSS file must be included for the correct chart rendering.@import url("https://code.highcharts.com/css/highcharts.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Highcharts must be specified, the renderTo option set must be set, and data must be provided as part of the chartOptions.
In addition, the chartOptions object allows you to configure anything that can be configured in a stand-alone Highcharts chart.Data may be provided directly in the chart option, but in a Dashboards application, one often wants to share data between components. In this case, the Data Pool mechanism offers a convenient solution.Code snippet with data embedded in the chart options, no data connector used:{    renderTo: 'dashboard-1',    type: 'Highcharts',    chartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }}CopyThe above code snippet is part of a Highcharts Component example that uses embedded data.Code snippet using the Data Connector mechanism.dataPool: {    connectors: [{        id: 'micro-element',        type: 'JSON',        options: {            firstRowAsNames: false,            columnNames: ['Food', 'Vitamin A',  'Iron'],            data: [                ['Beef Liver', 6421, 6.5],                ['Lamb Liver', 2122, 6.5],                ['Cod Liver Oil', 1350, 0.9],                ['Mackerel', 388, 1],                ['Tuna', 214, 0.6]            ]        }    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    connector: {        id: 'micro-element',        columnAssignment: [{            seriesId: 'Vitamin A',            data: ['Food', 'Vitamin A']        }]    }}]CopyThe above code snippet is part of a Highcharts Component example that uses data shared via a DataConnector.When using a Data Connector, the data is parsed and organized in rows, with columnNames either given explicitly or used as column names in the first row.The chart then uses the columnAssignment option to map the values of a specific column to the chart's series.
Here is an example that uses column assignment.You can load the Highcharts drag-drop module if the data connector is connected.
This allows the user to change the value and sync the changes of this value with other
components. If a mathModifier is applied to the data from the connector,
chart editing is disabled. See the dataPool section for more details.See the HighchartsComponent page for detailed information.Grid ComponentTo visualize data in a row-column layout, you can use the Grid component. The Grid module must be imported before the Dashboards module as shown here:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyThe Grid module has its own style set, so the CSS file must be imported for correct rendering.@import url("https://code.highcharts.com/dashboards/css/datagrid.css");@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyFor a chart to be displayed, the type Grid must be specified, the renderTo option set, and data must be provided as an embedded dataTable object or via a DataConnector. In addition, the dataGridOptions object allows you to configure Grid specific parameters like cell formatting, column assignment, etc.The Grid may have the series data directly embedded as part of the dataGridOptions. However, a more common usage is the Dashboards' data pool mechanism, which shares data between the dashboard components. In this case, the id of the DataConnector must be included in the data grid's configuration.Code snippet with data embedded in the Grid data table; no data connector used.{    renderTo: 'dashboard-1',    type: 'Grid',    dataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5]        }    }}CopyThe above code snippet is part of a Grid example that uses embedded data.Code snippet using a data connector.dataPool: {    connectors: [{        id: 'data',        type: 'JSON',        options: {            data: [                ['Product Name', 'Quantity', 'Revenue', 'Category'],                ['Laptop', 100, 2000, 'Electronics'],                ['Smartphone', 150, 3300, 'Electronics'],                ['Desk Chair', 120, 2160, 'Furniture'],                ['Coffee Maker', 90, 1890, 'Appliances'],                ['Headphones', 200, 3200, 'Electronics'],                ['Dining Table', 130, 2470, 'Furniture'],                ['Refrigerator', 170, 2890, 'Appliances']            ]        }    }]},{    type: 'Grid',    renderTo: 'cell-id-2',    connector: {        id: 'data'    }}CopyThe above code snippet is part of a Grid example that uses data shared via a DataConnector.When using the data connector, the Grid is automatically populated. If other components are using the same data connector, they will be automatically updated when the user edits a data grid cell. Here is the example.NB! If the data was created by the mathModifier, cell editing is disabled by default.See the Grid Component page for more information.KPI ComponentThe KPI component (Key Performance Indicator) facilitates the visualization of one single value in a data set. It is a simple component that displays a title and a value but can also include a Highcharts component to visualize the value, typically a gauge. Additionally, the component can be configured with threshold values, which can adapt its style according to its current value.This component type is bundled with the Highcharts plugin, and you need to connect the Highcharts with the dashboard plugin to use it (similar to the Highcharts component).Code snippet:{    renderTo: 'kpi-00',    type: 'KPI',    title: 'Average revenue',    value: 888,    threshold: [200, 800],    thresholdColors: ['#f45b5b', '#f7a35c', '#90ed7d']},CopyThe above code snippet is part of a KPI component example.See the KPI Component page for more information.Edit this pagePrevious« Edit mode NextGrid Component  »OverviewHTML Component1. Abstract Syntax Tree (AST) style2. HTML stringHighcharts ComponentGrid ComponentKPI Component\n\n\n\nGrid ComponentHighcharts Grid Pro can be placed as a component inside a dashboard's cell to allow users to visualize the data a tabular format.How to start1. ImportTo use Grid Pro as a component in Dashboards, you need to import the required modules, datagrid.js and dashboards.js, and bind them together.The order of the imports is essential, so ensure the Dashboards module is imported after the Grid module.<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyAlternatively, you can also use NPM packages (see: Installation) and import to connect them to the Dashboards.import * as Dashboards from '@highcharts/dashboards';import * as Grid from '@highcharts/dashboards/datagrid';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy2. CSSYou must also import the styles in your main CSS file.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");Copy3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard and the content of the Grid is rendered here.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy4. DataYou will also need some data to display in your Grid Component. For this purpose, you can, for example, define a connector that contains data in the CSV format.dataPool: {    connectors: [{        id: 'data',        type: 'CSV',        options: {            csv: `Food,Vitamin A,Iron            Beef Liver,6421,6.5            Lamb Liver,2122,6.5            Cod Liver Oil,1350,0.9            Mackerel,388,1            Tuna,214,0.6`        }    }]}CopyClick here to read more about data handling.5. RenderingOnce you have the data and where to place your component, you can define it as below. In the renderTo option, we're passing the ID of the cell, (which we described above or created in our layout), and the ID of the connector with the data in the connector.id option (point 4). For the component to be created as a Grid, it was set with the type option to 'Grid'.components: [{    renderTo: 'dashboard-col-1',    connector: {        id: 'data'    },    type: 'Grid'}]CopyTo see more options available for the Grid Component, click here.See the summarized JS code needed to create a simple Grid:Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'data',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`            }        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-1'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-1',        connector: {            id: 'data'        },        type: 'Grid'    }]});CopyGrid optionsSee the Grid documentation to read more about it
or use the API documentation to see the available options for the Grid component.Data modifiersData modifiers allow manipulation of data provided to connectors to be placed in a modified version, e.g. in the Grid Component.There are different types of data modifiers:Chain - A chain of modifiers executed in a fixed order.Invert - The invert modifier reverses the order of displayed rows.Range - Range modifiers allow selecting rows to be displayed based on specific ranges regarding data from specific columns.Sort - Sort modifiers allow the display order of rows to be set based on the result of sorting the data in specific columns.Math - Math modifiers allow the creation of additional columns with data mathematically transformed from another column.The dataModifier option can be used in the connectors options, as follows:connectors: [{    id: 'data',    type: 'CSV',    options: {        csv: `A,B        1,3        20,2        100,2`,        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'Sum',                formula: 'A1+B1'            }]        }    }}]CopyIn this example, a column named Sum is created with data that is the sum of the numbers in the previous columns in the row.Note that you also need to import modules to use the appropriate modifiers. For example:<script src="https://code.highcharts.com/dashboards/modules/math-modifier.js"></script>CopyComponent synchronizationOne of the many available options for the Grid Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync for the Grid Component can have additional options:sync: {    highlight: {        enabled: true,        autoScroll: true    }}CopyIf you want to scroll the Grid Component automatically to a highlighted row, turn on
the autoScroll option.Demo:\n\nGrid ComponentHighcharts Grid Pro can be placed as a component inside a dashboard's cell to allow users to visualize the data a tabular format.How to start1. ImportTo use Grid Pro as a component in Dashboards, you need to import the required modules, datagrid.js and dashboards.js, and bind them together.The order of the imports is essential, so ensure the Dashboards module is imported after the Grid module.<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyAlternatively, you can also use NPM packages (see: Installation) and import to connect them to the Dashboards.import * as Dashboards from '@highcharts/dashboards';import * as Grid from '@highcharts/dashboards/datagrid';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy2. CSSYou must also import the styles in your main CSS file.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");Copy3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard and the content of the Grid is rendered here.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy4. DataYou will also need some data to display in your Grid Component. For this purpose, you can, for example, define a connector that contains data in the CSV format.dataPool: {    connectors: [{        id: 'data',        type: 'CSV',        options: {            csv: `Food,Vitamin A,Iron            Beef Liver,6421,6.5            Lamb Liver,2122,6.5            Cod Liver Oil,1350,0.9            Mackerel,388,1            Tuna,214,0.6`        }    }]}CopyClick here to read more about data handling.5. RenderingOnce you have the data and where to place your component, you can define it as below. In the renderTo option, we're passing the ID of the cell, (which we described above or created in our layout), and the ID of the connector with the data in the connector.id option (point 4). For the component to be created as a Grid, it was set with the type option to 'Grid'.components: [{    renderTo: 'dashboard-col-1',    connector: {        id: 'data'    },    type: 'Grid'}]CopyTo see more options available for the Grid Component, click here.See the summarized JS code needed to create a simple Grid:Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'data',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`            }        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-1'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-1',        connector: {            id: 'data'        },        type: 'Grid'    }]});CopyGrid optionsSee the Grid documentation to read more about it
or use the API documentation to see the available options for the Grid component.Data modifiersData modifiers allow manipulation of data provided to connectors to be placed in a modified version, e.g. in the Grid Component.There are different types of data modifiers:Chain - A chain of modifiers executed in a fixed order.Invert - The invert modifier reverses the order of displayed rows.Range - Range modifiers allow selecting rows to be displayed based on specific ranges regarding data from specific columns.Sort - Sort modifiers allow the display order of rows to be set based on the result of sorting the data in specific columns.Math - Math modifiers allow the creation of additional columns with data mathematically transformed from another column.The dataModifier option can be used in the connectors options, as follows:connectors: [{    id: 'data',    type: 'CSV',    options: {        csv: `A,B        1,3        20,2        100,2`,        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'Sum',                formula: 'A1+B1'            }]        }    }}]CopyIn this example, a column named Sum is created with data that is the sum of the numbers in the previous columns in the row.Note that you also need to import modules to use the appropriate modifiers. For example:<script src="https://code.highcharts.com/dashboards/modules/math-modifier.js"></script>CopyComponent synchronizationOne of the many available options for the Grid Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync for the Grid Component can have additional options:sync: {    highlight: {        enabled: true,        autoScroll: true    }}CopyIf you want to scroll the Grid Component automatically to a highlighted row, turn on
the autoScroll option.Demo:Edit this pagePrevious« Types of Dashboards components NextUsing Grid Pro as a standalone component  »How to start1. Import2. CSS3. Cell identifier4. Data5. RenderingGrid optionsData modifiersComponent synchronizationHighlight sync options\n\nGrid ComponentHighcharts Grid Pro can be placed as a component inside a dashboard's cell to allow users to visualize the data a tabular format.How to start1. ImportTo use Grid Pro as a component in Dashboards, you need to import the required modules, datagrid.js and dashboards.js, and bind them together.The order of the imports is essential, so ensure the Dashboards module is imported after the Grid module.<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script>CopyAlternatively, you can also use NPM packages (see: Installation) and import to connect them to the Dashboards.import * as Dashboards from '@highcharts/dashboards';import * as Grid from '@highcharts/dashboards/datagrid';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy2. CSSYou must also import the styles in your main CSS file.@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");Copy3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard and the content of the Grid is rendered here.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy4. DataYou will also need some data to display in your Grid Component. For this purpose, you can, for example, define a connector that contains data in the CSV format.dataPool: {    connectors: [{        id: 'data',        type: 'CSV',        options: {            csv: `Food,Vitamin A,Iron            Beef Liver,6421,6.5            Lamb Liver,2122,6.5            Cod Liver Oil,1350,0.9            Mackerel,388,1            Tuna,214,0.6`        }    }]}CopyClick here to read more about data handling.5. RenderingOnce you have the data and where to place your component, you can define it as below. In the renderTo option, we're passing the ID of the cell, (which we described above or created in our layout), and the ID of the connector with the data in the connector.id option (point 4). For the component to be created as a Grid, it was set with the type option to 'Grid'.components: [{    renderTo: 'dashboard-col-1',    connector: {        id: 'data'    },    type: 'Grid'}]CopyTo see more options available for the Grid Component, click here.See the summarized JS code needed to create a simple Grid:Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'data',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`            }        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-1'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-1',        connector: {            id: 'data'        },        type: 'Grid'    }]});CopyGrid optionsSee the Grid documentation to read more about it
or use the API documentation to see the available options for the Grid component.Data modifiersData modifiers allow manipulation of data provided to connectors to be placed in a modified version, e.g. in the Grid Component.There are different types of data modifiers:Chain - A chain of modifiers executed in a fixed order.Invert - The invert modifier reverses the order of displayed rows.Range - Range modifiers allow selecting rows to be displayed based on specific ranges regarding data from specific columns.Sort - Sort modifiers allow the display order of rows to be set based on the result of sorting the data in specific columns.Math - Math modifiers allow the creation of additional columns with data mathematically transformed from another column.The dataModifier option can be used in the connectors options, as follows:connectors: [{    id: 'data',    type: 'CSV',    options: {        csv: `A,B        1,3        20,2        100,2`,        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'Sum',                formula: 'A1+B1'            }]        }    }}]CopyIn this example, a column named Sum is created with data that is the sum of the numbers in the previous columns in the row.Note that you also need to import modules to use the appropriate modifiers. For example:<script src="https://code.highcharts.com/dashboards/modules/math-modifier.js"></script>CopyComponent synchronizationOne of the many available options for the Grid Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync for the Grid Component can have additional options:sync: {    highlight: {        enabled: true,        autoScroll: true    }}CopyIf you want to scroll the Grid Component automatically to a highlighted row, turn on
the autoScroll option.Demo:Edit this pagePrevious« Types of Dashboards components NextUsing Grid Pro as a standalone component  »How to start1. Import2. CSS3. Cell identifier4. Data5. RenderingGrid optionsData modifiersComponent synchronizationHighlight sync options\n\n\n\nUsing Grid Pro as a standalone componentHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component outside of Dashboards.Documentation for Highcharts Grid Pro can be found in the general documentation for Higcharts Grid.Installing Grid ProInstall via NPMYou can install Grid Pro via NPM:npm install @highcharts/dashboardsCopyThen, import the package into your project:import * as Grid from '@highcharts/dashboards/datagrid';import '@highcharts/dashboards/css/datagrid.css';CopyInclude Grid Pro via <script> tagLoad Grid Pro from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><link rel="stylesheet" href="https://code.highcharts.com/dashboards/css/datagrid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/dashboards/datagrid.js"></script><link rel="stylesheet" href="../code/dashboards/css/datagrid.css" />CopyUsageUsage is identical to standalone Grid packages, see this article to learn more.\n\nUsing Grid Pro as a standalone componentHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component outside of Dashboards.Documentation for Highcharts Grid Pro can be found in the general documentation for Higcharts Grid.Installing Grid ProInstall via NPMYou can install Grid Pro via NPM:npm install @highcharts/dashboardsCopyThen, import the package into your project:import * as Grid from '@highcharts/dashboards/datagrid';import '@highcharts/dashboards/css/datagrid.css';CopyInclude Grid Pro via <script> tagLoad Grid Pro from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><link rel="stylesheet" href="https://code.highcharts.com/dashboards/css/datagrid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/dashboards/datagrid.js"></script><link rel="stylesheet" href="../code/dashboards/css/datagrid.css" />CopyUsageUsage is identical to standalone Grid packages, see this article to learn more.Edit this pagePrevious« Grid Component NextKPI Component  »Installing Grid ProInstall via NPMInclude Grid Pro via <script> tagUsage\n\nUsing Grid Pro as a standalone componentHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component outside of Dashboards.Documentation for Highcharts Grid Pro can be found in the general documentation for Higcharts Grid.Installing Grid ProInstall via NPMYou can install Grid Pro via NPM:npm install @highcharts/dashboardsCopyThen, import the package into your project:import * as Grid from '@highcharts/dashboards/datagrid';import '@highcharts/dashboards/css/datagrid.css';CopyInclude Grid Pro via <script> tagLoad Grid Pro from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://code.highcharts.com/dashboards/datagrid.js"></script><link rel="stylesheet" href="https://code.highcharts.com/dashboards/css/datagrid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/dashboards/datagrid.js"></script><link rel="stylesheet" href="../code/dashboards/css/datagrid.css" />CopyUsageUsage is identical to standalone Grid packages, see this article to learn more.Edit this pagePrevious« Grid Component NextKPI Component  »Installing Grid ProInstall via NPMInclude Grid Pro via <script> tagUsage\n\n\n\nKPI ComponentThe KPI component allows you to visualize key performance indicators.How to startLoad DashboardsTo be able to use KPIComponent you first have to load the main Dashboards package.Define HTML cellDefine a cell using a unique identifier for example renderTo: 'dashboard-col-0'.
You can find more information how to create a layout in dashboard here.ConfigurationThe last thing that you have to do is to specify the type: 'KPI' and value: <value> in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'KPI',        title: 'My KPI',        value: 10    }]});CopyKPI with chartKPIComponent supports inclusion of a Hicgcharts chart.Required importsTo be able to use Highcharts in KPI you first have to load Highcharts.<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import * as Highcharts from 'highcharts';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyNo chart styled modeFrom version v3.0.0 the KPIComponent with chart does not use styledMode by default, no need to load the set of CSS styles to display Highcharts properly.Importing only dashboards CSS file is enough:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyAlso, be aware that we prepared the component so it was minimalist.
To achieve that, some of the chart options are already set. You can find the defaultChartOptions in the API.Chart optionsDefine chart options for the KPI.
For the full set of available chart options, see the Highcharts APIDashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        title: 'My KPI',        type: 'KPI',        value: 10,        linkedValueTo: {            enabled: false        },        chartOptions: {        series: [{            data: [734, 244, 685, 250, 920, 320, 200, 150]        }]        }    }]});CopyBy default, the KPI value is synchronized with the Y value of the first point in the first series. To turn off the synchronization, disable the linkedValueTo option as in the example above.You can also use this option to change the point to be synchronized with the value, setting its index and the index of the series it belongs to.Working with dataYou can either define static data, as you would do in the basic KPI Component (the value parameter), or use the dataPool to connect some dynamic data. The KPIComponent reflects the last value from the column (declared by columnName param) as a value itself.Here is an example that uses as connector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'value',            type: 'CSV',            options: {                csv: `Date,Value                2019-01-01,100                2019-01-02,200                2019-01-03,300                2019-01-04,400`            }        }]    },    components: [{        renderTo: 'kpi',        type: 'KPI',        title: 'Last day\'s value',        columnName: 'Value',        connector: {            id: 'value'        }    }],    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'kpi'                }]            }]        }]    }});CopyConfiguring optionsThe value can be customized by:valueFormat - a format string for the value text.valueFormat: '{value} km/h',CopyvalueFormatter - a function to format the text of the value from scratch.valueFormatter: function () {        return this.options.value + ' km/h';    },CopySync with other componentsThe KPI Component allows users to sync the component with other components in Dashboards. You can find more information about it in the sync article.API optionsFor the full set of available options, see the API.\n\nKPI ComponentThe KPI component allows you to visualize key performance indicators.How to startLoad DashboardsTo be able to use KPIComponent you first have to load the main Dashboards package.Define HTML cellDefine a cell using a unique identifier for example renderTo: 'dashboard-col-0'.
You can find more information how to create a layout in dashboard here.ConfigurationThe last thing that you have to do is to specify the type: 'KPI' and value: <value> in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'KPI',        title: 'My KPI',        value: 10    }]});CopyKPI with chartKPIComponent supports inclusion of a Hicgcharts chart.Required importsTo be able to use Highcharts in KPI you first have to load Highcharts.<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import * as Highcharts from 'highcharts';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyNo chart styled modeFrom version v3.0.0 the KPIComponent with chart does not use styledMode by default, no need to load the set of CSS styles to display Highcharts properly.Importing only dashboards CSS file is enough:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyAlso, be aware that we prepared the component so it was minimalist.
To achieve that, some of the chart options are already set. You can find the defaultChartOptions in the API.Chart optionsDefine chart options for the KPI.
For the full set of available chart options, see the Highcharts APIDashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        title: 'My KPI',        type: 'KPI',        value: 10,        linkedValueTo: {            enabled: false        },        chartOptions: {        series: [{            data: [734, 244, 685, 250, 920, 320, 200, 150]        }]        }    }]});CopyBy default, the KPI value is synchronized with the Y value of the first point in the first series. To turn off the synchronization, disable the linkedValueTo option as in the example above.You can also use this option to change the point to be synchronized with the value, setting its index and the index of the series it belongs to.Working with dataYou can either define static data, as you would do in the basic KPI Component (the value parameter), or use the dataPool to connect some dynamic data. The KPIComponent reflects the last value from the column (declared by columnName param) as a value itself.Here is an example that uses as connector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'value',            type: 'CSV',            options: {                csv: `Date,Value                2019-01-01,100                2019-01-02,200                2019-01-03,300                2019-01-04,400`            }        }]    },    components: [{        renderTo: 'kpi',        type: 'KPI',        title: 'Last day\'s value',        columnName: 'Value',        connector: {            id: 'value'        }    }],    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'kpi'                }]            }]        }]    }});CopyConfiguring optionsThe value can be customized by:valueFormat - a format string for the value text.valueFormat: '{value} km/h',CopyvalueFormatter - a function to format the text of the value from scratch.valueFormatter: function () {        return this.options.value + ' km/h';    },CopySync with other componentsThe KPI Component allows users to sync the component with other components in Dashboards. You can find more information about it in the sync article.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Using Grid Pro as a standalone component NextHighcharts Component  »How to startLoad DashboardsDefine HTML cellConfigurationKPI with chartRequired importsNo chart styled modeChart optionsWorking with dataConfiguring optionsSync with other componentsAPI options\n\nKPI ComponentThe KPI component allows you to visualize key performance indicators.How to startLoad DashboardsTo be able to use KPIComponent you first have to load the main Dashboards package.Define HTML cellDefine a cell using a unique identifier for example renderTo: 'dashboard-col-0'.
You can find more information how to create a layout in dashboard here.ConfigurationThe last thing that you have to do is to specify the type: 'KPI' and value: <value> in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'KPI',        title: 'My KPI',        value: 10    }]});CopyKPI with chartKPIComponent supports inclusion of a Hicgcharts chart.Required importsTo be able to use Highcharts in KPI you first have to load Highcharts.<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can also use the NPM package.npm install highcharts @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import * as Highcharts from 'highcharts';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);CopyNo chart styled modeFrom version v3.0.0 the KPIComponent with chart does not use styledMode by default, no need to load the set of CSS styles to display Highcharts properly.Importing only dashboards CSS file is enough:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");CopyAlso, be aware that we prepared the component so it was minimalist.
To achieve that, some of the chart options are already set. You can find the defaultChartOptions in the API.Chart optionsDefine chart options for the KPI.
For the full set of available chart options, see the Highcharts APIDashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        title: 'My KPI',        type: 'KPI',        value: 10,        linkedValueTo: {            enabled: false        },        chartOptions: {        series: [{            data: [734, 244, 685, 250, 920, 320, 200, 150]        }]        }    }]});CopyBy default, the KPI value is synchronized with the Y value of the first point in the first series. To turn off the synchronization, disable the linkedValueTo option as in the example above.You can also use this option to change the point to be synchronized with the value, setting its index and the index of the series it belongs to.Working with dataYou can either define static data, as you would do in the basic KPI Component (the value parameter), or use the dataPool to connect some dynamic data. The KPIComponent reflects the last value from the column (declared by columnName param) as a value itself.Here is an example that uses as connector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'value',            type: 'CSV',            options: {                csv: `Date,Value                2019-01-01,100                2019-01-02,200                2019-01-03,300                2019-01-04,400`            }        }]    },    components: [{        renderTo: 'kpi',        type: 'KPI',        title: 'Last day\'s value',        columnName: 'Value',        connector: {            id: 'value'        }    }],    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'kpi'                }]            }]        }]    }});CopyConfiguring optionsThe value can be customized by:valueFormat - a format string for the value text.valueFormat: '{value} km/h',CopyvalueFormatter - a function to format the text of the value from scratch.valueFormatter: function () {        return this.options.value + ' km/h';    },CopySync with other componentsThe KPI Component allows users to sync the component with other components in Dashboards. You can find more information about it in the sync article.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Using Grid Pro as a standalone component NextHighcharts Component  »How to startLoad DashboardsDefine HTML cellConfigurationKPI with chartRequired importsNo chart styled modeChart optionsWorking with dataConfiguring optionsSync with other componentsAPI options\n\n\n\nHighcharts ComponentThe Highcharts Component allows the end-user to define a chart in the dashboard. Charts are generally used to visualize changing data.How to startWe need to load the JavaScript and CSS files in the following order to get started.1. ImportTo use the Highcharts Component, you first have to load Highcharts as usual and the Dashboards to bind them together. The order of the imports is essential, so ensure the Dashboards module is imported after the Highcharts module.<script src="https://code.highcharts.com/highcharts.js"></script>    <script src="https://code.highcharts.com/dashboards/dashboards.js"></script>    <script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can use the NPM package.npm install highchartsCopyThen, import the package and the dedicated plugin to connect it to the dashboard.import * as Highcharts from 'highcharts';    import * as Dashboards from '@highcharts/dashboards';    import LayoutModule from '@highcharts/dashboards/modules/layout';    LayoutModule(Dashboards);    Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);    Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Copy2. CSSFrom version v3.0.0, the Highcharts Component does not use styledMode by default, so there is no need to load the set of CSS styles to display Highcharts properly.
Importing only Dashboards' CSS file is enough:```css@import url("https://code.highcharts.com/dashboards/css/dashboards.css");```CopyYou can enable the styled mode at any time by setting the styledMode option to true in your chart options and styling it according to the Highcharts styling guide.3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier, for example renderTo: 'dashboard-col-0'.You can find more information on creating a layout in the dashboard here.4. Chart optionsDeclare all the chart options in the chartOptions object.
For the full set of available options, see the Highcharts APIchartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }Copy5. Chart typeThe last thing you have to do is specify the type: 'Highcharts' in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyWorking with dataYou can either define static data, as you would do in the basic Highcharts chart, or use the dataPool to connect some dynamic data.
Here is the example.If the data connector is connected, you can load the Highcharts' dragDrop module to allow the user to change the value and sync the changes of this value with other components. Also, the editing is disabled by default if the series data is based on the columns in the connector, which were created by mathModifier. You can read more about it in the dataPool section.Example using a DataConnector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'Vitamin',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`,            },        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        connector: {            id: 'Vitamin'        },        chartOptions: {            title: {                text: 'Example chart'            }        }    }]});CopyAssigning column data to series dataThe data can be parsed through the columnAssignment option to map correct values from the connector to reflect them in the series.
You can also declare which columns will be the point's parameters. This is useful for series like OHLC, candlestick, column range, or arrange. The seriesId field is mandatory for properly displaying series (for instance, in the legend).
Here is the example.The data option can take three different types:1. string  one-dimensionalColumn name containing the one-dimensional data.columnAssignment: [{    seriesId: 'mySeriesId',    data: 'myData'}]Copy2. string[] two-dimensionalNames of the columns that data will be used in the two-dimensional format.columnAssignment: [{    seriesId: 'mySeriesId',    data: ['myX', 'myY']}]Copy3. Record<string, string>Object with the keys as series data key names and column names that will be used for the key-defined two-dimensional series data.columnAssignment: [{    seriesId: 'myStockSeriesId',    data: {        x: 'myX',        open: 'myOpen',        high: 'myHigh',        low: 'myLow',        close: 'myClose'    },}, {    seriesId: 'myColumnSeriesId',    data: {        name: 'myNamesColumn',        y: 'myYColumn',        'dataLabels.style.visibility': 'myDataLabelVisibilityColumn'    }}]CopyMultiple connectorsThe Highcharts Component also supports more than one data source. Therefore, the connector option must be configured as an array of objects rather than a single object.Code sample:components: [{    type: 'Highcharts',    connector: [{        id: 'connector-1',        columnAssignment: [ ... ]    }, {        id: 'connector-2',        columnAssignment: [ ... ]    }]}]CopyExample:Components synchronizationOne of the many available options for the Highcharts Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync can have additional options:sync: {    highlight: {        enabled: true,        affectedSeriesId: 'series-1',        highlightPoint: true,        showTooltip: false,        showCrosshair: true    }}CopyIf you want to force highlight sync to always affect one specific series, use the affectedSeriesId option in the argument specifying the ID of that series. When undefined, empty or set to null, option assignment works by default based on the hovered column and column assignment.Demo:If you want to determine how the highlight of points on the chart should work (i.e. whether the hover state should be set for a marker, whether the crosshair should be synced and whether the tooltip should be shown), use the highlightPoint, showCrosshair and showTooltip options. Read more in the API docs.Demo:API optionsFor the full set of available options, see the API.Highcharts CompatibilityThe Highcharts component is compatible with all Highcharts modules in v10 or higher.\n\nHighcharts ComponentThe Highcharts Component allows the end-user to define a chart in the dashboard. Charts are generally used to visualize changing data.How to startWe need to load the JavaScript and CSS files in the following order to get started.1. ImportTo use the Highcharts Component, you first have to load Highcharts as usual and the Dashboards to bind them together. The order of the imports is essential, so ensure the Dashboards module is imported after the Highcharts module.<script src="https://code.highcharts.com/highcharts.js"></script>    <script src="https://code.highcharts.com/dashboards/dashboards.js"></script>    <script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can use the NPM package.npm install highchartsCopyThen, import the package and the dedicated plugin to connect it to the dashboard.import * as Highcharts from 'highcharts';    import * as Dashboards from '@highcharts/dashboards';    import LayoutModule from '@highcharts/dashboards/modules/layout';    LayoutModule(Dashboards);    Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);    Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Copy2. CSSFrom version v3.0.0, the Highcharts Component does not use styledMode by default, so there is no need to load the set of CSS styles to display Highcharts properly.
Importing only Dashboards' CSS file is enough:```css@import url("https://code.highcharts.com/dashboards/css/dashboards.css");```CopyYou can enable the styled mode at any time by setting the styledMode option to true in your chart options and styling it according to the Highcharts styling guide.3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier, for example renderTo: 'dashboard-col-0'.You can find more information on creating a layout in the dashboard here.4. Chart optionsDeclare all the chart options in the chartOptions object.
For the full set of available options, see the Highcharts APIchartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }Copy5. Chart typeThe last thing you have to do is specify the type: 'Highcharts' in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyWorking with dataYou can either define static data, as you would do in the basic Highcharts chart, or use the dataPool to connect some dynamic data.
Here is the example.If the data connector is connected, you can load the Highcharts' dragDrop module to allow the user to change the value and sync the changes of this value with other components. Also, the editing is disabled by default if the series data is based on the columns in the connector, which were created by mathModifier. You can read more about it in the dataPool section.Example using a DataConnector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'Vitamin',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`,            },        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        connector: {            id: 'Vitamin'        },        chartOptions: {            title: {                text: 'Example chart'            }        }    }]});CopyAssigning column data to series dataThe data can be parsed through the columnAssignment option to map correct values from the connector to reflect them in the series.
You can also declare which columns will be the point's parameters. This is useful for series like OHLC, candlestick, column range, or arrange. The seriesId field is mandatory for properly displaying series (for instance, in the legend).
Here is the example.The data option can take three different types:1. string  one-dimensionalColumn name containing the one-dimensional data.columnAssignment: [{    seriesId: 'mySeriesId',    data: 'myData'}]Copy2. string[] two-dimensionalNames of the columns that data will be used in the two-dimensional format.columnAssignment: [{    seriesId: 'mySeriesId',    data: ['myX', 'myY']}]Copy3. Record<string, string>Object with the keys as series data key names and column names that will be used for the key-defined two-dimensional series data.columnAssignment: [{    seriesId: 'myStockSeriesId',    data: {        x: 'myX',        open: 'myOpen',        high: 'myHigh',        low: 'myLow',        close: 'myClose'    },}, {    seriesId: 'myColumnSeriesId',    data: {        name: 'myNamesColumn',        y: 'myYColumn',        'dataLabels.style.visibility': 'myDataLabelVisibilityColumn'    }}]CopyMultiple connectorsThe Highcharts Component also supports more than one data source. Therefore, the connector option must be configured as an array of objects rather than a single object.Code sample:components: [{    type: 'Highcharts',    connector: [{        id: 'connector-1',        columnAssignment: [ ... ]    }, {        id: 'connector-2',        columnAssignment: [ ... ]    }]}]CopyExample:Components synchronizationOne of the many available options for the Highcharts Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync can have additional options:sync: {    highlight: {        enabled: true,        affectedSeriesId: 'series-1',        highlightPoint: true,        showTooltip: false,        showCrosshair: true    }}CopyIf you want to force highlight sync to always affect one specific series, use the affectedSeriesId option in the argument specifying the ID of that series. When undefined, empty or set to null, option assignment works by default based on the hovered column and column assignment.Demo:If you want to determine how the highlight of points on the chart should work (i.e. whether the hover state should be set for a marker, whether the crosshair should be synced and whether the tooltip should be shown), use the highlightPoint, showCrosshair and showTooltip options. Read more in the API docs.Demo:API optionsFor the full set of available options, see the API.Highcharts CompatibilityThe Highcharts component is compatible with all Highcharts modules in v10 or higher.Edit this pagePrevious« KPI Component NextHTML Component  »How to start1. Import2. CSS3. Cell identifier4. Chart options5. Chart typeWorking with dataAssigning column data to series data1. string  one-dimensional2. string[] two-dimensional3. Record<string, string>Multiple connectorsComponents synchronizationHighlight sync optionsAPI optionsHighcharts Compatibility\n\nHighcharts ComponentThe Highcharts Component allows the end-user to define a chart in the dashboard. Charts are generally used to visualize changing data.How to startWe need to load the JavaScript and CSS files in the following order to get started.1. ImportTo use the Highcharts Component, you first have to load Highcharts as usual and the Dashboards to bind them together. The order of the imports is essential, so ensure the Dashboards module is imported after the Highcharts module.<script src="https://code.highcharts.com/highcharts.js"></script>    <script src="https://code.highcharts.com/dashboards/dashboards.js"></script>    <script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can use the NPM package.npm install highchartsCopyThen, import the package and the dedicated plugin to connect it to the dashboard.import * as Highcharts from 'highcharts';    import * as Dashboards from '@highcharts/dashboards';    import LayoutModule from '@highcharts/dashboards/modules/layout';    LayoutModule(Dashboards);    Dashboards.HighchartsPlugin.custom.connectHighcharts(Highcharts);    Dashboards.PluginHandler.addPlugin(Dashboards.HighchartsPlugin);Copy2. CSSFrom version v3.0.0, the Highcharts Component does not use styledMode by default, so there is no need to load the set of CSS styles to display Highcharts properly.
Importing only Dashboards' CSS file is enough:```css@import url("https://code.highcharts.com/dashboards/css/dashboards.css");```CopyYou can enable the styled mode at any time by setting the styledMode option to true in your chart options and styling it according to the Highcharts styling guide.3. Cell identifierAfter loading the necessary files, define a cell using a unique identifier, for example renderTo: 'dashboard-col-0'.You can find more information on creating a layout in the dashboard here.4. Chart optionsDeclare all the chart options in the chartOptions object.
For the full set of available options, see the Highcharts APIchartOptions: {        series: [{            data: [1, 2, 3, 4]        }]    }Copy5. Chart typeThe last thing you have to do is specify the type: 'Highcharts' in the component’s config. See the full example below.Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyWorking with dataYou can either define static data, as you would do in the basic Highcharts chart, or use the dataPool to connect some dynamic data.
Here is the example.If the data connector is connected, you can load the Highcharts' dragDrop module to allow the user to change the value and sync the changes of this value with other components. Also, the editing is disabled by default if the series data is based on the columns in the connector, which were created by mathModifier. You can read more about it in the dataPool section.Example using a DataConnector.Dashboards.board('container', {    dataPool: {        connectors: [{            id: 'Vitamin',            type: 'CSV',            options: {                csv: `Food,Vitamin A,Iron                Beef Liver,6421,6.5                Lamb Liver,2122,6.5                Cod Liver Oil,1350,0.9                Mackerel,388,1                Tuna,214,0.6`,            },        }]    },    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        renderTo: 'dashboard-col-0',        type: 'Highcharts',        connector: {            id: 'Vitamin'        },        chartOptions: {            title: {                text: 'Example chart'            }        }    }]});CopyAssigning column data to series dataThe data can be parsed through the columnAssignment option to map correct values from the connector to reflect them in the series.
You can also declare which columns will be the point's parameters. This is useful for series like OHLC, candlestick, column range, or arrange. The seriesId field is mandatory for properly displaying series (for instance, in the legend).
Here is the example.The data option can take three different types:1. string  one-dimensionalColumn name containing the one-dimensional data.columnAssignment: [{    seriesId: 'mySeriesId',    data: 'myData'}]Copy2. string[] two-dimensionalNames of the columns that data will be used in the two-dimensional format.columnAssignment: [{    seriesId: 'mySeriesId',    data: ['myX', 'myY']}]Copy3. Record<string, string>Object with the keys as series data key names and column names that will be used for the key-defined two-dimensional series data.columnAssignment: [{    seriesId: 'myStockSeriesId',    data: {        x: 'myX',        open: 'myOpen',        high: 'myHigh',        low: 'myLow',        close: 'myClose'    },}, {    seriesId: 'myColumnSeriesId',    data: {        name: 'myNamesColumn',        y: 'myYColumn',        'dataLabels.style.visibility': 'myDataLabelVisibilityColumn'    }}]CopyMultiple connectorsThe Highcharts Component also supports more than one data source. Therefore, the connector option must be configured as an array of objects rather than a single object.Code sample:components: [{    type: 'Highcharts',    connector: [{        id: 'connector-1',        columnAssignment: [ ... ]    }, {        id: 'connector-2',        columnAssignment: [ ... ]    }]}]CopyExample:Components synchronizationOne of the many available options for the Highcharts Component is the sync option, which allows setting the synchronization of component states with each other. You can find more information about it in the sync article.The sync can be an object configuration containing: highlight, visibility and extremes, which allow enabling or disabling the types of synchronization by passing the value true or false.See demos of sync types below:Extremes SyncHighlight SyncVisibility SyncHighlight sync optionsHighlight sync can have additional options:sync: {    highlight: {        enabled: true,        affectedSeriesId: 'series-1',        highlightPoint: true,        showTooltip: false,        showCrosshair: true    }}CopyIf you want to force highlight sync to always affect one specific series, use the affectedSeriesId option in the argument specifying the ID of that series. When undefined, empty or set to null, option assignment works by default based on the hovered column and column assignment.Demo:If you want to determine how the highlight of points on the chart should work (i.e. whether the hover state should be set for a marker, whether the crosshair should be synced and whether the tooltip should be shown), use the highlightPoint, showCrosshair and showTooltip options. Read more in the API docs.Demo:API optionsFor the full set of available options, see the API.Highcharts CompatibilityThe Highcharts component is compatible with all Highcharts modules in v10 or higher.Edit this pagePrevious« KPI Component NextHTML Component  »How to start1. Import2. CSS3. Cell identifier4. Chart options5. Chart typeWorking with dataAssigning column data to series data1. string  one-dimensional2. string[] two-dimensional3. Record<string, string>Multiple connectorsComponents synchronizationHighlight sync optionsAPI optionsHighcharts Compatibility\n\n\n\nHTML ComponentThe HTML Component serves as a fundamental building block in dashboards. It offers the versatility to incorporate diverse HTML content. It is a simple yet potent tool for constructing dashboards with dynamic content. The configuration structure resembles an Abstract Syntax Tree (AST), enabling definition of tag names, attributes, and nested elements or can be defined as a string representing the HTML code.Using the HTML component1. InstallationThe HTML component is the simplest component available in Highcharts Dashboards. You can find it in the main Highcharts Dashboards package.  To use it through the CDN, you need to load the following files<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package like:npm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Copy2. LayoutAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy3. OptionsWhen the placeholder is ready, component options can be defined. To do so, set the type of the component to HTML. The type is case-sensitive, so make sure to use the exact spelling.Apart from the type property, the component requires the cell property to be defined. The cell property is used to specify the cell in which the component should be placed.4. HTML elementsNow, you can define the HTML elements that will be rendered in the component.  HTML content can be defined in two ways:The elements array is an array of objects, where each object represents a single HTML element. The object usually contains the tagName which is the name of the HTML tag, e.g. div, img, p, etc. and the attributes of the element. If the text should be rendered inside the element, the textContent property can be used.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [{        tagName: 'h1',        textContent: 'Your text',        attributes: {            id: 'main-title',        }    }]}]CopyThe html property can be used to define the HTML code as a string.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    html: '<h1 id="main-title">Your text</h1>'}]CopyNested elementsIf more than one element is required, the children property can be used. The children property is an array of elements that will be nested inside the parent element. Each element can have its own children elements and is configured in the same way as the parent element.elements: [{    tagName: 'div',    children: [{        tagName: 'h1',        textContent: 'Title',        attributes: {            id: 'main-title',        }    }, {        tagName: 'p',        textContent: 'Description',        attributes: {            id: 'description',        }    }]}]CopyStyling the HTML componentThe most common way to style the HTML component is to use the CSS and utilize the className or id attributes.#main-title {  color: #4b4b4b;}#description {  text-decoration: underline;}CopyExtending the HTML componentIf some of the HTML elements are used frequently or require to be more customizable, it is possible to create a custom component that will simplify the configuration. The custom component can be created by extending the basic HTML component.
More in the Custom Component section.Components synchronizationThe HTML Component is the only component that does not support any of the predefined synchronization types. However, you can define your own sync types as needed. You can read more about it here.API optionsFor the full set of available options, see the API.\n\nHTML ComponentThe HTML Component serves as a fundamental building block in dashboards. It offers the versatility to incorporate diverse HTML content. It is a simple yet potent tool for constructing dashboards with dynamic content. The configuration structure resembles an Abstract Syntax Tree (AST), enabling definition of tag names, attributes, and nested elements or can be defined as a string representing the HTML code.Using the HTML component1. InstallationThe HTML component is the simplest component available in Highcharts Dashboards. You can find it in the main Highcharts Dashboards package.  To use it through the CDN, you need to load the following files<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package like:npm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Copy2. LayoutAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy3. OptionsWhen the placeholder is ready, component options can be defined. To do so, set the type of the component to HTML. The type is case-sensitive, so make sure to use the exact spelling.Apart from the type property, the component requires the cell property to be defined. The cell property is used to specify the cell in which the component should be placed.4. HTML elementsNow, you can define the HTML elements that will be rendered in the component.  HTML content can be defined in two ways:The elements array is an array of objects, where each object represents a single HTML element. The object usually contains the tagName which is the name of the HTML tag, e.g. div, img, p, etc. and the attributes of the element. If the text should be rendered inside the element, the textContent property can be used.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [{        tagName: 'h1',        textContent: 'Your text',        attributes: {            id: 'main-title',        }    }]}]CopyThe html property can be used to define the HTML code as a string.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    html: '<h1 id="main-title">Your text</h1>'}]CopyNested elementsIf more than one element is required, the children property can be used. The children property is an array of elements that will be nested inside the parent element. Each element can have its own children elements and is configured in the same way as the parent element.elements: [{    tagName: 'div',    children: [{        tagName: 'h1',        textContent: 'Title',        attributes: {            id: 'main-title',        }    }, {        tagName: 'p',        textContent: 'Description',        attributes: {            id: 'description',        }    }]}]CopyStyling the HTML componentThe most common way to style the HTML component is to use the CSS and utilize the className or id attributes.#main-title {  color: #4b4b4b;}#description {  text-decoration: underline;}CopyExtending the HTML componentIf some of the HTML elements are used frequently or require to be more customizable, it is possible to create a custom component that will simplify the configuration. The custom component can be created by extending the basic HTML component.
More in the Custom Component section.Components synchronizationThe HTML Component is the only component that does not support any of the predefined synchronization types. However, you can define your own sync types as needed. You can read more about it here.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Highcharts Component NextNavigator component  »Using the HTML component1. Installation2. Layout3. Options4. HTML elementsNested elementsStyling the HTML componentExtending the HTML componentComponents synchronizationAPI options\n\nHTML ComponentThe HTML Component serves as a fundamental building block in dashboards. It offers the versatility to incorporate diverse HTML content. It is a simple yet potent tool for constructing dashboards with dynamic content. The configuration structure resembles an Abstract Syntax Tree (AST), enabling definition of tag names, attributes, and nested elements or can be defined as a string representing the HTML code.Using the HTML component1. InstallationThe HTML component is the simplest component available in Highcharts Dashboards. You can find it in the main Highcharts Dashboards package.  To use it through the CDN, you need to load the following files<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyAlternatively, you can download the NPM package like:npm install @highcharts/dashboardsCopyand import it in your project like:import * as Dashboards from '@highcharts/dashboards';import LayoutModule from '@highcharts/dashboards/modules/layout';LayoutModule(Dashboards);Copy2. LayoutAfter loading the necessary files, define a cell using a unique identifier for the cell, e.g. dashboard-col-0. This cell will be used to place the component in the dashboard.gui: {    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]}Copy3. OptionsWhen the placeholder is ready, component options can be defined. To do so, set the type of the component to HTML. The type is case-sensitive, so make sure to use the exact spelling.Apart from the type property, the component requires the cell property to be defined. The cell property is used to specify the cell in which the component should be placed.4. HTML elementsNow, you can define the HTML elements that will be rendered in the component.  HTML content can be defined in two ways:The elements array is an array of objects, where each object represents a single HTML element. The object usually contains the tagName which is the name of the HTML tag, e.g. div, img, p, etc. and the attributes of the element. If the text should be rendered inside the element, the textContent property can be used.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    elements: [{        tagName: 'h1',        textContent: 'Your text',        attributes: {            id: 'main-title',        }    }]}]CopyThe html property can be used to define the HTML code as a string.components: [{    type: 'HTML',    renderTo: 'dashboard-col-0',    html: '<h1 id="main-title">Your text</h1>'}]CopyNested elementsIf more than one element is required, the children property can be used. The children property is an array of elements that will be nested inside the parent element. Each element can have its own children elements and is configured in the same way as the parent element.elements: [{    tagName: 'div',    children: [{        tagName: 'h1',        textContent: 'Title',        attributes: {            id: 'main-title',        }    }, {        tagName: 'p',        textContent: 'Description',        attributes: {            id: 'description',        }    }]}]CopyStyling the HTML componentThe most common way to style the HTML component is to use the CSS and utilize the className or id attributes.#main-title {  color: #4b4b4b;}#description {  text-decoration: underline;}CopyExtending the HTML componentIf some of the HTML elements are used frequently or require to be more customizable, it is possible to create a custom component that will simplify the configuration. The custom component can be created by extending the basic HTML component.
More in the Custom Component section.Components synchronizationThe HTML Component is the only component that does not support any of the predefined synchronization types. However, you can define your own sync types as needed. You can read more about it here.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Highcharts Component NextNavigator component  »Using the HTML component1. Installation2. Layout3. Options4. HTML elementsNested elementsStyling the HTML componentExtending the HTML componentComponents synchronizationAPI options\n\n\n\nNavigator componentOverviewThe NavigatorComponent is part of the Dashboards plugins. It utilizes the
navigator of Highcharts Stock to provide an overview of the values of a table
column. Users can set a range in the Navigator, which can be synchronized as extremes with other Dashboard components for data inspection.ExampleA typical use case for the synchronization of extremes can be seen in the
climate demo.
In the demo, the navigator component shows the timeline of the selected climate indicator for the active city.Dashboard.board('container', {  components: [    {      renderTo: 'time-range-selector'      type: 'Navigator',      connector: {        id: 'Range Selection'      },      columnAssignment: {        'TXC': 'y'      },      sync: {        extremes: true      }    },    // ...  ],  // ...});CopyComponents synchronizationThe Navigator component can be synced with other components in Dashboards. Two synchronization types are predefined for the Navigator component: crossfilter and extremes. You can find more information about it in the sync article.Crossfilter sync is specific to the NavigatorComponent. You can learn more about this below.CrossfilterAlternatively, the NavigatorComponent can synchronize extremes in a shared crossfilter. The crossfilter is managed by
a RangeModifier, which sources the connector's data table. All components must
share the same connector and table to make the crossfilter work.For crossfilter sync, the affectNavigators option must be enabled, which
causes, in addition to changing the content of the table, the content of
other crossfilters. See the demo here.Read more about components synchronization here.Crossfilter ExampleIn the crossfilter demo
you see the setup to limit the amount of data points. You have to define column
ranges with the help of the Navigator component and a shared DataConnector.Dashboard.board('container', {  components: [    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Agriculture': 'y'      },      sync: {        crossfilter: true      }    },    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Industry': 'y'      },      sync: {        crossfilter: true      }    },    // ...  ],  // ...});Copy\n\nNavigator componentOverviewThe NavigatorComponent is part of the Dashboards plugins. It utilizes the
navigator of Highcharts Stock to provide an overview of the values of a table
column. Users can set a range in the Navigator, which can be synchronized as extremes with other Dashboard components for data inspection.ExampleA typical use case for the synchronization of extremes can be seen in the
climate demo.
In the demo, the navigator component shows the timeline of the selected climate indicator for the active city.Dashboard.board('container', {  components: [    {      renderTo: 'time-range-selector'      type: 'Navigator',      connector: {        id: 'Range Selection'      },      columnAssignment: {        'TXC': 'y'      },      sync: {        extremes: true      }    },    // ...  ],  // ...});CopyComponents synchronizationThe Navigator component can be synced with other components in Dashboards. Two synchronization types are predefined for the Navigator component: crossfilter and extremes. You can find more information about it in the sync article.Crossfilter sync is specific to the NavigatorComponent. You can learn more about this below.CrossfilterAlternatively, the NavigatorComponent can synchronize extremes in a shared crossfilter. The crossfilter is managed by
a RangeModifier, which sources the connector's data table. All components must
share the same connector and table to make the crossfilter work.For crossfilter sync, the affectNavigators option must be enabled, which
causes, in addition to changing the content of the table, the content of
other crossfilters. See the demo here.Read more about components synchronization here.Crossfilter ExampleIn the crossfilter demo
you see the setup to limit the amount of data points. You have to define column
ranges with the help of the Navigator component and a shared DataConnector.Dashboard.board('container', {  components: [    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Agriculture': 'y'      },      sync: {        crossfilter: true      }    },    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Industry': 'y'      },      sync: {        crossfilter: true      }    },    // ...  ],  // ...});CopyEdit this pagePrevious« HTML Component NextSynchronizing Dashboards components  »OverviewExampleComponents synchronizationCrossfilterCrossfilter Example\n\nNavigator componentOverviewThe NavigatorComponent is part of the Dashboards plugins. It utilizes the
navigator of Highcharts Stock to provide an overview of the values of a table
column. Users can set a range in the Navigator, which can be synchronized as extremes with other Dashboard components for data inspection.ExampleA typical use case for the synchronization of extremes can be seen in the
climate demo.
In the demo, the navigator component shows the timeline of the selected climate indicator for the active city.Dashboard.board('container', {  components: [    {      renderTo: 'time-range-selector'      type: 'Navigator',      connector: {        id: 'Range Selection'      },      columnAssignment: {        'TXC': 'y'      },      sync: {        extremes: true      }    },    // ...  ],  // ...});CopyComponents synchronizationThe Navigator component can be synced with other components in Dashboards. Two synchronization types are predefined for the Navigator component: crossfilter and extremes. You can find more information about it in the sync article.Crossfilter sync is specific to the NavigatorComponent. You can learn more about this below.CrossfilterAlternatively, the NavigatorComponent can synchronize extremes in a shared crossfilter. The crossfilter is managed by
a RangeModifier, which sources the connector's data table. All components must
share the same connector and table to make the crossfilter work.For crossfilter sync, the affectNavigators option must be enabled, which
causes, in addition to changing the content of the table, the content of
other crossfilters. See the demo here.Read more about components synchronization here.Crossfilter ExampleIn the crossfilter demo
you see the setup to limit the amount of data points. You have to define column
ranges with the help of the Navigator component and a shared DataConnector.Dashboard.board('container', {  components: [    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Agriculture': 'y'      },      sync: {        crossfilter: true      }    },    {      renderTo: 'Top-left'      type: 'Navigator',      connector: {        id: 'Economy'      },      columnAssignment: {        'Industry': 'y'      },      sync: {        crossfilter: true      }    },    // ...  ],  // ...});CopyEdit this pagePrevious« HTML Component NextSynchronizing Dashboards components  »OverviewExampleComponents synchronizationCrossfilterCrossfilter Example\n\n\n\nSynchronizing Dashboards componentsIn addition to sharing data via the data pool, Dashboards components can use the synchronization mechanism to aid visualization, navigation and highlighting of specific data.How to synchronize Dashboards components?To synchronize components, you need to specify the event you want to synchronize between each component.
Additionally, both components must use the same connector from the dataPool, a prerequisite for all predefined synchronization types to work.Not every component supports all synchronization types. This is an overview of which synchronization applies to each component type:Component typehighlightextremesvisibilitycrossfilterHTMLnonononoHighchartsyesyesyesnoGridyesyesyesnoKPInoyesnonoNavigatornoyesnoyesIn addition to the predefined syncs, Dashboards offers the possibility to use custom synchronization. This is an example of how custom synchronization works.Synchronization declarationsync: {    crossfilter: true}CopyThe above is a shortened way in which you cannot set additional options if
a given type of synchronization provides them. Only those enabled by default are
set.If you would like to enable, say, the affectNavigator option for the crossfilter sync, you must use a declaration like this:sync: {    crossfilter: {        enabled: true,        affectNavigator: true    }}CopyThe options above are only available for the Navigator Component. Each component can have its options for the predefined syncs. You can find their descriptions in the articles about these components (eg. the Highlight Sync options for the Highcharts Component).An example of synchronized components:Dashboards.board('container', {  dataPool: {      connectors: [{          id: 'Vitamin',          type: 'CSV',          options: {              csv: `Food,Vitamin A,Iron              Beef Liver,6421,6.5              Lamb Liver,2122,6.5              Cod Liver Oil,1350,0.9              Mackerel,388,1              Tuna,214,0.6`,          },      }]  },      components: [{      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      renderTo: 'dashboard-col-0',      type: 'Highcharts'  }, {      renderTo: 'dashboard-col-1',      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      type: 'Highcharts'  }]});CopyEach synchronization has also handler and emitter options. The handler handles events coming to the component, while the emitter sends events from the component. In the case of synchronization types that communicate bilaterally (e.g. highlight), you can disable emitter or handler by setting their values to false. You can read about it more in API docs.For example, a component with this set of highlight options will cause other components with this synchronization enabled to respond to hover. Still, this component will not respond to the hover of the others:sync: {    highlight: {        enabled: true,        handler: false    }}CopySimilarly, this set of options allows a component to have highlighted points, but it will not trigger highlighting in other components:sync: {    highlight: {        enabled: true,        emitter: false    }}CopySynchronization groupsBy default, all components with a given type of synchronization enabled and sharing the same connector are synchronized. If you want to synchronize only specific components, you can do so using the group option, which is available for each type of synchronization.Example:sync: {    visibility: {        enabled: true,        group: 'group-name'    }}CopyDemo:Custom synchronizationEach type of synchronization works thanks to defined functions such as handler and emitter. These functions are called when the component is loaded. Their main task is to register send (emitter) and receive (handler) events for a given component. The this keyword refers to the reference of the component for which sync is registered. The emitter and handler functions should return a function containing event unregistering to enable disabling sync or re-registering it with changed options after component.update method.For each component, you can add or overwrite a custom definition of the existing synchronization handler and/or emitter to expand its functionality. You can also define your synchronization from scratch.sync: {    customSync: {        emitter: function() {            registerEmitterEvents();            return () => {                unregisterEmitterEvents();            }        },        handler: function() {            registerHandlerEvents();            return () => {                unregisterHandlerEvents();            }        }    }}CopySynchronization generally uses the dataCursor object, an entity common to the entire Dashboard. It is associated with the data table and allows you to create a relationship between the user interface states and the table cells, columns, or rows. The data cursor can emit and receive events.To add synchronization to a custom component, define a static field predefinedSyncConfig which should contain two options:defaultSyncOptions - a record of default options per synchronization type (can be empty if we do not want to define options).defaultSyncPairs - a record of default emitter and handler definitions per defined synchronization type.Additionally, after the component has finished rendering, you must run the this.sync.start() method to register the options and run the handlers and emitters.class CustomComponent extends Component {    static predefinedSyncConfig = {        defaultSyncOptions: {            customSync: {                sampleOption: true            }        },        defaultSyncPairs: {            customSync: {                emitter: function() {                    ...                },                handler: function() {                    ...                }            }        }    };    constructor(cell, options) {        super(cell, options);        return this;    }    render() {        super.render();        this.sync.start();        return this;    }}CopyThe below example shows how custom sync between a Highcharts Component and a custom component works:\n\nSynchronizing Dashboards componentsIn addition to sharing data via the data pool, Dashboards components can use the synchronization mechanism to aid visualization, navigation and highlighting of specific data.How to synchronize Dashboards components?To synchronize components, you need to specify the event you want to synchronize between each component.
Additionally, both components must use the same connector from the dataPool, a prerequisite for all predefined synchronization types to work.Not every component supports all synchronization types. This is an overview of which synchronization applies to each component type:Component typehighlightextremesvisibilitycrossfilterHTMLnonononoHighchartsyesyesyesnoGridyesyesyesnoKPInoyesnonoNavigatornoyesnoyesIn addition to the predefined syncs, Dashboards offers the possibility to use custom synchronization. This is an example of how custom synchronization works.Synchronization declarationsync: {    crossfilter: true}CopyThe above is a shortened way in which you cannot set additional options if
a given type of synchronization provides them. Only those enabled by default are
set.If you would like to enable, say, the affectNavigator option for the crossfilter sync, you must use a declaration like this:sync: {    crossfilter: {        enabled: true,        affectNavigator: true    }}CopyThe options above are only available for the Navigator Component. Each component can have its options for the predefined syncs. You can find their descriptions in the articles about these components (eg. the Highlight Sync options for the Highcharts Component).An example of synchronized components:Dashboards.board('container', {  dataPool: {      connectors: [{          id: 'Vitamin',          type: 'CSV',          options: {              csv: `Food,Vitamin A,Iron              Beef Liver,6421,6.5              Lamb Liver,2122,6.5              Cod Liver Oil,1350,0.9              Mackerel,388,1              Tuna,214,0.6`,          },      }]  },      components: [{      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      renderTo: 'dashboard-col-0',      type: 'Highcharts'  }, {      renderTo: 'dashboard-col-1',      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      type: 'Highcharts'  }]});CopyEach synchronization has also handler and emitter options. The handler handles events coming to the component, while the emitter sends events from the component. In the case of synchronization types that communicate bilaterally (e.g. highlight), you can disable emitter or handler by setting their values to false. You can read about it more in API docs.For example, a component with this set of highlight options will cause other components with this synchronization enabled to respond to hover. Still, this component will not respond to the hover of the others:sync: {    highlight: {        enabled: true,        handler: false    }}CopySimilarly, this set of options allows a component to have highlighted points, but it will not trigger highlighting in other components:sync: {    highlight: {        enabled: true,        emitter: false    }}CopySynchronization groupsBy default, all components with a given type of synchronization enabled and sharing the same connector are synchronized. If you want to synchronize only specific components, you can do so using the group option, which is available for each type of synchronization.Example:sync: {    visibility: {        enabled: true,        group: 'group-name'    }}CopyDemo:Custom synchronizationEach type of synchronization works thanks to defined functions such as handler and emitter. These functions are called when the component is loaded. Their main task is to register send (emitter) and receive (handler) events for a given component. The this keyword refers to the reference of the component for which sync is registered. The emitter and handler functions should return a function containing event unregistering to enable disabling sync or re-registering it with changed options after component.update method.For each component, you can add or overwrite a custom definition of the existing synchronization handler and/or emitter to expand its functionality. You can also define your synchronization from scratch.sync: {    customSync: {        emitter: function() {            registerEmitterEvents();            return () => {                unregisterEmitterEvents();            }        },        handler: function() {            registerHandlerEvents();            return () => {                unregisterHandlerEvents();            }        }    }}CopySynchronization generally uses the dataCursor object, an entity common to the entire Dashboard. It is associated with the data table and allows you to create a relationship between the user interface states and the table cells, columns, or rows. The data cursor can emit and receive events.To add synchronization to a custom component, define a static field predefinedSyncConfig which should contain two options:defaultSyncOptions - a record of default options per synchronization type (can be empty if we do not want to define options).defaultSyncPairs - a record of default emitter and handler definitions per defined synchronization type.Additionally, after the component has finished rendering, you must run the this.sync.start() method to register the options and run the handlers and emitters.class CustomComponent extends Component {    static predefinedSyncConfig = {        defaultSyncOptions: {            customSync: {                sampleOption: true            }        },        defaultSyncPairs: {            customSync: {                emitter: function() {                    ...                },                handler: function() {                    ...                }            }        }    };    constructor(cell, options) {        super(cell, options);        return this;    }    render() {        super.render();        this.sync.start();        return this;    }}CopyThe below example shows how custom sync between a Highcharts Component and a custom component works:Edit this pagePrevious« Navigator component NextLight and Dark Theme  »How to synchronize Dashboards components?Synchronization declarationSynchronization groupsCustom synchronization\n\nSynchronizing Dashboards componentsIn addition to sharing data via the data pool, Dashboards components can use the synchronization mechanism to aid visualization, navigation and highlighting of specific data.How to synchronize Dashboards components?To synchronize components, you need to specify the event you want to synchronize between each component.
Additionally, both components must use the same connector from the dataPool, a prerequisite for all predefined synchronization types to work.Not every component supports all synchronization types. This is an overview of which synchronization applies to each component type:Component typehighlightextremesvisibilitycrossfilterHTMLnonononoHighchartsyesyesyesnoGridyesyesyesnoKPInoyesnonoNavigatornoyesnoyesIn addition to the predefined syncs, Dashboards offers the possibility to use custom synchronization. This is an example of how custom synchronization works.Synchronization declarationsync: {    crossfilter: true}CopyThe above is a shortened way in which you cannot set additional options if
a given type of synchronization provides them. Only those enabled by default are
set.If you would like to enable, say, the affectNavigator option for the crossfilter sync, you must use a declaration like this:sync: {    crossfilter: {        enabled: true,        affectNavigator: true    }}CopyThe options above are only available for the Navigator Component. Each component can have its options for the predefined syncs. You can find their descriptions in the articles about these components (eg. the Highlight Sync options for the Highcharts Component).An example of synchronized components:Dashboards.board('container', {  dataPool: {      connectors: [{          id: 'Vitamin',          type: 'CSV',          options: {              csv: `Food,Vitamin A,Iron              Beef Liver,6421,6.5              Lamb Liver,2122,6.5              Cod Liver Oil,1350,0.9              Mackerel,388,1              Tuna,214,0.6`,          },      }]  },      components: [{      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      renderTo: 'dashboard-col-0',      type: 'Highcharts'  }, {      renderTo: 'dashboard-col-1',      connector: {          id: 'Vitamin'      },      sync: {          visibility: true,          highlight: true,          extremes: true      },      type: 'Highcharts'  }]});CopyEach synchronization has also handler and emitter options. The handler handles events coming to the component, while the emitter sends events from the component. In the case of synchronization types that communicate bilaterally (e.g. highlight), you can disable emitter or handler by setting their values to false. You can read about it more in API docs.For example, a component with this set of highlight options will cause other components with this synchronization enabled to respond to hover. Still, this component will not respond to the hover of the others:sync: {    highlight: {        enabled: true,        handler: false    }}CopySimilarly, this set of options allows a component to have highlighted points, but it will not trigger highlighting in other components:sync: {    highlight: {        enabled: true,        emitter: false    }}CopySynchronization groupsBy default, all components with a given type of synchronization enabled and sharing the same connector are synchronized. If you want to synchronize only specific components, you can do so using the group option, which is available for each type of synchronization.Example:sync: {    visibility: {        enabled: true,        group: 'group-name'    }}CopyDemo:Custom synchronizationEach type of synchronization works thanks to defined functions such as handler and emitter. These functions are called when the component is loaded. Their main task is to register send (emitter) and receive (handler) events for a given component. The this keyword refers to the reference of the component for which sync is registered. The emitter and handler functions should return a function containing event unregistering to enable disabling sync or re-registering it with changed options after component.update method.For each component, you can add or overwrite a custom definition of the existing synchronization handler and/or emitter to expand its functionality. You can also define your synchronization from scratch.sync: {    customSync: {        emitter: function() {            registerEmitterEvents();            return () => {                unregisterEmitterEvents();            }        },        handler: function() {            registerHandlerEvents();            return () => {                unregisterHandlerEvents();            }        }    }}CopySynchronization generally uses the dataCursor object, an entity common to the entire Dashboard. It is associated with the data table and allows you to create a relationship between the user interface states and the table cells, columns, or rows. The data cursor can emit and receive events.To add synchronization to a custom component, define a static field predefinedSyncConfig which should contain two options:defaultSyncOptions - a record of default options per synchronization type (can be empty if we do not want to define options).defaultSyncPairs - a record of default emitter and handler definitions per defined synchronization type.Additionally, after the component has finished rendering, you must run the this.sync.start() method to register the options and run the handlers and emitters.class CustomComponent extends Component {    static predefinedSyncConfig = {        defaultSyncOptions: {            customSync: {                sampleOption: true            }        },        defaultSyncPairs: {            customSync: {                emitter: function() {                    ...                },                handler: function() {                    ...                }            }        }    };    constructor(cell, options) {        super(cell, options);        return this;    }    render() {        super.render();        this.sync.start();        return this;    }}CopyThe below example shows how custom sync between a Highcharts Component and a custom component works:Edit this pagePrevious« Navigator component NextLight and Dark Theme  »How to synchronize Dashboards components?Synchronization declarationSynchronization groupsCustom synchronization\n\n\n\nLight and Dark ThemeThe Light and Dark theme allows you to switch between a light and dark theme for the dashboard.
To use the Light and Dark theme, you need to import the dashboards.css file.@import "https://code.highcharts.com/dashboards/css/dashboards.css";CopyYou then need to enable the styledMode option for all components that contain a Highcharts chart.
You can do this by setting the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}Copyor you can set this option globally by using the setOptions method.Highcharts.setOptions({    chart: {        styledMode: true    }});CopyBy default, the theme is set to the system default theme through the prefers-color-scheme media query. But it adjusts itself to the user's system settings.
You can also force the color scheme by setting the class to the dashboard container.<div id="container" class="highcharts-dark">CopyLive exampleUse the radio buttons below the dashboard to change the theme.\n\nLight and Dark ThemeThe Light and Dark theme allows you to switch between a light and dark theme for the dashboard.
To use the Light and Dark theme, you need to import the dashboards.css file.@import "https://code.highcharts.com/dashboards/css/dashboards.css";CopyYou then need to enable the styledMode option for all components that contain a Highcharts chart.
You can do this by setting the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}Copyor you can set this option globally by using the setOptions method.Highcharts.setOptions({    chart: {        styledMode: true    }});CopyBy default, the theme is set to the system default theme through the prefers-color-scheme media query. But it adjusts itself to the user's system settings.
You can also force the color scheme by setting the class to the dashboard container.<div id="container" class="highcharts-dark">CopyLive exampleUse the radio buttons below the dashboard to change the theme.Edit this pagePrevious« Synchronizing Dashboards components NextData Handling  »Live example\n\nLight and Dark ThemeThe Light and Dark theme allows you to switch between a light and dark theme for the dashboard.
To use the Light and Dark theme, you need to import the dashboards.css file.@import "https://code.highcharts.com/dashboards/css/dashboards.css";CopyYou then need to enable the styledMode option for all components that contain a Highcharts chart.
You can do this by setting the styledMode option to true in the component's configuration.{    type: 'Highcharts',    renderTo: 'chart-container',    chartOptions: {        chart: {            styledMode: true        }        ...    }    ...}Copyor you can set this option globally by using the setOptions method.Highcharts.setOptions({    chart: {        styledMode: true    }});CopyBy default, the theme is set to the system default theme through the prefers-color-scheme media query. But it adjusts itself to the user's system settings.
You can also force the color scheme by setting the class to the dashboard container.<div id="container" class="highcharts-dark">CopyLive exampleUse the radio buttons below the dashboard to change the theme.Edit this pagePrevious« Synchronizing Dashboards components NextData Handling  »Live example\n\n\n\nData HandlingHighcharts Dashboards uses a dedicated set of elements for effective data management.
The data handling system is designed to provide a flexible and powerful way to load, modify, and display data through the dashboard components.The following diagram illustrates the entire data management:DataPoolThe DataPool is the main entry point for data handling in Highcharts Dashboards.
It can be linked to a warehouse where various products are stored. It handles incoming data from various sources and provides a way to access and
modify it. However, it also provides a way to use that data in the dashboard's components and synchronize the data between them.With the BoardOptions.dataPool option, you can define as many connections to
data sources as you like. Each definition is accessible by its id and will
only create a connector to load the actual data when accessed the first time
via Board.dataPool.getConnector.DataConnectorThe DataConnector serves as a delivery service that brings data from external suppliers to the DataPool.
It retrieves data from external sources and creates new DataTables within the DataPool to store this imported data, similar to how the
delivery service brings new products to the warehouse for storage.Each DataConnector loads data from a source and sometimes also saves data
changes. All connectors manage the data in a DataTable, which is accessible via
DataConnector.table property. Some connectors support source polling to update
the DataTable with new data from the source.Dashboards provides several types of DataConnector, depending on the data source.Nameconnector.type optionCSVConnector'CSV'JSONConnector'JSON'GoogleSheetsConnector'GoogleSheets'HTMLTableConnector'HTMLTable'Each of those types has its specific options. For example, the CSVConnector
has two data input options. Directly as a string - options.csv, or as a URL from which the CSV file is fetched - options.csvURL.ExamplesdataPool: {    connectors: [{        id: 'my-csv-connector',        type: 'CSV',        options: {            csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'        }    }]}CopydataPool: {    connectors: [{        id: 'my-json-connector',        type: 'JSON',        options: {            dataUrl: 'https://demo-live-data.highcharts.com/instance-details.json',        }    }]}CopydataPool: {    connectors: [{        id: 'my-google-sheets-connector',            type: 'GoogleSheets',            options: {                googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',                googleSpreadsheetKey: '1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw'            }    }]}CopydataPool: {    connectors: [{        id: 'my-html-table-connector',        type: 'HTMLTable',        options: {            table: 'table-element-id',        }    }]}CopyDataTableThe DataTable is a storage system for the data in the DataPool.
Each DataTable within the DataPool is like a section or aisle within the warehouse dedicated to a particular type of product
where everything is organized and stored.A DataTable is created from DataConnectors, DataModifiers, or other
DataTables. Each table can contain columns and rows. In
addition, DataTable also emits events when changes in the table happen. Changes
can be made directly on the table or with a DataModifier object.DataModifierThe DataModifier is a tool to modify the data in the DataTables.
When a DataModifier is applied to a DataTable, it's like assigning a specific team of workers to handle modifications for that batch of products.
They can change the products as needed and store the modified versions separately.Data tables can automatically modify data during their lifetime with
the help of modifiers. Each table can have only one modifier, but this modifier
might call additional modifiers. If a DataModifier changes the DataTable,
changes are available on a clone in the DataTable.modified property.DataCursorThe DataCursor provides a system to synchronize status data on cells of DataTables.
The DataCursor acts like a team of warehouse inspectors responsible for keeping track of the status of various products in different sections.This can be, for example, highlights, markers, or selections. It
supports multiple tables and statuses simultaneously. Each dashboard has a DataCursor
accessible via the Board.dataCursor property.\n\nData HandlingHighcharts Dashboards uses a dedicated set of elements for effective data management.
The data handling system is designed to provide a flexible and powerful way to load, modify, and display data through the dashboard components.The following diagram illustrates the entire data management:DataPoolThe DataPool is the main entry point for data handling in Highcharts Dashboards.
It can be linked to a warehouse where various products are stored. It handles incoming data from various sources and provides a way to access and
modify it. However, it also provides a way to use that data in the dashboard's components and synchronize the data between them.With the BoardOptions.dataPool option, you can define as many connections to
data sources as you like. Each definition is accessible by its id and will
only create a connector to load the actual data when accessed the first time
via Board.dataPool.getConnector.DataConnectorThe DataConnector serves as a delivery service that brings data from external suppliers to the DataPool.
It retrieves data from external sources and creates new DataTables within the DataPool to store this imported data, similar to how the
delivery service brings new products to the warehouse for storage.Each DataConnector loads data from a source and sometimes also saves data
changes. All connectors manage the data in a DataTable, which is accessible via
DataConnector.table property. Some connectors support source polling to update
the DataTable with new data from the source.Dashboards provides several types of DataConnector, depending on the data source.Nameconnector.type optionCSVConnector'CSV'JSONConnector'JSON'GoogleSheetsConnector'GoogleSheets'HTMLTableConnector'HTMLTable'Each of those types has its specific options. For example, the CSVConnector
has two data input options. Directly as a string - options.csv, or as a URL from which the CSV file is fetched - options.csvURL.ExamplesdataPool: {    connectors: [{        id: 'my-csv-connector',        type: 'CSV',        options: {            csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'        }    }]}CopydataPool: {    connectors: [{        id: 'my-json-connector',        type: 'JSON',        options: {            dataUrl: 'https://demo-live-data.highcharts.com/instance-details.json',        }    }]}CopydataPool: {    connectors: [{        id: 'my-google-sheets-connector',            type: 'GoogleSheets',            options: {                googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',                googleSpreadsheetKey: '1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw'            }    }]}CopydataPool: {    connectors: [{        id: 'my-html-table-connector',        type: 'HTMLTable',        options: {            table: 'table-element-id',        }    }]}CopyDataTableThe DataTable is a storage system for the data in the DataPool.
Each DataTable within the DataPool is like a section or aisle within the warehouse dedicated to a particular type of product
where everything is organized and stored.A DataTable is created from DataConnectors, DataModifiers, or other
DataTables. Each table can contain columns and rows. In
addition, DataTable also emits events when changes in the table happen. Changes
can be made directly on the table or with a DataModifier object.DataModifierThe DataModifier is a tool to modify the data in the DataTables.
When a DataModifier is applied to a DataTable, it's like assigning a specific team of workers to handle modifications for that batch of products.
They can change the products as needed and store the modified versions separately.Data tables can automatically modify data during their lifetime with
the help of modifiers. Each table can have only one modifier, but this modifier
might call additional modifiers. If a DataModifier changes the DataTable,
changes are available on a clone in the DataTable.modified property.DataCursorThe DataCursor provides a system to synchronize status data on cells of DataTables.
The DataCursor acts like a team of warehouse inspectors responsible for keeping track of the status of various products in different sections.This can be, for example, highlights, markers, or selections. It
supports multiple tables and statuses simultaneously. Each dashboard has a DataCursor
accessible via the Board.dataCursor property.Edit this pagePrevious« Light and Dark Theme NextData Pool & Connectors  »DataPoolDataConnectorExamplesDataTableDataModifierDataCursor\n\nData HandlingHighcharts Dashboards uses a dedicated set of elements for effective data management.
The data handling system is designed to provide a flexible and powerful way to load, modify, and display data through the dashboard components.The following diagram illustrates the entire data management:DataPoolThe DataPool is the main entry point for data handling in Highcharts Dashboards.
It can be linked to a warehouse where various products are stored. It handles incoming data from various sources and provides a way to access and
modify it. However, it also provides a way to use that data in the dashboard's components and synchronize the data between them.With the BoardOptions.dataPool option, you can define as many connections to
data sources as you like. Each definition is accessible by its id and will
only create a connector to load the actual data when accessed the first time
via Board.dataPool.getConnector.DataConnectorThe DataConnector serves as a delivery service that brings data from external suppliers to the DataPool.
It retrieves data from external sources and creates new DataTables within the DataPool to store this imported data, similar to how the
delivery service brings new products to the warehouse for storage.Each DataConnector loads data from a source and sometimes also saves data
changes. All connectors manage the data in a DataTable, which is accessible via
DataConnector.table property. Some connectors support source polling to update
the DataTable with new data from the source.Dashboards provides several types of DataConnector, depending on the data source.Nameconnector.type optionCSVConnector'CSV'JSONConnector'JSON'GoogleSheetsConnector'GoogleSheets'HTMLTableConnector'HTMLTable'Each of those types has its specific options. For example, the CSVConnector
has two data input options. Directly as a string - options.csv, or as a URL from which the CSV file is fetched - options.csvURL.ExamplesdataPool: {    connectors: [{        id: 'my-csv-connector',        type: 'CSV',        options: {            csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'        }    }]}CopydataPool: {    connectors: [{        id: 'my-json-connector',        type: 'JSON',        options: {            dataUrl: 'https://demo-live-data.highcharts.com/instance-details.json',        }    }]}CopydataPool: {    connectors: [{        id: 'my-google-sheets-connector',            type: 'GoogleSheets',            options: {                googleAPIKey: 'AIzaSyCQ0Jh8OFRShXam8adBbBcctlbeeA-qJOk',                googleSpreadsheetKey: '1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw'            }    }]}CopydataPool: {    connectors: [{        id: 'my-html-table-connector',        type: 'HTMLTable',        options: {            table: 'table-element-id',        }    }]}CopyDataTableThe DataTable is a storage system for the data in the DataPool.
Each DataTable within the DataPool is like a section or aisle within the warehouse dedicated to a particular type of product
where everything is organized and stored.A DataTable is created from DataConnectors, DataModifiers, or other
DataTables. Each table can contain columns and rows. In
addition, DataTable also emits events when changes in the table happen. Changes
can be made directly on the table or with a DataModifier object.DataModifierThe DataModifier is a tool to modify the data in the DataTables.
When a DataModifier is applied to a DataTable, it's like assigning a specific team of workers to handle modifications for that batch of products.
They can change the products as needed and store the modified versions separately.Data tables can automatically modify data during their lifetime with
the help of modifiers. Each table can have only one modifier, but this modifier
might call additional modifiers. If a DataModifier changes the DataTable,
changes are available on a clone in the DataTable.modified property.DataCursorThe DataCursor provides a system to synchronize status data on cells of DataTables.
The DataCursor acts like a team of warehouse inspectors responsible for keeping track of the status of various products in different sections.This can be, for example, highlights, markers, or selections. It
supports multiple tables and statuses simultaneously. Each dashboard has a DataCursor
accessible via the Board.dataCursor property.Edit this pagePrevious« Light and Dark Theme NextData Pool & Connectors  »DataPoolDataConnectorExamplesDataTableDataModifierDataCursor\n\n\n\nData Pool & ConnectorsThe data pool provides central data and data management access in a
dashboard. It manages connectors and their tables on demand, so a dashboard component only loads data when requested.Data connectors manage the transaction and preparation of data. Loading data
from a source is an asynchronous process as the source is usually a web server.DataPoolEach dashboard has one DataPool instance for all components. It is available
via the Board.dataPool class property and can be configured with the
BoardOptions.dataPool option. Usually, one or more connectors get defined,
including the ID, the data source, and whether the data needs
additional modification. The ID is used to retrieve a connector, which is an
asynchronous process.DataPool Exampleasync function run() {  const board = await Dashboards.board('container', {    // ...    dataPool: {      connectors: [{        type: 'JSON',        id: 'My Series Data',        enablePolling: true,        jsonURL: 'https://'      }, {        type: 'CSV',        id: 'My Currency Data',        csvURL: 'https://'        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'My Fixed Rate',                formula: 'A1*7.8'            }]        }      }]    }    // ...  }, true);  // A component usually performs access to the data pool.  const table = await board.dataPool.getConnectorTable('My Currency Data');  const modifiedTable = table.modified;}run();CopyDataConnectorThe DataConnector is the base class for all connectors; as a stand-alone, it can not load or save data.
It includes common functionality like events, server polling, and managing meta information like the column order.Additionally, the DataConnector contains the registry of all available
connectors. You can access the registry via DataConnector.types.CSVConnectorThe CSVConnector allows the loading of structured text data, where a comma or semicolon separates each table
cell, while a line break separates each row. You can provide data via a URL or directly with a CSV string. Details
of all available options can be found in the
API documentation.CSVConnector Exampleasync function run() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'    });    await connector.load();}run();CopyGoogleSheetsConnectorWith the GoogleSheetsConnector, is it possible to load table data from a Google
Docs spreadsheet. The connector needs the API key related to a Google account
and the document ID. See the
API documentation
for all options.Please note that the Google account needs read access to the document. Usually
the Google account should not be the owner of the document, as this decreases the
possibilities of limiting access.GoogleSheetsConnector Exampleasync function run() {    const connector = new DataConnector.types.GoogleSheets({        googleAPIKey: 'Aa...zz',        googleSpreadsheetKey: 'Bb...wW'    });    await connector.load();}run();CopyGoogleSheetsConnector TutorialGoogle Sheets is a spreadsheet application included in Google's free, web-based Google Docs Editors suite.With the GoogleSheetsConnector in Highcharts Dashboards, you can load tables from a Google spreadsheet into one of your dashboard
components, whether a Grid, KPI, or chart. Like with other connectors, DataModifiers may be applied during parsing.
Alternatively, the data may be filtered or modified before it is parsed in the beforeParse callback.The connector requires two API keys: one for the Google Spreadsheets API and one for the document itself. In addition, the Google account owner must grant read access to the document. See the GoogleSheetsConnector API for further details.Google API keyPrerequisiteThe document owner must have a Google Cloud Project where the API/Service with Google Sheets API is enabled and an API key exists.Providing the Google Sheet API exists, the API key can be extracted from the Credentials Panel.Spreadsheet KeyThe spreadsheet key can be extracted directly from the URL of the document as illustrated below:https://docs.google.com/spreadsheets/d/1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw/editCopySpreadsheet key: 1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8twBasic demoHTMLTableConnectorThe HTMLTableConnector allows the import and export of an HTML table as a
DataTable. It is the only connector not supporting loading from a
remote source. Instead, one provides an element reference from the current web
page. Details are listed in the
API documentation.HTMLTableConnector Exampleasync function run() {    const connector = new DataConnector.types.HTMLTable({        dataTable: document.querySelector('#table');    });    await connector.load();}run();CopyJSONConnectorThe JSONConnector supports loading data in a row-oriented structure, as found
in Highcharts series types. The connector options can also control how columns
and rows are structured in the JSON array to support other structures. See the
API documentation
for all possible combinations.JSONConnector Exampleasync function run() {    const connector = new DataConnector.types.JSON({        data: [            ['row 1', 1, 2, 3],            ['row 2', 2, 3, 4],            ['row 3', 0, 1, 2]        ]    });    await connector.load();}run();CopyCustom Data ConnectorsIt is possible to create additional DataConnectors based on the DataConnector
base class. An implementation usually has three steps to fulfil:Load the data from the source and react to possible transaction errors.Create a DataTable and add the data to it.Make the table available, and in case of related options, update the table with
incoming changes from the source.You can see a typical implementation of this in the
GoogleSheetsConnector.
Please note that the included connectors use a separate converter instance for the second step, which involves adding the data to the DataTable.Custom Data Connector Tutorial (MQTT)This tutorial shows how to implement a Custom Data Connector for the
MQTT protocol and how to deploy it in a simple Highcharts Dashboards application. The connector is implemented as a JavaScript class and is independent of the application.About MQTTMQTT is the de facto standard protocol for low-resource, low-power devices and is widely used in IoT applications across a wide range of industries: mobile internet, Smart Hardware, the Internet of Vehicles, Smart Cities, Telemedicine, Power, Oil, Energy, and other fields.The hub of the MQTT network infrastructure is the so-called broker, a server to which applications can send messages and where clients (e.g., a web application) can subscribe to a topic. MQTT is a protocol on top of TCP/IP and for web clients available as WebSocket or TCP.MQTT dataThe MQTT data packet consists of a topic that uniquely defines a data set for a specific connection and a text payload. The payload is typically a JSON object, and the MQTT custom connector described in this tutorial supports JSON only.MQTT connectEstablishing a data link to an MQTT broker typically consists of these steps:Connect to the broker with a given host name and port number, with optional authentication (user, password).Wait for a successful connection.Subscribe to one or more topics.Wait for confirmation of the subscription.Packets now arrive at a rate determined by the data provider (often a wireless sensor application).Process the incoming packets.The MQTT client may also send packets to a broker, but this feature is not implemented in the custom DataConnector we use for this tutorial.MQTT Custom ConnectorThe base class for the MQTTConnector is the DataConnector, where the constructor and the load methods are re-implemented. The load method differs from that of the CSV and JSON connectors in that data is not waiting for arrival (due to the nature of the MQTT protocol, no data may be available immediately). However, it establishes the connection and subscribes to the subject defined in the connector options, providing that the autoConnect and autoSubscribe options are set (the default behavior).The MQTT Connector uses the JSONConverter for parsing, thus providing the application with a beforeParse callback invoked on every packet reception. This callback is crucial to implementing an application because the payload of the incoming packet is typically a hierarchical JSON object whereas the dashboard implementation requires a single-level data structure.In addition, the MQTTConnector provides these custom methods:connectsubscribeunsubscribedisconnectIn a typical application, these are unnecessary as the whole connect/subscribe sequence is executed by default using the load method.The MQTT connector supports the following optional callbacks:beforeParse - fired before an incoming packet is parsedconnectEvent - handles both connect/disconnectsubscribeEvent - handles subscribe/unsubscribepacketEvent - fired on an incoming packeterrorEvent - reports errors from the MQTT client or the connectorThe standard DataConnector events load, afterLoad and loadError are not used, but stub callbacks are provided for reference.Although the JSONConnector and the MQTTConnector have much in common, there are some important differences:The MQTT Connector does not use pollingThe load method does not return any dataThe orientation option is fixed to columnsThe options dataUrl, dataModifier and firstRowAsNames are not supportedThe MQTT connector has some additional options:autoConnect - automatically connect after loadautoSubscribe - automatically subscribe on connectautoReset - clear data table on subscribemaxRows - maximum number of rows in the data tableMQTT client optionsThe MQTTConnector uses the PAHO client library (version 1.1.0) for access control and communication with the MQTT Broker. This library supports MQTT versions 3.1 and 3.1.1.The client options are the following:host - the name of the MQTT broker (e.g. mqtt.mosquitto.org or broker.hivemq.com)port - WebSocket port (depends on the broker). See HiveMQ for an example.user - empty for anonymous clientspassword - empty for anonymous clientsuseSSL - true for a secure connectiontopic - MQTT topictimeout - connection timeout, value in secondsqOs - quality of serviceThe sample applicationThe MQTTConnector is implemented in a sample application that displays incoming data from two connectors, one for each MQTT topic.Each connector provides data for a spline chart and a Grid Component. In addition, timestamped events and the raw data are displayed as unformatted text in a message log that resides outside the Dashboards container. The user may clear the log.The sample application relies on data being published to the two MQTT topics (highcharts/topic1 and highcharts/topic2). The payload of the MQTT packet must be in a specific format to work correctly (see the example below).The data is generated by an MQTT client hosted by Highcharts. It uses the HiveMQ Websocket Client, publishing to the topics highcharts/topic1 and highcharts/topic2.NB! Clicking the Connect button connects the application to the MQTT broker and subscribes to the two mentioned topics. Data should immediately appear in the charts and data grids.Example data:highcharts/topic1CopyMessage{    "name": "North Sea",    "value": 35.69,    "timestamp": "2024-09-12T08:12:01.028Z" }CopyReuseThe MQTTConnector can be reused for other applications by copying the entire class from the demo's Javascript file. The implementation is found at the bottom of the file. It is also important to copy the MQTTConnector.defaultOptions and the code line that registers the connector as a Dashboards component.// Register the connectorMQTTConnector.registerType('MQTT', MQTTConnector);Copy\n\nData Pool & ConnectorsThe data pool provides central data and data management access in a
dashboard. It manages connectors and their tables on demand, so a dashboard component only loads data when requested.Data connectors manage the transaction and preparation of data. Loading data
from a source is an asynchronous process as the source is usually a web server.DataPoolEach dashboard has one DataPool instance for all components. It is available
via the Board.dataPool class property and can be configured with the
BoardOptions.dataPool option. Usually, one or more connectors get defined,
including the ID, the data source, and whether the data needs
additional modification. The ID is used to retrieve a connector, which is an
asynchronous process.DataPool Exampleasync function run() {  const board = await Dashboards.board('container', {    // ...    dataPool: {      connectors: [{        type: 'JSON',        id: 'My Series Data',        enablePolling: true,        jsonURL: 'https://'      }, {        type: 'CSV',        id: 'My Currency Data',        csvURL: 'https://'        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'My Fixed Rate',                formula: 'A1*7.8'            }]        }      }]    }    // ...  }, true);  // A component usually performs access to the data pool.  const table = await board.dataPool.getConnectorTable('My Currency Data');  const modifiedTable = table.modified;}run();CopyDataConnectorThe DataConnector is the base class for all connectors; as a stand-alone, it can not load or save data.
It includes common functionality like events, server polling, and managing meta information like the column order.Additionally, the DataConnector contains the registry of all available
connectors. You can access the registry via DataConnector.types.CSVConnectorThe CSVConnector allows the loading of structured text data, where a comma or semicolon separates each table
cell, while a line break separates each row. You can provide data via a URL or directly with a CSV string. Details
of all available options can be found in the
API documentation.CSVConnector Exampleasync function run() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'    });    await connector.load();}run();CopyGoogleSheetsConnectorWith the GoogleSheetsConnector, is it possible to load table data from a Google
Docs spreadsheet. The connector needs the API key related to a Google account
and the document ID. See the
API documentation
for all options.Please note that the Google account needs read access to the document. Usually
the Google account should not be the owner of the document, as this decreases the
possibilities of limiting access.GoogleSheetsConnector Exampleasync function run() {    const connector = new DataConnector.types.GoogleSheets({        googleAPIKey: 'Aa...zz',        googleSpreadsheetKey: 'Bb...wW'    });    await connector.load();}run();CopyGoogleSheetsConnector TutorialGoogle Sheets is a spreadsheet application included in Google's free, web-based Google Docs Editors suite.With the GoogleSheetsConnector in Highcharts Dashboards, you can load tables from a Google spreadsheet into one of your dashboard
components, whether a Grid, KPI, or chart. Like with other connectors, DataModifiers may be applied during parsing.
Alternatively, the data may be filtered or modified before it is parsed in the beforeParse callback.The connector requires two API keys: one for the Google Spreadsheets API and one for the document itself. In addition, the Google account owner must grant read access to the document. See the GoogleSheetsConnector API for further details.Google API keyPrerequisiteThe document owner must have a Google Cloud Project where the API/Service with Google Sheets API is enabled and an API key exists.Providing the Google Sheet API exists, the API key can be extracted from the Credentials Panel.Spreadsheet KeyThe spreadsheet key can be extracted directly from the URL of the document as illustrated below:https://docs.google.com/spreadsheets/d/1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw/editCopySpreadsheet key: 1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8twBasic demoHTMLTableConnectorThe HTMLTableConnector allows the import and export of an HTML table as a
DataTable. It is the only connector not supporting loading from a
remote source. Instead, one provides an element reference from the current web
page. Details are listed in the
API documentation.HTMLTableConnector Exampleasync function run() {    const connector = new DataConnector.types.HTMLTable({        dataTable: document.querySelector('#table');    });    await connector.load();}run();CopyJSONConnectorThe JSONConnector supports loading data in a row-oriented structure, as found
in Highcharts series types. The connector options can also control how columns
and rows are structured in the JSON array to support other structures. See the
API documentation
for all possible combinations.JSONConnector Exampleasync function run() {    const connector = new DataConnector.types.JSON({        data: [            ['row 1', 1, 2, 3],            ['row 2', 2, 3, 4],            ['row 3', 0, 1, 2]        ]    });    await connector.load();}run();CopyCustom Data ConnectorsIt is possible to create additional DataConnectors based on the DataConnector
base class. An implementation usually has three steps to fulfil:Load the data from the source and react to possible transaction errors.Create a DataTable and add the data to it.Make the table available, and in case of related options, update the table with
incoming changes from the source.You can see a typical implementation of this in the
GoogleSheetsConnector.
Please note that the included connectors use a separate converter instance for the second step, which involves adding the data to the DataTable.Custom Data Connector Tutorial (MQTT)This tutorial shows how to implement a Custom Data Connector for the
MQTT protocol and how to deploy it in a simple Highcharts Dashboards application. The connector is implemented as a JavaScript class and is independent of the application.About MQTTMQTT is the de facto standard protocol for low-resource, low-power devices and is widely used in IoT applications across a wide range of industries: mobile internet, Smart Hardware, the Internet of Vehicles, Smart Cities, Telemedicine, Power, Oil, Energy, and other fields.The hub of the MQTT network infrastructure is the so-called broker, a server to which applications can send messages and where clients (e.g., a web application) can subscribe to a topic. MQTT is a protocol on top of TCP/IP and for web clients available as WebSocket or TCP.MQTT dataThe MQTT data packet consists of a topic that uniquely defines a data set for a specific connection and a text payload. The payload is typically a JSON object, and the MQTT custom connector described in this tutorial supports JSON only.MQTT connectEstablishing a data link to an MQTT broker typically consists of these steps:Connect to the broker with a given host name and port number, with optional authentication (user, password).Wait for a successful connection.Subscribe to one or more topics.Wait for confirmation of the subscription.Packets now arrive at a rate determined by the data provider (often a wireless sensor application).Process the incoming packets.The MQTT client may also send packets to a broker, but this feature is not implemented in the custom DataConnector we use for this tutorial.MQTT Custom ConnectorThe base class for the MQTTConnector is the DataConnector, where the constructor and the load methods are re-implemented. The load method differs from that of the CSV and JSON connectors in that data is not waiting for arrival (due to the nature of the MQTT protocol, no data may be available immediately). However, it establishes the connection and subscribes to the subject defined in the connector options, providing that the autoConnect and autoSubscribe options are set (the default behavior).The MQTT Connector uses the JSONConverter for parsing, thus providing the application with a beforeParse callback invoked on every packet reception. This callback is crucial to implementing an application because the payload of the incoming packet is typically a hierarchical JSON object whereas the dashboard implementation requires a single-level data structure.In addition, the MQTTConnector provides these custom methods:connectsubscribeunsubscribedisconnectIn a typical application, these are unnecessary as the whole connect/subscribe sequence is executed by default using the load method.The MQTT connector supports the following optional callbacks:beforeParse - fired before an incoming packet is parsedconnectEvent - handles both connect/disconnectsubscribeEvent - handles subscribe/unsubscribepacketEvent - fired on an incoming packeterrorEvent - reports errors from the MQTT client or the connectorThe standard DataConnector events load, afterLoad and loadError are not used, but stub callbacks are provided for reference.Although the JSONConnector and the MQTTConnector have much in common, there are some important differences:The MQTT Connector does not use pollingThe load method does not return any dataThe orientation option is fixed to columnsThe options dataUrl, dataModifier and firstRowAsNames are not supportedThe MQTT connector has some additional options:autoConnect - automatically connect after loadautoSubscribe - automatically subscribe on connectautoReset - clear data table on subscribemaxRows - maximum number of rows in the data tableMQTT client optionsThe MQTTConnector uses the PAHO client library (version 1.1.0) for access control and communication with the MQTT Broker. This library supports MQTT versions 3.1 and 3.1.1.The client options are the following:host - the name of the MQTT broker (e.g. mqtt.mosquitto.org or broker.hivemq.com)port - WebSocket port (depends on the broker). See HiveMQ for an example.user - empty for anonymous clientspassword - empty for anonymous clientsuseSSL - true for a secure connectiontopic - MQTT topictimeout - connection timeout, value in secondsqOs - quality of serviceThe sample applicationThe MQTTConnector is implemented in a sample application that displays incoming data from two connectors, one for each MQTT topic.Each connector provides data for a spline chart and a Grid Component. In addition, timestamped events and the raw data are displayed as unformatted text in a message log that resides outside the Dashboards container. The user may clear the log.The sample application relies on data being published to the two MQTT topics (highcharts/topic1 and highcharts/topic2). The payload of the MQTT packet must be in a specific format to work correctly (see the example below).The data is generated by an MQTT client hosted by Highcharts. It uses the HiveMQ Websocket Client, publishing to the topics highcharts/topic1 and highcharts/topic2.NB! Clicking the Connect button connects the application to the MQTT broker and subscribes to the two mentioned topics. Data should immediately appear in the charts and data grids.Example data:highcharts/topic1CopyMessage{    "name": "North Sea",    "value": 35.69,    "timestamp": "2024-09-12T08:12:01.028Z" }CopyReuseThe MQTTConnector can be reused for other applications by copying the entire class from the demo's Javascript file. The implementation is found at the bottom of the file. It is also important to copy the MQTTConnector.defaultOptions and the code line that registers the connector as a Dashboards component.// Register the connectorMQTTConnector.registerType('MQTT', MQTTConnector);CopyEdit this pagePrevious« Data Handling NextData Table  »DataPoolDataPool ExampleDataConnectorCSVConnectorCSVConnector ExampleGoogleSheetsConnectorGoogleSheetsConnector ExampleGoogleSheetsConnector TutorialGoogle API keySpreadsheet KeyBasic demoHTMLTableConnectorHTMLTableConnector ExampleJSONConnectorJSONConnector ExampleCustom Data ConnectorsCustom Data Connector Tutorial (MQTT)About MQTTMQTT dataMQTT connectMQTT Custom ConnectorMQTT client optionsThe sample applicationReuse\n\nData Pool & ConnectorsThe data pool provides central data and data management access in a
dashboard. It manages connectors and their tables on demand, so a dashboard component only loads data when requested.Data connectors manage the transaction and preparation of data. Loading data
from a source is an asynchronous process as the source is usually a web server.DataPoolEach dashboard has one DataPool instance for all components. It is available
via the Board.dataPool class property and can be configured with the
BoardOptions.dataPool option. Usually, one or more connectors get defined,
including the ID, the data source, and whether the data needs
additional modification. The ID is used to retrieve a connector, which is an
asynchronous process.DataPool Exampleasync function run() {  const board = await Dashboards.board('container', {    // ...    dataPool: {      connectors: [{        type: 'JSON',        id: 'My Series Data',        enablePolling: true,        jsonURL: 'https://'      }, {        type: 'CSV',        id: 'My Currency Data',        csvURL: 'https://'        dataModifier: {            type: 'Math',            columnFormulas: [{                column: 'My Fixed Rate',                formula: 'A1*7.8'            }]        }      }]    }    // ...  }, true);  // A component usually performs access to the data pool.  const table = await board.dataPool.getConnectorTable('My Currency Data');  const modifiedTable = table.modified;}run();CopyDataConnectorThe DataConnector is the base class for all connectors; as a stand-alone, it can not load or save data.
It includes common functionality like events, server polling, and managing meta information like the column order.Additionally, the DataConnector contains the registry of all available
connectors. You can access the registry via DataConnector.types.CSVConnectorThe CSVConnector allows the loading of structured text data, where a comma or semicolon separates each table
cell, while a line break separates each row. You can provide data via a URL or directly with a CSV string. Details
of all available options can be found in the
API documentation.CSVConnector Exampleasync function run() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://demo-live-data.highcharts.com/updating-set.csv'    });    await connector.load();}run();CopyGoogleSheetsConnectorWith the GoogleSheetsConnector, is it possible to load table data from a Google
Docs spreadsheet. The connector needs the API key related to a Google account
and the document ID. See the
API documentation
for all options.Please note that the Google account needs read access to the document. Usually
the Google account should not be the owner of the document, as this decreases the
possibilities of limiting access.GoogleSheetsConnector Exampleasync function run() {    const connector = new DataConnector.types.GoogleSheets({        googleAPIKey: 'Aa...zz',        googleSpreadsheetKey: 'Bb...wW'    });    await connector.load();}run();CopyGoogleSheetsConnector TutorialGoogle Sheets is a spreadsheet application included in Google's free, web-based Google Docs Editors suite.With the GoogleSheetsConnector in Highcharts Dashboards, you can load tables from a Google spreadsheet into one of your dashboard
components, whether a Grid, KPI, or chart. Like with other connectors, DataModifiers may be applied during parsing.
Alternatively, the data may be filtered or modified before it is parsed in the beforeParse callback.The connector requires two API keys: one for the Google Spreadsheets API and one for the document itself. In addition, the Google account owner must grant read access to the document. See the GoogleSheetsConnector API for further details.Google API keyPrerequisiteThe document owner must have a Google Cloud Project where the API/Service with Google Sheets API is enabled and an API key exists.Providing the Google Sheet API exists, the API key can be extracted from the Credentials Panel.Spreadsheet KeyThe spreadsheet key can be extracted directly from the URL of the document as illustrated below:https://docs.google.com/spreadsheets/d/1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8tw/editCopySpreadsheet key: 1U17c4GljMWpgk1bcTvUzIuWT8vdOnlCBHTm5S8Jh8twBasic demoHTMLTableConnectorThe HTMLTableConnector allows the import and export of an HTML table as a
DataTable. It is the only connector not supporting loading from a
remote source. Instead, one provides an element reference from the current web
page. Details are listed in the
API documentation.HTMLTableConnector Exampleasync function run() {    const connector = new DataConnector.types.HTMLTable({        dataTable: document.querySelector('#table');    });    await connector.load();}run();CopyJSONConnectorThe JSONConnector supports loading data in a row-oriented structure, as found
in Highcharts series types. The connector options can also control how columns
and rows are structured in the JSON array to support other structures. See the
API documentation
for all possible combinations.JSONConnector Exampleasync function run() {    const connector = new DataConnector.types.JSON({        data: [            ['row 1', 1, 2, 3],            ['row 2', 2, 3, 4],            ['row 3', 0, 1, 2]        ]    });    await connector.load();}run();CopyCustom Data ConnectorsIt is possible to create additional DataConnectors based on the DataConnector
base class. An implementation usually has three steps to fulfil:Load the data from the source and react to possible transaction errors.Create a DataTable and add the data to it.Make the table available, and in case of related options, update the table with
incoming changes from the source.You can see a typical implementation of this in the
GoogleSheetsConnector.
Please note that the included connectors use a separate converter instance for the second step, which involves adding the data to the DataTable.Custom Data Connector Tutorial (MQTT)This tutorial shows how to implement a Custom Data Connector for the
MQTT protocol and how to deploy it in a simple Highcharts Dashboards application. The connector is implemented as a JavaScript class and is independent of the application.About MQTTMQTT is the de facto standard protocol for low-resource, low-power devices and is widely used in IoT applications across a wide range of industries: mobile internet, Smart Hardware, the Internet of Vehicles, Smart Cities, Telemedicine, Power, Oil, Energy, and other fields.The hub of the MQTT network infrastructure is the so-called broker, a server to which applications can send messages and where clients (e.g., a web application) can subscribe to a topic. MQTT is a protocol on top of TCP/IP and for web clients available as WebSocket or TCP.MQTT dataThe MQTT data packet consists of a topic that uniquely defines a data set for a specific connection and a text payload. The payload is typically a JSON object, and the MQTT custom connector described in this tutorial supports JSON only.MQTT connectEstablishing a data link to an MQTT broker typically consists of these steps:Connect to the broker with a given host name and port number, with optional authentication (user, password).Wait for a successful connection.Subscribe to one or more topics.Wait for confirmation of the subscription.Packets now arrive at a rate determined by the data provider (often a wireless sensor application).Process the incoming packets.The MQTT client may also send packets to a broker, but this feature is not implemented in the custom DataConnector we use for this tutorial.MQTT Custom ConnectorThe base class for the MQTTConnector is the DataConnector, where the constructor and the load methods are re-implemented. The load method differs from that of the CSV and JSON connectors in that data is not waiting for arrival (due to the nature of the MQTT protocol, no data may be available immediately). However, it establishes the connection and subscribes to the subject defined in the connector options, providing that the autoConnect and autoSubscribe options are set (the default behavior).The MQTT Connector uses the JSONConverter for parsing, thus providing the application with a beforeParse callback invoked on every packet reception. This callback is crucial to implementing an application because the payload of the incoming packet is typically a hierarchical JSON object whereas the dashboard implementation requires a single-level data structure.In addition, the MQTTConnector provides these custom methods:connectsubscribeunsubscribedisconnectIn a typical application, these are unnecessary as the whole connect/subscribe sequence is executed by default using the load method.The MQTT connector supports the following optional callbacks:beforeParse - fired before an incoming packet is parsedconnectEvent - handles both connect/disconnectsubscribeEvent - handles subscribe/unsubscribepacketEvent - fired on an incoming packeterrorEvent - reports errors from the MQTT client or the connectorThe standard DataConnector events load, afterLoad and loadError are not used, but stub callbacks are provided for reference.Although the JSONConnector and the MQTTConnector have much in common, there are some important differences:The MQTT Connector does not use pollingThe load method does not return any dataThe orientation option is fixed to columnsThe options dataUrl, dataModifier and firstRowAsNames are not supportedThe MQTT connector has some additional options:autoConnect - automatically connect after loadautoSubscribe - automatically subscribe on connectautoReset - clear data table on subscribemaxRows - maximum number of rows in the data tableMQTT client optionsThe MQTTConnector uses the PAHO client library (version 1.1.0) for access control and communication with the MQTT Broker. This library supports MQTT versions 3.1 and 3.1.1.The client options are the following:host - the name of the MQTT broker (e.g. mqtt.mosquitto.org or broker.hivemq.com)port - WebSocket port (depends on the broker). See HiveMQ for an example.user - empty for anonymous clientspassword - empty for anonymous clientsuseSSL - true for a secure connectiontopic - MQTT topictimeout - connection timeout, value in secondsqOs - quality of serviceThe sample applicationThe MQTTConnector is implemented in a sample application that displays incoming data from two connectors, one for each MQTT topic.Each connector provides data for a spline chart and a Grid Component. In addition, timestamped events and the raw data are displayed as unformatted text in a message log that resides outside the Dashboards container. The user may clear the log.The sample application relies on data being published to the two MQTT topics (highcharts/topic1 and highcharts/topic2). The payload of the MQTT packet must be in a specific format to work correctly (see the example below).The data is generated by an MQTT client hosted by Highcharts. It uses the HiveMQ Websocket Client, publishing to the topics highcharts/topic1 and highcharts/topic2.NB! Clicking the Connect button connects the application to the MQTT broker and subscribes to the two mentioned topics. Data should immediately appear in the charts and data grids.Example data:highcharts/topic1CopyMessage{    "name": "North Sea",    "value": 35.69,    "timestamp": "2024-09-12T08:12:01.028Z" }CopyReuseThe MQTTConnector can be reused for other applications by copying the entire class from the demo's Javascript file. The implementation is found at the bottom of the file. It is also important to copy the MQTTConnector.defaultOptions and the code line that registers the connector as a Dashboards component.// Register the connectorMQTTConnector.registerType('MQTT', MQTTConnector);CopyEdit this pagePrevious« Data Handling NextData Table  »DataPoolDataPool ExampleDataConnectorCSVConnectorCSVConnector ExampleGoogleSheetsConnectorGoogleSheetsConnector ExampleGoogleSheetsConnector TutorialGoogle API keySpreadsheet KeyBasic demoHTMLTableConnectorHTMLTableConnector ExampleJSONConnectorJSONConnector ExampleCustom Data ConnectorsCustom Data Connector Tutorial (MQTT)About MQTTMQTT dataMQTT connectMQTT Custom ConnectorMQTT client optionsThe sample applicationReuse\n\n\n\nData TableA data table (class DataTable) is a structured representation of data consisting of columns and rows.
It offers methods for adding, removing, and manipulating columns and rows and for accessing data from specific cells.
Think of a Data Table as a grid where each row represents a record or entry, and each column represents a specific attribute or piece of information.DataTable is an integral part of the Dashboards and the Grid bundles. Hence it can be accessed from both so there is no need to load any additional modules.Creating a data tableThere are several ways to create a DataTable:1. From a data poolThe DataPool is the main entry point for data handling in Highcharts Dashboards. It handles incoming data and creates a DataTable to store the imported data.It can be created automatically when you create a Dashboard:Dashboards.board('container', {    dataPool: {        connectors: [{            type: 'CSV',            id: 'my-connector',            options: {                csvURL: 'https://example.com/data.csv'            }        }]        ...CopyOr you can create it manually with connector options:const dataPool = new DataPool();dataPool.setConnectorOptions({    type: 'CSV',    id: 'my-connector',    options: {        csvURL: 'https://example.com/data.csv'    }});const dataTable = await dataPool.getConnectorTable('my-connector');Copy2. From a data connectorA DataConnector is a service that retrieves data from an external source and creates a DataTable to store the imported data.The DataTable is accessible via the DataConnector.tableasync function loadData() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://example.com/data.csv'    });    await connector.load();    const dataTable = connector.table;}Copy3. ManuallyYou can create a DataTable manually by providing the columns and rows.const dataTable = new Dashboards.DataTable({    columns: {        x: [1, 2, 3, 4, 5, 6],        y: ['a', 'a', 'b', 'b', 'c', 'c']    }});Copy4. From a data modifierA DataModifier is a service that modifies data in a DataTable. It can create a new DataTable with the modified data.const sortModifier = new DataModifier.types.Sort({    direction: 'asc',    orderByColumn: 'City'});const table = new Dashboards.DataTable({    columns: {        Rank: [1, 2, 3, 4, 5, 6],        City: ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Canberra'],        State: ['NSW', 'VIC', 'QLD', 'WA', 'SA', 'ACT'],        Population: [5259764, 4976157, 2568927, 2192229, 1402393, 453558]    }});const tableModified = sortModifier.modifyTable(table.clone());CopyGet operationsThe DataTable class offers several methods for accessing data. Some of the most common are:getRow- Returns a row with the specified index from the data table.getRows- Returns all or several rows.getRowIndexBy- Returns the index of the first row that matches the specified condition.getColumn- Returns a column with the specified name or alias from the data table.getColumns- Returns all or several columns.getModifier- Returns the modifier for the table.And many more. For a full list of methods, see the API documentation.Set operationsThe DataTable class offers several methods for modifying data. Some of the most common are:setRow- Sets cell values of a row.setRows- Sets cell values of multiple rows.setColumn- Sets cell values for a column.setColumns- Sets cell values for multiple columns.setModifier- Sets or unsets the modifier for the table.See other available methods in the API documentation.Other operationsOther useful operations include:clone- Returns a clone of the table.deleteColumns- Deletes columns from the table.deleteRows- Deletes rows from the table.on- Adds an event listener to the table for a specific event.\n\nData TableA data table (class DataTable) is a structured representation of data consisting of columns and rows.
It offers methods for adding, removing, and manipulating columns and rows and for accessing data from specific cells.
Think of a Data Table as a grid where each row represents a record or entry, and each column represents a specific attribute or piece of information.DataTable is an integral part of the Dashboards and the Grid bundles. Hence it can be accessed from both so there is no need to load any additional modules.Creating a data tableThere are several ways to create a DataTable:1. From a data poolThe DataPool is the main entry point for data handling in Highcharts Dashboards. It handles incoming data and creates a DataTable to store the imported data.It can be created automatically when you create a Dashboard:Dashboards.board('container', {    dataPool: {        connectors: [{            type: 'CSV',            id: 'my-connector',            options: {                csvURL: 'https://example.com/data.csv'            }        }]        ...CopyOr you can create it manually with connector options:const dataPool = new DataPool();dataPool.setConnectorOptions({    type: 'CSV',    id: 'my-connector',    options: {        csvURL: 'https://example.com/data.csv'    }});const dataTable = await dataPool.getConnectorTable('my-connector');Copy2. From a data connectorA DataConnector is a service that retrieves data from an external source and creates a DataTable to store the imported data.The DataTable is accessible via the DataConnector.tableasync function loadData() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://example.com/data.csv'    });    await connector.load();    const dataTable = connector.table;}Copy3. ManuallyYou can create a DataTable manually by providing the columns and rows.const dataTable = new Dashboards.DataTable({    columns: {        x: [1, 2, 3, 4, 5, 6],        y: ['a', 'a', 'b', 'b', 'c', 'c']    }});Copy4. From a data modifierA DataModifier is a service that modifies data in a DataTable. It can create a new DataTable with the modified data.const sortModifier = new DataModifier.types.Sort({    direction: 'asc',    orderByColumn: 'City'});const table = new Dashboards.DataTable({    columns: {        Rank: [1, 2, 3, 4, 5, 6],        City: ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Canberra'],        State: ['NSW', 'VIC', 'QLD', 'WA', 'SA', 'ACT'],        Population: [5259764, 4976157, 2568927, 2192229, 1402393, 453558]    }});const tableModified = sortModifier.modifyTable(table.clone());CopyGet operationsThe DataTable class offers several methods for accessing data. Some of the most common are:getRow- Returns a row with the specified index from the data table.getRows- Returns all or several rows.getRowIndexBy- Returns the index of the first row that matches the specified condition.getColumn- Returns a column with the specified name or alias from the data table.getColumns- Returns all or several columns.getModifier- Returns the modifier for the table.And many more. For a full list of methods, see the API documentation.Set operationsThe DataTable class offers several methods for modifying data. Some of the most common are:setRow- Sets cell values of a row.setRows- Sets cell values of multiple rows.setColumn- Sets cell values for a column.setColumns- Sets cell values for multiple columns.setModifier- Sets or unsets the modifier for the table.See other available methods in the API documentation.Other operationsOther useful operations include:clone- Returns a clone of the table.deleteColumns- Deletes columns from the table.deleteRows- Deletes rows from the table.on- Adds an event listener to the table for a specific event.Edit this pagePrevious« Data Pool & Connectors NextData Modifiers  »Creating a data table1. From a data pool2. From a data connector3. Manually4. From a data modifierGet operationsSet operationsOther operations\n\nData TableA data table (class DataTable) is a structured representation of data consisting of columns and rows.
It offers methods for adding, removing, and manipulating columns and rows and for accessing data from specific cells.
Think of a Data Table as a grid where each row represents a record or entry, and each column represents a specific attribute or piece of information.DataTable is an integral part of the Dashboards and the Grid bundles. Hence it can be accessed from both so there is no need to load any additional modules.Creating a data tableThere are several ways to create a DataTable:1. From a data poolThe DataPool is the main entry point for data handling in Highcharts Dashboards. It handles incoming data and creates a DataTable to store the imported data.It can be created automatically when you create a Dashboard:Dashboards.board('container', {    dataPool: {        connectors: [{            type: 'CSV',            id: 'my-connector',            options: {                csvURL: 'https://example.com/data.csv'            }        }]        ...CopyOr you can create it manually with connector options:const dataPool = new DataPool();dataPool.setConnectorOptions({    type: 'CSV',    id: 'my-connector',    options: {        csvURL: 'https://example.com/data.csv'    }});const dataTable = await dataPool.getConnectorTable('my-connector');Copy2. From a data connectorA DataConnector is a service that retrieves data from an external source and creates a DataTable to store the imported data.The DataTable is accessible via the DataConnector.tableasync function loadData() {    const connector = new DataConnector.types.CSV({        csvURL: 'https://example.com/data.csv'    });    await connector.load();    const dataTable = connector.table;}Copy3. ManuallyYou can create a DataTable manually by providing the columns and rows.const dataTable = new Dashboards.DataTable({    columns: {        x: [1, 2, 3, 4, 5, 6],        y: ['a', 'a', 'b', 'b', 'c', 'c']    }});Copy4. From a data modifierA DataModifier is a service that modifies data in a DataTable. It can create a new DataTable with the modified data.const sortModifier = new DataModifier.types.Sort({    direction: 'asc',    orderByColumn: 'City'});const table = new Dashboards.DataTable({    columns: {        Rank: [1, 2, 3, 4, 5, 6],        City: ['Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Canberra'],        State: ['NSW', 'VIC', 'QLD', 'WA', 'SA', 'ACT'],        Population: [5259764, 4976157, 2568927, 2192229, 1402393, 453558]    }});const tableModified = sortModifier.modifyTable(table.clone());CopyGet operationsThe DataTable class offers several methods for accessing data. Some of the most common are:getRow- Returns a row with the specified index from the data table.getRows- Returns all or several rows.getRowIndexBy- Returns the index of the first row that matches the specified condition.getColumn- Returns a column with the specified name or alias from the data table.getColumns- Returns all or several columns.getModifier- Returns the modifier for the table.And many more. For a full list of methods, see the API documentation.Set operationsThe DataTable class offers several methods for modifying data. Some of the most common are:setRow- Sets cell values of a row.setRows- Sets cell values of multiple rows.setColumn- Sets cell values for a column.setColumns- Sets cell values for multiple columns.setModifier- Sets or unsets the modifier for the table.See other available methods in the API documentation.Other operationsOther useful operations include:clone- Returns a clone of the table.deleteColumns- Deletes columns from the table.deleteRows- Deletes rows from the table.on- Adds an event listener to the table for a specific event.Edit this pagePrevious« Data Pool & Connectors NextData Modifiers  »Creating a data table1. From a data pool2. From a data connector3. Manually4. From a data modifierGet operationsSet operationsOther operations\n\n\n\nData ModifiersThe data comes in different shapes and sizes from all over the internet, so its format needs to be adjusted to make it accessible to the dashboard. Instead of manually parsing the data, there is an option to use the DataModifiers. Those modifiers allow the user to modify the data on the initial load and the end user to modify visible data through the GUI. Each of the modifiers is accessible through the main Dashboards package, except for the MathModifier, which is the most complex one and requires loading a separate module from https://code.highcharts.com/dashboards/modules/math-modifier.js. Each of the modifiers can be connected to every type of connector.Where is the modifier defined?The modifier is attached to the connector defined in the dataPool in its options.Types of modifiersThe types of modifiers that are available are:ChainRangeInvertMathSortHow to add the modifier?To add the modifier, specify it in the connector options.connector: {    type: 'CSV',    id: 'connector-id',    options: {        //... other options        dataModifier: {            type: 'Math' // or 'Invert'|'Math' etc,            // additional modifier options        }    }}CopyThe modifier modifies the table.modified property of the connector, leaving the original data unchanged so that it can be restored if needed.What does each of the modifiers do?Here is a brief description of each of the modifiers:ChainAllows the combination of multiple modifiers in the same connector. This is useful if you need to perform multiple operations on the same dataset. In the chain property, you can define the order and configuration objects of the modifiers that should be applied to the modifier. Here is an example usage of this modifier:dataModifier: {    type: 'Chain',    chain: [{     // ... Another modifier options    }, {     // ... Another modifier options    }]}CopyAPI documentationRangeCan filter the data by minimal and maximal values. It works both for numbers and alphanumerical values. The column option specifies from which column the values should be used to perform filtering, and the minValue and maxValue specify the range limits. Here is an example:dataModifier: {    type: 'Range',    ranges: [{        column: 'year',        minValue: '1961',        maxValue: '2021'    }]}CopyAPI documentationInvertAllows flipping the data and replacing the columns with rows. This is handy when rows structure your data, and you want to present it by columns. No other options need to be specified here. Example:dataModifier: {    type: 'Invert'}CopyMathThis is the only modifier delivered as a separate module. It allows for performing complex math calculations and adding columns of values calculated based on the existing values. It uses commands similar to those found in spreadsheets like Excel. You can read more in the MathModifier Article.
Example:dataModifier: {    type: 'Math',    columnFormulas: [{        column: 'USD',        formula: 'B1*C1' // Multiply EUR (B1) with the rate (C1)    }]}CopyAPI documentationSortThis modifier rearranges the order of the rows based on the content of any selected column. The sorting order is either ascending or descending.
Example:dataModifier: {    type: 'Sort',    direction: 'desc', // 'desc' or 'asc', default 'asc'    orderByColumn: 'y' // Default: 'y'    orderInColumn: ''  // Optional}CopyAPI documentationOriginal and Modified Table relationsEvery modified table contains two methods that allow you to manage the relationships between the rows of the original and modified tables:getLocalRowIndex - Takes the original row index as an argument and returns the local row index in the modified table for which this function is called.getOriginalRowIndex - Takes the local row index (in the modified table for which it is called) as an argument and returns the index of the corresponding row in the original table.Example demosYou can check the modifiers in action with the following demos:Grid with MathModifierCSV data with RangeModifier\n\nData ModifiersThe data comes in different shapes and sizes from all over the internet, so its format needs to be adjusted to make it accessible to the dashboard. Instead of manually parsing the data, there is an option to use the DataModifiers. Those modifiers allow the user to modify the data on the initial load and the end user to modify visible data through the GUI. Each of the modifiers is accessible through the main Dashboards package, except for the MathModifier, which is the most complex one and requires loading a separate module from https://code.highcharts.com/dashboards/modules/math-modifier.js. Each of the modifiers can be connected to every type of connector.Where is the modifier defined?The modifier is attached to the connector defined in the dataPool in its options.Types of modifiersThe types of modifiers that are available are:ChainRangeInvertMathSortHow to add the modifier?To add the modifier, specify it in the connector options.connector: {    type: 'CSV',    id: 'connector-id',    options: {        //... other options        dataModifier: {            type: 'Math' // or 'Invert'|'Math' etc,            // additional modifier options        }    }}CopyThe modifier modifies the table.modified property of the connector, leaving the original data unchanged so that it can be restored if needed.What does each of the modifiers do?Here is a brief description of each of the modifiers:ChainAllows the combination of multiple modifiers in the same connector. This is useful if you need to perform multiple operations on the same dataset. In the chain property, you can define the order and configuration objects of the modifiers that should be applied to the modifier. Here is an example usage of this modifier:dataModifier: {    type: 'Chain',    chain: [{     // ... Another modifier options    }, {     // ... Another modifier options    }]}CopyAPI documentationRangeCan filter the data by minimal and maximal values. It works both for numbers and alphanumerical values. The column option specifies from which column the values should be used to perform filtering, and the minValue and maxValue specify the range limits. Here is an example:dataModifier: {    type: 'Range',    ranges: [{        column: 'year',        minValue: '1961',        maxValue: '2021'    }]}CopyAPI documentationInvertAllows flipping the data and replacing the columns with rows. This is handy when rows structure your data, and you want to present it by columns. No other options need to be specified here. Example:dataModifier: {    type: 'Invert'}CopyMathThis is the only modifier delivered as a separate module. It allows for performing complex math calculations and adding columns of values calculated based on the existing values. It uses commands similar to those found in spreadsheets like Excel. You can read more in the MathModifier Article.
Example:dataModifier: {    type: 'Math',    columnFormulas: [{        column: 'USD',        formula: 'B1*C1' // Multiply EUR (B1) with the rate (C1)    }]}CopyAPI documentationSortThis modifier rearranges the order of the rows based on the content of any selected column. The sorting order is either ascending or descending.
Example:dataModifier: {    type: 'Sort',    direction: 'desc', // 'desc' or 'asc', default 'asc'    orderByColumn: 'y' // Default: 'y'    orderInColumn: ''  // Optional}CopyAPI documentationOriginal and Modified Table relationsEvery modified table contains two methods that allow you to manage the relationships between the rows of the original and modified tables:getLocalRowIndex - Takes the original row index as an argument and returns the local row index in the modified table for which this function is called.getOriginalRowIndex - Takes the local row index (in the modified table for which it is called) as an argument and returns the index of the corresponding row in the original table.Example demosYou can check the modifiers in action with the following demos:Grid with MathModifierCSV data with RangeModifierEdit this pagePrevious« Data Table NextMathModifier module  »Where is the modifier defined?Types of modifiersHow to add the modifier?What does each of the modifiers do?ChainRangeInvertMathSortOriginal and Modified Table relationsExample demosGrid with MathModifierCSV data with RangeModifier\n\nData ModifiersThe data comes in different shapes and sizes from all over the internet, so its format needs to be adjusted to make it accessible to the dashboard. Instead of manually parsing the data, there is an option to use the DataModifiers. Those modifiers allow the user to modify the data on the initial load and the end user to modify visible data through the GUI. Each of the modifiers is accessible through the main Dashboards package, except for the MathModifier, which is the most complex one and requires loading a separate module from https://code.highcharts.com/dashboards/modules/math-modifier.js. Each of the modifiers can be connected to every type of connector.Where is the modifier defined?The modifier is attached to the connector defined in the dataPool in its options.Types of modifiersThe types of modifiers that are available are:ChainRangeInvertMathSortHow to add the modifier?To add the modifier, specify it in the connector options.connector: {    type: 'CSV',    id: 'connector-id',    options: {        //... other options        dataModifier: {            type: 'Math' // or 'Invert'|'Math' etc,            // additional modifier options        }    }}CopyThe modifier modifies the table.modified property of the connector, leaving the original data unchanged so that it can be restored if needed.What does each of the modifiers do?Here is a brief description of each of the modifiers:ChainAllows the combination of multiple modifiers in the same connector. This is useful if you need to perform multiple operations on the same dataset. In the chain property, you can define the order and configuration objects of the modifiers that should be applied to the modifier. Here is an example usage of this modifier:dataModifier: {    type: 'Chain',    chain: [{     // ... Another modifier options    }, {     // ... Another modifier options    }]}CopyAPI documentationRangeCan filter the data by minimal and maximal values. It works both for numbers and alphanumerical values. The column option specifies from which column the values should be used to perform filtering, and the minValue and maxValue specify the range limits. Here is an example:dataModifier: {    type: 'Range',    ranges: [{        column: 'year',        minValue: '1961',        maxValue: '2021'    }]}CopyAPI documentationInvertAllows flipping the data and replacing the columns with rows. This is handy when rows structure your data, and you want to present it by columns. No other options need to be specified here. Example:dataModifier: {    type: 'Invert'}CopyMathThis is the only modifier delivered as a separate module. It allows for performing complex math calculations and adding columns of values calculated based on the existing values. It uses commands similar to those found in spreadsheets like Excel. You can read more in the MathModifier Article.
Example:dataModifier: {    type: 'Math',    columnFormulas: [{        column: 'USD',        formula: 'B1*C1' // Multiply EUR (B1) with the rate (C1)    }]}CopyAPI documentationSortThis modifier rearranges the order of the rows based on the content of any selected column. The sorting order is either ascending or descending.
Example:dataModifier: {    type: 'Sort',    direction: 'desc', // 'desc' or 'asc', default 'asc'    orderByColumn: 'y' // Default: 'y'    orderInColumn: ''  // Optional}CopyAPI documentationOriginal and Modified Table relationsEvery modified table contains two methods that allow you to manage the relationships between the rows of the original and modified tables:getLocalRowIndex - Takes the original row index as an argument and returns the local row index in the modified table for which this function is called.getOriginalRowIndex - Takes the local row index (in the modified table for which it is called) as an argument and returns the index of the corresponding row in the original table.Example demosYou can check the modifiers in action with the following demos:Grid with MathModifierCSV data with RangeModifierEdit this pagePrevious« Data Table NextMathModifier module  »Where is the modifier defined?Types of modifiersHow to add the modifier?What does each of the modifiers do?ChainRangeInvertMathSortOriginal and Modified Table relationsExample demosGrid with MathModifierCSV data with RangeModifier\n\n\n\nMathModifier moduleThe MathModifier provides different functions to run pre-defined formulas on a
table, or to calculate the pre-filled formulas loaded into the table cells.
MathModifier's integrated formula system supports a subset of known spreadsheet
functions, but more can be defined by your needs.As in spreadsheets, you can use cell and range references. The MathModifier
supports the following reference syntaxes:A1: One or more capital letters are the index for the column, while one or
more digits are the index for the row. The $ syntax for fixed indexes is
also supported.A1:Z9: Capital letters are the start index and end index for the columns of
the range, while digits are the start index and end index for the rows of the
range.R1C1: R followed by one or more digits is the index for the row, while
C followed by one or more digits is the index for the column. This syntax
also supports negative values for back-references.R1C1:R9C9: R followed by digits is the start index and end index for the
rows of the range, while C followed by digits is the start index and end
index for the columns of the range.For performance reasons, a reference to a formula cell is only supported as:A back-reference from the current column back to the first column.A back-reference from the current row back to the first row.As with every DataModifier, the original table will not be altered by the
MathModifier, and instead, a table clone is created containing the calculated
values.Pre-defined column calculationsYou can pre-define formulas in the MathModifier options to create new
columns with calculations based on existing columns. You can also replace an
existing column with calculations, e.g. replace metric values. References in
your formulas will be adjusted accordingly to each row.{    type: 'MathModifier'    columns: {        'My New Column': 'A1 / 7 * 5'        // A1 is here the first cell of each row    }}CopyPre-filled column calculationsIf the table already contains cells pre-filled with formulas, then these will automatically be processed by the MathModifier. A formula in a cell has to start
with an equal sign (=) as the first character, to get calculated by the
MathModifier.{    id: 'My DataTable',    columns: {        'First Column': [ 1, 2, 3 ], // = Column A        'Second Column': [ 4, 5, 6 ], // = Column B        'Total Column': [ '=SUM(A1:B1)', '=SUM(A2:B2)', '=SUM(A3:B3)' ]    }}CopySupported calculations & functionsThe formula system of the MathModifier supports infinite combinations of
calculations and function calls. Additionally, custom functions can be added, as described in a later section.OperatorsFor calculations, the following operators are supported:+: Addition, e.g. =1+2.-: Subtraction, e.g. =7-4.*: Multiplication, e.g. =1*3./: Division, e.g. =21/7.^: Exponentiation, e.g. =3^1.=: Equal Comparison, e.g. =3=3.<: Lower Comparison, e.g. =1<3.<=: Lower-or-equal Comparison, e.g. =2<=3.>: Higher Comparison, e.g. =3>2.>=: Higher-or-equal Comparison, e.g. =9>=3.FunctionsThe following functions are already included:ABS(value):
Returns positive numbers.AND(...tests):
Returns TRUE if all test results are not 0 or FALSE.AVERAGE(...values):
Calculates the average of the given values, which are numbers.AVERAGEA(...values):
Calculates the average of the given values. Strings and FALSE are calculated
as 0.COUNT(...values):
Returns the count of given values that are numbers.COUNTA(...values):
Returns the count of given values that are not empty.IF(test, value1, value2):
Returns one of the values based on the test result. value1 will be returned,
if the test result is not 0 or FALSE.ISNA(value):
Returns TRUE if the value is not a number.MAX(...values):
Calculates the largest of the given numerical values.MEDIAN(...values):
Calculates the median average of the given values.MIN(...values):
Calculates the lowest of the given numerical values.MOD(value1, value2):
Calculates the rest of the division with the given values.MODE.MULT(...values):
Calculates the most frequent values of the given values.MODE.SNGL(...values):
Calculates the lowest, most frequent value of the given values.
MODE(...values) is an alias.NOT(value):
Returns the opposite test result.OR(...tests):
Returns TRUE if one test result is not 0 or FALSE.PRODUCT(...values):
Calculates the product of the given values.SUM(...values):
Calculates the sum of the given values.XOR(...tests):
Returns TRUE if at least one of the given tests differs from the result of other
tests.Custom-defined FunctionsIf you need to support another function, you can define it in the formula
system of the MathModifier. You might need to support cell and range references depending on the implementation.const Formula = Dashboards.DataModifier.types.Math.Formula;function MYFUNC(args, table): number {    // Calculate values and map references    const values = Formula.getArgumentsValues(args, table);    let result = 0;    // Loop over the argument values    for (const value of values) {        switch (typeof value) {            case 'number': // Calculate                if (!isNaN(value)) {                    result += value * 2;                }                break;            case 'object': // Calculate with range array of values                result += MYFUNC(value, table);                break;        }    }    return result;}Formula.registerProcessorFunction('MYFUNC', MYFUNC);Copy\n\nMathModifier moduleThe MathModifier provides different functions to run pre-defined formulas on a
table, or to calculate the pre-filled formulas loaded into the table cells.
MathModifier's integrated formula system supports a subset of known spreadsheet
functions, but more can be defined by your needs.As in spreadsheets, you can use cell and range references. The MathModifier
supports the following reference syntaxes:A1: One or more capital letters are the index for the column, while one or
more digits are the index for the row. The $ syntax for fixed indexes is
also supported.A1:Z9: Capital letters are the start index and end index for the columns of
the range, while digits are the start index and end index for the rows of the
range.R1C1: R followed by one or more digits is the index for the row, while
C followed by one or more digits is the index for the column. This syntax
also supports negative values for back-references.R1C1:R9C9: R followed by digits is the start index and end index for the
rows of the range, while C followed by digits is the start index and end
index for the columns of the range.For performance reasons, a reference to a formula cell is only supported as:A back-reference from the current column back to the first column.A back-reference from the current row back to the first row.As with every DataModifier, the original table will not be altered by the
MathModifier, and instead, a table clone is created containing the calculated
values.Pre-defined column calculationsYou can pre-define formulas in the MathModifier options to create new
columns with calculations based on existing columns. You can also replace an
existing column with calculations, e.g. replace metric values. References in
your formulas will be adjusted accordingly to each row.{    type: 'MathModifier'    columns: {        'My New Column': 'A1 / 7 * 5'        // A1 is here the first cell of each row    }}CopyPre-filled column calculationsIf the table already contains cells pre-filled with formulas, then these will automatically be processed by the MathModifier. A formula in a cell has to start
with an equal sign (=) as the first character, to get calculated by the
MathModifier.{    id: 'My DataTable',    columns: {        'First Column': [ 1, 2, 3 ], // = Column A        'Second Column': [ 4, 5, 6 ], // = Column B        'Total Column': [ '=SUM(A1:B1)', '=SUM(A2:B2)', '=SUM(A3:B3)' ]    }}CopySupported calculations & functionsThe formula system of the MathModifier supports infinite combinations of
calculations and function calls. Additionally, custom functions can be added, as described in a later section.OperatorsFor calculations, the following operators are supported:+: Addition, e.g. =1+2.-: Subtraction, e.g. =7-4.*: Multiplication, e.g. =1*3./: Division, e.g. =21/7.^: Exponentiation, e.g. =3^1.=: Equal Comparison, e.g. =3=3.<: Lower Comparison, e.g. =1<3.<=: Lower-or-equal Comparison, e.g. =2<=3.>: Higher Comparison, e.g. =3>2.>=: Higher-or-equal Comparison, e.g. =9>=3.FunctionsThe following functions are already included:ABS(value):
Returns positive numbers.AND(...tests):
Returns TRUE if all test results are not 0 or FALSE.AVERAGE(...values):
Calculates the average of the given values, which are numbers.AVERAGEA(...values):
Calculates the average of the given values. Strings and FALSE are calculated
as 0.COUNT(...values):
Returns the count of given values that are numbers.COUNTA(...values):
Returns the count of given values that are not empty.IF(test, value1, value2):
Returns one of the values based on the test result. value1 will be returned,
if the test result is not 0 or FALSE.ISNA(value):
Returns TRUE if the value is not a number.MAX(...values):
Calculates the largest of the given numerical values.MEDIAN(...values):
Calculates the median average of the given values.MIN(...values):
Calculates the lowest of the given numerical values.MOD(value1, value2):
Calculates the rest of the division with the given values.MODE.MULT(...values):
Calculates the most frequent values of the given values.MODE.SNGL(...values):
Calculates the lowest, most frequent value of the given values.
MODE(...values) is an alias.NOT(value):
Returns the opposite test result.OR(...tests):
Returns TRUE if one test result is not 0 or FALSE.PRODUCT(...values):
Calculates the product of the given values.SUM(...values):
Calculates the sum of the given values.XOR(...tests):
Returns TRUE if at least one of the given tests differs from the result of other
tests.Custom-defined FunctionsIf you need to support another function, you can define it in the formula
system of the MathModifier. You might need to support cell and range references depending on the implementation.const Formula = Dashboards.DataModifier.types.Math.Formula;function MYFUNC(args, table): number {    // Calculate values and map references    const values = Formula.getArgumentsValues(args, table);    let result = 0;    // Loop over the argument values    for (const value of values) {        switch (typeof value) {            case 'number': // Calculate                if (!isNaN(value)) {                    result += value * 2;                }                break;            case 'object': // Calculate with range array of values                result += MYFUNC(value, table);                break;        }    }    return result;}Formula.registerProcessorFunction('MYFUNC', MYFUNC);CopyEdit this pagePrevious« Data Modifiers NextCustom Dashboards components  »Pre-defined column calculationsPre-filled column calculationsSupported calculations & functionsOperatorsFunctionsCustom-defined Functions\n\nMathModifier moduleThe MathModifier provides different functions to run pre-defined formulas on a
table, or to calculate the pre-filled formulas loaded into the table cells.
MathModifier's integrated formula system supports a subset of known spreadsheet
functions, but more can be defined by your needs.As in spreadsheets, you can use cell and range references. The MathModifier
supports the following reference syntaxes:A1: One or more capital letters are the index for the column, while one or
more digits are the index for the row. The $ syntax for fixed indexes is
also supported.A1:Z9: Capital letters are the start index and end index for the columns of
the range, while digits are the start index and end index for the rows of the
range.R1C1: R followed by one or more digits is the index for the row, while
C followed by one or more digits is the index for the column. This syntax
also supports negative values for back-references.R1C1:R9C9: R followed by digits is the start index and end index for the
rows of the range, while C followed by digits is the start index and end
index for the columns of the range.For performance reasons, a reference to a formula cell is only supported as:A back-reference from the current column back to the first column.A back-reference from the current row back to the first row.As with every DataModifier, the original table will not be altered by the
MathModifier, and instead, a table clone is created containing the calculated
values.Pre-defined column calculationsYou can pre-define formulas in the MathModifier options to create new
columns with calculations based on existing columns. You can also replace an
existing column with calculations, e.g. replace metric values. References in
your formulas will be adjusted accordingly to each row.{    type: 'MathModifier'    columns: {        'My New Column': 'A1 / 7 * 5'        // A1 is here the first cell of each row    }}CopyPre-filled column calculationsIf the table already contains cells pre-filled with formulas, then these will automatically be processed by the MathModifier. A formula in a cell has to start
with an equal sign (=) as the first character, to get calculated by the
MathModifier.{    id: 'My DataTable',    columns: {        'First Column': [ 1, 2, 3 ], // = Column A        'Second Column': [ 4, 5, 6 ], // = Column B        'Total Column': [ '=SUM(A1:B1)', '=SUM(A2:B2)', '=SUM(A3:B3)' ]    }}CopySupported calculations & functionsThe formula system of the MathModifier supports infinite combinations of
calculations and function calls. Additionally, custom functions can be added, as described in a later section.OperatorsFor calculations, the following operators are supported:+: Addition, e.g. =1+2.-: Subtraction, e.g. =7-4.*: Multiplication, e.g. =1*3./: Division, e.g. =21/7.^: Exponentiation, e.g. =3^1.=: Equal Comparison, e.g. =3=3.<: Lower Comparison, e.g. =1<3.<=: Lower-or-equal Comparison, e.g. =2<=3.>: Higher Comparison, e.g. =3>2.>=: Higher-or-equal Comparison, e.g. =9>=3.FunctionsThe following functions are already included:ABS(value):
Returns positive numbers.AND(...tests):
Returns TRUE if all test results are not 0 or FALSE.AVERAGE(...values):
Calculates the average of the given values, which are numbers.AVERAGEA(...values):
Calculates the average of the given values. Strings and FALSE are calculated
as 0.COUNT(...values):
Returns the count of given values that are numbers.COUNTA(...values):
Returns the count of given values that are not empty.IF(test, value1, value2):
Returns one of the values based on the test result. value1 will be returned,
if the test result is not 0 or FALSE.ISNA(value):
Returns TRUE if the value is not a number.MAX(...values):
Calculates the largest of the given numerical values.MEDIAN(...values):
Calculates the median average of the given values.MIN(...values):
Calculates the lowest of the given numerical values.MOD(value1, value2):
Calculates the rest of the division with the given values.MODE.MULT(...values):
Calculates the most frequent values of the given values.MODE.SNGL(...values):
Calculates the lowest, most frequent value of the given values.
MODE(...values) is an alias.NOT(value):
Returns the opposite test result.OR(...tests):
Returns TRUE if one test result is not 0 or FALSE.PRODUCT(...values):
Calculates the product of the given values.SUM(...values):
Calculates the sum of the given values.XOR(...tests):
Returns TRUE if at least one of the given tests differs from the result of other
tests.Custom-defined FunctionsIf you need to support another function, you can define it in the formula
system of the MathModifier. You might need to support cell and range references depending on the implementation.const Formula = Dashboards.DataModifier.types.Math.Formula;function MYFUNC(args, table): number {    // Calculate values and map references    const values = Formula.getArgumentsValues(args, table);    let result = 0;    // Loop over the argument values    for (const value of values) {        switch (typeof value) {            case 'number': // Calculate                if (!isNaN(value)) {                    result += value * 2;                }                break;            case 'object': // Calculate with range array of values                result += MYFUNC(value, table);                break;        }    }    return result;}Formula.registerProcessorFunction('MYFUNC', MYFUNC);CopyEdit this pagePrevious« Data Modifiers NextCustom Dashboards components  »Pre-defined column calculationsPre-filled column calculationsSupported calculations & functionsOperatorsFunctionsCustom-defined Functions\n\n\n\nCustom Dashboards componentsCustom HTML ComponentThe basic HTML component described in the Types of Components doesn't allow the reuse of the HTML code, which is already present in the DOM. To overcome this limitation, you can create a custom HTML component, which will allow you to reference the HTML element by its id attribute or pass the HTML as a string to the html property.This custom component will extend the basic HTML component, so we must import the HTMLComponent class. The easiest way is through the ComponentRegistry, as shown below. We will also use the Dashboards.AST class, which will be used to parse the string-type HTML into an AST-like object. In case something is missing in the AST class, you can extend it the same way as in Highcharts. See the documentation for AST.Then, we can create our custom class, which extends the HTMLComponent class. The only thing we need to do is create a method to extract the HTML from the options and parse it into an AST-like object. In the example, this method is called getCustomHTML, and it assigns the element generated by the AST to the elements property. The only thing left is to register the new component in the ComponentRegistry, and we are ready to use it.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML,    AST = Dashboards.AST;class CustomHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'CustomHTML';        this.getCustomHTML();        return this;    }    getCustomHTML() {        const options = this.options;        if (options.id) {            const customHTML = document.getElementById(options.id).outerHTML;            this.options.elements = new AST(customHTML).nodes;        }    }}ComponentRegistry.registerComponent('CustomHTML', CustomHTML);CopyThe use of this component is shown below:Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }, {                    id: 'dashboard-col-1'                }, {                    id: 'dashboard-col-2'                }]            }]        }]    },    components: [{        type: 'CustomHTML',        renderTo: 'dashboard-col-0',        id: 'custom-html-div'    }, {        type: 'CustomHTML',        renderTo: 'dashboard-col-1',        html: `            <div>                <h1>Custom HTML 2</h1>                <span id="custom-html-div-2">Custom HTML added as string</span>            </div>        `    },    {        renderTo: 'dashboard-col-2',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyCustom Threshold ComponentSometimes, you may want to create a component that works as if it changes its type and/or options depending on certain conditions. Such a condition may be, for example, value. The example below shows how to program a custom so-called Threshold Component.Such a component can be implemented very similarly to the previously described YouTubeComponent, except that you need to consider replacing the default cell content with the child component. This can be achieved by overriding the render method with the code for clearing the cell content and then the logic for creating and updating a new component like this:render() {    if (!this.component) {        this.parentElement.innerHTML = '';        this.component =            new CurrentComponent(this.cell, componentOptions).load();    } else {        this.component.update(componentOptions);    }}CopyAn example implementation of the ThresholdComponent can look like this:const {    Component,    ComponentRegistry,    merge} = Dashboards;class ThresholdComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'Threshold';        return this;    }    render() {        const options = this.options,            value = options.value,            thresholds = options.thresholds;        let CurrentComponent = ComponentRegistry.types[options.component],            componentOptions = merge(options.options || {}, {                value            });        // Selecting appropriate options and components based on thresholds        // and given value.        if (thresholds && Number.isFinite(value)) {            for (let i = 0; i < thresholds.length; i++) {                const threshold = thresholds[i];                if (                    Number.isFinite(threshold.min) && value < threshold.min ||                    Number.isFinite(threshold.max) && value > threshold.max                ) {                    continue;                }                componentOptions = merge(componentOptions, threshold.options);                if (threshold.component) {                    CurrentComponent =                        ComponentRegistry.types[threshold.component];                }            }        }        // Rendering the appropriate component or updating it with new options        // if it already exists.        if (!this.component || this.component !== Component) {            this.parentElement.innerHTML = '';            this.component =                new CurrentComponent(this.cell, componentOptions).load();        } else {            this.component.update(componentOptions);        }        return this;    }}ComponentRegistry.registerComponent('Threshold', ThresholdComponent);CopyNow you can create the board containing the ThresholdComponent with the thresholds options, that you want, for example:const board = Dashboards.board('container', {    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        type: 'Threshold',        renderTo: 'dashboard-col-0',        component: 'HTML',        value: 10,        options: {            title: {                text: 'Threshold Component'            },            elements: [{                tagName: 'p',                textContent: `This is a demo of a custom threshold component                that allows you to adjust your content depending on the values                according to the appropriate thresholds. Move the slider above                the board and see how the options and components will change.`,                style: {                    padding: '0 14px',                    textAlign: 'justify'                }            }]        },        thresholds: [{            min: 15,            component: 'KPI',            options: {                title: 'KPI Component',                subtitle: 'You can use any component here, e.g. KPI.'            }        }, {            min: 40,            max: 69,            component: 'Highcharts',            options: {                title: '',                chartOptions: {                    title: {                        text: 'Highcharts Component'                    },                    subtitle: {                        text: 'You can use also the Highcharts Component.'                    },                    series: [{                        data: [1, 2, 3],                        animation: false                    }]                }            }        }, {            min: 70,            options: {                subtitle: `Options from previous thresholds, if not overwritten                or limited by the 'max' option, are passed to the next                thresholds.`            }        }, {            min: 80,            options: {                style: {                    background: '#197'                }            }        }, {            min: 90,            component: 'HTML',            options: {                title: {                    text: 'The End'                }            }        }]    }]});CopyCustom Component with data from the DataConnectorThe example below shows how to develop a custom component that fetches data from the DataConnector, processes and displays it on the dashboard.The custom component is created by extending the HTMLComponent class, which displays the total revenue.The DataConnector is registered on the load, so we need to execute and await the super.load() method first to ensure that the DataConnector is registered. An important part is that the load method is async because we need to wait for the data to be fetched and processed.When the data is ready, the getTotalRevenue method calculates the total revenue. The getElementsFromString method parses the HTML string into an AST-like object. The render method renders the component on the dashboard.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML;class TotalRevenueHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'TotalRevenueHTML';        return this;    }    async load() {        await super.load();        const revenue = this.getTotalRevenue();        this.elements = this.getElementsFromString(            `            <div class="revenue">                <p class="title">Total revenue</p>                <p class="value">${revenue} €</p>            </div>            `        );        this.render();    }    getTotalRevenue() {        const connector = this.getFirstConnector();        const table = connector.table.modified;        return table.columns.Revenue.reduce((acc, cur) => acc + cur);    }}ComponentRegistry.registerComponent('TotalRevenueHTML', TotalRevenueHTML);CopyLater on, the component can be used in the dashboard by referencing the name it was registered with, which, in this case, is TotalRevenueHTML....components: [{    type: 'TotalRevenueHTML',    renderTo: 'cell-id-0',    connector: {        id: 'data'    }},...CopyCustom YouTube ComponentThis article shows how to create a custom Dashboards Component. In this example, we create a YouTube Component.Note that to create the custom component, we are using ES6 and using the class and extends keywords, which makes creating a custom class much easier.We start by importing the default Component class and ComponentRegistry from the Dashboards namespace. We can use destructuring syntax to retrieve these two classes. The next step is creating the class that will inherit from the imported Component class.
The class name will automatically be the string used to reference this component type. For example, the class YouTubeComponent will be referenced by the name "YouTube."const { Component, ComponentRegistry } = Dashboards;class YouTubeComponent extends Component {}CopyThen, depending on what the component is expected to do, the options are limitless. In this example, one iframe element will be added, which will accept one attribute from options, videoId. Since the iframe element needs its size to be defined, the resize method is extended to update the size of the element.The new YouTubeComponent class must be added to the registry using the ComponentRegistry.registerComponent method.The custom code looks like below:class YouTubeComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'YouTube';        this.youTubeElement = document.createElement('iframe');        this.options.editableOptions = [{            name: 'videoId',            propertyPath: ['videoId'],            type: 'input'        }, {            name: 'title',            propertyPath: ['title'],            type: 'input'        }, {            name: 'caption',            propertyPath: ['caption'],            type: 'input'        }];        return this;    }    resize(width, height) {        super.resize.call(this, width, height);        this.youTubeElement.setAttribute('width', width - 10);        this.youTubeElement.setAttribute('height', height - 10);    }    load() {        super.load();        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.youTubeElement.setAttribute('title', 'YouTube video player');        this.youTubeElement.setAttribute('frameborder', '0');        this.youTubeElement.allowfullscreen = true;        this.contentElement.appendChild(this.youTubeElement);        this.parentElement.appendChild(this.element);        return this;    }    async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }    getOptionsOnDrop(sidebar) {        super.getOptionsOnDrop.call(this, sidebar);        return {            renderTo: '',            type: 'YouTube',            videoId: '115hdz9NsrY'        };    }}ComponentRegistry.registerComponent('YouTube', YouTubeComponent);CopyAnd that's it! The component is ready to be used. Now, the new component type can be referenced like that:Dashboards.board({    gui: [{        layouts: [{            rows: [{                cells:[{                    id: 'cell-id'                }]            }]        }]    }],    components: [{        renderTo: 'cell-id',        type: 'YouTube',        videoId: 'video-id-from-youtube'    }]});CopyAdding a custom component to the sidebarTo add the custom component to the sidebar, you need to add the two things:1. On-drop optionsDefine the getOptionsOnDrop method for the custom component, which will be called when the component is dropped on the dashboard. It should return options for the dropped component.2. Edit modeFor the editMode sidebar, define the list of the components that will be available in it.
Use the exact name to register the component in the ComponentRegistry.3. The lang optionTo properly display the component name in the sidebar, add the lang options to the editMode object. If not specified, the component name will be displayed as [YourComponentName]Component; in this case, it is YouTubeComponent.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        contextMenu: {            enabled: true        },        toolbars: {            sidebar: {                components: ['YouTube', 'HTML', 'Highcharts']            }        }    },CopyMaking custom components editableTo make the custom component editable, you must define the editableOptions property in the component options. The best place to define the editableOptions is in the constructor of the custom component.
The editableOptions property is an array of objects, where each object represents one editable option. Read more about the editableOptions in the Editable Options API.
In the example below, the videoId, title and caption are editable options.this.options.editableOptions = [{        name: 'videoId',        propertyPath: ['videoId'],        type: 'input'    }, {        name: 'title',        propertyPath: ['title'],        type: 'input'    }, {        name: 'caption',        propertyPath: ['caption'],        type: 'input'    }];CopyAlso, the update method should be extended to update the component with new options. Here, we have to switch the videoId and set the new videoId to the iframe element. Note that the loading indicator needs to be disabled after the update is performed.  async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }CopyAdditionally the lang options for the new option can be added.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        ...    }Copy\n\nCustom Dashboards componentsCustom HTML ComponentThe basic HTML component described in the Types of Components doesn't allow the reuse of the HTML code, which is already present in the DOM. To overcome this limitation, you can create a custom HTML component, which will allow you to reference the HTML element by its id attribute or pass the HTML as a string to the html property.This custom component will extend the basic HTML component, so we must import the HTMLComponent class. The easiest way is through the ComponentRegistry, as shown below. We will also use the Dashboards.AST class, which will be used to parse the string-type HTML into an AST-like object. In case something is missing in the AST class, you can extend it the same way as in Highcharts. See the documentation for AST.Then, we can create our custom class, which extends the HTMLComponent class. The only thing we need to do is create a method to extract the HTML from the options and parse it into an AST-like object. In the example, this method is called getCustomHTML, and it assigns the element generated by the AST to the elements property. The only thing left is to register the new component in the ComponentRegistry, and we are ready to use it.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML,    AST = Dashboards.AST;class CustomHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'CustomHTML';        this.getCustomHTML();        return this;    }    getCustomHTML() {        const options = this.options;        if (options.id) {            const customHTML = document.getElementById(options.id).outerHTML;            this.options.elements = new AST(customHTML).nodes;        }    }}ComponentRegistry.registerComponent('CustomHTML', CustomHTML);CopyThe use of this component is shown below:Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }, {                    id: 'dashboard-col-1'                }, {                    id: 'dashboard-col-2'                }]            }]        }]    },    components: [{        type: 'CustomHTML',        renderTo: 'dashboard-col-0',        id: 'custom-html-div'    }, {        type: 'CustomHTML',        renderTo: 'dashboard-col-1',        html: `            <div>                <h1>Custom HTML 2</h1>                <span id="custom-html-div-2">Custom HTML added as string</span>            </div>        `    },    {        renderTo: 'dashboard-col-2',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyCustom Threshold ComponentSometimes, you may want to create a component that works as if it changes its type and/or options depending on certain conditions. Such a condition may be, for example, value. The example below shows how to program a custom so-called Threshold Component.Such a component can be implemented very similarly to the previously described YouTubeComponent, except that you need to consider replacing the default cell content with the child component. This can be achieved by overriding the render method with the code for clearing the cell content and then the logic for creating and updating a new component like this:render() {    if (!this.component) {        this.parentElement.innerHTML = '';        this.component =            new CurrentComponent(this.cell, componentOptions).load();    } else {        this.component.update(componentOptions);    }}CopyAn example implementation of the ThresholdComponent can look like this:const {    Component,    ComponentRegistry,    merge} = Dashboards;class ThresholdComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'Threshold';        return this;    }    render() {        const options = this.options,            value = options.value,            thresholds = options.thresholds;        let CurrentComponent = ComponentRegistry.types[options.component],            componentOptions = merge(options.options || {}, {                value            });        // Selecting appropriate options and components based on thresholds        // and given value.        if (thresholds && Number.isFinite(value)) {            for (let i = 0; i < thresholds.length; i++) {                const threshold = thresholds[i];                if (                    Number.isFinite(threshold.min) && value < threshold.min ||                    Number.isFinite(threshold.max) && value > threshold.max                ) {                    continue;                }                componentOptions = merge(componentOptions, threshold.options);                if (threshold.component) {                    CurrentComponent =                        ComponentRegistry.types[threshold.component];                }            }        }        // Rendering the appropriate component or updating it with new options        // if it already exists.        if (!this.component || this.component !== Component) {            this.parentElement.innerHTML = '';            this.component =                new CurrentComponent(this.cell, componentOptions).load();        } else {            this.component.update(componentOptions);        }        return this;    }}ComponentRegistry.registerComponent('Threshold', ThresholdComponent);CopyNow you can create the board containing the ThresholdComponent with the thresholds options, that you want, for example:const board = Dashboards.board('container', {    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        type: 'Threshold',        renderTo: 'dashboard-col-0',        component: 'HTML',        value: 10,        options: {            title: {                text: 'Threshold Component'            },            elements: [{                tagName: 'p',                textContent: `This is a demo of a custom threshold component                that allows you to adjust your content depending on the values                according to the appropriate thresholds. Move the slider above                the board and see how the options and components will change.`,                style: {                    padding: '0 14px',                    textAlign: 'justify'                }            }]        },        thresholds: [{            min: 15,            component: 'KPI',            options: {                title: 'KPI Component',                subtitle: 'You can use any component here, e.g. KPI.'            }        }, {            min: 40,            max: 69,            component: 'Highcharts',            options: {                title: '',                chartOptions: {                    title: {                        text: 'Highcharts Component'                    },                    subtitle: {                        text: 'You can use also the Highcharts Component.'                    },                    series: [{                        data: [1, 2, 3],                        animation: false                    }]                }            }        }, {            min: 70,            options: {                subtitle: `Options from previous thresholds, if not overwritten                or limited by the 'max' option, are passed to the next                thresholds.`            }        }, {            min: 80,            options: {                style: {                    background: '#197'                }            }        }, {            min: 90,            component: 'HTML',            options: {                title: {                    text: 'The End'                }            }        }]    }]});CopyCustom Component with data from the DataConnectorThe example below shows how to develop a custom component that fetches data from the DataConnector, processes and displays it on the dashboard.The custom component is created by extending the HTMLComponent class, which displays the total revenue.The DataConnector is registered on the load, so we need to execute and await the super.load() method first to ensure that the DataConnector is registered. An important part is that the load method is async because we need to wait for the data to be fetched and processed.When the data is ready, the getTotalRevenue method calculates the total revenue. The getElementsFromString method parses the HTML string into an AST-like object. The render method renders the component on the dashboard.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML;class TotalRevenueHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'TotalRevenueHTML';        return this;    }    async load() {        await super.load();        const revenue = this.getTotalRevenue();        this.elements = this.getElementsFromString(            `            <div class="revenue">                <p class="title">Total revenue</p>                <p class="value">${revenue} €</p>            </div>            `        );        this.render();    }    getTotalRevenue() {        const connector = this.getFirstConnector();        const table = connector.table.modified;        return table.columns.Revenue.reduce((acc, cur) => acc + cur);    }}ComponentRegistry.registerComponent('TotalRevenueHTML', TotalRevenueHTML);CopyLater on, the component can be used in the dashboard by referencing the name it was registered with, which, in this case, is TotalRevenueHTML....components: [{    type: 'TotalRevenueHTML',    renderTo: 'cell-id-0',    connector: {        id: 'data'    }},...CopyCustom YouTube ComponentThis article shows how to create a custom Dashboards Component. In this example, we create a YouTube Component.Note that to create the custom component, we are using ES6 and using the class and extends keywords, which makes creating a custom class much easier.We start by importing the default Component class and ComponentRegistry from the Dashboards namespace. We can use destructuring syntax to retrieve these two classes. The next step is creating the class that will inherit from the imported Component class.
The class name will automatically be the string used to reference this component type. For example, the class YouTubeComponent will be referenced by the name "YouTube."const { Component, ComponentRegistry } = Dashboards;class YouTubeComponent extends Component {}CopyThen, depending on what the component is expected to do, the options are limitless. In this example, one iframe element will be added, which will accept one attribute from options, videoId. Since the iframe element needs its size to be defined, the resize method is extended to update the size of the element.The new YouTubeComponent class must be added to the registry using the ComponentRegistry.registerComponent method.The custom code looks like below:class YouTubeComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'YouTube';        this.youTubeElement = document.createElement('iframe');        this.options.editableOptions = [{            name: 'videoId',            propertyPath: ['videoId'],            type: 'input'        }, {            name: 'title',            propertyPath: ['title'],            type: 'input'        }, {            name: 'caption',            propertyPath: ['caption'],            type: 'input'        }];        return this;    }    resize(width, height) {        super.resize.call(this, width, height);        this.youTubeElement.setAttribute('width', width - 10);        this.youTubeElement.setAttribute('height', height - 10);    }    load() {        super.load();        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.youTubeElement.setAttribute('title', 'YouTube video player');        this.youTubeElement.setAttribute('frameborder', '0');        this.youTubeElement.allowfullscreen = true;        this.contentElement.appendChild(this.youTubeElement);        this.parentElement.appendChild(this.element);        return this;    }    async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }    getOptionsOnDrop(sidebar) {        super.getOptionsOnDrop.call(this, sidebar);        return {            renderTo: '',            type: 'YouTube',            videoId: '115hdz9NsrY'        };    }}ComponentRegistry.registerComponent('YouTube', YouTubeComponent);CopyAnd that's it! The component is ready to be used. Now, the new component type can be referenced like that:Dashboards.board({    gui: [{        layouts: [{            rows: [{                cells:[{                    id: 'cell-id'                }]            }]        }]    }],    components: [{        renderTo: 'cell-id',        type: 'YouTube',        videoId: 'video-id-from-youtube'    }]});CopyAdding a custom component to the sidebarTo add the custom component to the sidebar, you need to add the two things:1. On-drop optionsDefine the getOptionsOnDrop method for the custom component, which will be called when the component is dropped on the dashboard. It should return options for the dropped component.2. Edit modeFor the editMode sidebar, define the list of the components that will be available in it.
Use the exact name to register the component in the ComponentRegistry.3. The lang optionTo properly display the component name in the sidebar, add the lang options to the editMode object. If not specified, the component name will be displayed as [YourComponentName]Component; in this case, it is YouTubeComponent.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        contextMenu: {            enabled: true        },        toolbars: {            sidebar: {                components: ['YouTube', 'HTML', 'Highcharts']            }        }    },CopyMaking custom components editableTo make the custom component editable, you must define the editableOptions property in the component options. The best place to define the editableOptions is in the constructor of the custom component.
The editableOptions property is an array of objects, where each object represents one editable option. Read more about the editableOptions in the Editable Options API.
In the example below, the videoId, title and caption are editable options.this.options.editableOptions = [{        name: 'videoId',        propertyPath: ['videoId'],        type: 'input'    }, {        name: 'title',        propertyPath: ['title'],        type: 'input'    }, {        name: 'caption',        propertyPath: ['caption'],        type: 'input'    }];CopyAlso, the update method should be extended to update the component with new options. Here, we have to switch the videoId and set the new videoId to the iframe element. Note that the loading indicator needs to be disabled after the update is performed.  async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }CopyAdditionally the lang options for the new option can be added.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        ...    }CopyEdit this pagePrevious« MathModifier module NextInstallation with ES6 modules  »Custom HTML ComponentCustom Threshold ComponentCustom Component with data from the DataConnectorCustom YouTube ComponentAdding a custom component to the sidebar1. On-drop options2. Edit mode3. The lang optionMaking custom components editable\n\nCustom Dashboards componentsCustom HTML ComponentThe basic HTML component described in the Types of Components doesn't allow the reuse of the HTML code, which is already present in the DOM. To overcome this limitation, you can create a custom HTML component, which will allow you to reference the HTML element by its id attribute or pass the HTML as a string to the html property.This custom component will extend the basic HTML component, so we must import the HTMLComponent class. The easiest way is through the ComponentRegistry, as shown below. We will also use the Dashboards.AST class, which will be used to parse the string-type HTML into an AST-like object. In case something is missing in the AST class, you can extend it the same way as in Highcharts. See the documentation for AST.Then, we can create our custom class, which extends the HTMLComponent class. The only thing we need to do is create a method to extract the HTML from the options and parse it into an AST-like object. In the example, this method is called getCustomHTML, and it assigns the element generated by the AST to the elements property. The only thing left is to register the new component in the ComponentRegistry, and we are ready to use it.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML,    AST = Dashboards.AST;class CustomHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'CustomHTML';        this.getCustomHTML();        return this;    }    getCustomHTML() {        const options = this.options;        if (options.id) {            const customHTML = document.getElementById(options.id).outerHTML;            this.options.elements = new AST(customHTML).nodes;        }    }}ComponentRegistry.registerComponent('CustomHTML', CustomHTML);CopyThe use of this component is shown below:Dashboards.board('container', {    gui: {        layouts: [{            id: 'layout-1',            rows: [{                cells: [{                    id: 'dashboard-col-0'                }, {                    id: 'dashboard-col-1'                }, {                    id: 'dashboard-col-2'                }]            }]        }]    },    components: [{        type: 'CustomHTML',        renderTo: 'dashboard-col-0',        id: 'custom-html-div'    }, {        type: 'CustomHTML',        renderTo: 'dashboard-col-1',        html: `            <div>                <h1>Custom HTML 2</h1>                <span id="custom-html-div-2">Custom HTML added as string</span>            </div>        `    },    {        renderTo: 'dashboard-col-2',        type: 'Highcharts',        chartOptions: {            series: [{                data: [1, 2, 3, 4]            }]        }    }]});CopyCustom Threshold ComponentSometimes, you may want to create a component that works as if it changes its type and/or options depending on certain conditions. Such a condition may be, for example, value. The example below shows how to program a custom so-called Threshold Component.Such a component can be implemented very similarly to the previously described YouTubeComponent, except that you need to consider replacing the default cell content with the child component. This can be achieved by overriding the render method with the code for clearing the cell content and then the logic for creating and updating a new component like this:render() {    if (!this.component) {        this.parentElement.innerHTML = '';        this.component =            new CurrentComponent(this.cell, componentOptions).load();    } else {        this.component.update(componentOptions);    }}CopyAn example implementation of the ThresholdComponent can look like this:const {    Component,    ComponentRegistry,    merge} = Dashboards;class ThresholdComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'Threshold';        return this;    }    render() {        const options = this.options,            value = options.value,            thresholds = options.thresholds;        let CurrentComponent = ComponentRegistry.types[options.component],            componentOptions = merge(options.options || {}, {                value            });        // Selecting appropriate options and components based on thresholds        // and given value.        if (thresholds && Number.isFinite(value)) {            for (let i = 0; i < thresholds.length; i++) {                const threshold = thresholds[i];                if (                    Number.isFinite(threshold.min) && value < threshold.min ||                    Number.isFinite(threshold.max) && value > threshold.max                ) {                    continue;                }                componentOptions = merge(componentOptions, threshold.options);                if (threshold.component) {                    CurrentComponent =                        ComponentRegistry.types[threshold.component];                }            }        }        // Rendering the appropriate component or updating it with new options        // if it already exists.        if (!this.component || this.component !== Component) {            this.parentElement.innerHTML = '';            this.component =                new CurrentComponent(this.cell, componentOptions).load();        } else {            this.component.update(componentOptions);        }        return this;    }}ComponentRegistry.registerComponent('Threshold', ThresholdComponent);CopyNow you can create the board containing the ThresholdComponent with the thresholds options, that you want, for example:const board = Dashboards.board('container', {    gui: {        layouts: [{            rows: [{                cells: [{                    id: 'dashboard-col-0'                }]            }]        }]    },    components: [{        type: 'Threshold',        renderTo: 'dashboard-col-0',        component: 'HTML',        value: 10,        options: {            title: {                text: 'Threshold Component'            },            elements: [{                tagName: 'p',                textContent: `This is a demo of a custom threshold component                that allows you to adjust your content depending on the values                according to the appropriate thresholds. Move the slider above                the board and see how the options and components will change.`,                style: {                    padding: '0 14px',                    textAlign: 'justify'                }            }]        },        thresholds: [{            min: 15,            component: 'KPI',            options: {                title: 'KPI Component',                subtitle: 'You can use any component here, e.g. KPI.'            }        }, {            min: 40,            max: 69,            component: 'Highcharts',            options: {                title: '',                chartOptions: {                    title: {                        text: 'Highcharts Component'                    },                    subtitle: {                        text: 'You can use also the Highcharts Component.'                    },                    series: [{                        data: [1, 2, 3],                        animation: false                    }]                }            }        }, {            min: 70,            options: {                subtitle: `Options from previous thresholds, if not overwritten                or limited by the 'max' option, are passed to the next                thresholds.`            }        }, {            min: 80,            options: {                style: {                    background: '#197'                }            }        }, {            min: 90,            component: 'HTML',            options: {                title: {                    text: 'The End'                }            }        }]    }]});CopyCustom Component with data from the DataConnectorThe example below shows how to develop a custom component that fetches data from the DataConnector, processes and displays it on the dashboard.The custom component is created by extending the HTMLComponent class, which displays the total revenue.The DataConnector is registered on the load, so we need to execute and await the super.load() method first to ensure that the DataConnector is registered. An important part is that the load method is async because we need to wait for the data to be fetched and processed.When the data is ready, the getTotalRevenue method calculates the total revenue. The getElementsFromString method parses the HTML string into an AST-like object. The render method renders the component on the dashboard.const { ComponentRegistry } = Dashboards,    HTMLComponent = ComponentRegistry.types.HTML;class TotalRevenueHTML extends HTMLComponent {    constructor(cell, options) {        super(cell, options);        this.type = 'TotalRevenueHTML';        return this;    }    async load() {        await super.load();        const revenue = this.getTotalRevenue();        this.elements = this.getElementsFromString(            `            <div class="revenue">                <p class="title">Total revenue</p>                <p class="value">${revenue} €</p>            </div>            `        );        this.render();    }    getTotalRevenue() {        const connector = this.getFirstConnector();        const table = connector.table.modified;        return table.columns.Revenue.reduce((acc, cur) => acc + cur);    }}ComponentRegistry.registerComponent('TotalRevenueHTML', TotalRevenueHTML);CopyLater on, the component can be used in the dashboard by referencing the name it was registered with, which, in this case, is TotalRevenueHTML....components: [{    type: 'TotalRevenueHTML',    renderTo: 'cell-id-0',    connector: {        id: 'data'    }},...CopyCustom YouTube ComponentThis article shows how to create a custom Dashboards Component. In this example, we create a YouTube Component.Note that to create the custom component, we are using ES6 and using the class and extends keywords, which makes creating a custom class much easier.We start by importing the default Component class and ComponentRegistry from the Dashboards namespace. We can use destructuring syntax to retrieve these two classes. The next step is creating the class that will inherit from the imported Component class.
The class name will automatically be the string used to reference this component type. For example, the class YouTubeComponent will be referenced by the name "YouTube."const { Component, ComponentRegistry } = Dashboards;class YouTubeComponent extends Component {}CopyThen, depending on what the component is expected to do, the options are limitless. In this example, one iframe element will be added, which will accept one attribute from options, videoId. Since the iframe element needs its size to be defined, the resize method is extended to update the size of the element.The new YouTubeComponent class must be added to the registry using the ComponentRegistry.registerComponent method.The custom code looks like below:class YouTubeComponent extends Component {    constructor(cell, options) {        super(cell, options);        this.type = 'YouTube';        this.youTubeElement = document.createElement('iframe');        this.options.editableOptions = [{            name: 'videoId',            propertyPath: ['videoId'],            type: 'input'        }, {            name: 'title',            propertyPath: ['title'],            type: 'input'        }, {            name: 'caption',            propertyPath: ['caption'],            type: 'input'        }];        return this;    }    resize(width, height) {        super.resize.call(this, width, height);        this.youTubeElement.setAttribute('width', width - 10);        this.youTubeElement.setAttribute('height', height - 10);    }    load() {        super.load();        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.youTubeElement.setAttribute('title', 'YouTube video player');        this.youTubeElement.setAttribute('frameborder', '0');        this.youTubeElement.allowfullscreen = true;        this.contentElement.appendChild(this.youTubeElement);        this.parentElement.appendChild(this.element);        return this;    }    async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }    getOptionsOnDrop(sidebar) {        super.getOptionsOnDrop.call(this, sidebar);        return {            renderTo: '',            type: 'YouTube',            videoId: '115hdz9NsrY'        };    }}ComponentRegistry.registerComponent('YouTube', YouTubeComponent);CopyAnd that's it! The component is ready to be used. Now, the new component type can be referenced like that:Dashboards.board({    gui: [{        layouts: [{            rows: [{                cells:[{                    id: 'cell-id'                }]            }]        }]    }],    components: [{        renderTo: 'cell-id',        type: 'YouTube',        videoId: 'video-id-from-youtube'    }]});CopyAdding a custom component to the sidebarTo add the custom component to the sidebar, you need to add the two things:1. On-drop optionsDefine the getOptionsOnDrop method for the custom component, which will be called when the component is dropped on the dashboard. It should return options for the dropped component.2. Edit modeFor the editMode sidebar, define the list of the components that will be available in it.
Use the exact name to register the component in the ComponentRegistry.3. The lang optionTo properly display the component name in the sidebar, add the lang options to the editMode object. If not specified, the component name will be displayed as [YourComponentName]Component; in this case, it is YouTubeComponent.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        contextMenu: {            enabled: true        },        toolbars: {            sidebar: {                components: ['YouTube', 'HTML', 'Highcharts']            }        }    },CopyMaking custom components editableTo make the custom component editable, you must define the editableOptions property in the component options. The best place to define the editableOptions is in the constructor of the custom component.
The editableOptions property is an array of objects, where each object represents one editable option. Read more about the editableOptions in the Editable Options API.
In the example below, the videoId, title and caption are editable options.this.options.editableOptions = [{        name: 'videoId',        propertyPath: ['videoId'],        type: 'input'    }, {        name: 'title',        propertyPath: ['title'],        type: 'input'    }, {        name: 'caption',        propertyPath: ['caption'],        type: 'input'    }];CopyAlso, the update method should be extended to update the component with new options. Here, we have to switch the videoId and set the new videoId to the iframe element. Note that the loading indicator needs to be disabled after the update is performed.  async update(newOptions, shouldRerender) {        super.update.call(this, newOptions, shouldRerender);        this.youTubeElement.setAttribute(            'src',            'https://www.youtube.com/embed/' + this.options.videoId        );        this.cell.setLoadingState(false);    }CopyAdditionally the lang options for the new option can be added.editMode: {        enabled: true,        lang: {            videoId: 'Video ID',            sidebar: {                YouTube: 'YouTube'            }        },        ...    }CopyEdit this pagePrevious« MathModifier module NextInstallation with ES6 modules  »Custom HTML ComponentCustom Threshold ComponentCustom Component with data from the DataConnectorCustom YouTube ComponentAdding a custom component to the sidebar1. On-drop options2. Edit mode3. The lang optionMaking custom components editable\n\n\n\nInstallation with ES6 modulesHighcharts Dashboards packages are available as ES6-compatible modules.Including a product package (ES6 module)For debugging and development purposes, you can load core files directly from your
browser page and use tree shaking. Please note that this results in a
decreased download size but an increased delay caused by the amount of
(small) files to load. This approach is, therefore, not recommended for
production.<script type="module">        import Dashboards from 'https://code.highcharts.com/dashboards/es-modules/masters/dashboards.src.js';        Dashboards.board('container', {            editMode: {                enabled: true,                contextMenu: {                    enabled: true                }            },            gui: {                enabled: true,                layouts: [{                    rows: [{                        cells: [{                            id: 'dashboard-col-0'                        }]                    }]                }]            },            components: [                {                    renderTo: 'dashboard-col-0',                    type: 'HTML',                    elements: [{                        tagName: 'h1',                        attributes: {                            text: 'Hello world'                        }                    }]                }            ]        });    </script>CopyTo load a pluginA plugin is a third-party/community-made Highcharts Dashboards addon.
First, make sure that a plugin supports loading over NPM. Then, load the required files.
In the example, Grid supports NPM loading, so after installing the package, you could initialize and register it like this:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);Copy\n\nInstallation with ES6 modulesHighcharts Dashboards packages are available as ES6-compatible modules.Including a product package (ES6 module)For debugging and development purposes, you can load core files directly from your
browser page and use tree shaking. Please note that this results in a
decreased download size but an increased delay caused by the amount of
(small) files to load. This approach is, therefore, not recommended for
production.<script type="module">        import Dashboards from 'https://code.highcharts.com/dashboards/es-modules/masters/dashboards.src.js';        Dashboards.board('container', {            editMode: {                enabled: true,                contextMenu: {                    enabled: true                }            },            gui: {                enabled: true,                layouts: [{                    rows: [{                        cells: [{                            id: 'dashboard-col-0'                        }]                    }]                }]            },            components: [                {                    renderTo: 'dashboard-col-0',                    type: 'HTML',                    elements: [{                        tagName: 'h1',                        attributes: {                            text: 'Hello world'                        }                    }]                }            ]        });    </script>CopyTo load a pluginA plugin is a third-party/community-made Highcharts Dashboards addon.
First, make sure that a plugin supports loading over NPM. Then, load the required files.
In the example, Grid supports NPM loading, so after installing the package, you could initialize and register it like this:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);CopyEdit this pagePrevious« Custom Dashboards components NextExport Dashboards to JSON  »Including a product package (ES6 module)To load a plugin\n\nInstallation with ES6 modulesHighcharts Dashboards packages are available as ES6-compatible modules.Including a product package (ES6 module)For debugging and development purposes, you can load core files directly from your
browser page and use tree shaking. Please note that this results in a
decreased download size but an increased delay caused by the amount of
(small) files to load. This approach is, therefore, not recommended for
production.<script type="module">        import Dashboards from 'https://code.highcharts.com/dashboards/es-modules/masters/dashboards.src.js';        Dashboards.board('container', {            editMode: {                enabled: true,                contextMenu: {                    enabled: true                }            },            gui: {                enabled: true,                layouts: [{                    rows: [{                        cells: [{                            id: 'dashboard-col-0'                        }]                    }]                }]            },            components: [                {                    renderTo: 'dashboard-col-0',                    type: 'HTML',                    elements: [{                        tagName: 'h1',                        attributes: {                            text: 'Hello world'                        }                    }]                }            ]        });    </script>CopyTo load a pluginA plugin is a third-party/community-made Highcharts Dashboards addon.
First, make sure that a plugin supports loading over NPM. Then, load the required files.
In the example, Grid supports NPM loading, so after installing the package, you could initialize and register it like this:import Dashboards from '@highcharts/dashboards/es-modules/masters/dashboards.src';import Grid from '@highcharts/dashboards/es-modules/masters/datagrid.src';Dashboards.GridPlugin.custom.connectGrid(Grid);Dashboards.PluginHandler.addPlugin(Dashboards.GridPlugin);CopyEdit this pagePrevious« Custom Dashboards components NextExport Dashboards to JSON  »Including a product package (ES6 module)To load a plugin\n\n\n\nExport Dashboards to JSONDashboards allows you to convert the current state of the dashboard's options into
JSON. Please note that the getOptions() function does not support converting functions or events into a JSON object.How to use getOptions()In the example below, the getOptions()
method is available in the board object.Dashboards.boards[].getOptions()Copyorconst board = Dashboards.board('container', { ... })board.getOptions();CopyHow to save options into localStorageThe state that you extracted from Dashboards can be helpful in your project.
For instance, you can save it in your localStorage object and import it when you need.localStorage.setItem(    'highcharts-dashboards-config', // defined id of record in the localStorage    JSON.stringify(        board.getOptions(),        null,        2    ));CopyHow to import options from localStorageImporting the state from localStorage is straightforward, as you can use JSON's built-in functionality.importBtn.addEventListener('click', () => {    const dashboardsConfig = localStorage.getItem('highcharts-dashboards-config');    // Your custom action    Dashboards.board('container', JSON.parse(dashboardsConfig));});Copy\n\nExport Dashboards to JSONDashboards allows you to convert the current state of the dashboard's options into
JSON. Please note that the getOptions() function does not support converting functions or events into a JSON object.How to use getOptions()In the example below, the getOptions()
method is available in the board object.Dashboards.boards[].getOptions()Copyorconst board = Dashboards.board('container', { ... })board.getOptions();CopyHow to save options into localStorageThe state that you extracted from Dashboards can be helpful in your project.
For instance, you can save it in your localStorage object and import it when you need.localStorage.setItem(    'highcharts-dashboards-config', // defined id of record in the localStorage    JSON.stringify(        board.getOptions(),        null,        2    ));CopyHow to import options from localStorageImporting the state from localStorage is straightforward, as you can use JSON's built-in functionality.importBtn.addEventListener('click', () => {    const dashboardsConfig = localStorage.getItem('highcharts-dashboards-config');    // Your custom action    Dashboards.board('container', JSON.parse(dashboardsConfig));});CopyEdit this pagePrevious« Installation with ES6 modules NextUpgrade DataGrid to Grid Pro  »How to use getOptions()How to save options into localStorageHow to import options from localStorage\n\nExport Dashboards to JSONDashboards allows you to convert the current state of the dashboard's options into
JSON. Please note that the getOptions() function does not support converting functions or events into a JSON object.How to use getOptions()In the example below, the getOptions()
method is available in the board object.Dashboards.boards[].getOptions()Copyorconst board = Dashboards.board('container', { ... })board.getOptions();CopyHow to save options into localStorageThe state that you extracted from Dashboards can be helpful in your project.
For instance, you can save it in your localStorage object and import it when you need.localStorage.setItem(    'highcharts-dashboards-config', // defined id of record in the localStorage    JSON.stringify(        board.getOptions(),        null,        2    ));CopyHow to import options from localStorageImporting the state from localStorage is straightforward, as you can use JSON's built-in functionality.importBtn.addEventListener('click', () => {    const dashboardsConfig = localStorage.getItem('highcharts-dashboards-config');    // Your custom action    Dashboards.board('container', JSON.parse(dashboardsConfig));});CopyEdit this pagePrevious« Installation with ES6 modules NextUpgrade DataGrid to Grid Pro  »How to use getOptions()How to save options into localStorageHow to import options from localStorage\n\n\n\nUpgrade DataGrid to Grid ProThe core of Grid Pro (formerly: DataGrid) has been changed in version 3.2. Currently, Grid Pro is part of Highcharts Dashboards and will be available as a standalone library after the release of Dashboards v4.InitializeTo initialize, you can use the factory function Grid.grid:const grid = Grid.grid('container', {    dataTable: {        columns: { ... }    }});CopyAPI changesSome API options have been renamed or removed. For the full list, make sure to check the API reference.Example of the new Grid ProdataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],            metaData: ['a', 'b', 'c', 'd'],        }    },    columnDefaults: {        cells: {            editable: true        }        sorting: {            sortable: false        }    }    rendering: {        columns: {            distribution: 'full'        },        rows: {            bufferSize: 10,            strictHeights: false        }    }    columns: [{        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: 'V:{value}';            }        }    }, {        id: 'metaData',        enabled: false    }],    events: {        cell: {            click: function () {                // Callback action            },            dblClick: function() {                // Callback action            },            afterEdit: function () {                // Callback action            }        },        column: {            afterSorting: function () {                // Callback action            },            afterResize: function () {                // Callback action            }        },        header: {            click: function () {                // Callback action            }        }    }CopyRecommended readingWe recommend reading our article on Understanding Grid for an overview of new options and possibilities, and also the Changelog for any breaking changes.\n\nUpgrade DataGrid to Grid ProThe core of Grid Pro (formerly: DataGrid) has been changed in version 3.2. Currently, Grid Pro is part of Highcharts Dashboards and will be available as a standalone library after the release of Dashboards v4.InitializeTo initialize, you can use the factory function Grid.grid:const grid = Grid.grid('container', {    dataTable: {        columns: { ... }    }});CopyAPI changesSome API options have been renamed or removed. For the full list, make sure to check the API reference.Example of the new Grid ProdataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],            metaData: ['a', 'b', 'c', 'd'],        }    },    columnDefaults: {        cells: {            editable: true        }        sorting: {            sortable: false        }    }    rendering: {        columns: {            distribution: 'full'        },        rows: {            bufferSize: 10,            strictHeights: false        }    }    columns: [{        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: 'V:{value}';            }        }    }, {        id: 'metaData',        enabled: false    }],    events: {        cell: {            click: function () {                // Callback action            },            dblClick: function() {                // Callback action            },            afterEdit: function () {                // Callback action            }        },        column: {            afterSorting: function () {                // Callback action            },            afterResize: function () {                // Callback action            }        },        header: {            click: function () {                // Callback action            }        }    }CopyRecommended readingWe recommend reading our article on Understanding Grid for an overview of new options and possibilities, and also the Changelog for any breaking changes.Edit this pagePrevious« Export Dashboards to JSON NextFrequently asked questions  »InitializeAPI changesExample of the new Grid ProRecommended reading\n\nUpgrade DataGrid to Grid ProThe core of Grid Pro (formerly: DataGrid) has been changed in version 3.2. Currently, Grid Pro is part of Highcharts Dashboards and will be available as a standalone library after the release of Dashboards v4.InitializeTo initialize, you can use the factory function Grid.grid:const grid = Grid.grid('container', {    dataTable: {        columns: { ... }    }});CopyAPI changesSome API options have been renamed or removed. For the full list, make sure to check the API reference.Example of the new Grid ProdataTable: {        columns: {            product: ['Apples', 'Pears', 'Plums', 'Bananas'],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],            metaData: ['a', 'b', 'c', 'd'],        }    },    columnDefaults: {        cells: {            editable: true        }        sorting: {            sortable: false        }    }    rendering: {        columns: {            distribution: 'full'        },        rows: {            bufferSize: 10,            strictHeights: false        }    }    columns: [{        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: 'V:{value}';            }        }    }, {        id: 'metaData',        enabled: false    }],    events: {        cell: {            click: function () {                // Callback action            },            dblClick: function() {                // Callback action            },            afterEdit: function () {                // Callback action            }        },        column: {            afterSorting: function () {                // Callback action            },            afterResize: function () {                // Callback action            }        },        header: {            click: function () {                // Callback action            }        }    }CopyRecommended readingWe recommend reading our article on Understanding Grid for an overview of new options and possibilities, and also the Changelog for any breaking changes.Edit this pagePrevious« Export Dashboards to JSON NextFrequently asked questions  »InitializeAPI changesExample of the new Grid ProRecommended reading\n\n\n\nFrequently asked questionsHow do you connect DataPool to the other components?First, you must create the DataPool object, define a connector and pass the data reference. More about this topic in the DataPool sectionAfter that, you need to pass the connector to the component config, and that’s it.
Here is the demo.How do you connect a component to a cell?1. Enabled layout creator (GUI)To use Dashboards with a layout system and edit mode, you first have to load the layout module.
The order of the imports is essential, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyEach cell must have an id field. The same id must be passed to the renderTo field in the component config. Example configuration of component and cell:gui: {    enabled: true,    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the demo.2. Disabled default layout creatorYou can create your HTML structure for a layout styled by CSS or another CSS framework (e.g., Tailwind, Bootstrap).
Please remember that each container should have a unique id for the rendered component.<div id="container">    <div>        <div id="dashboard-col-0"></div>    </div></div>Copygui: {    enabled: false}components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the standalone demo and the
tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.How do we synchronize the components?To synchronize components, you have to specify which event you want to synchronize between each component, and they must use the same connector.Example of synchronized componentscomponents: [{    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        }    },}, {    renderTo: 'dashboard-col-1',    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    type: 'Highcharts',    chartOptions: {        xAxis: {            type: 'category'        },        chart: {            animation: false,            type: 'column'        }    }}]CopyCheck how this synchronization works in our minimal dashboard demo.
See the next question for possible synchronization events.What are the synchronization events available in Highcharts Dashboards?Check how this synchronization works in our minimal dashboard demo.The events that can be synchronized between components are:'visibility’'extremes''highlight'What browsers are supported?Highcharts Dashboards supports the following browsers:BrowserVersionFirefox52.0+ (2017+)Chrome55.0+ (2016+)Safari11.0+ (2017+)Opera42.0+ (2016+)Edge16.0+ (2017+)What versions of Highcharts are supported?The Highcharts Dashboards is compatible with all Highcharts modules in v10 or higher.I modified series names in a chart, and now the sync is not working. What can I do?Sync to other components may not work if you modify specific series properties. For instance, modifying series names in the chart afterRender event callback:afterRender(e) {    // Potential problem: setting custom name for series    e.target.chart.series[0].name = 'customName'    e.target.chart.series[1].name = 'otherCustomName'}CopyHow to style the Dashboard?1. Enabled layout creator (GUI)Dashboards has a default theme applied to all its components.
You need to import the default CSS stylesheet to your project so that the dashboard displays correctly. You can do it by importing the following CSS files:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyHowever, you can customize the dashboard style by adding your custom CSS stylesheet.
More about this topic in the Styling section.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyNote that each component that includes a chart (Highcharts, KPI) uses styledMode by default to style the chart. The CSS stylesheet needs to be imported so that the Highcharts display correctly.
To customize your chart styles, you can create your own themes or add your own individual CSS variables or rules found in our docs.2. Disabled default layout creator (GUI)You can create your own HTML structure of a layout styled by CSS or Tailwind.
Please remember that each container should have a unique id for the rendered component.Here is the standalone demo and the tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.\n\nFrequently asked questionsHow do you connect DataPool to the other components?First, you must create the DataPool object, define a connector and pass the data reference. More about this topic in the DataPool sectionAfter that, you need to pass the connector to the component config, and that’s it.
Here is the demo.How do you connect a component to a cell?1. Enabled layout creator (GUI)To use Dashboards with a layout system and edit mode, you first have to load the layout module.
The order of the imports is essential, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyEach cell must have an id field. The same id must be passed to the renderTo field in the component config. Example configuration of component and cell:gui: {    enabled: true,    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the demo.2. Disabled default layout creatorYou can create your HTML structure for a layout styled by CSS or another CSS framework (e.g., Tailwind, Bootstrap).
Please remember that each container should have a unique id for the rendered component.<div id="container">    <div>        <div id="dashboard-col-0"></div>    </div></div>Copygui: {    enabled: false}components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the standalone demo and the
tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.How do we synchronize the components?To synchronize components, you have to specify which event you want to synchronize between each component, and they must use the same connector.Example of synchronized componentscomponents: [{    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        }    },}, {    renderTo: 'dashboard-col-1',    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    type: 'Highcharts',    chartOptions: {        xAxis: {            type: 'category'        },        chart: {            animation: false,            type: 'column'        }    }}]CopyCheck how this synchronization works in our minimal dashboard demo.
See the next question for possible synchronization events.What are the synchronization events available in Highcharts Dashboards?Check how this synchronization works in our minimal dashboard demo.The events that can be synchronized between components are:'visibility’'extremes''highlight'What browsers are supported?Highcharts Dashboards supports the following browsers:BrowserVersionFirefox52.0+ (2017+)Chrome55.0+ (2016+)Safari11.0+ (2017+)Opera42.0+ (2016+)Edge16.0+ (2017+)What versions of Highcharts are supported?The Highcharts Dashboards is compatible with all Highcharts modules in v10 or higher.I modified series names in a chart, and now the sync is not working. What can I do?Sync to other components may not work if you modify specific series properties. For instance, modifying series names in the chart afterRender event callback:afterRender(e) {    // Potential problem: setting custom name for series    e.target.chart.series[0].name = 'customName'    e.target.chart.series[1].name = 'otherCustomName'}CopyHow to style the Dashboard?1. Enabled layout creator (GUI)Dashboards has a default theme applied to all its components.
You need to import the default CSS stylesheet to your project so that the dashboard displays correctly. You can do it by importing the following CSS files:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyHowever, you can customize the dashboard style by adding your custom CSS stylesheet.
More about this topic in the Styling section.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyNote that each component that includes a chart (Highcharts, KPI) uses styledMode by default to style the chart. The CSS stylesheet needs to be imported so that the Highcharts display correctly.
To customize your chart styles, you can create your own themes or add your own individual CSS variables or rules found in our docs.2. Disabled default layout creator (GUI)You can create your own HTML structure of a layout styled by CSS or Tailwind.
Please remember that each container should have a unique id for the rendered component.Here is the standalone demo and the tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.Edit this pagePrevious« Upgrade DataGrid to Grid Pro NextIntroduction to Highcharts Grid  »How do you connect DataPool to the other components?How do you connect a component to a cell?1. Enabled layout creator (GUI)2. Disabled default layout creatorHow do we synchronize the components?What are the synchronization events available in Highcharts Dashboards?What browsers are supported?What versions of Highcharts are supported?I modified series names in a chart, and now the sync is not working. What can I do?How to style the Dashboard?1. Enabled layout creator (GUI)2. Disabled default layout creator (GUI)\n\nFrequently asked questionsHow do you connect DataPool to the other components?First, you must create the DataPool object, define a connector and pass the data reference. More about this topic in the DataPool sectionAfter that, you need to pass the connector to the component config, and that’s it.
Here is the demo.How do you connect a component to a cell?1. Enabled layout creator (GUI)To use Dashboards with a layout system and edit mode, you first have to load the layout module.
The order of the imports is essential, so make sure that the layout module is imported after the Dashboards module.<script src="https://code.highcharts.com/dashboards/dashboards.js"></script><script src="https://code.highcharts.com/dashboards/modules/layout.js"></script>CopyEach cell must have an id field. The same id must be passed to the renderTo field in the component config. Example configuration of component and cell:gui: {    enabled: true,    layouts: [{        id: 'layout-1',        rows: [{            cells: [{                id: 'dashboard-col-0'            }]        }]    }]},components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the demo.2. Disabled default layout creatorYou can create your HTML structure for a layout styled by CSS or another CSS framework (e.g., Tailwind, Bootstrap).
Please remember that each container should have a unique id for the rendered component.<div id="container">    <div>        <div id="dashboard-col-0"></div>    </div></div>Copygui: {    enabled: false}components: [{    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        },        series: [{data: [1,2,3]}]    },}]CopyHere is the standalone demo and the
tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.How do we synchronize the components?To synchronize components, you have to specify which event you want to synchronize between each component, and they must use the same connector.Example of synchronized componentscomponents: [{    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    renderTo: 'dashboard-col-0',    type: 'Highcharts',    chartOptions: {        chart: {            type: 'pie'        }    },}, {    renderTo: 'dashboard-col-1',    connector: {        id: 'Vitamin'    },    sync: {        visibility: true,        highlight: true,        extremes: true    },    type: 'Highcharts',    chartOptions: {        xAxis: {            type: 'category'        },        chart: {            animation: false,            type: 'column'        }    }}]CopyCheck how this synchronization works in our minimal dashboard demo.
See the next question for possible synchronization events.What are the synchronization events available in Highcharts Dashboards?Check how this synchronization works in our minimal dashboard demo.The events that can be synchronized between components are:'visibility’'extremes''highlight'What browsers are supported?Highcharts Dashboards supports the following browsers:BrowserVersionFirefox52.0+ (2017+)Chrome55.0+ (2016+)Safari11.0+ (2017+)Opera42.0+ (2016+)Edge16.0+ (2017+)What versions of Highcharts are supported?The Highcharts Dashboards is compatible with all Highcharts modules in v10 or higher.I modified series names in a chart, and now the sync is not working. What can I do?Sync to other components may not work if you modify specific series properties. For instance, modifying series names in the chart afterRender event callback:afterRender(e) {    // Potential problem: setting custom name for series    e.target.chart.series[0].name = 'customName'    e.target.chart.series[1].name = 'otherCustomName'}CopyHow to style the Dashboard?1. Enabled layout creator (GUI)Dashboards has a default theme applied to all its components.
You need to import the default CSS stylesheet to your project so that the dashboard displays correctly. You can do it by importing the following CSS files:@import url("https://code.highcharts.com/dashboards/css/dashboards.css");@import url("https://code.highcharts.com/dashboards/css/datagrid.css");CopyHowever, you can customize the dashboard style by adding your custom CSS stylesheet.
More about this topic in the Styling section.Use regular CSS media queries to adjust your layout to different screens.Example:/* LARGE */@media (max-width: 1200px) {    #dashboard-cell-1 {        flex: 1 1 33.333%;    }}/* MEDIUM */@media (max-width: 992px) {    #dashboard-cell-1 {        flex: 1 1 50%;    }}/* SMALL */@media (max-width: 576px) {    #dashboard-cell-1 {        flex: 1 1 100%;    }}CopyNote that each component that includes a chart (Highcharts, KPI) uses styledMode by default to style the chart. The CSS stylesheet needs to be imported so that the Highcharts display correctly.
To customize your chart styles, you can create your own themes or add your own individual CSS variables or rules found in our docs.2. Disabled default layout creator (GUI)You can create your own HTML structure of a layout styled by CSS or Tailwind.
Please remember that each container should have a unique id for the rendered component.Here is the standalone demo and the tailwind demo.NB! The disabled GUI does not allow you to use the Edit Mode module.Edit this pagePrevious« Upgrade DataGrid to Grid Pro NextIntroduction to Highcharts Grid  »How do you connect DataPool to the other components?How do you connect a component to a cell?1. Enabled layout creator (GUI)2. Disabled default layout creatorHow do we synchronize the components?What are the synchronization events available in Highcharts Dashboards?What browsers are supported?What versions of Highcharts are supported?I modified series names in a chart, and now the sync is not working. What can I do?How to style the Dashboard?1. Enabled layout creator (GUI)2. Disabled default layout creator (GUI)\n\n\n\nIntroduction to Highcharts GridHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.This documentation focuses on Highcharts Grid in general. For specific information on Highcharts Grid Pro in a Dashboards context, see the article on Dashboards Grid Component.My First GridLet's dive right in with a bare minimum example of a fully functional Grid Lite:<!DOCTYPE html><html lang="en">  <head>    <meta charset="utf-8" />    <title>My First Grid</title>    <script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />  </head>  <body>    <div id="container"></div>    <script type="text/javascript">      Grid.grid("container", {        dataTable: {          columns: {            product: ["Apple", "Pear", "Plum", "Banana"],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],          },        },      });    </script>  </body></html>Copy1. Import required JS and CSS<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyImport the required JS and CSS from our public CDN. The Installation article provides more information and other installation options.The CSS includes the necessary styles for the grid to function correctly and the default style theme. For more information on custom theming, see the article on theming.2. Configure the gridGrid.grid("container", {  dataTable: {    columns: {      product: ["Apple", "Pear", "Plum", "Banana"],      weight: [100, 40, 0.5, 200],      price: [1.5, 2.53, 5, 4.5],    },  },});CopyInside the <script> tag, create a new instance of Grid by utilizing the Grid.grid factory function. This function takes two required arguments:The ID of the HTML element where Grid should be rendered.The Grid configuration object.Only the dataTable option is required for Grid to be rendered. For more information on the configuration object, read the Understanding Grid article.3. Add the HTML Element<div id="container"></div>CopyAdd an HTML element to the body with the ID you specified as the first argument in Grid.grid.View the ResultWith the configuration above, your Grid should look like this:Go to Understanding Grid to read more about Grid structure and configuration options.\n\nIntroduction to Highcharts GridHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.This documentation focuses on Highcharts Grid in general. For specific information on Highcharts Grid Pro in a Dashboards context, see the article on Dashboards Grid Component.My First GridLet's dive right in with a bare minimum example of a fully functional Grid Lite:<!DOCTYPE html><html lang="en">  <head>    <meta charset="utf-8" />    <title>My First Grid</title>    <script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />  </head>  <body>    <div id="container"></div>    <script type="text/javascript">      Grid.grid("container", {        dataTable: {          columns: {            product: ["Apple", "Pear", "Plum", "Banana"],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],          },        },      });    </script>  </body></html>Copy1. Import required JS and CSS<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyImport the required JS and CSS from our public CDN. The Installation article provides more information and other installation options.The CSS includes the necessary styles for the grid to function correctly and the default style theme. For more information on custom theming, see the article on theming.2. Configure the gridGrid.grid("container", {  dataTable: {    columns: {      product: ["Apple", "Pear", "Plum", "Banana"],      weight: [100, 40, 0.5, 200],      price: [1.5, 2.53, 5, 4.5],    },  },});CopyInside the <script> tag, create a new instance of Grid by utilizing the Grid.grid factory function. This function takes two required arguments:The ID of the HTML element where Grid should be rendered.The Grid configuration object.Only the dataTable option is required for Grid to be rendered. For more information on the configuration object, read the Understanding Grid article.3. Add the HTML Element<div id="container"></div>CopyAdd an HTML element to the body with the ID you specified as the first argument in Grid.grid.View the ResultWith the configuration above, your Grid should look like this:Go to Understanding Grid to read more about Grid structure and configuration options.Edit this pagePrevious« Frequently asked questions NextGrid Installation  »My First Grid1. Import required JS and CSS2. Configure the grid3. Add the HTML ElementView the Result\n\nIntroduction to Highcharts GridHighcharts Grid (formerly known as DataGrid) is a versatile tool for displaying and managing tabular data. Originally introduced as a component in Highcharts Dashboards, it provides a high-performance, interactive, and editable data table solution.Highcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.This documentation focuses on Highcharts Grid in general. For specific information on Highcharts Grid Pro in a Dashboards context, see the article on Dashboards Grid Component.My First GridLet's dive right in with a bare minimum example of a fully functional Grid Lite:<!DOCTYPE html><html lang="en">  <head>    <meta charset="utf-8" />    <title>My First Grid</title>    <script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script>    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />  </head>  <body>    <div id="container"></div>    <script type="text/javascript">      Grid.grid("container", {        dataTable: {          columns: {            product: ["Apple", "Pear", "Plum", "Banana"],            weight: [100, 40, 0.5, 200],            price: [1.5, 2.53, 5, 4.5],          },        },      });    </script>  </body></html>Copy1. Import required JS and CSS<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyImport the required JS and CSS from our public CDN. The Installation article provides more information and other installation options.The CSS includes the necessary styles for the grid to function correctly and the default style theme. For more information on custom theming, see the article on theming.2. Configure the gridGrid.grid("container", {  dataTable: {    columns: {      product: ["Apple", "Pear", "Plum", "Banana"],      weight: [100, 40, 0.5, 200],      price: [1.5, 2.53, 5, 4.5],    },  },});CopyInside the <script> tag, create a new instance of Grid by utilizing the Grid.grid factory function. This function takes two required arguments:The ID of the HTML element where Grid should be rendered.The Grid configuration object.Only the dataTable option is required for Grid to be rendered. For more information on the configuration object, read the Understanding Grid article.3. Add the HTML Element<div id="container"></div>CopyAdd an HTML element to the body with the ID you specified as the first argument in Grid.grid.View the ResultWith the configuration above, your Grid should look like this:Go to Understanding Grid to read more about Grid structure and configuration options.Edit this pagePrevious« Frequently asked questions NextGrid Installation  »My First Grid1. Import required JS and CSS2. Configure the grid3. Add the HTML ElementView the Result\n\n\n\nGrid InstallationHighcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.Installing Grid ProSee the Dashboards Grid Standalone article for more information on installing Grid Pro.Installing Grid LiteInstall via NPMYou can install Grid Lite via NPM:npm install @highcharts/grid-liteCopyThen, import the package into your project:import * as Grid from '@highcharts/grid-lite/grid-lite';import '@highcharts/grid-lite/css/grid.css';CopyInclude Grid Lite via <script> tagLoad Grid Lite from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/grid/grid-lite.js"></script><link rel="stylesheet" href="../code/grid/css/grid.css" />CopyGet StartedOnce installed, you are ready to use Grid Lite. Check out Your First Grid to learn more.\n\nGrid InstallationHighcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.Installing Grid ProSee the Dashboards Grid Standalone article for more information on installing Grid Pro.Installing Grid LiteInstall via NPMYou can install Grid Lite via NPM:npm install @highcharts/grid-liteCopyThen, import the package into your project:import * as Grid from '@highcharts/grid-lite/grid-lite';import '@highcharts/grid-lite/css/grid.css';CopyInclude Grid Lite via <script> tagLoad Grid Lite from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/grid/grid-lite.js"></script><link rel="stylesheet" href="../code/grid/css/grid.css" />CopyGet StartedOnce installed, you are ready to use Grid Lite. Check out Your First Grid to learn more.Edit this pagePrevious« Introduction to Highcharts Grid NextUnderstanding Highcharts Grid  »Installing Grid ProInstalling Grid LiteInstall via NPMInclude Grid Lite via <script> tagGet Started\n\nGrid InstallationHighcharts Grid is available in two versions:Highcharts Grid Lite – A free version with a basic feature set.Highcharts Grid Pro – A more advanced, commercial version that currently requires a Highcharts Dashboards license and includes additional features. Though it is part of the Dashboards package and license, Grid Pro can also be used as a standalone component.Installing Grid ProSee the Dashboards Grid Standalone article for more information on installing Grid Pro.Installing Grid LiteInstall via NPMYou can install Grid Lite via NPM:npm install @highcharts/grid-liteCopyThen, import the package into your project:import * as Grid from '@highcharts/grid-lite/grid-lite';import '@highcharts/grid-lite/css/grid.css';CopyInclude Grid Lite via <script> tagLoad Grid Lite from our public CDN by adding the appropriate JavaScript and CSS files to your page's <head> section:<script src="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/grid-lite.js"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highcharts/grid-lite/css/grid.css" />CopyAlternatively, you can download the files from highcharts.com and host it on your own server:<script src="../code/grid/grid-lite.js"></script><link rel="stylesheet" href="../code/grid/css/grid.css" />CopyGet StartedOnce installed, you are ready to use Grid Lite. Check out Your First Grid to learn more.Edit this pagePrevious« Introduction to Highcharts Grid NextUnderstanding Highcharts Grid  »Installing Grid ProInstalling Grid LiteInstall via NPMInclude Grid Lite via <script> tagGet Started\n\n\n\nUnderstanding Highcharts GridAt its core Grid consists of a data source that is rendered in x number of columns and rows. Many of the available configuration options applies to the columns and their corresponding row and header cells.The following provides an introduction to the various root configuration objects in Grid:dataTable{    dataTable: {        columns: {            product: ["Apple", "Pear", "Orange", "Banana"],            weight: [182, 178, 150, 120],            price: [3.5, 2.5, 3, 2.2],            vitamin_a: [54,27,225,64]        }    }}CopyThe dataTable object is the only required option for proper rendering of Grid, and dataTable.columns creates an instance of the DataTable class. This class has key-value pairs, where the key is used for the header cell, and the value is an array of values for the corresponding row cells.Read more about data handling and the DataTable class.columnDefaults and columns[]{    columnDefaults: {        cells: {            editable: true        }    },    columns: [        {            id: "weight",            header: {                format: "Weight"            },            cells: {                format: "{value}g"                editable: false            }        },        {            id: "price",            header: {                format: "Price"            },            cells: {                format: "${value}"            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed. Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Learn more about columns[] in our Columns article or see the API reference for columndDefaults and columns[].caption{    caption: {        text: "Title of the Grid";    }}CopyThe code snippet above shows how to insert a caption, or title, above the grid.For more information on the caption option, see the API reference.header[]{    header: [        {            columnId: "product"            format: "Fruit",        },        "weight",        "price"    ]}CopyWhile the format and visibility of individual columns and their header cells can be set using the columns[] option, the same can be achieved using the header[] root option. Which option to use depends on your specific use case, and header[] will, in some cases, be less verbose than columns[].In addition, the header[] option can change the order of headers and group headers in a hierarchical structure.The Header article provides more information about header[].accessibility{  accessibility: {    enabled: false,    ...  }}CopyThe accessibility option object can be used to enable/disable accessibility features such as ARIA attributes and ARIA live announcements.For more information on accessibility options read our documentation article on accessibility.langTo customize the default language or wording for ARIA attributes and announcers, use the lang.accessibility option. In the current version of Highcharts Grid the lang option is solely related to accessibility, but will be extended to other use cases as we add more features. Stay up to date by visiting our changelog and roadmap.renderingThe rendering option object can be used to configure options related to performance and the rendering of the Grid. Example: Rendering.rows represents the rows in the Grid.{    rendering: {        rows: {            bufferSize: 5,            strictHeights: true        }    }}CopyFor more information on rendering options, please read our article on Performance and rendering or see the API reference.events ProHighcharts Grid Pro supports several event listeners that can be added to the header, columns and cells. These provide custom functionality and extendibility of Grid. Read more about events in the Events article.setOptions()When adding multiple grids to the same page, it is recommended to set default options globally using the setOptions() method. This approach is more efficient than configuring each Grid individually. For an overview of all default options see the API reference.Grid.setOptions({    columnDefaults: {        sorting: {            sortable: false        }    }})CopyThis example disables end user sorting for every Grid on the page.\n\nUnderstanding Highcharts GridAt its core Grid consists of a data source that is rendered in x number of columns and rows. Many of the available configuration options applies to the columns and their corresponding row and header cells.The following provides an introduction to the various root configuration objects in Grid:dataTable{    dataTable: {        columns: {            product: ["Apple", "Pear", "Orange", "Banana"],            weight: [182, 178, 150, 120],            price: [3.5, 2.5, 3, 2.2],            vitamin_a: [54,27,225,64]        }    }}CopyThe dataTable object is the only required option for proper rendering of Grid, and dataTable.columns creates an instance of the DataTable class. This class has key-value pairs, where the key is used for the header cell, and the value is an array of values for the corresponding row cells.Read more about data handling and the DataTable class.columnDefaults and columns[]{    columnDefaults: {        cells: {            editable: true        }    },    columns: [        {            id: "weight",            header: {                format: "Weight"            },            cells: {                format: "{value}g"                editable: false            }        },        {            id: "price",            header: {                format: "Price"            },            cells: {                format: "${value}"            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed. Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Learn more about columns[] in our Columns article or see the API reference for columndDefaults and columns[].caption{    caption: {        text: "Title of the Grid";    }}CopyThe code snippet above shows how to insert a caption, or title, above the grid.For more information on the caption option, see the API reference.header[]{    header: [        {            columnId: "product"            format: "Fruit",        },        "weight",        "price"    ]}CopyWhile the format and visibility of individual columns and their header cells can be set using the columns[] option, the same can be achieved using the header[] root option. Which option to use depends on your specific use case, and header[] will, in some cases, be less verbose than columns[].In addition, the header[] option can change the order of headers and group headers in a hierarchical structure.The Header article provides more information about header[].accessibility{  accessibility: {    enabled: false,    ...  }}CopyThe accessibility option object can be used to enable/disable accessibility features such as ARIA attributes and ARIA live announcements.For more information on accessibility options read our documentation article on accessibility.langTo customize the default language or wording for ARIA attributes and announcers, use the lang.accessibility option. In the current version of Highcharts Grid the lang option is solely related to accessibility, but will be extended to other use cases as we add more features. Stay up to date by visiting our changelog and roadmap.renderingThe rendering option object can be used to configure options related to performance and the rendering of the Grid. Example: Rendering.rows represents the rows in the Grid.{    rendering: {        rows: {            bufferSize: 5,            strictHeights: true        }    }}CopyFor more information on rendering options, please read our article on Performance and rendering or see the API reference.events ProHighcharts Grid Pro supports several event listeners that can be added to the header, columns and cells. These provide custom functionality and extendibility of Grid. Read more about events in the Events article.setOptions()When adding multiple grids to the same page, it is recommended to set default options globally using the setOptions() method. This approach is more efficient than configuring each Grid individually. For an overview of all default options see the API reference.Grid.setOptions({    columnDefaults: {        sorting: {            sortable: false        }    }})CopyThis example disables end user sorting for every Grid on the page.Edit this pagePrevious« Grid Installation NextColumns options  »dataTablecolumnDefaults and columns[]captionheader[]accessibilitylangrenderingevents setOptions()\n\nUnderstanding Highcharts GridAt its core Grid consists of a data source that is rendered in x number of columns and rows. Many of the available configuration options applies to the columns and their corresponding row and header cells.The following provides an introduction to the various root configuration objects in Grid:dataTable{    dataTable: {        columns: {            product: ["Apple", "Pear", "Orange", "Banana"],            weight: [182, 178, 150, 120],            price: [3.5, 2.5, 3, 2.2],            vitamin_a: [54,27,225,64]        }    }}CopyThe dataTable object is the only required option for proper rendering of Grid, and dataTable.columns creates an instance of the DataTable class. This class has key-value pairs, where the key is used for the header cell, and the value is an array of values for the corresponding row cells.Read more about data handling and the DataTable class.columnDefaults and columns[]{    columnDefaults: {        cells: {            editable: true        }    },    columns: [        {            id: "weight",            header: {                format: "Weight"            },            cells: {                format: "{value}g"                editable: false            }        },        {            id: "price",            header: {                format: "Price"            },            cells: {                format: "${value}"            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed. Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Learn more about columns[] in our Columns article or see the API reference for columndDefaults and columns[].caption{    caption: {        text: "Title of the Grid";    }}CopyThe code snippet above shows how to insert a caption, or title, above the grid.For more information on the caption option, see the API reference.header[]{    header: [        {            columnId: "product"            format: "Fruit",        },        "weight",        "price"    ]}CopyWhile the format and visibility of individual columns and their header cells can be set using the columns[] option, the same can be achieved using the header[] root option. Which option to use depends on your specific use case, and header[] will, in some cases, be less verbose than columns[].In addition, the header[] option can change the order of headers and group headers in a hierarchical structure.The Header article provides more information about header[].accessibility{  accessibility: {    enabled: false,    ...  }}CopyThe accessibility option object can be used to enable/disable accessibility features such as ARIA attributes and ARIA live announcements.For more information on accessibility options read our documentation article on accessibility.langTo customize the default language or wording for ARIA attributes and announcers, use the lang.accessibility option. In the current version of Highcharts Grid the lang option is solely related to accessibility, but will be extended to other use cases as we add more features. Stay up to date by visiting our changelog and roadmap.renderingThe rendering option object can be used to configure options related to performance and the rendering of the Grid. Example: Rendering.rows represents the rows in the Grid.{    rendering: {        rows: {            bufferSize: 5,            strictHeights: true        }    }}CopyFor more information on rendering options, please read our article on Performance and rendering or see the API reference.events ProHighcharts Grid Pro supports several event listeners that can be added to the header, columns and cells. These provide custom functionality and extendibility of Grid. Read more about events in the Events article.setOptions()When adding multiple grids to the same page, it is recommended to set default options globally using the setOptions() method. This approach is more efficient than configuring each Grid individually. For an overview of all default options see the API reference.Grid.setOptions({    columnDefaults: {        sorting: {            sortable: false        }    }})CopyThis example disables end user sorting for every Grid on the page.Edit this pagePrevious« Grid Installation NextColumns options  »dataTablecolumnDefaults and columns[]captionheader[]accessibilitylangrenderingevents setOptions()\n\n\n\nColumns optionsMany of the available configuration options in Grid apply to the columns and their corresponding row and header cells.Defaults{    columnDefaults: {        cells: {            format: "<span>{value}</span>"        },        sorting: {            sortable: false        }    },    columns: [        {            id: "product",            sorting: {                sortable: true            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the Grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed.Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Header{  columns: [    {      id: "product",      header: {        className: "custom_header_class",        format: "Fruit ({id})"      },      enabled: false,    }  ]}CopyThe columns[].header option can be used to configure the header for individual columns. If needed, you can set defaults for all columns in columnDefaults.header.Note that className and format support templating as described in Templating, and {id} references the key in the DataTable.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...You can exclude the column, including its header, from the Grid by setting enabled to false. For an alternative approach to header configuration, including grouped headers, see the article on Header.Cells{  columns: [    {      id: "price",      cells: {        className: "custom_cell_class",        format: "${value}",        editable: true      }    }  ]}CopyThe columns[].cells option can configure the cells in individual columns. If needed, you can set defaults for all columns in columnDefaults.cells.The end user can edit each cell in a column directly by setting the editable option to true. Read more in the Cell editing article.Note that className and format support templating as described in Templating, and {value} references the cell value.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...Sorting{  columns: [    {      id: "weight",      sorting: {        sortable: true,        order: "desc",      }    }  ]}CopyThe optional sorting object consists of two configuration options:sortable: A boolean that determines whether the end user can sort a column by clicking on the column header.order: Specifies the initial sorting order for a column. It can be set to 'asc' (ascending) or 'desc' (descending). Only the last one will be considered if order is defined in multiple columns.See the API reference.When the sortable option is enabled, clicking the header will toggle the sorting order.The sorting options are available for individual columns, but the default value for sortable can also be set in columnDefaults.sorting.sortable.Alternatively, you can programmatically sort a column using the column.sorting.setOrder method, even if the sortable option is turned off.FormattingTime formattingTime formatting is handled by the Intl.DateTimeFormat.prototype.format and can be aware of the locale of the user.
Priority is given to the locale set in the lang.locale option, next the lang attribute of the closes parent is considered. But if that is not set, the browser's locale is used.
To set the locale use the setOptions method shown in the snippet below:Grid.setOptions({    lang: {        locale: 'en-US'    }});CopyTo properly format the time use one of the supported formats
For example:columns: [    {        id: 'date',        header: {            format: 'Date of purchase'        },        cells: {            format: '{value:%[dbY]}'        }    }    ...]CopyFor more advanced formatting the formatter callback function can be used.Number formattingThe number formatting is handled by the template engine. The following example shows how to format numbers with thousands separators:columns: [    {        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: '{value:,.1f} kg'        }    }    ...]Copy\n\nColumns optionsMany of the available configuration options in Grid apply to the columns and their corresponding row and header cells.Defaults{    columnDefaults: {        cells: {            format: "<span>{value}</span>"        },        sorting: {            sortable: false        }    },    columns: [        {            id: "product",            sorting: {                sortable: true            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the Grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed.Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Header{  columns: [    {      id: "product",      header: {        className: "custom_header_class",        format: "Fruit ({id})"      },      enabled: false,    }  ]}CopyThe columns[].header option can be used to configure the header for individual columns. If needed, you can set defaults for all columns in columnDefaults.header.Note that className and format support templating as described in Templating, and {id} references the key in the DataTable.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...You can exclude the column, including its header, from the Grid by setting enabled to false. For an alternative approach to header configuration, including grouped headers, see the article on Header.Cells{  columns: [    {      id: "price",      cells: {        className: "custom_cell_class",        format: "${value}",        editable: true      }    }  ]}CopyThe columns[].cells option can configure the cells in individual columns. If needed, you can set defaults for all columns in columnDefaults.cells.The end user can edit each cell in a column directly by setting the editable option to true. Read more in the Cell editing article.Note that className and format support templating as described in Templating, and {value} references the cell value.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...Sorting{  columns: [    {      id: "weight",      sorting: {        sortable: true,        order: "desc",      }    }  ]}CopyThe optional sorting object consists of two configuration options:sortable: A boolean that determines whether the end user can sort a column by clicking on the column header.order: Specifies the initial sorting order for a column. It can be set to 'asc' (ascending) or 'desc' (descending). Only the last one will be considered if order is defined in multiple columns.See the API reference.When the sortable option is enabled, clicking the header will toggle the sorting order.The sorting options are available for individual columns, but the default value for sortable can also be set in columnDefaults.sorting.sortable.Alternatively, you can programmatically sort a column using the column.sorting.setOrder method, even if the sortable option is turned off.FormattingTime formattingTime formatting is handled by the Intl.DateTimeFormat.prototype.format and can be aware of the locale of the user.
Priority is given to the locale set in the lang.locale option, next the lang attribute of the closes parent is considered. But if that is not set, the browser's locale is used.
To set the locale use the setOptions method shown in the snippet below:Grid.setOptions({    lang: {        locale: 'en-US'    }});CopyTo properly format the time use one of the supported formats
For example:columns: [    {        id: 'date',        header: {            format: 'Date of purchase'        },        cells: {            format: '{value:%[dbY]}'        }    }    ...]CopyFor more advanced formatting the formatter callback function can be used.Number formattingThe number formatting is handled by the template engine. The following example shows how to format numbers with thousands separators:columns: [    {        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: '{value:,.1f} kg'        }    }    ...]CopyEdit this pagePrevious« Understanding Highcharts Grid NextHeader options  »DefaultsHeaderCellsSortingFormattingTime formattingNumber formatting\n\nColumns optionsMany of the available configuration options in Grid apply to the columns and their corresponding row and header cells.Defaults{    columnDefaults: {        cells: {            format: "<span>{value}</span>"        },        sorting: {            sortable: false        }    },    columns: [        {            id: "product",            sorting: {                sortable: true            }        }    ]}CopyThe ' columnDefaults ' object defines default options for all columns in the Grid, such as the column sorter, column resizer, value editor, cell format, etc., and the columns[] array of objects can be used to override defaults in selected columns if needed.Note that most options in columnDefaults are mirrored 1:1 in the columns[] array of objects.Header{  columns: [    {      id: "product",      header: {        className: "custom_header_class",        format: "Fruit ({id})"      },      enabled: false,    }  ]}CopyThe columns[].header option can be used to configure the header for individual columns. If needed, you can set defaults for all columns in columnDefaults.header.Note that className and format support templating as described in Templating, and {id} references the key in the DataTable.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...You can exclude the column, including its header, from the Grid by setting enabled to false. For an alternative approach to header configuration, including grouped headers, see the article on Header.Cells{  columns: [    {      id: "price",      cells: {        className: "custom_cell_class",        format: "${value}",        editable: true      }    }  ]}CopyThe columns[].cells option can configure the cells in individual columns. If needed, you can set defaults for all columns in columnDefaults.cells.The end user can edit each cell in a column directly by setting the editable option to true. Read more in the Cell editing article.Note that className and format support templating as described in Templating, and {value} references the cell value.Suppose you need more advanced formatting that is not supported through templating. Use the formatted callback function instead. As in Highcharts Core, we always recommend format if possible. Read more here...Sorting{  columns: [    {      id: "weight",      sorting: {        sortable: true,        order: "desc",      }    }  ]}CopyThe optional sorting object consists of two configuration options:sortable: A boolean that determines whether the end user can sort a column by clicking on the column header.order: Specifies the initial sorting order for a column. It can be set to 'asc' (ascending) or 'desc' (descending). Only the last one will be considered if order is defined in multiple columns.See the API reference.When the sortable option is enabled, clicking the header will toggle the sorting order.The sorting options are available for individual columns, but the default value for sortable can also be set in columnDefaults.sorting.sortable.Alternatively, you can programmatically sort a column using the column.sorting.setOrder method, even if the sortable option is turned off.FormattingTime formattingTime formatting is handled by the Intl.DateTimeFormat.prototype.format and can be aware of the locale of the user.
Priority is given to the locale set in the lang.locale option, next the lang attribute of the closes parent is considered. But if that is not set, the browser's locale is used.
To set the locale use the setOptions method shown in the snippet below:Grid.setOptions({    lang: {        locale: 'en-US'    }});CopyTo properly format the time use one of the supported formats
For example:columns: [    {        id: 'date',        header: {            format: 'Date of purchase'        },        cells: {            format: '{value:%[dbY]}'        }    }    ...]CopyFor more advanced formatting the formatter callback function can be used.Number formattingThe number formatting is handled by the template engine. The following example shows how to format numbers with thousands separators:columns: [    {        id: 'weight',        className: 'custom-column-class-name',        cells: {            format: '{value:,.1f} kg'        }    }    ...]CopyEdit this pagePrevious« Understanding Highcharts Grid NextHeader options  »DefaultsHeaderCellsSortingFormattingTime formattingNumber formatting\n\n\n\nHeader optionsBy default, all columns from the DataTable are imported into the Grid in the order they are declared. Use the header[] option to exclude specific columns and/or change their order. This option can also be used to group headers in a hierarchical structure.The header[] structureLet's look at a basic example that produces the illustration above:{    dataTable: {        columns: {            product: ["Apple", "Pear"],            weight: [182, 178],            price: [3.5, 2.5],            vitamin_a: [54,27],            in_stock: [true, false]        }    },    header: [        {            columnId: "product",            format: "Fruit"        },        {            format: "Fruit data",            accessibility: {                description: "Header spanning three sub-headers"            },            columns: [                "weight",                "price",                {                    columnId: "vitamin_a",                    format: "Vitamin A (IU)"                }            ]        }    ],    columns: [        {            id: "weight",            header: {                format: "Weight"            }        }    ]}CopyThe header[] and header[].columns[] option arrays can be a mix of strings and objects. The string variant is a shortcut reference to the key in the DataTable. If you, for instance, need to modify the header cell format, use the object variant with columned as the reference.Walkthrough of some important elements:Renaming a header cell: The first item in the header[] array renames the header cell to "Fruit" instead of the default "products" from the DataTable.Creating a new header group: The second item doesn't have a columnId reference, so a new header cell called "Fruit data" is rendered. An aria-description attribute is added for improved accessibility.Defining grouped columns: In header[].columns[], we define which columns are rendered below the "Fruit data" header cell. These will then be grouped headers.Inherit column configuration: "weight" and "price" are string variants of the reference to the key in DataTable. However, since "weight" is also referenced from the root columns[] option array, the configuration takes precedence over the default key from the DataTable.Exluding columns: The "in_stock" column from the DataTable is not referenced in header[], so it is not rendered. This means that header[] can exclude columns from the original DataTable.You can group headers however deep you want by nesting the columns[] option array.Advanced exampleThis example shows deeper nesting of columns[]:SummaryUsing the header[] option gives you full control over which columns are displayed, their order, and how they are grouped and formatted in the Grid.With the exception of header grouping and order, you can also use the root columns[] option to, say, change header cell format and exclude columns. The best approach depends on your specific use case.Learn more about columns[] in our Columns article.\n\nHeader optionsBy default, all columns from the DataTable are imported into the Grid in the order they are declared. Use the header[] option to exclude specific columns and/or change their order. This option can also be used to group headers in a hierarchical structure.The header[] structureLet's look at a basic example that produces the illustration above:{    dataTable: {        columns: {            product: ["Apple", "Pear"],            weight: [182, 178],            price: [3.5, 2.5],            vitamin_a: [54,27],            in_stock: [true, false]        }    },    header: [        {            columnId: "product",            format: "Fruit"        },        {            format: "Fruit data",            accessibility: {                description: "Header spanning three sub-headers"            },            columns: [                "weight",                "price",                {                    columnId: "vitamin_a",                    format: "Vitamin A (IU)"                }            ]        }    ],    columns: [        {            id: "weight",            header: {                format: "Weight"            }        }    ]}CopyThe header[] and header[].columns[] option arrays can be a mix of strings and objects. The string variant is a shortcut reference to the key in the DataTable. If you, for instance, need to modify the header cell format, use the object variant with columned as the reference.Walkthrough of some important elements:Renaming a header cell: The first item in the header[] array renames the header cell to "Fruit" instead of the default "products" from the DataTable.Creating a new header group: The second item doesn't have a columnId reference, so a new header cell called "Fruit data" is rendered. An aria-description attribute is added for improved accessibility.Defining grouped columns: In header[].columns[], we define which columns are rendered below the "Fruit data" header cell. These will then be grouped headers.Inherit column configuration: "weight" and "price" are string variants of the reference to the key in DataTable. However, since "weight" is also referenced from the root columns[] option array, the configuration takes precedence over the default key from the DataTable.Exluding columns: The "in_stock" column from the DataTable is not referenced in header[], so it is not rendered. This means that header[] can exclude columns from the original DataTable.You can group headers however deep you want by nesting the columns[] option array.Advanced exampleThis example shows deeper nesting of columns[]:SummaryUsing the header[] option gives you full control over which columns are displayed, their order, and how they are grouped and formatted in the Grid.With the exception of header grouping and order, you can also use the root columns[] option to, say, change header cell format and exclude columns. The best approach depends on your specific use case.Learn more about columns[] in our Columns article.Edit this pagePrevious« Columns options NextCell editing  »The header[] structureAdvanced exampleSummary\n\nHeader optionsBy default, all columns from the DataTable are imported into the Grid in the order they are declared. Use the header[] option to exclude specific columns and/or change their order. This option can also be used to group headers in a hierarchical structure.The header[] structureLet's look at a basic example that produces the illustration above:{    dataTable: {        columns: {            product: ["Apple", "Pear"],            weight: [182, 178],            price: [3.5, 2.5],            vitamin_a: [54,27],            in_stock: [true, false]        }    },    header: [        {            columnId: "product",            format: "Fruit"        },        {            format: "Fruit data",            accessibility: {                description: "Header spanning three sub-headers"            },            columns: [                "weight",                "price",                {                    columnId: "vitamin_a",                    format: "Vitamin A (IU)"                }            ]        }    ],    columns: [        {            id: "weight",            header: {                format: "Weight"            }        }    ]}CopyThe header[] and header[].columns[] option arrays can be a mix of strings and objects. The string variant is a shortcut reference to the key in the DataTable. If you, for instance, need to modify the header cell format, use the object variant with columned as the reference.Walkthrough of some important elements:Renaming a header cell: The first item in the header[] array renames the header cell to "Fruit" instead of the default "products" from the DataTable.Creating a new header group: The second item doesn't have a columnId reference, so a new header cell called "Fruit data" is rendered. An aria-description attribute is added for improved accessibility.Defining grouped columns: In header[].columns[], we define which columns are rendered below the "Fruit data" header cell. These will then be grouped headers.Inherit column configuration: "weight" and "price" are string variants of the reference to the key in DataTable. However, since "weight" is also referenced from the root columns[] option array, the configuration takes precedence over the default key from the DataTable.Exluding columns: The "in_stock" column from the DataTable is not referenced in header[], so it is not rendered. This means that header[] can exclude columns from the original DataTable.You can group headers however deep you want by nesting the columns[] option array.Advanced exampleThis example shows deeper nesting of columns[]:SummaryUsing the header[] option gives you full control over which columns are displayed, their order, and how they are grouped and formatted in the Grid.With the exception of header grouping and order, you can also use the root columns[] option to, say, change header cell format and exclude columns. The best approach depends on your specific use case.Learn more about columns[] in our Columns article.Edit this pagePrevious« Columns options NextCell editing  »The header[] structureAdvanced exampleSummary\n\n\n\nPro featureCell editingNote: cell editing is not part of Highcharts Grid Lite, so refer to install instructions for the full version to enable this functionality.End users can edit data in cells if cell editing is enabled by setting the columnDefaults.cells.editable and/or columns[].cells.editable API options:columnDefaults: {    cells: {      editable: true,    },},columns: [  {    id: "firstName",    cells: {      editable: false,    },  },],CopyIn the example above cell editing is enabled for ALL columns, expect the firstName column. The reverse can be achived by not setting columnDefaults and columns[].cells.editable: true instead.The afterEdit eventThe afterEdit event is called after a cell value is edited, and can be used to e.g. post result to server, generate feedback GUI etc:events: {  cell: {    afterEdit: function () {      console.log(`${this.column.id} for ${this.row.data.firstName} was updated to ${this.value}`);    }  },}CopyCell editing roadmapCell editing is currently in development, and API support for input validation and different input mechanisms (string, number, boolean etc.) will be released in Q3 2025.\n\nPro featureCell editingNote: cell editing is not part of Highcharts Grid Lite, so refer to install instructions for the full version to enable this functionality.End users can edit data in cells if cell editing is enabled by setting the columnDefaults.cells.editable and/or columns[].cells.editable API options:columnDefaults: {    cells: {      editable: true,    },},columns: [  {    id: "firstName",    cells: {      editable: false,    },  },],CopyIn the example above cell editing is enabled for ALL columns, expect the firstName column. The reverse can be achived by not setting columnDefaults and columns[].cells.editable: true instead.The afterEdit eventThe afterEdit event is called after a cell value is edited, and can be used to e.g. post result to server, generate feedback GUI etc:events: {  cell: {    afterEdit: function () {      console.log(`${this.column.id} for ${this.row.data.firstName} was updated to ${this.value}`);    }  },}CopyCell editing roadmapCell editing is currently in development, and API support for input validation and different input mechanisms (string, number, boolean etc.) will be released in Q3 2025.Edit this pagePrevious« Header options NextEvents  »The afterEdit eventCell editing roadmap\n\nPro featureCell editingNote: cell editing is not part of Highcharts Grid Lite, so refer to install instructions for the full version to enable this functionality.End users can edit data in cells if cell editing is enabled by setting the columnDefaults.cells.editable and/or columns[].cells.editable API options:columnDefaults: {    cells: {      editable: true,    },},columns: [  {    id: "firstName",    cells: {      editable: false,    },  },],CopyIn the example above cell editing is enabled for ALL columns, expect the firstName column. The reverse can be achived by not setting columnDefaults and columns[].cells.editable: true instead.The afterEdit eventThe afterEdit event is called after a cell value is edited, and can be used to e.g. post result to server, generate feedback GUI etc:events: {  cell: {    afterEdit: function () {      console.log(`${this.column.id} for ${this.row.data.firstName} was updated to ${this.value}`);    }  },}CopyCell editing roadmapCell editing is currently in development, and API support for input validation and different input mechanisms (string, number, boolean etc.) will be released in Q3 2025.Edit this pagePrevious« Header options NextEvents  »The afterEdit eventCell editing roadmap\n\n\n\nPro featureEventsThe Grid supports event listeners that can be added to the events object. These listeners will call functions when interacting with the Grid.The available events are:cellEvent NameDescriptionFunction ContextafterEditTriggered after a cell's value is edited.this: CellafterSetValueTriggered after setting a cell's value (init/edit).this: CellclickTriggered after clicking on a cell.this: CelldblClickTriggered after double-clicking on a cell.this: CellmouseOverTriggered when the mouse is hovered over a cell.this: CellmouseOutTriggered when the mouse leaves a cell.this: CellcolumnEvent NameDescriptionFunction ContextafterResizeTriggered after resizing a column.this: ColumnafterSortingTriggered after sorting a column.this: ColumnheaderEvent NameDescriptionFunction ContextclickTriggered after clicking on a column header.this: ColumnExampleHere is a sample code that demonstrates how to use these event callbacks in the events object:events: {  cell: {    afterEdit: function () {      console.log('Cell edited:', this);    },    afterSetValue: function () {      console.log('Cell value set:', this);    },    click: function () {      console.log('Cell clicked:', this);    },    dblClick: function () {      console.log('Cell double-clicked:', this);    },    mouseOver: function () {      console.log('Mouse over cell:', this);    },    mouseOut: function () {      console.log('Mouse out of cell:', this);    }  },  column: {    afterResize: function () {      console.log('Column resized:', this);    },    afterSorting: function () {      console.log('Column sorted:', this);    }  },  header: {    click: function () {      console.log('Header clicked:', this);    }  }}CopyLive example:\n\nPro featureEventsThe Grid supports event listeners that can be added to the events object. These listeners will call functions when interacting with the Grid.The available events are:cellEvent NameDescriptionFunction ContextafterEditTriggered after a cell's value is edited.this: CellafterSetValueTriggered after setting a cell's value (init/edit).this: CellclickTriggered after clicking on a cell.this: CelldblClickTriggered after double-clicking on a cell.this: CellmouseOverTriggered when the mouse is hovered over a cell.this: CellmouseOutTriggered when the mouse leaves a cell.this: CellcolumnEvent NameDescriptionFunction ContextafterResizeTriggered after resizing a column.this: ColumnafterSortingTriggered after sorting a column.this: ColumnheaderEvent NameDescriptionFunction ContextclickTriggered after clicking on a column header.this: ColumnExampleHere is a sample code that demonstrates how to use these event callbacks in the events object:events: {  cell: {    afterEdit: function () {      console.log('Cell edited:', this);    },    afterSetValue: function () {      console.log('Cell value set:', this);    },    click: function () {      console.log('Cell clicked:', this);    },    dblClick: function () {      console.log('Cell double-clicked:', this);    },    mouseOver: function () {      console.log('Mouse over cell:', this);    },    mouseOut: function () {      console.log('Mouse out of cell:', this);    }  },  column: {    afterResize: function () {      console.log('Column resized:', this);    },    afterSorting: function () {      console.log('Column sorted:', this);    }  },  header: {    click: function () {      console.log('Header clicked:', this);    }  }}CopyLive example:Edit this pagePrevious« Cell editing NextIntroduction to theming  »cellcolumnheader\n\nPro featureEventsThe Grid supports event listeners that can be added to the events object. These listeners will call functions when interacting with the Grid.The available events are:cellEvent NameDescriptionFunction ContextafterEditTriggered after a cell's value is edited.this: CellafterSetValueTriggered after setting a cell's value (init/edit).this: CellclickTriggered after clicking on a cell.this: CelldblClickTriggered after double-clicking on a cell.this: CellmouseOverTriggered when the mouse is hovered over a cell.this: CellmouseOutTriggered when the mouse leaves a cell.this: CellcolumnEvent NameDescriptionFunction ContextafterResizeTriggered after resizing a column.this: ColumnafterSortingTriggered after sorting a column.this: ColumnheaderEvent NameDescriptionFunction ContextclickTriggered after clicking on a column header.this: ColumnExampleHere is a sample code that demonstrates how to use these event callbacks in the events object:events: {  cell: {    afterEdit: function () {      console.log('Cell edited:', this);    },    afterSetValue: function () {      console.log('Cell value set:', this);    },    click: function () {      console.log('Cell clicked:', this);    },    dblClick: function () {      console.log('Cell double-clicked:', this);    },    mouseOver: function () {      console.log('Mouse over cell:', this);    },    mouseOut: function () {      console.log('Mouse out of cell:', this);    }  },  column: {    afterResize: function () {      console.log('Column resized:', this);    },    afterSorting: function () {      console.log('Column sorted:', this);    }  },  header: {    click: function () {      console.log('Header clicked:', this);    }  }}CopyLive example:Edit this pagePrevious« Cell editing NextIntroduction to theming  »cellcolumnheader\n\n\n\nIntroduction to themingHighcharts Grid is designed with theming in mind, making it easy to adapt its styles to match your brand and preferences. While you can customize the grid using standard CSS overrides, we strongly recommend leveraging CSS custom properties (variables) whenever possible for a more robust and flexible approach. Highcharts Grid includes a selection of predefined variables for styling the overall grid, ensuring a consistent and maintainable look.These variables cover most common styling needs, but if you use custom HTML inside elements such as table cells, you will need to style those manually with regular CSS. Since we cannot provide variables for every possible use case, this approach gives you the flexibility to handle custom elements while maintaining the core grid’s theme.Using the included CSS variables also helps prevent breaking changes in future versions. We take great care to maintain backward compatibility, and relying on these variables ensures your custom styles remain stable across updates. Directly overriding default styles can lead to unexpected issues, whereas CSS variables provide a safe, efficient, and reliable way to customize the grid without compromising performance.Variable InheritanceCSS variables naturally inherit through the datagrid’s structure in a logical cascade: from <table> to <tbody> and finally <thead>. For example, the variable --hcg-border-width applies to the entire table by default and cascades to rows, columns, and cells unless overridden by more specific variables like --hcg-row-border-width.In the example below, a custom theme renders a 3px solid black border around the table and between rows and columns. The last two variables override the row border’s width and style, but the row border color inherits from --hcg-border-color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;  --hcg-row-border-width: 1px;  --hcg-row-border-style: dashed;}CopyThis cascading behavior lets you define high-level styles at the table level and refine them progressively for specific sections, avoiding repetitive declarations. Most variables follow this principle, ensuring consistent and efficient theming across your grid.Theme InheritanceIn addition to variable inheritance, Highcharts Grid supports theme inheritance, allowing you to build on a base theme and refine it for specific use cases. For instance, you can create a .theme-brand for your default brand styling and extend it with a .theme-brand-big variant for larger displays.In the example below, a base theme defines a custom font and font size. The extended theme modifies the font size for specific use cases..theme-brand {  --hcg-font-family: "Brand Font", Arial, sans-serif;  --hcg-font-size: 12px;}.theme-brand-big {  --hcg-font-size: 16px;}CopyThemes can be nested as deeply as needed, allowing you to adapt the grid for various scenarios like accessibility, large screens, or brand variants. This approach keeps your CSS clean and manageable while offering extensive customization options.Applying Themes with the APIOnce you’ve created your custom theme(s) in CSS, you can apply them using the rendering.theme option. Highcharts Grid includes a default theme, .hcg-theme-default, which is enabled by default. To build on this default theme, include it in your configuration:{  rendering: {    theme: "hcg-theme-default theme-custom";  }}CopyTo create a custom theme from scratch, exclude the default theme:{  rendering: {    theme: "theme-custom";  }}CopyThe theme class is appended to the <div class="hcg-container theme-custom"> element, which wraps the <table> and other grid components.Dark Mode SupportThe default theme (.hcg-theme-default) supports both light and dark modes.If you create a theme from scratch or modify color variables in the default, you might want to define dark mode-specific colors as well:.theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;}@media (prefers-color-scheme: dark) {  .theme-custom {    --hcg-border-color: #fff;  }}CopyVariable inheritance applies here too, so you only need to override variables that differ in dark mode.By following these practices, you can create flexible, maintainable themes that enhance your grid’s appearance while ensuring proper functionality and backward compatibility.Now check out the article on theming variables to get a full overview of all available variables and our theming demo to see it in practice.\n\nIntroduction to themingHighcharts Grid is designed with theming in mind, making it easy to adapt its styles to match your brand and preferences. While you can customize the grid using standard CSS overrides, we strongly recommend leveraging CSS custom properties (variables) whenever possible for a more robust and flexible approach. Highcharts Grid includes a selection of predefined variables for styling the overall grid, ensuring a consistent and maintainable look.These variables cover most common styling needs, but if you use custom HTML inside elements such as table cells, you will need to style those manually with regular CSS. Since we cannot provide variables for every possible use case, this approach gives you the flexibility to handle custom elements while maintaining the core grid’s theme.Using the included CSS variables also helps prevent breaking changes in future versions. We take great care to maintain backward compatibility, and relying on these variables ensures your custom styles remain stable across updates. Directly overriding default styles can lead to unexpected issues, whereas CSS variables provide a safe, efficient, and reliable way to customize the grid without compromising performance.Variable InheritanceCSS variables naturally inherit through the datagrid’s structure in a logical cascade: from <table> to <tbody> and finally <thead>. For example, the variable --hcg-border-width applies to the entire table by default and cascades to rows, columns, and cells unless overridden by more specific variables like --hcg-row-border-width.In the example below, a custom theme renders a 3px solid black border around the table and between rows and columns. The last two variables override the row border’s width and style, but the row border color inherits from --hcg-border-color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;  --hcg-row-border-width: 1px;  --hcg-row-border-style: dashed;}CopyThis cascading behavior lets you define high-level styles at the table level and refine them progressively for specific sections, avoiding repetitive declarations. Most variables follow this principle, ensuring consistent and efficient theming across your grid.Theme InheritanceIn addition to variable inheritance, Highcharts Grid supports theme inheritance, allowing you to build on a base theme and refine it for specific use cases. For instance, you can create a .theme-brand for your default brand styling and extend it with a .theme-brand-big variant for larger displays.In the example below, a base theme defines a custom font and font size. The extended theme modifies the font size for specific use cases..theme-brand {  --hcg-font-family: "Brand Font", Arial, sans-serif;  --hcg-font-size: 12px;}.theme-brand-big {  --hcg-font-size: 16px;}CopyThemes can be nested as deeply as needed, allowing you to adapt the grid for various scenarios like accessibility, large screens, or brand variants. This approach keeps your CSS clean and manageable while offering extensive customization options.Applying Themes with the APIOnce you’ve created your custom theme(s) in CSS, you can apply them using the rendering.theme option. Highcharts Grid includes a default theme, .hcg-theme-default, which is enabled by default. To build on this default theme, include it in your configuration:{  rendering: {    theme: "hcg-theme-default theme-custom";  }}CopyTo create a custom theme from scratch, exclude the default theme:{  rendering: {    theme: "theme-custom";  }}CopyThe theme class is appended to the <div class="hcg-container theme-custom"> element, which wraps the <table> and other grid components.Dark Mode SupportThe default theme (.hcg-theme-default) supports both light and dark modes.If you create a theme from scratch or modify color variables in the default, you might want to define dark mode-specific colors as well:.theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;}@media (prefers-color-scheme: dark) {  .theme-custom {    --hcg-border-color: #fff;  }}CopyVariable inheritance applies here too, so you only need to override variables that differ in dark mode.By following these practices, you can create flexible, maintainable themes that enhance your grid’s appearance while ensuring proper functionality and backward compatibility.Now check out the article on theming variables to get a full overview of all available variables and our theming demo to see it in practice.Edit this pagePrevious« Events NextTheming variables  »Variable InheritanceTheme InheritanceApplying Themes with the APIDark Mode Support\n\nIntroduction to themingHighcharts Grid is designed with theming in mind, making it easy to adapt its styles to match your brand and preferences. While you can customize the grid using standard CSS overrides, we strongly recommend leveraging CSS custom properties (variables) whenever possible for a more robust and flexible approach. Highcharts Grid includes a selection of predefined variables for styling the overall grid, ensuring a consistent and maintainable look.These variables cover most common styling needs, but if you use custom HTML inside elements such as table cells, you will need to style those manually with regular CSS. Since we cannot provide variables for every possible use case, this approach gives you the flexibility to handle custom elements while maintaining the core grid’s theme.Using the included CSS variables also helps prevent breaking changes in future versions. We take great care to maintain backward compatibility, and relying on these variables ensures your custom styles remain stable across updates. Directly overriding default styles can lead to unexpected issues, whereas CSS variables provide a safe, efficient, and reliable way to customize the grid without compromising performance.Variable InheritanceCSS variables naturally inherit through the datagrid’s structure in a logical cascade: from <table> to <tbody> and finally <thead>. For example, the variable --hcg-border-width applies to the entire table by default and cascades to rows, columns, and cells unless overridden by more specific variables like --hcg-row-border-width.In the example below, a custom theme renders a 3px solid black border around the table and between rows and columns. The last two variables override the row border’s width and style, but the row border color inherits from --hcg-border-color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;  --hcg-row-border-width: 1px;  --hcg-row-border-style: dashed;}CopyThis cascading behavior lets you define high-level styles at the table level and refine them progressively for specific sections, avoiding repetitive declarations. Most variables follow this principle, ensuring consistent and efficient theming across your grid.Theme InheritanceIn addition to variable inheritance, Highcharts Grid supports theme inheritance, allowing you to build on a base theme and refine it for specific use cases. For instance, you can create a .theme-brand for your default brand styling and extend it with a .theme-brand-big variant for larger displays.In the example below, a base theme defines a custom font and font size. The extended theme modifies the font size for specific use cases..theme-brand {  --hcg-font-family: "Brand Font", Arial, sans-serif;  --hcg-font-size: 12px;}.theme-brand-big {  --hcg-font-size: 16px;}CopyThemes can be nested as deeply as needed, allowing you to adapt the grid for various scenarios like accessibility, large screens, or brand variants. This approach keeps your CSS clean and manageable while offering extensive customization options.Applying Themes with the APIOnce you’ve created your custom theme(s) in CSS, you can apply them using the rendering.theme option. Highcharts Grid includes a default theme, .hcg-theme-default, which is enabled by default. To build on this default theme, include it in your configuration:{  rendering: {    theme: "hcg-theme-default theme-custom";  }}CopyTo create a custom theme from scratch, exclude the default theme:{  rendering: {    theme: "theme-custom";  }}CopyThe theme class is appended to the <div class="hcg-container theme-custom"> element, which wraps the <table> and other grid components.Dark Mode SupportThe default theme (.hcg-theme-default) supports both light and dark modes.If you create a theme from scratch or modify color variables in the default, you might want to define dark mode-specific colors as well:.theme-custom {  --hcg-border-width: 3px;  --hcg-border-style: solid;  --hcg-border-color: #000;}@media (prefers-color-scheme: dark) {  .theme-custom {    --hcg-border-color: #fff;  }}CopyVariable inheritance applies here too, so you only need to override variables that differ in dark mode.By following these practices, you can create flexible, maintainable themes that enhance your grid’s appearance while ensuring proper functionality and backward compatibility.Now check out the article on theming variables to get a full overview of all available variables and our theming demo to see it in practice.Edit this pagePrevious« Events NextTheming variables  »Variable InheritanceTheme InheritanceApplying Themes with the APIDark Mode Support\n\n\n\nTheming variablesHighcharts Grid includes a set of predefined CSS variables for theming. By defining global variables, such as --hcg-font-size, --hcg-background, --hcg-padding etc., you establish a baseline style for the entire grid. To customize specific sections, replace the global prefix (--hcg) with a section-specific prefix, such as --hcg-header or --hcg-caption. For example, the global variable --hcg-padding becomes --hcg-header-padding for headers. If no section-specific variable is defined, the grid defaults to the global value.The part of the variable name following the prefix corresponds 1:1 to the associated CSS property, such as padding, font-size or background. This makes it intuitive to understand the expected values and their behavior.FontsGlobalsGlobal font variables apply to all sections of the grid unless overridden.VariableDefault ValueValid Values--hcg-font-familySystem fonts *font-family--hcg-font-size1remfont-size--hcg-font-weightnormalfont-weight--hcg-color#000000/#ffffffcolor--hcg-text-alignlefttext-align* System fonts: apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif.Section PrefixesUse these prefixes to refine fonts for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-descriptionGlobals--hcg-captionGlobalsExampleThis example sets a base font family and size for the entire grid, and caption uses a larger font size..theme-custom {  --hcg-font-family: Arial, sans-serif;  --hcg-font-size: 14px;  --hcg-caption-font-size: 20px;}CopyBackgroundsGlobalsThe global background variable apply to header and all rows unless overridden.VariableDefault ValueValid Values--hcg-backgroundtransparentbackgroundSection PrefixesUse these prefixes to refine backgrounds for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-rowGlobals--hcg-row-even--hcg-rowExampleThis example sets a base background color for the entire grid. Header and even rows then use darker colors. In addition the header uses a brighter font color for increased contrast..theme-custom {  --hcg-background: #dedede;  --hcg-header-background: #505050;  --hcg-row-even-background: #cbcbcb;  --hcg-header-color: #dedede;}CopyBordersGlobalsGlobal border variables define the appearance of the outer table border and the borders between rows and columns.VariableDefault ValueValid Values--hcg-border-width0border-width--hcg-border-stylesolidborder-style--hcg-border-color#000000/#ffffffborder-color--hcg-border-radius *0border-radius* --hcg-border-radius applies only to the outer table border, not individual cells.Section PrefixesUse these prefixes to refine borders by section. If no section-specific variables are defined, global values are used (except for --hcg-border-radius).Section PrefixFallback--hcg-rowGlobal--hcg-columnGlobal--hcg-header-row--hcg-row--hcg-header-column--hcg-columnExampleThis example starts with a 3px global border. Rows and columns have narrower borders, and header column borders use a different style and color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-color: #000000;  --hcg-row-border-width: 1px;  --hcg-column-border-width: 2px;  --hcg-header-column-border-color: #eeeeee;  --hcg-header-column-border-style: dashed;}CopyPaddingGlobalsGlobal padding is applied to all table cells, header, caption and description. Use --hcg-horizontal-padding and --hcg-vertical-padding for finer control. If these aren’t defined, --hcg-padding applies to all sides.VariableFallbackDefault ValueValid Values--hcg-padding0padding (single value)--hcg-horizontal-padding--hcg-padding0padding (single value)--hcg-vertical-padding--hcg-padding0padding (single value)Section PrefixesUse these prefixes to customize padding for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-captionGlobals--hcg-descriptionGlobalsExampleThis example sets global padding to 8px, reduces vertical padding for headers, and removes horizontal padding for caption..theme-custom {  --hcg-padding: 8px;  --hcg-header-vertical-padding: 4px;  --hcg-caption-horizontal-padding: 0;}CopyHover statesGlobalsWhen hovering over cells in the grid you can apply hover states to the cell, row, column and/or column header. The following global variables are available for hover states:--hcg-color
--hcg-background
--hcg-border-width
--hcg-border-style
--hcg-border-colorSection PrefixesUse prefixes to define specific background, color and border for cell, row, column and/or column header.Section PrefixFallback--hcg-cell-hoveredNone--hcg-cell-hovered-rowNone--hcg-cell-hovered-columnNone--hcg-cell-hovered-headerNone--hcg-header-hoveredNoneExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopySync statesWhen using Highcharts Grid as a component in Highcharts Dashboards, synchronization highlights cells, rows and columns. By default hover states are used for sync as well, but can be overridden by using sync section prefixes instead.Section PrefixesSection PrefixFallback--hcg-cell-synced--hcg-cell-hovered--hcg-cell-synced-row--hcg-cell-hovered-row--hcg-cell-synced-column--hcg-cell-hovered-column--hcg-cell-synced-header--hcg-cell-hovered-header--hcg-header-synced--hcg-header-hoveredExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopyLinksIf format or formatter are used to insert links in table cells, or caption/description, the following variables can be used to style them. Color and font weight is always inherited from the parent element.VariableDefault valueValid Values--hcg-link-colorParentcolor--hcg-link-text-decorationunderlinetext-decoration--hcg-link-font-weightParentfont-weight--hcg-link-hovered-colorParentcolor--hcg-link-hovered-text-decorationunderlinetext-decorationPutting It All TogetherDefine a few global variables for a consistent base style. Use section-specific prefixes to refine headers, captions, rows, and columns. Use your own custom variables to avoid repetition..my-theme {  --my-hover-color: #ff0000;  --hcg-font-size: 15px;  --hcg-color: #666666;  --hcg-header-color: #ffffff;  --hcg-background: #ffffff;  --hcg-padding: 10px;  --hcg-header-background: #002933;  --hcg-row-even-background: #e9faff;  --hcg-cell-hovered-header-background: #1a3f48;  --hcg-cell-hovered-border-width: 1px;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #f2f2f2;  --hcg-header-hovered-background: #1a3f48;  --hcg-cell-hovered-border-color: var(--my-hover-color);  --hcg-cell-hovered-header-color: var(--my-hover-color);  --hcg-cell-hovered-row-color: var(--my-hover-color);  --hcg-cell-hovered-column-color: var(--my-hover-color);  --hcg-header-hovered-color: var(--my-hover-color);}CopyCheck our theming demo to see this theme in practice.SummaryDefine global variables for fonts, borders, padding, and backgrounds.Use section-specific prefixes to refine specific areas.The DataGrid falls back to global values when no section-specific variable is defined.This system ensures flexible, maintainable, and consistent theming.\n\nTheming variablesHighcharts Grid includes a set of predefined CSS variables for theming. By defining global variables, such as --hcg-font-size, --hcg-background, --hcg-padding etc., you establish a baseline style for the entire grid. To customize specific sections, replace the global prefix (--hcg) with a section-specific prefix, such as --hcg-header or --hcg-caption. For example, the global variable --hcg-padding becomes --hcg-header-padding for headers. If no section-specific variable is defined, the grid defaults to the global value.The part of the variable name following the prefix corresponds 1:1 to the associated CSS property, such as padding, font-size or background. This makes it intuitive to understand the expected values and their behavior.FontsGlobalsGlobal font variables apply to all sections of the grid unless overridden.VariableDefault ValueValid Values--hcg-font-familySystem fonts *font-family--hcg-font-size1remfont-size--hcg-font-weightnormalfont-weight--hcg-color#000000/#ffffffcolor--hcg-text-alignlefttext-align* System fonts: apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif.Section PrefixesUse these prefixes to refine fonts for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-descriptionGlobals--hcg-captionGlobalsExampleThis example sets a base font family and size for the entire grid, and caption uses a larger font size..theme-custom {  --hcg-font-family: Arial, sans-serif;  --hcg-font-size: 14px;  --hcg-caption-font-size: 20px;}CopyBackgroundsGlobalsThe global background variable apply to header and all rows unless overridden.VariableDefault ValueValid Values--hcg-backgroundtransparentbackgroundSection PrefixesUse these prefixes to refine backgrounds for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-rowGlobals--hcg-row-even--hcg-rowExampleThis example sets a base background color for the entire grid. Header and even rows then use darker colors. In addition the header uses a brighter font color for increased contrast..theme-custom {  --hcg-background: #dedede;  --hcg-header-background: #505050;  --hcg-row-even-background: #cbcbcb;  --hcg-header-color: #dedede;}CopyBordersGlobalsGlobal border variables define the appearance of the outer table border and the borders between rows and columns.VariableDefault ValueValid Values--hcg-border-width0border-width--hcg-border-stylesolidborder-style--hcg-border-color#000000/#ffffffborder-color--hcg-border-radius *0border-radius* --hcg-border-radius applies only to the outer table border, not individual cells.Section PrefixesUse these prefixes to refine borders by section. If no section-specific variables are defined, global values are used (except for --hcg-border-radius).Section PrefixFallback--hcg-rowGlobal--hcg-columnGlobal--hcg-header-row--hcg-row--hcg-header-column--hcg-columnExampleThis example starts with a 3px global border. Rows and columns have narrower borders, and header column borders use a different style and color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-color: #000000;  --hcg-row-border-width: 1px;  --hcg-column-border-width: 2px;  --hcg-header-column-border-color: #eeeeee;  --hcg-header-column-border-style: dashed;}CopyPaddingGlobalsGlobal padding is applied to all table cells, header, caption and description. Use --hcg-horizontal-padding and --hcg-vertical-padding for finer control. If these aren’t defined, --hcg-padding applies to all sides.VariableFallbackDefault ValueValid Values--hcg-padding0padding (single value)--hcg-horizontal-padding--hcg-padding0padding (single value)--hcg-vertical-padding--hcg-padding0padding (single value)Section PrefixesUse these prefixes to customize padding for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-captionGlobals--hcg-descriptionGlobalsExampleThis example sets global padding to 8px, reduces vertical padding for headers, and removes horizontal padding for caption..theme-custom {  --hcg-padding: 8px;  --hcg-header-vertical-padding: 4px;  --hcg-caption-horizontal-padding: 0;}CopyHover statesGlobalsWhen hovering over cells in the grid you can apply hover states to the cell, row, column and/or column header. The following global variables are available for hover states:--hcg-color
--hcg-background
--hcg-border-width
--hcg-border-style
--hcg-border-colorSection PrefixesUse prefixes to define specific background, color and border for cell, row, column and/or column header.Section PrefixFallback--hcg-cell-hoveredNone--hcg-cell-hovered-rowNone--hcg-cell-hovered-columnNone--hcg-cell-hovered-headerNone--hcg-header-hoveredNoneExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopySync statesWhen using Highcharts Grid as a component in Highcharts Dashboards, synchronization highlights cells, rows and columns. By default hover states are used for sync as well, but can be overridden by using sync section prefixes instead.Section PrefixesSection PrefixFallback--hcg-cell-synced--hcg-cell-hovered--hcg-cell-synced-row--hcg-cell-hovered-row--hcg-cell-synced-column--hcg-cell-hovered-column--hcg-cell-synced-header--hcg-cell-hovered-header--hcg-header-synced--hcg-header-hoveredExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopyLinksIf format or formatter are used to insert links in table cells, or caption/description, the following variables can be used to style them. Color and font weight is always inherited from the parent element.VariableDefault valueValid Values--hcg-link-colorParentcolor--hcg-link-text-decorationunderlinetext-decoration--hcg-link-font-weightParentfont-weight--hcg-link-hovered-colorParentcolor--hcg-link-hovered-text-decorationunderlinetext-decorationPutting It All TogetherDefine a few global variables for a consistent base style. Use section-specific prefixes to refine headers, captions, rows, and columns. Use your own custom variables to avoid repetition..my-theme {  --my-hover-color: #ff0000;  --hcg-font-size: 15px;  --hcg-color: #666666;  --hcg-header-color: #ffffff;  --hcg-background: #ffffff;  --hcg-padding: 10px;  --hcg-header-background: #002933;  --hcg-row-even-background: #e9faff;  --hcg-cell-hovered-header-background: #1a3f48;  --hcg-cell-hovered-border-width: 1px;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #f2f2f2;  --hcg-header-hovered-background: #1a3f48;  --hcg-cell-hovered-border-color: var(--my-hover-color);  --hcg-cell-hovered-header-color: var(--my-hover-color);  --hcg-cell-hovered-row-color: var(--my-hover-color);  --hcg-cell-hovered-column-color: var(--my-hover-color);  --hcg-header-hovered-color: var(--my-hover-color);}CopyCheck our theming demo to see this theme in practice.SummaryDefine global variables for fonts, borders, padding, and backgrounds.Use section-specific prefixes to refine specific areas.The DataGrid falls back to global values when no section-specific variable is defined.This system ensures flexible, maintainable, and consistent theming.Edit this pagePrevious« Introduction to theming NextPerformance and rendering  »FontsGlobalsSection PrefixesExampleBackgroundsGlobalsSection PrefixesExampleBordersGlobalsSection PrefixesExamplePaddingGlobalsSection PrefixesExampleHover statesGlobalsSection PrefixesExampleSync statesSection PrefixesExampleLinksPutting It All TogetherSummary\n\nTheming variablesHighcharts Grid includes a set of predefined CSS variables for theming. By defining global variables, such as --hcg-font-size, --hcg-background, --hcg-padding etc., you establish a baseline style for the entire grid. To customize specific sections, replace the global prefix (--hcg) with a section-specific prefix, such as --hcg-header or --hcg-caption. For example, the global variable --hcg-padding becomes --hcg-header-padding for headers. If no section-specific variable is defined, the grid defaults to the global value.The part of the variable name following the prefix corresponds 1:1 to the associated CSS property, such as padding, font-size or background. This makes it intuitive to understand the expected values and their behavior.FontsGlobalsGlobal font variables apply to all sections of the grid unless overridden.VariableDefault ValueValid Values--hcg-font-familySystem fonts *font-family--hcg-font-size1remfont-size--hcg-font-weightnormalfont-weight--hcg-color#000000/#ffffffcolor--hcg-text-alignlefttext-align* System fonts: apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif.Section PrefixesUse these prefixes to refine fonts for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-descriptionGlobals--hcg-captionGlobalsExampleThis example sets a base font family and size for the entire grid, and caption uses a larger font size..theme-custom {  --hcg-font-family: Arial, sans-serif;  --hcg-font-size: 14px;  --hcg-caption-font-size: 20px;}CopyBackgroundsGlobalsThe global background variable apply to header and all rows unless overridden.VariableDefault ValueValid Values--hcg-backgroundtransparentbackgroundSection PrefixesUse these prefixes to refine backgrounds for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-rowGlobals--hcg-row-even--hcg-rowExampleThis example sets a base background color for the entire grid. Header and even rows then use darker colors. In addition the header uses a brighter font color for increased contrast..theme-custom {  --hcg-background: #dedede;  --hcg-header-background: #505050;  --hcg-row-even-background: #cbcbcb;  --hcg-header-color: #dedede;}CopyBordersGlobalsGlobal border variables define the appearance of the outer table border and the borders between rows and columns.VariableDefault ValueValid Values--hcg-border-width0border-width--hcg-border-stylesolidborder-style--hcg-border-color#000000/#ffffffborder-color--hcg-border-radius *0border-radius* --hcg-border-radius applies only to the outer table border, not individual cells.Section PrefixesUse these prefixes to refine borders by section. If no section-specific variables are defined, global values are used (except for --hcg-border-radius).Section PrefixFallback--hcg-rowGlobal--hcg-columnGlobal--hcg-header-row--hcg-row--hcg-header-column--hcg-columnExampleThis example starts with a 3px global border. Rows and columns have narrower borders, and header column borders use a different style and color..theme-custom {  --hcg-border-width: 3px;  --hcg-border-color: #000000;  --hcg-row-border-width: 1px;  --hcg-column-border-width: 2px;  --hcg-header-column-border-color: #eeeeee;  --hcg-header-column-border-style: dashed;}CopyPaddingGlobalsGlobal padding is applied to all table cells, header, caption and description. Use --hcg-horizontal-padding and --hcg-vertical-padding for finer control. If these aren’t defined, --hcg-padding applies to all sides.VariableFallbackDefault ValueValid Values--hcg-padding0padding (single value)--hcg-horizontal-padding--hcg-padding0padding (single value)--hcg-vertical-padding--hcg-padding0padding (single value)Section PrefixesUse these prefixes to customize padding for specific sections.Section PrefixFallback--hcg-headerGlobals--hcg-captionGlobals--hcg-descriptionGlobalsExampleThis example sets global padding to 8px, reduces vertical padding for headers, and removes horizontal padding for caption..theme-custom {  --hcg-padding: 8px;  --hcg-header-vertical-padding: 4px;  --hcg-caption-horizontal-padding: 0;}CopyHover statesGlobalsWhen hovering over cells in the grid you can apply hover states to the cell, row, column and/or column header. The following global variables are available for hover states:--hcg-color
--hcg-background
--hcg-border-width
--hcg-border-style
--hcg-border-colorSection PrefixesUse prefixes to define specific background, color and border for cell, row, column and/or column header.Section PrefixFallback--hcg-cell-hoveredNone--hcg-cell-hovered-rowNone--hcg-cell-hovered-columnNone--hcg-cell-hovered-headerNone--hcg-header-hoveredNoneExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopySync statesWhen using Highcharts Grid as a component in Highcharts Dashboards, synchronization highlights cells, rows and columns. By default hover states are used for sync as well, but can be overridden by using sync section prefixes instead.Section PrefixesSection PrefixFallback--hcg-cell-synced--hcg-cell-hovered--hcg-cell-synced-row--hcg-cell-hovered-row--hcg-cell-synced-column--hcg-cell-hovered-column--hcg-cell-synced-header--hcg-cell-hovered-header--hcg-header-synced--hcg-header-hoveredExampleThis example starts with a global table background color. It adds a darker background for headers, alternating row colors, and hover states for rows and columns. In addition a border is added to the column..theme-custom {  --hcg-background: #aaaaaa;  --hcg-header-background: #888888;  --hcg-row-even-background: #aeaeae;  --hcg-cell-hovered-row-background: #999999;  --hcg-cell-hovered-column-background: #999999;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #d27676;}CopyLinksIf format or formatter are used to insert links in table cells, or caption/description, the following variables can be used to style them. Color and font weight is always inherited from the parent element.VariableDefault valueValid Values--hcg-link-colorParentcolor--hcg-link-text-decorationunderlinetext-decoration--hcg-link-font-weightParentfont-weight--hcg-link-hovered-colorParentcolor--hcg-link-hovered-text-decorationunderlinetext-decorationPutting It All TogetherDefine a few global variables for a consistent base style. Use section-specific prefixes to refine headers, captions, rows, and columns. Use your own custom variables to avoid repetition..my-theme {  --my-hover-color: #ff0000;  --hcg-font-size: 15px;  --hcg-color: #666666;  --hcg-header-color: #ffffff;  --hcg-background: #ffffff;  --hcg-padding: 10px;  --hcg-header-background: #002933;  --hcg-row-even-background: #e9faff;  --hcg-cell-hovered-header-background: #1a3f48;  --hcg-cell-hovered-border-width: 1px;  --hcg-cell-hovered-column-border-width: 1px;  --hcg-cell-hovered-column-border-color: #f2f2f2;  --hcg-header-hovered-background: #1a3f48;  --hcg-cell-hovered-border-color: var(--my-hover-color);  --hcg-cell-hovered-header-color: var(--my-hover-color);  --hcg-cell-hovered-row-color: var(--my-hover-color);  --hcg-cell-hovered-column-color: var(--my-hover-color);  --hcg-header-hovered-color: var(--my-hover-color);}CopyCheck our theming demo to see this theme in practice.SummaryDefine global variables for fonts, borders, padding, and backgrounds.Use section-specific prefixes to refine specific areas.The DataGrid falls back to global values when no section-specific variable is defined.This system ensures flexible, maintainable, and consistent theming.Edit this pagePrevious« Introduction to theming NextPerformance and rendering  »FontsGlobalsSection PrefixesExampleBackgroundsGlobalsSection PrefixesExampleBordersGlobalsSection PrefixesExamplePaddingGlobalsSection PrefixesExampleHover statesGlobalsSection PrefixesExampleSync statesSection PrefixesExampleLinksPutting It All TogetherSummary\n\n\n\nPerformance and renderingRow virtualization is a performance optimization technique used in Grid. Instead of rendering all the rows of data at once, which can be thousands of entries, row virtualization renders only the rows currently visible within the user's viewport (plus a small buffer). As the user scrolls, the Grid dynamically renders new rows and removes those that scroll out of view.This technique significantly enhances performance, leading to faster load times and efficient updates. Row virtualization reduces memory consumption, allowing the application to handle large datasets smoothly without compromising performance. Users benefit from a smoother experience with fluid scrolling and more responsive interactions such as sorting rows.The row virtualization is enabled by default; however, you can easily disable it using the virtualization option.
Please note that large datasets also impact resizing and sorting performance. Some animations or interactions might not be smooth.Optimizing performance{    rendering: {        rows: {            bufferSize: 3, // default is 10            strictHeights: true // default is false        }    }}CopyThe bufferSize and strictHeights options can be adjusted to optimize performance and smoothness of scrolling based on your specific use case and preferences.buffersizeDefines the number of rows rendered outside the viewport (the buffer) during scrolling. A small buffer leads to faster initial rendering and increased performance on sorting and scrolling. A larger buffer means slower initial rendering but might decrease the flicker effect on fast scrolling.The default bufferSize of 10 should be optimal in most cases.strictHeightsBy default, rows adjust their height to fit all content, which can reduce performance and scrolling smoothness. Setting strictHeights: true ensures all rows have a uniform height, truncating multiline text with an ellipsis. This skips height calculations and boosts performance.Rendering{    rendering: {        table: {            className: "custom_table_class"        },        header: {            enabled: false // default is true        },        columns: {            distribution: "fixed" // default is "full"        }    }}CopyThese options can be used to configure how the table should be rendered.table.className is appended to the <table> element.header.enabled: false disables all column headers by not rendering the thead element.columns.distribution is used to configure initial column widths.columns.distribution: "full" renders a full width (width: 100%;) responsive table with evenly distributed column widths. columns.distribution:"fixed" renders a table were columns have a fixed width in pixels. It should be set to support your specific use case.\n\nPerformance and renderingRow virtualization is a performance optimization technique used in Grid. Instead of rendering all the rows of data at once, which can be thousands of entries, row virtualization renders only the rows currently visible within the user's viewport (plus a small buffer). As the user scrolls, the Grid dynamically renders new rows and removes those that scroll out of view.This technique significantly enhances performance, leading to faster load times and efficient updates. Row virtualization reduces memory consumption, allowing the application to handle large datasets smoothly without compromising performance. Users benefit from a smoother experience with fluid scrolling and more responsive interactions such as sorting rows.The row virtualization is enabled by default; however, you can easily disable it using the virtualization option.
Please note that large datasets also impact resizing and sorting performance. Some animations or interactions might not be smooth.Optimizing performance{    rendering: {        rows: {            bufferSize: 3, // default is 10            strictHeights: true // default is false        }    }}CopyThe bufferSize and strictHeights options can be adjusted to optimize performance and smoothness of scrolling based on your specific use case and preferences.buffersizeDefines the number of rows rendered outside the viewport (the buffer) during scrolling. A small buffer leads to faster initial rendering and increased performance on sorting and scrolling. A larger buffer means slower initial rendering but might decrease the flicker effect on fast scrolling.The default bufferSize of 10 should be optimal in most cases.strictHeightsBy default, rows adjust their height to fit all content, which can reduce performance and scrolling smoothness. Setting strictHeights: true ensures all rows have a uniform height, truncating multiline text with an ellipsis. This skips height calculations and boosts performance.Rendering{    rendering: {        table: {            className: "custom_table_class"        },        header: {            enabled: false // default is true        },        columns: {            distribution: "fixed" // default is "full"        }    }}CopyThese options can be used to configure how the table should be rendered.table.className is appended to the <table> element.header.enabled: false disables all column headers by not rendering the thead element.columns.distribution is used to configure initial column widths.columns.distribution: "full" renders a full width (width: 100%;) responsive table with evenly distributed column widths. columns.distribution:"fixed" renders a table were columns have a fixed width in pixels. It should be set to support your specific use case.Edit this pagePrevious« Theming variables NextAccessibility (a11y) in Highcharts Grid  »Optimizing performancebuffersizestrictHeightsRendering\n\nPerformance and renderingRow virtualization is a performance optimization technique used in Grid. Instead of rendering all the rows of data at once, which can be thousands of entries, row virtualization renders only the rows currently visible within the user's viewport (plus a small buffer). As the user scrolls, the Grid dynamically renders new rows and removes those that scroll out of view.This technique significantly enhances performance, leading to faster load times and efficient updates. Row virtualization reduces memory consumption, allowing the application to handle large datasets smoothly without compromising performance. Users benefit from a smoother experience with fluid scrolling and more responsive interactions such as sorting rows.The row virtualization is enabled by default; however, you can easily disable it using the virtualization option.
Please note that large datasets also impact resizing and sorting performance. Some animations or interactions might not be smooth.Optimizing performance{    rendering: {        rows: {            bufferSize: 3, // default is 10            strictHeights: true // default is false        }    }}CopyThe bufferSize and strictHeights options can be adjusted to optimize performance and smoothness of scrolling based on your specific use case and preferences.buffersizeDefines the number of rows rendered outside the viewport (the buffer) during scrolling. A small buffer leads to faster initial rendering and increased performance on sorting and scrolling. A larger buffer means slower initial rendering but might decrease the flicker effect on fast scrolling.The default bufferSize of 10 should be optimal in most cases.strictHeightsBy default, rows adjust their height to fit all content, which can reduce performance and scrolling smoothness. Setting strictHeights: true ensures all rows have a uniform height, truncating multiline text with an ellipsis. This skips height calculations and boosts performance.Rendering{    rendering: {        table: {            className: "custom_table_class"        },        header: {            enabled: false // default is true        },        columns: {            distribution: "fixed" // default is "full"        }    }}CopyThese options can be used to configure how the table should be rendered.table.className is appended to the <table> element.header.enabled: false disables all column headers by not rendering the thead element.columns.distribution is used to configure initial column widths.columns.distribution: "full" renders a full width (width: 100%;) responsive table with evenly distributed column widths. columns.distribution:"fixed" renders a table were columns have a fixed width in pixels. It should be set to support your specific use case.Edit this pagePrevious« Theming variables NextAccessibility (a11y) in Highcharts Grid  »Optimizing performancebuffersizestrictHeightsRendering\n\n\n\nAccessibility (a11y) in Highcharts GridAccessibility (a11y) ensures that web content is usable by everyone, including people with disabilities. Highcharts Grid is rendered using a standard and accessible HTML <table>, and is designed with accessibility in mind to provide an inclusive experience for all users.Using proper <table> semantics, such as <thead>, <tbody>, and <th> with appropriate scope attributes, ensures the structure is clear for users relying on assistive technologies like screen readers. Features like keyboard navigation, descriptive headers, and ARIA roles make the grid not only functional but also inclusive for users with visual or motor impairments.Default optionsAccessibility features are enabled by default, and we generally recommend keeping them active. However, if necessary, they can be configured in the root accessibility options object:{  accessibility: {    enabled: false,    announcements: {      sorting: true    }  }}CopySetting accessibility.enabled: false disables all a11y features, including ARIA attributes and any ARIA live announcements.All accessibility options are optional, and options in announcements override the global enabled option.LocalizationTo customize the default language or wording for ARIA attributes and announcers, use the root lang.accessibility options:{  lang: {    accessibility: {      cellEditing: {        editable: "Editable",        announcements: {          started: "Entered cell editing mode",          ...        }      },      sorting: {        announcements: {          ascending: "Sorted ascending",          ...        }      }    }  }}CopyFor a complete list of available options, check out the API reference.When configuring localization, it typically want it to apply to all grids on the same page. In such cases, we recommend using setOptions() to apply these changes globally. Read Understanding Highcharts DataGrid for the details.High contrast modeWhen developing your own custom theme it's recommended to include a high contrast variant if needed..my-theme {  --hcg-color: #606060;  --hcg-border-stye: dashed;  ...;}@media (prefers-contrast: more) {  .my-theme {    --hcg-color: #000000;    --hcg-border-style: solid;    ...;  }}CopyHeader descriptionsYou can add an aria-description attribute to individual <th> table headers by configuring header[].accessibility.description. This is especially useful when grouped headers are used, as descriptions of header groups provide additional clarity for users relying on assistive technologies.Caption vs. headerScreen readers often skip table captions (<caption>) when users scan a page's headers for structure. To ensure accessibility, Highcharts Grid inserts an element above the <table> instead of using <caption> inside it. The table references this element by using a proper aria-labelledby attribute.Make sure you use a proper heading level (<h1>–<h6>) when configuring the caption option. This approach ensures that users relying on screen readers can understand the table's context while navigating the page.caption: {  text: "<h3>This is the caption</h3>";}Copy\n\nAccessibility (a11y) in Highcharts GridAccessibility (a11y) ensures that web content is usable by everyone, including people with disabilities. Highcharts Grid is rendered using a standard and accessible HTML <table>, and is designed with accessibility in mind to provide an inclusive experience for all users.Using proper <table> semantics, such as <thead>, <tbody>, and <th> with appropriate scope attributes, ensures the structure is clear for users relying on assistive technologies like screen readers. Features like keyboard navigation, descriptive headers, and ARIA roles make the grid not only functional but also inclusive for users with visual or motor impairments.Default optionsAccessibility features are enabled by default, and we generally recommend keeping them active. However, if necessary, they can be configured in the root accessibility options object:{  accessibility: {    enabled: false,    announcements: {      sorting: true    }  }}CopySetting accessibility.enabled: false disables all a11y features, including ARIA attributes and any ARIA live announcements.All accessibility options are optional, and options in announcements override the global enabled option.LocalizationTo customize the default language or wording for ARIA attributes and announcers, use the root lang.accessibility options:{  lang: {    accessibility: {      cellEditing: {        editable: "Editable",        announcements: {          started: "Entered cell editing mode",          ...        }      },      sorting: {        announcements: {          ascending: "Sorted ascending",          ...        }      }    }  }}CopyFor a complete list of available options, check out the API reference.When configuring localization, it typically want it to apply to all grids on the same page. In such cases, we recommend using setOptions() to apply these changes globally. Read Understanding Highcharts DataGrid for the details.High contrast modeWhen developing your own custom theme it's recommended to include a high contrast variant if needed..my-theme {  --hcg-color: #606060;  --hcg-border-stye: dashed;  ...;}@media (prefers-contrast: more) {  .my-theme {    --hcg-color: #000000;    --hcg-border-style: solid;    ...;  }}CopyHeader descriptionsYou can add an aria-description attribute to individual <th> table headers by configuring header[].accessibility.description. This is especially useful when grouped headers are used, as descriptions of header groups provide additional clarity for users relying on assistive technologies.Caption vs. headerScreen readers often skip table captions (<caption>) when users scan a page's headers for structure. To ensure accessibility, Highcharts Grid inserts an element above the <table> instead of using <caption> inside it. The table references this element by using a proper aria-labelledby attribute.Make sure you use a proper heading level (<h1>–<h6>) when configuring the caption option. This approach ensures that users relying on screen readers can understand the table's context while navigating the page.caption: {  text: "<h3>This is the caption</h3>";}CopyEdit this pagePrevious« Performance and rendering NextHighcharts Grid with Angular  »Default optionsLocalizationHigh contrast modeHeader descriptionsCaption vs. header\n\nAccessibility (a11y) in Highcharts GridAccessibility (a11y) ensures that web content is usable by everyone, including people with disabilities. Highcharts Grid is rendered using a standard and accessible HTML <table>, and is designed with accessibility in mind to provide an inclusive experience for all users.Using proper <table> semantics, such as <thead>, <tbody>, and <th> with appropriate scope attributes, ensures the structure is clear for users relying on assistive technologies like screen readers. Features like keyboard navigation, descriptive headers, and ARIA roles make the grid not only functional but also inclusive for users with visual or motor impairments.Default optionsAccessibility features are enabled by default, and we generally recommend keeping them active. However, if necessary, they can be configured in the root accessibility options object:{  accessibility: {    enabled: false,    announcements: {      sorting: true    }  }}CopySetting accessibility.enabled: false disables all a11y features, including ARIA attributes and any ARIA live announcements.All accessibility options are optional, and options in announcements override the global enabled option.LocalizationTo customize the default language or wording for ARIA attributes and announcers, use the root lang.accessibility options:{  lang: {    accessibility: {      cellEditing: {        editable: "Editable",        announcements: {          started: "Entered cell editing mode",          ...        }      },      sorting: {        announcements: {          ascending: "Sorted ascending",          ...        }      }    }  }}CopyFor a complete list of available options, check out the API reference.When configuring localization, it typically want it to apply to all grids on the same page. In such cases, we recommend using setOptions() to apply these changes globally. Read Understanding Highcharts DataGrid for the details.High contrast modeWhen developing your own custom theme it's recommended to include a high contrast variant if needed..my-theme {  --hcg-color: #606060;  --hcg-border-stye: dashed;  ...;}@media (prefers-contrast: more) {  .my-theme {    --hcg-color: #000000;    --hcg-border-style: solid;    ...;  }}CopyHeader descriptionsYou can add an aria-description attribute to individual <th> table headers by configuring header[].accessibility.description. This is especially useful when grouped headers are used, as descriptions of header groups provide additional clarity for users relying on assistive technologies.Caption vs. headerScreen readers often skip table captions (<caption>) when users scan a page's headers for structure. To ensure accessibility, Highcharts Grid inserts an element above the <table> instead of using <caption> inside it. The table references this element by using a proper aria-labelledby attribute.Make sure you use a proper heading level (<h1>–<h6>) when configuring the caption option. This approach ensures that users relying on screen readers can understand the table's context while navigating the page.caption: {  text: "<h3>This is the caption</h3>";}CopyEdit this pagePrevious« Performance and rendering NextHighcharts Grid with Angular  »Default optionsLocalizationHigh contrast modeHeader descriptionsCaption vs. header\n\n\n\nHighcharts Grid with AngularTo create a Grid with Angular, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Import the Grid packageimport Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';Copy3. Create an HTML containerAdd a div where you want to render the Grid.<div id="container"></div>Copy4. Create a GridCreate a Grid using the factory function Grid.grid. The function takes two arguments:container - the element where the Grid will be rendered, can be the id of the element or the direct reference to the elementoptions - the object options for the GridGrid.grid('container', this.options);CopyFinal exampleimport { Component, OnInit } from '@angular/core';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';@Component({    selector: 'app-root',    standalone: true,    template: '<div id="container"></div>',})export class AppComponent implements OnInit {    private options: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    ngOnInit() {        Grid.grid('container', this.options);    }}CopySee the live example here.\n\nHighcharts Grid with AngularTo create a Grid with Angular, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Import the Grid packageimport Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';Copy3. Create an HTML containerAdd a div where you want to render the Grid.<div id="container"></div>Copy4. Create a GridCreate a Grid using the factory function Grid.grid. The function takes two arguments:container - the element where the Grid will be rendered, can be the id of the element or the direct reference to the elementoptions - the object options for the GridGrid.grid('container', this.options);CopyFinal exampleimport { Component, OnInit } from '@angular/core';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';@Component({    selector: 'app-root',    standalone: true,    template: '<div id="container"></div>',})export class AppComponent implements OnInit {    private options: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    ngOnInit() {        Grid.grid('container', this.options);    }}CopySee the live example here.Edit this pagePrevious« Accessibility (a11y) in Highcharts Grid NextHighcharts Grid with React  »1. Install the Grid package2. Import the Grid package3. Create an HTML container4. Create a GridFinal example\n\nHighcharts Grid with AngularTo create a Grid with Angular, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Import the Grid packageimport Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';Copy3. Create an HTML containerAdd a div where you want to render the Grid.<div id="container"></div>Copy4. Create a GridCreate a Grid using the factory function Grid.grid. The function takes two arguments:container - the element where the Grid will be rendered, can be the id of the element or the direct reference to the elementoptions - the object options for the GridGrid.grid('container', this.options);CopyFinal exampleimport { Component, OnInit } from '@angular/core';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';@Component({    selector: 'app-root',    standalone: true,    template: '<div id="container"></div>',})export class AppComponent implements OnInit {    private options: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    ngOnInit() {        Grid.grid('container', this.options);    }}CopySee the live example here.Edit this pagePrevious« Accessibility (a11y) in Highcharts Grid NextHighcharts Grid with React  »1. Install the Grid package2. Import the Grid package3. Create an HTML container4. Create a GridFinal example\n\n\n\nHighcharts Grid with ReactTo create a Grid with React, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid React component:// GridComponent.tsximport { useEffect, useRef } from 'react';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';export default function GridComponent(props: { config: Grid.Options }) {    const { config } = props;    const containerRef = useRef<HTMLDivElement>(null);    useEffect(() => {        if (containerRef.current) {            Grid.grid(containerRef.current, config);        }    }, [config]);    return (        <div ref={containerRef} />    );}Copy3. Use the component in your application:// App.tsximport GridComponent from "./components/GridComponent";function App() {    const config: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    return (        <div className="App">            <GridComponent config={config} />        </div>    );}export default App;CopySee the live example here.\n\nHighcharts Grid with ReactTo create a Grid with React, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid React component:// GridComponent.tsximport { useEffect, useRef } from 'react';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';export default function GridComponent(props: { config: Grid.Options }) {    const { config } = props;    const containerRef = useRef<HTMLDivElement>(null);    useEffect(() => {        if (containerRef.current) {            Grid.grid(containerRef.current, config);        }    }, [config]);    return (        <div ref={containerRef} />    );}Copy3. Use the component in your application:// App.tsximport GridComponent from "./components/GridComponent";function App() {    const config: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    return (        <div className="App">            <GridComponent config={config} />        </div>    );}export default App;CopySee the live example here.Edit this pagePrevious« Highcharts Grid with Angular NextHighcharts Grid with Vue  »1. Install the Grid package2. Create a Grid React component:3. Use the component in your application:\n\nHighcharts Grid with ReactTo create a Grid with React, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid React component:// GridComponent.tsximport { useEffect, useRef } from 'react';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';export default function GridComponent(props: { config: Grid.Options }) {    const { config } = props;    const containerRef = useRef<HTMLDivElement>(null);    useEffect(() => {        if (containerRef.current) {            Grid.grid(containerRef.current, config);        }    }, [config]);    return (        <div ref={containerRef} />    );}Copy3. Use the component in your application:// App.tsximport GridComponent from "./components/GridComponent";function App() {    const config: Grid.Options = {        dataTable: {            columns: {                name: ['Alice', 'Bob', 'Charlie', 'David'],                age: [23, 34, 45, 56],                city: ['New York', 'Oslo', 'Paris', 'Tokyo'],            }        }    }    return (        <div className="App">            <GridComponent config={config} />        </div>    );}export default App;CopySee the live example here.Edit this pagePrevious« Highcharts Grid with Angular NextHighcharts Grid with Vue  »1. Install the Grid package2. Create a Grid React component:3. Use the component in your application:\n\n\n\nHighcharts Grid with VueTo create a Grid with Vue, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid Vue component:// Grid.vue<script setup lang="ts">import { watch, ref } from 'vue';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';const props = defineProps(['config']);const gridContainer = ref(null);watch(gridContainer, () => {    if (gridContainer.value) {        Grid.grid(gridContainer.value, props.config);    }});</script><template>    <div ref="gridContainer"></div></template>Copy3. Use the component in your application:// App.vue<script setup lang="ts">    import Grid from './components/Grid.vue';const config: Grid.Options = {    dataTable: {        columns: {            name: ['Alice', 'Bob', 'Charlie', 'David'],            age: [23, 34, 45, 56],            city: ['New York', 'Oslo', 'Paris', 'Tokyo'],        }    }}</script><template>    <div id="app">        <Grid :config="config" />    </div></template>CopySee the live example here.\n\nHighcharts Grid with VueTo create a Grid with Vue, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid Vue component:// Grid.vue<script setup lang="ts">import { watch, ref } from 'vue';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';const props = defineProps(['config']);const gridContainer = ref(null);watch(gridContainer, () => {    if (gridContainer.value) {        Grid.grid(gridContainer.value, props.config);    }});</script><template>    <div ref="gridContainer"></div></template>Copy3. Use the component in your application:// App.vue<script setup lang="ts">    import Grid from './components/Grid.vue';const config: Grid.Options = {    dataTable: {        columns: {            name: ['Alice', 'Bob', 'Charlie', 'David'],            age: [23, 34, 45, 56],            city: ['New York', 'Oslo', 'Paris', 'Tokyo'],        }    }}</script><template>    <div id="app">        <Grid :config="config" />    </div></template>CopySee the live example here.Edit this pagePrevious« Highcharts Grid with React NextChart types  »1. Install the Grid package2. Create a Grid Vue component:3. Use the component in your application:\n\nHighcharts Grid with VueTo create a Grid with Vue, please follow the steps below:1. Install the Grid packageInstall Grid Lite package with:npm install @highcharts/grid-liteCopy2. Create a Grid Vue component:// Grid.vue<script setup lang="ts">import { watch, ref } from 'vue';import Grid from '@highcharts/grid-lite/es-modules/masters/grid-lite.src.js';import '@highcharts/grid-lite/css/grid.css';const props = defineProps(['config']);const gridContainer = ref(null);watch(gridContainer, () => {    if (gridContainer.value) {        Grid.grid(gridContainer.value, props.config);    }});</script><template>    <div ref="gridContainer"></div></template>Copy3. Use the component in your application:// App.vue<script setup lang="ts">    import Grid from './components/Grid.vue';const config: Grid.Options = {    dataTable: {        columns: {            name: ['Alice', 'Bob', 'Charlie', 'David'],            age: [23, 34, 45, 56],            city: ['New York', 'Oslo', 'Paris', 'Tokyo'],        }    }}</script><template>    <div id="app">        <Grid :config="config" />    </div></template>CopySee the live example here.Edit this pagePrevious« Highcharts Grid with React NextChart types  »1. Install the Grid package2. Create a Grid Vue component:3. Use the component in your application:\n\n\n\nChart typesHighcharts support a range of different chart types so data can be displayed in a meaningful way. Highcharts supports a long list of different chart types, among others line, spline, area, areaspline, column, bar, pie, scatter, gauge, arearange, areasplinerange and columnrange. For the full list of available chart types, see the API for Highcharts, Highcharts Stock, Highcharts Maps and Highcharts Gantt respectively.To set a default chart type use:chart: {    type: 'line'}CopySeveral chart types can also be combined in one chart using the type attribute on series to set different chart types for each series:series: [{    type: 'line'    data: []},{    type: 'column'    data: []}]CopySee Combining chart types for more information on how to combine chart types.For more information on each chart type, see the left menu.\n\nChart typesHighcharts support a range of different chart types so data can be displayed in a meaningful way. Highcharts supports a long list of different chart types, among others line, spline, area, areaspline, column, bar, pie, scatter, gauge, arearange, areasplinerange and columnrange. For the full list of available chart types, see the API for Highcharts, Highcharts Stock, Highcharts Maps and Highcharts Gantt respectively.To set a default chart type use:chart: {    type: 'line'}CopySeveral chart types can also be combined in one chart using the type attribute on series to set different chart types for each series:series: [{    type: 'line'    data: []},{    type: 'column'    data: []}]CopySee Combining chart types for more information on how to combine chart types.For more information on each chart type, see the left menu.Edit this pagePrevious« Highcharts Grid with Vue NextCombining chart types  »\n\nChart typesHighcharts support a range of different chart types so data can be displayed in a meaningful way. Highcharts supports a long list of different chart types, among others line, spline, area, areaspline, column, bar, pie, scatter, gauge, arearange, areasplinerange and columnrange. For the full list of available chart types, see the API for Highcharts, Highcharts Stock, Highcharts Maps and Highcharts Gantt respectively.To set a default chart type use:chart: {    type: 'line'}CopySeveral chart types can also be combined in one chart using the type attribute on series to set different chart types for each series:series: [{    type: 'line'    data: []},{    type: 'column'    data: []}]CopySee Combining chart types for more information on how to combine chart types.For more information on each chart type, see the left menu.Edit this pagePrevious« Highcharts Grid with Vue NextCombining chart types  »\n\n\n\nCombining chart typesTo combine several chart types in one chart you only need to create series of different types:series: [{    type: 'column',    name: 'Jane',    data: [3, 2, 1, 3, 4]}, {    type: 'column',    name: 'John',    data: [2, 3, 5, 7, 6]}, {    type: 'column',    name: 'Joe',    data: [4, 3, 3, 9, 0]}, {    type: 'spline',    name: 'Average',    data: [3, 2.67, 3, 6.33, 3.33]}]Copy\n\nCombining chart typesTo combine several chart types in one chart you only need to create series of different types:series: [{    type: 'column',    name: 'Jane',    data: [3, 2, 1, 3, 4]}, {    type: 'column',    name: 'John',    data: [2, 3, 5, 7, 6]}, {    type: 'column',    name: 'Joe',    data: [4, 3, 3, 9, 0]}, {    type: 'spline',    name: 'Average',    data: [3, 2.67, 3, 6.33, 3.33]}]CopyEdit this pagePrevious« Chart types Next3D cylinder  »\n\nCombining chart typesTo combine several chart types in one chart you only need to create series of different types:series: [{    type: 'column',    name: 'Jane',    data: [3, 2, 1, 3, 4]}, {    type: 'column',    name: 'John',    data: [2, 3, 5, 7, 6]}, {    type: 'column',    name: 'Joe',    data: [4, 3, 3, 9, 0]}, {    type: 'spline',    name: 'Average',    data: [3, 2.67, 3, 6.33, 3.33]}]CopyEdit this pagePrevious« Chart types Next3D cylinder  »\n\n\n\n3D cylinderA 3D cylinder chart is a variation of a 3D column chart and features cylindrical points.Here’re both chart types to compare:3D cylinder chart3D column chartInstallationTwo modules are required highcharts-3d.js and cylinder.js.This is a 3D-only series type, so 3D needs to be enabled.Configuration Configuration is the same as for the 3D column series type. To keep cylindrical shapes, with a circle as a base, radius of the base should get the smaller value of the point’s width and point’s depth.Use Cases{            chart: {                type: 'cylinder',                options3d: {                    enabled: true,                    alpha: 15,                    beta: 15,                    depth: 50,                    viewDistance: 25                }            },            series: [{                data: [1, 2, 3]            }]        }CopyAPI DocsCheck the following API document link to learn more about the 3D Cylinder.\n\n3D cylinderA 3D cylinder chart is a variation of a 3D column chart and features cylindrical points.Here’re both chart types to compare:3D cylinder chart3D column chartInstallationTwo modules are required highcharts-3d.js and cylinder.js.This is a 3D-only series type, so 3D needs to be enabled.Configuration Configuration is the same as for the 3D column series type. To keep cylindrical shapes, with a circle as a base, radius of the base should get the smaller value of the point’s width and point’s depth.Use Cases{            chart: {                type: 'cylinder',                options3d: {                    enabled: true,                    alpha: 15,                    beta: 15,                    depth: 50,                    viewDistance: 25                }            },            series: [{                data: [1, 2, 3]            }]        }CopyAPI DocsCheck the following API document link to learn more about the 3D Cylinder.Edit this pagePrevious« Combining chart types Next3D funnel  »InstallationConfigurationUse CasesAPI Docs\n\n3D cylinderA 3D cylinder chart is a variation of a 3D column chart and features cylindrical points.Here’re both chart types to compare:3D cylinder chart3D column chartInstallationTwo modules are required highcharts-3d.js and cylinder.js.This is a 3D-only series type, so 3D needs to be enabled.Configuration Configuration is the same as for the 3D column series type. To keep cylindrical shapes, with a circle as a base, radius of the base should get the smaller value of the point’s width and point’s depth.Use Cases{            chart: {                type: 'cylinder',                options3d: {                    enabled: true,                    alpha: 15,                    beta: 15,                    depth: 50,                    viewDistance: 25                }            },            series: [{                data: [1, 2, 3]            }]        }CopyAPI DocsCheck the following API document link to learn more about the 3D Cylinder.Edit this pagePrevious« Combining chart types Next3D funnel  »InstallationConfigurationUse CasesAPI Docs\n\n\n\n3D funnelFunnel 3D series type is the 3D variant of the Funnel Chart. Funnel Chart is mostly used to display the different stages in the sales process with having qualified leads on the top and closed deals at the bottom. A business is bound to lose a number of potential deals for each phase in the sales process, and that is why a typical funnel has a high number of leads at the top where the funnel narrows as more clients drop off. Funnel Chart is used to see how effective a sales team can turn leads into closed deals.Setting upThe Funnel 3D chart requires highcharts.js to be loaded first and after that, load successively highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js.The 3D perspective is enabled by setting options3d.enabled to true. Set the chart type or the data series type to funnel3d (API) or in series options.Configuration optionsEach segment of the 3D Funnel has a height that relates to the data point’s value. In addition, the neck's size can be set by the neckWidth and neckHeight options.The size of the funnel fills the plot area by default, but can be configured by setting the width and height properties.See the API for all other options related to the Funnel 3D Chart.\n\n3D funnelFunnel 3D series type is the 3D variant of the Funnel Chart. Funnel Chart is mostly used to display the different stages in the sales process with having qualified leads on the top and closed deals at the bottom. A business is bound to lose a number of potential deals for each phase in the sales process, and that is why a typical funnel has a high number of leads at the top where the funnel narrows as more clients drop off. Funnel Chart is used to see how effective a sales team can turn leads into closed deals.Setting upThe Funnel 3D chart requires highcharts.js to be loaded first and after that, load successively highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js.The 3D perspective is enabled by setting options3d.enabled to true. Set the chart type or the data series type to funnel3d (API) or in series options.Configuration optionsEach segment of the 3D Funnel has a height that relates to the data point’s value. In addition, the neck's size can be set by the neckWidth and neckHeight options.The size of the funnel fills the plot area by default, but can be configured by setting the width and height properties.See the API for all other options related to the Funnel 3D Chart.Edit this pagePrevious« 3D cylinder Next3D pyramid  »Setting upConfiguration options\n\n3D funnelFunnel 3D series type is the 3D variant of the Funnel Chart. Funnel Chart is mostly used to display the different stages in the sales process with having qualified leads on the top and closed deals at the bottom. A business is bound to lose a number of potential deals for each phase in the sales process, and that is why a typical funnel has a high number of leads at the top where the funnel narrows as more clients drop off. Funnel Chart is used to see how effective a sales team can turn leads into closed deals.Setting upThe Funnel 3D chart requires highcharts.js to be loaded first and after that, load successively highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js.The 3D perspective is enabled by setting options3d.enabled to true. Set the chart type or the data series type to funnel3d (API) or in series options.Configuration optionsEach segment of the 3D Funnel has a height that relates to the data point’s value. In addition, the neck's size can be set by the neckWidth and neckHeight options.The size of the funnel fills the plot area by default, but can be configured by setting the width and height properties.See the API for all other options related to the Funnel 3D Chart.Edit this pagePrevious« 3D cylinder Next3D pyramid  »Setting upConfiguration options\n\n\n\n3D pyramidPyramid 3D series type is a 3D variant of the Pyramid Chart. It represents data in the same way as a Funnel Chart but reversed and without a neck width and neck height. Use this chart type for displaying percentage ratio or for visualizing volumes in different phases.Setting upPyramid 3D is part of the Highcharts library. Load first highcharts.js and then sequentially the following files: highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js, and modules/pyramid3d.js.The 3D perspective will be enabled by setting options3d.enabled to true.Series type could be set on chart level or in series options.Configuration optionsEach segment of the 3d pyramid has a height that relates to the data point’s value. The size of the pyramid fills the plot area by default but can be configured by setting the width and height properties.See the API for all other options related to the Pyramid 3d Chart.\n\n3D pyramidPyramid 3D series type is a 3D variant of the Pyramid Chart. It represents data in the same way as a Funnel Chart but reversed and without a neck width and neck height. Use this chart type for displaying percentage ratio or for visualizing volumes in different phases.Setting upPyramid 3D is part of the Highcharts library. Load first highcharts.js and then sequentially the following files: highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js, and modules/pyramid3d.js.The 3D perspective will be enabled by setting options3d.enabled to true.Series type could be set on chart level or in series options.Configuration optionsEach segment of the 3d pyramid has a height that relates to the data point’s value. The size of the pyramid fills the plot area by default but can be configured by setting the width and height properties.See the API for all other options related to the Pyramid 3d Chart.Edit this pagePrevious« 3D funnel NextAngular gauges  »Setting upConfiguration options\n\n3D pyramidPyramid 3D series type is a 3D variant of the Pyramid Chart. It represents data in the same way as a Funnel Chart but reversed and without a neck width and neck height. Use this chart type for displaying percentage ratio or for visualizing volumes in different phases.Setting upPyramid 3D is part of the Highcharts library. Load first highcharts.js and then sequentially the following files: highcharts-3d.js, modules/cylinder.js, modules/funnel3d.js, and modules/pyramid3d.js.The 3D perspective will be enabled by setting options3d.enabled to true.Series type could be set on chart level or in series options.Configuration optionsEach segment of the 3d pyramid has a height that relates to the data point’s value. The size of the pyramid fills the plot area by default but can be configured by setting the width and height properties.See the API for all other options related to the Pyramid 3d Chart.Edit this pagePrevious« 3D funnel NextAngular gauges  »Setting upConfiguration options\n\n\n\nAngular gaugesAngular gauges are also known as dials or speedometer-like widgets, and provide a great visualisation for dashboards. Like with polar charts, we extended the already existing series/points/axis model, and implemented the gauges as a new series type with one value axis, the yAxis. Which means that everything you learned about working dynamically and statically with other Highcharts series types, also applies to the angular gauges. One thing that is important to notice is that gauges have no x-axis. The x-axis in a gauge is completely stripped for functionality and operations on this axis, it will not be drawn on the chart.To create an Angular gauge set chart.type to "gauge":chart: {    type: 'gauge'}CopyNormally there is only one point in a gauge series, but it also handles multiple point, like in our clock example with three dials. You can add as many background elements as you like to the gauge, allowing you to style it all the way from the minimal default design to heavy, 3D like works of art with shadows and reflections created with linear and radial gradients.Solid gaugesSince Highcharts 4, we also provide a second type of gauges, the solidgauge. It is similar to the gauge series, but has a solid color displaying the value, and responds to color setting on the Y axis, similar to the colorAxis of a map. Read more in the API.Gauge examplesSimple gauge with rounded plot bandsSpeedometer with dual axesThe Highcharts ClockVU meter\n\nAngular gaugesAngular gauges are also known as dials or speedometer-like widgets, and provide a great visualisation for dashboards. Like with polar charts, we extended the already existing series/points/axis model, and implemented the gauges as a new series type with one value axis, the yAxis. Which means that everything you learned about working dynamically and statically with other Highcharts series types, also applies to the angular gauges. One thing that is important to notice is that gauges have no x-axis. The x-axis in a gauge is completely stripped for functionality and operations on this axis, it will not be drawn on the chart.To create an Angular gauge set chart.type to "gauge":chart: {    type: 'gauge'}CopyNormally there is only one point in a gauge series, but it also handles multiple point, like in our clock example with three dials. You can add as many background elements as you like to the gauge, allowing you to style it all the way from the minimal default design to heavy, 3D like works of art with shadows and reflections created with linear and radial gradients.Solid gaugesSince Highcharts 4, we also provide a second type of gauges, the solidgauge. It is similar to the gauge series, but has a solid color displaying the value, and responds to color setting on the Y axis, similar to the colorAxis of a map. Read more in the API.Gauge examplesSimple gauge with rounded plot bandsSpeedometer with dual axesThe Highcharts ClockVU meterEdit this pagePrevious« 3D pyramid NextArc diagram  »Solid gaugesGauge examples\n\nAngular gaugesAngular gauges are also known as dials or speedometer-like widgets, and provide a great visualisation for dashboards. Like with polar charts, we extended the already existing series/points/axis model, and implemented the gauges as a new series type with one value axis, the yAxis. Which means that everything you learned about working dynamically and statically with other Highcharts series types, also applies to the angular gauges. One thing that is important to notice is that gauges have no x-axis. The x-axis in a gauge is completely stripped for functionality and operations on this axis, it will not be drawn on the chart.To create an Angular gauge set chart.type to "gauge":chart: {    type: 'gauge'}CopyNormally there is only one point in a gauge series, but it also handles multiple point, like in our clock example with three dials. You can add as many background elements as you like to the gauge, allowing you to style it all the way from the minimal default design to heavy, 3D like works of art with shadows and reflections created with linear and radial gradients.Solid gaugesSince Highcharts 4, we also provide a second type of gauges, the solidgauge. It is similar to the gauge series, but has a solid color displaying the value, and responds to color setting on the Y axis, similar to the colorAxis of a map. Read more in the API.Gauge examplesSimple gauge with rounded plot bandsSpeedometer with dual axesThe Highcharts ClockVU meterEdit this pagePrevious« 3D pyramid NextArc diagram  »Solid gaugesGauge examples\n\n\n\nArc diagramThe arc-diagram chart visualizes relations and their strength between nodes of a data set. In order to use it, you need to load the modules/arc-diagram.js module.Data structureNotice the structure of the keys feature that links the nodes using the keyword from and to, and weight to represent the volume of the connection: keys: ['from', 'to', 'weight']. Arc diagram-specific options such as linkWeight and centeredLinks are also shown in this snippet:series: [{        keys: ['from', 'to', 'weight'],        type: 'arcdiagram',        name: 'Flights',        linkWeight: 1,        centeredLinks: true,        data: [            ['Bergen', 'Cracow', 1],            ['Cracow', 'Frankfurt', 2],            ['Bergen', 'Frankfurt', 1],            ['Cracow', 'Chicago', 1]        ]    }]CopyUsing the marker option, we can shape the symbol of our data nodes. An example of such a configuration with the necessary options can be found in the demo below:Another important feature to mention is the ability to rotate the chart with the inverted and reversed options:For more detailed samples and documentation check the API reference.\n\nArc diagramThe arc-diagram chart visualizes relations and their strength between nodes of a data set. In order to use it, you need to load the modules/arc-diagram.js module.Data structureNotice the structure of the keys feature that links the nodes using the keyword from and to, and weight to represent the volume of the connection: keys: ['from', 'to', 'weight']. Arc diagram-specific options such as linkWeight and centeredLinks are also shown in this snippet:series: [{        keys: ['from', 'to', 'weight'],        type: 'arcdiagram',        name: 'Flights',        linkWeight: 1,        centeredLinks: true,        data: [            ['Bergen', 'Cracow', 1],            ['Cracow', 'Frankfurt', 2],            ['Bergen', 'Frankfurt', 1],            ['Cracow', 'Chicago', 1]        ]    }]CopyUsing the marker option, we can shape the symbol of our data nodes. An example of such a configuration with the necessary options can be found in the demo below:Another important feature to mention is the ability to rotate the chart with the inverted and reversed options:For more detailed samples and documentation check the API reference.Edit this pagePrevious« Angular gauges NextArea chart  »Data structure\n\nArc diagramThe arc-diagram chart visualizes relations and their strength between nodes of a data set. In order to use it, you need to load the modules/arc-diagram.js module.Data structureNotice the structure of the keys feature that links the nodes using the keyword from and to, and weight to represent the volume of the connection: keys: ['from', 'to', 'weight']. Arc diagram-specific options such as linkWeight and centeredLinks are also shown in this snippet:series: [{        keys: ['from', 'to', 'weight'],        type: 'arcdiagram',        name: 'Flights',        linkWeight: 1,        centeredLinks: true,        data: [            ['Bergen', 'Cracow', 1],            ['Cracow', 'Frankfurt', 2],            ['Bergen', 'Frankfurt', 1],            ['Cracow', 'Chicago', 1]        ]    }]CopyUsing the marker option, we can shape the symbol of our data nodes. An example of such a configuration with the necessary options can be found in the demo below:Another important feature to mention is the ability to rotate the chart with the inverted and reversed options:For more detailed samples and documentation check the API reference.Edit this pagePrevious« Angular gauges NextArea chart  »Data structure\n\n\n\nArea chartThe area chart functions the same way as a line chart only it fills the area between the line and the threshold, which is 0 by default.For an overview of the area chart options see the API reference.\n\nArea chartThe area chart functions the same way as a line chart only it fills the area between the line and the threshold, which is 0 by default.For an overview of the area chart options see the API reference.Edit this pagePrevious« Arc diagram NextAreaspline chart  »\n\nArea chartThe area chart functions the same way as a line chart only it fills the area between the line and the threshold, which is 0 by default.For an overview of the area chart options see the API reference.Edit this pagePrevious« Arc diagram NextAreaspline chart  »\n\n\n\nAreaspline chartThe areaspline chart is the same as area, only the line is a spline instead of straight lines.For an overview of the areaspline chart options see the API reference.\n\nAreaspline chartThe areaspline chart is the same as area, only the line is a spline instead of straight lines.For an overview of the areaspline chart options see the API reference.Edit this pagePrevious« Area chart NextBar chart  »\n\nAreaspline chartThe areaspline chart is the same as area, only the line is a spline instead of straight lines.For an overview of the areaspline chart options see the API reference.Edit this pagePrevious« Area chart NextBar chart  »\n\n\n\nBar chartThe bar chart is exactly the same as a column chart only the x-axis and y-axis are switched.The bar chart have the same options as a series. For an overview of the bar chart options see the API referenceTrellis chartThe bar chart can be used as a trellis chart by drawing several bar charts in a grid. Here is an example using a HTML table with four bar charts:The example can be found at https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/series-bar/trellis.\n\nBar chartThe bar chart is exactly the same as a column chart only the x-axis and y-axis are switched.The bar chart have the same options as a series. For an overview of the bar chart options see the API referenceTrellis chartThe bar chart can be used as a trellis chart by drawing several bar charts in a grid. Here is an example using a HTML table with four bar charts:The example can be found at https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/series-bar/trellis.Edit this pagePrevious« Areaspline chart NextBell curve  »Trellis chart\n\nBar chartThe bar chart is exactly the same as a column chart only the x-axis and y-axis are switched.The bar chart have the same options as a series. For an overview of the bar chart options see the API referenceTrellis chartThe bar chart can be used as a trellis chart by drawing several bar charts in a grid. Here is an example using a HTML table with four bar charts:The example can be found at https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/series-bar/trellis.Edit this pagePrevious« Areaspline chart NextBell curve  »Trellis chart\n\n\n\nBell curveA bell curve series is a graphical representation of a normal (Gaussian) probability distribution. Bell curve is used to visualize the probability of occurring outcomes. The curve is bell-shaped, and its center top point is the mean of the base data.For more detailed samples and documentation check the API.Click here to check the code.How to create a Bell CurveThe bell curve requires the following module modules/histogram-bellcurve.js.The bell curve series is an areaspline series with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create a bell curve:Set the series type to bellcurve.Set baseSeries to the right data series’ id or index.series: [{    type: 'bellcurve',    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopySetting the Bell CurveA bell curve series has two additional options:intervals: to control the length of the curve.pointsInInterval: to control the number of points within one interval, i.e., the number of points between σn and σn+1.The following demo visualizes four intervals for each side of the bell curve, and five points between each Nxσ:series: [{    type: 'bellcurve',    intervals: 4,    pointsInInterval: 5    ...}]CopyClick here to check the code.The black markers indicate the borders of the intervals - four intervals for each side of the curve. Within one interval there are four markers plus the border black marker. On the left side intervals are left-closed, on the right side right-closed. The interval length is the bell curve’s standard deviation.Additionally, there is one point at the top which is the mean of the bell curve.\n\nBell curveA bell curve series is a graphical representation of a normal (Gaussian) probability distribution. Bell curve is used to visualize the probability of occurring outcomes. The curve is bell-shaped, and its center top point is the mean of the base data.For more detailed samples and documentation check the API.Click here to check the code.How to create a Bell CurveThe bell curve requires the following module modules/histogram-bellcurve.js.The bell curve series is an areaspline series with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create a bell curve:Set the series type to bellcurve.Set baseSeries to the right data series’ id or index.series: [{    type: 'bellcurve',    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopySetting the Bell CurveA bell curve series has two additional options:intervals: to control the length of the curve.pointsInInterval: to control the number of points within one interval, i.e., the number of points between σn and σn+1.The following demo visualizes four intervals for each side of the bell curve, and five points between each Nxσ:series: [{    type: 'bellcurve',    intervals: 4,    pointsInInterval: 5    ...}]CopyClick here to check the code.The black markers indicate the borders of the intervals - four intervals for each side of the curve. Within one interval there are four markers plus the border black marker. On the left side intervals are left-closed, on the right side right-closed. The interval length is the bell curve’s standard deviation.Additionally, there is one point at the top which is the mean of the bell curve.Edit this pagePrevious« Bar chart NextBox plot series  »How to create a Bell CurveSetting the Bell Curve\n\nBell curveA bell curve series is a graphical representation of a normal (Gaussian) probability distribution. Bell curve is used to visualize the probability of occurring outcomes. The curve is bell-shaped, and its center top point is the mean of the base data.For more detailed samples and documentation check the API.Click here to check the code.How to create a Bell CurveThe bell curve requires the following module modules/histogram-bellcurve.js.The bell curve series is an areaspline series with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create a bell curve:Set the series type to bellcurve.Set baseSeries to the right data series’ id or index.series: [{    type: 'bellcurve',    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopySetting the Bell CurveA bell curve series has two additional options:intervals: to control the length of the curve.pointsInInterval: to control the number of points within one interval, i.e., the number of points between σn and σn+1.The following demo visualizes four intervals for each side of the bell curve, and five points between each Nxσ:series: [{    type: 'bellcurve',    intervals: 4,    pointsInInterval: 5    ...}]CopyClick here to check the code.The black markers indicate the borders of the intervals - four intervals for each side of the curve. Within one interval there are four markers plus the border black marker. On the left side intervals are left-closed, on the right side right-closed. The interval length is the bell curve’s standard deviation.Additionally, there is one point at the top which is the mean of the bell curve.Edit this pagePrevious« Bar chart NextBox plot series  »How to create a Bell CurveSetting the Bell Curve\n\n\n\nBox plot seriesA box plot is a convenient way of depicting groups of data through their five-number summaries: the smallest observation (sample minimum), lower quartile (Q1), median (Q2), upper quartile (Q3), and largest observation (sample maximum). Combined with a scatter series, the box plot may also indicate which observations, if any, might be considered outliers.Data formatEach point in a box plot has five values: low, q1, median, q3 and high. Highcharts recognizes three ways of defining a point:Object literal. The X value is optional.{ x: Date.UTC(2013, 1, 7), low: 0, q1: 1, median: 2, q3: 3, high: 4 }Array of 5 values. The X value is inferred.[0, 1, 2, 3, 4]Array of 6 values. The X value is the first position.[Date.UTC(2013, 1, 7), 0, 1, 2, 3, 4]Styling the boxesThe different parts of the box anatomy can be styled individually. The stem, whiskers and median have their own options for line width, color and dash style, while the box itself is subject to the color, lineWidth and fillColor options. See plotOptions.boxplot for a full reference, and the box plot styling sample for a demonstration.\n\nBox plot seriesA box plot is a convenient way of depicting groups of data through their five-number summaries: the smallest observation (sample minimum), lower quartile (Q1), median (Q2), upper quartile (Q3), and largest observation (sample maximum). Combined with a scatter series, the box plot may also indicate which observations, if any, might be considered outliers.Data formatEach point in a box plot has five values: low, q1, median, q3 and high. Highcharts recognizes three ways of defining a point:Object literal. The X value is optional.{ x: Date.UTC(2013, 1, 7), low: 0, q1: 1, median: 2, q3: 3, high: 4 }Array of 5 values. The X value is inferred.[0, 1, 2, 3, 4]Array of 6 values. The X value is the first position.[Date.UTC(2013, 1, 7), 0, 1, 2, 3, 4]Styling the boxesThe different parts of the box anatomy can be styled individually. The stem, whiskers and median have their own options for line width, color and dash style, while the box itself is subject to the color, lineWidth and fillColor options. See plotOptions.boxplot for a full reference, and the box plot styling sample for a demonstration.Edit this pagePrevious« Bell curve NextBubble series  »Data formatStyling the boxes\n\nBox plot seriesA box plot is a convenient way of depicting groups of data through their five-number summaries: the smallest observation (sample minimum), lower quartile (Q1), median (Q2), upper quartile (Q3), and largest observation (sample maximum). Combined with a scatter series, the box plot may also indicate which observations, if any, might be considered outliers.Data formatEach point in a box plot has five values: low, q1, median, q3 and high. Highcharts recognizes three ways of defining a point:Object literal. The X value is optional.{ x: Date.UTC(2013, 1, 7), low: 0, q1: 1, median: 2, q3: 3, high: 4 }Array of 5 values. The X value is inferred.[0, 1, 2, 3, 4]Array of 6 values. The X value is the first position.[Date.UTC(2013, 1, 7), 0, 1, 2, 3, 4]Styling the boxesThe different parts of the box anatomy can be styled individually. The stem, whiskers and median have their own options for line width, color and dash style, while the box itself is subject to the color, lineWidth and fillColor options. See plotOptions.boxplot for a full reference, and the box plot styling sample for a demonstration.Edit this pagePrevious« Bell curve NextBubble series  »Data formatStyling the boxes\n\n\n\nBubble seriesA bubble series renders bubbles, which radius are proportional to a z value, on given x and y positions. It is an extended form of a scatter series.Bubble series featuresLike the scatter series, the bubble series also accepts data points with x and y values. But in addition, it accepts the third dimension, z, that dictates the size of the bubble. There are two modes for how the size is calculated. When sizeBy is area, the z value is proportional to the area, and when set to width, it is proportional to the diameter.Bubble sizesThe actual size of the bubbles is also controlled by other options:The minSize and maxSize options determine the size span of the rendered bubbles. They can be set as percentages (of the chart area) or as absolute pixel values.The zMin and zMax options determine how the sizes should be computed relative to the actual z value.The sizeByAbsoluteValue determine how the size should handle crossing of the zThreshold, usually the zero plane.Bubble LegendBubble series supports a special type of representation in the legend through the bubble legend module.Symbols and shapesIn addition to the default circle shape that has given name to the bubble series, other symbols can also be used. The symbols can be predefined shapes, or images loaded by a URL.Color axisWhile the bubble series by default renders three dimensional data through the x, y and z options, it is also add a fourth dimension through a custom color key. The default color key for the bubble series is z, but that can be changed to for example colorValue. In that case, a series configuration may look like this:series: [{    colorKey: 'colorValue',    data: [{        x: 0,        y: 81,        z: 63,        colorValue: 4    }, {        x: 98,        y: 5,        z: 89,        colorValue: 32    }, {        x: 51,        y: 50,        z: 73,        colorValue: 9    }]}]CopyIn the following example, a color axis is added and the x value is used for color key.API ReferenceFor an overview of the bubble series options see the API reference.\n\nBubble seriesA bubble series renders bubbles, which radius are proportional to a z value, on given x and y positions. It is an extended form of a scatter series.Bubble series featuresLike the scatter series, the bubble series also accepts data points with x and y values. But in addition, it accepts the third dimension, z, that dictates the size of the bubble. There are two modes for how the size is calculated. When sizeBy is area, the z value is proportional to the area, and when set to width, it is proportional to the diameter.Bubble sizesThe actual size of the bubbles is also controlled by other options:The minSize and maxSize options determine the size span of the rendered bubbles. They can be set as percentages (of the chart area) or as absolute pixel values.The zMin and zMax options determine how the sizes should be computed relative to the actual z value.The sizeByAbsoluteValue determine how the size should handle crossing of the zThreshold, usually the zero plane.Bubble LegendBubble series supports a special type of representation in the legend through the bubble legend module.Symbols and shapesIn addition to the default circle shape that has given name to the bubble series, other symbols can also be used. The symbols can be predefined shapes, or images loaded by a URL.Color axisWhile the bubble series by default renders three dimensional data through the x, y and z options, it is also add a fourth dimension through a custom color key. The default color key for the bubble series is z, but that can be changed to for example colorValue. In that case, a series configuration may look like this:series: [{    colorKey: 'colorValue',    data: [{        x: 0,        y: 81,        z: 63,        colorValue: 4    }, {        x: 98,        y: 5,        z: 89,        colorValue: 32    }, {        x: 51,        y: 50,        z: 73,        colorValue: 9    }]}]CopyIn the following example, a color axis is added and the x value is used for color key.API ReferenceFor an overview of the bubble series options see the API reference.Edit this pagePrevious« Box plot series NextBullet chart  »Bubble series featuresBubble sizesBubble LegendSymbols and shapesColor axisAPI Reference\n\nBubble seriesA bubble series renders bubbles, which radius are proportional to a z value, on given x and y positions. It is an extended form of a scatter series.Bubble series featuresLike the scatter series, the bubble series also accepts data points with x and y values. But in addition, it accepts the third dimension, z, that dictates the size of the bubble. There are two modes for how the size is calculated. When sizeBy is area, the z value is proportional to the area, and when set to width, it is proportional to the diameter.Bubble sizesThe actual size of the bubbles is also controlled by other options:The minSize and maxSize options determine the size span of the rendered bubbles. They can be set as percentages (of the chart area) or as absolute pixel values.The zMin and zMax options determine how the sizes should be computed relative to the actual z value.The sizeByAbsoluteValue determine how the size should handle crossing of the zThreshold, usually the zero plane.Bubble LegendBubble series supports a special type of representation in the legend through the bubble legend module.Symbols and shapesIn addition to the default circle shape that has given name to the bubble series, other symbols can also be used. The symbols can be predefined shapes, or images loaded by a URL.Color axisWhile the bubble series by default renders three dimensional data through the x, y and z options, it is also add a fourth dimension through a custom color key. The default color key for the bubble series is z, but that can be changed to for example colorValue. In that case, a series configuration may look like this:series: [{    colorKey: 'colorValue',    data: [{        x: 0,        y: 81,        z: 63,        colorValue: 4    }, {        x: 98,        y: 5,        z: 89,        colorValue: 32    }, {        x: 51,        y: 50,        z: 73,        colorValue: 9    }]}]CopyIn the following example, a color axis is added and the x value is used for color key.API ReferenceFor an overview of the bubble series options see the API reference.Edit this pagePrevious« Box plot series NextBullet chart  »Bubble series featuresBubble sizesBubble LegendSymbols and shapesColor axisAPI Reference\n\n\n\nBullet chartA bullet graph is a variation of a bar graph. The bullet series features a single measure, compares it to a target, and displays it in the context of qualitative ranges of performance, that could be set using plotBands on yAxis.For more detailed samples and documentation check the API.Click here to check the code.How to create a bullet chartBullet series requires the following module “modules/bullet.js”.To create a bullet series, add the following configuration in the series option:{    type : 'bullet',    data : [{        y : 20,     // The value of a point        target: 50  // The target value of a point     }],    targetOptions: { // Options related with look and position of targets         width: '140%',        // The width of the target         height: 3,            // The height of the target         borderWidth: 0,       // The border width of the target         borderColor: 'black', // The border color of the target         color: 'black'        // The color of the target     }}CopyThe targetOptions could be set for each point to create individual target options. On point level and even on series level the targetOptions are optional - default options will be set. The default options values can be found in the API reference.\n\nBullet chartA bullet graph is a variation of a bar graph. The bullet series features a single measure, compares it to a target, and displays it in the context of qualitative ranges of performance, that could be set using plotBands on yAxis.For more detailed samples and documentation check the API.Click here to check the code.How to create a bullet chartBullet series requires the following module “modules/bullet.js”.To create a bullet series, add the following configuration in the series option:{    type : 'bullet',    data : [{        y : 20,     // The value of a point        target: 50  // The target value of a point     }],    targetOptions: { // Options related with look and position of targets         width: '140%',        // The width of the target         height: 3,            // The height of the target         borderWidth: 0,       // The border width of the target         borderColor: 'black', // The border color of the target         color: 'black'        // The color of the target     }}CopyThe targetOptions could be set for each point to create individual target options. On point level and even on series level the targetOptions are optional - default options will be set. The default options values can be found in the API reference.Edit this pagePrevious« Bubble series NextColumn chart  »How to create a bullet chart\n\nBullet chartA bullet graph is a variation of a bar graph. The bullet series features a single measure, compares it to a target, and displays it in the context of qualitative ranges of performance, that could be set using plotBands on yAxis.For more detailed samples and documentation check the API.Click here to check the code.How to create a bullet chartBullet series requires the following module “modules/bullet.js”.To create a bullet series, add the following configuration in the series option:{    type : 'bullet',    data : [{        y : 20,     // The value of a point        target: 50  // The target value of a point     }],    targetOptions: { // Options related with look and position of targets         width: '140%',        // The width of the target         height: 3,            // The height of the target         borderWidth: 0,       // The border width of the target         borderColor: 'black', // The border color of the target         color: 'black'        // The color of the target     }}CopyThe targetOptions could be set for each point to create individual target options. On point level and even on series level the targetOptions are optional - default options will be set. The default options values can be found in the API reference.Edit this pagePrevious« Bubble series NextColumn chart  »How to create a bullet chart\n\n\n\nColumn chartColumn charts display data as vertical bars. A feature of column charts allows for different data to be compared alongside one another.
It is similar to bar charts, the difference being that bar charts have a horizontal representation of the data.The column chart has the same options as a series. For an overview of the column chart options see the API reference.HistogramColumn charts can be used to make histogram charts by setting the padding between points and groups to 0.plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}CopyNote that borderWidth and shadows are also turned off in the example so the columns do not overlap.Stacked Column chartAn essential feature of column charts is to represent data as stacked columns. Read more about stacking charts.\n\nColumn chartColumn charts display data as vertical bars. A feature of column charts allows for different data to be compared alongside one another.
It is similar to bar charts, the difference being that bar charts have a horizontal representation of the data.The column chart has the same options as a series. For an overview of the column chart options see the API reference.HistogramColumn charts can be used to make histogram charts by setting the padding between points and groups to 0.plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}CopyNote that borderWidth and shadows are also turned off in the example so the columns do not overlap.Stacked Column chartAn essential feature of column charts is to represent data as stacked columns. Read more about stacking charts.Edit this pagePrevious« Bullet chart NextColumn pyramid  »HistogramStacked Column chart\n\nColumn chartColumn charts display data as vertical bars. A feature of column charts allows for different data to be compared alongside one another.
It is similar to bar charts, the difference being that bar charts have a horizontal representation of the data.The column chart has the same options as a series. For an overview of the column chart options see the API reference.HistogramColumn charts can be used to make histogram charts by setting the padding between points and groups to 0.plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}CopyNote that borderWidth and shadows are also turned off in the example so the columns do not overlap.Stacked Column chartAn essential feature of column charts is to represent data as stacked columns. Read more about stacking charts.Edit this pagePrevious« Bullet chart NextColumn pyramid  »HistogramStacked Column chart\n\n\n\nColumn pyramidA column pyramid chart, like the column chart, is often used to visualize comparisons of data sets with discrete data, where the focus is on the values instead of categories as people read from left to right. This demo visualizes comparisons of the height of five pyramids.Adapt the x axis to the right if the audience read from right to left, for instance, an audience from the middle east.Here is a demo using a column pyramid series to display one pyramid per value along an X axis.Other demos:Stacked column pyramidInverted column pyramidInstallationRequires highcharts-more.js.To display horizontal pyramids, set chart.inverted to true.ConfigurationThe code of columnpyramid is very simple to set, like the bar chart, as many features are already set by default such as the responsiveness, tooltip, colors, legends, etc.Use Cases{    chart: {        type: 'columnpyramid'    },    series: [{        data: [138.8, 136.4, 104, 101.1, 75]    }]}CopyAPI DocsCheck the following API document link to learn more about the column pyramid.\n\nColumn pyramidA column pyramid chart, like the column chart, is often used to visualize comparisons of data sets with discrete data, where the focus is on the values instead of categories as people read from left to right. This demo visualizes comparisons of the height of five pyramids.Adapt the x axis to the right if the audience read from right to left, for instance, an audience from the middle east.Here is a demo using a column pyramid series to display one pyramid per value along an X axis.Other demos:Stacked column pyramidInverted column pyramidInstallationRequires highcharts-more.js.To display horizontal pyramids, set chart.inverted to true.ConfigurationThe code of columnpyramid is very simple to set, like the bar chart, as many features are already set by default such as the responsiveness, tooltip, colors, legends, etc.Use Cases{    chart: {        type: 'columnpyramid'    },    series: [{        data: [138.8, 136.4, 104, 101.1, 75]    }]}CopyAPI DocsCheck the following API document link to learn more about the column pyramid.Edit this pagePrevious« Column chart NextDependency wheel  »Other demos:InstallationConfigurationAPI Docs\n\nColumn pyramidA column pyramid chart, like the column chart, is often used to visualize comparisons of data sets with discrete data, where the focus is on the values instead of categories as people read from left to right. This demo visualizes comparisons of the height of five pyramids.Adapt the x axis to the right if the audience read from right to left, for instance, an audience from the middle east.Here is a demo using a column pyramid series to display one pyramid per value along an X axis.Other demos:Stacked column pyramidInverted column pyramidInstallationRequires highcharts-more.js.To display horizontal pyramids, set chart.inverted to true.ConfigurationThe code of columnpyramid is very simple to set, like the bar chart, as many features are already set by default such as the responsiveness, tooltip, colors, legends, etc.Use Cases{    chart: {        type: 'columnpyramid'    },    series: [{        data: [138.8, 136.4, 104, 101.1, 75]    }]}CopyAPI DocsCheck the following API document link to learn more about the column pyramid.Edit this pagePrevious« Column chart NextDependency wheel  »Other demos:InstallationConfigurationAPI Docs\n\n\n\nDependency wheelA dependency wheel is a type of flow diagram, where nodes are laid out in a circle, and links are drawn between them. This width of the link and size of the nodes are proportional to the flow quantity or weight of each link.The dependency wheel's use areas are similar to the Sankey diagram, but while the Sankey diagram supports multiple columns, and there is a clear direction of flow, the dependency wheel's nodes are laid out on the same level, indicating that the flow is multidirectional.For more detailed samples and documentation, check the API.The data structure, as well as the concept of nodes and links, is identical to those of the Sankey diagram.\n\nDependency wheelA dependency wheel is a type of flow diagram, where nodes are laid out in a circle, and links are drawn between them. This width of the link and size of the nodes are proportional to the flow quantity or weight of each link.The dependency wheel's use areas are similar to the Sankey diagram, but while the Sankey diagram supports multiple columns, and there is a clear direction of flow, the dependency wheel's nodes are laid out on the same level, indicating that the flow is multidirectional.For more detailed samples and documentation, check the API.The data structure, as well as the concept of nodes and links, is identical to those of the Sankey diagram.Edit this pagePrevious« Column pyramid NextDumbbell chart  »\n\nDependency wheelA dependency wheel is a type of flow diagram, where nodes are laid out in a circle, and links are drawn between them. This width of the link and size of the nodes are proportional to the flow quantity or weight of each link.The dependency wheel's use areas are similar to the Sankey diagram, but while the Sankey diagram supports multiple columns, and there is a clear direction of flow, the dependency wheel's nodes are laid out on the same level, indicating that the flow is multidirectional.For more detailed samples and documentation, check the API.The data structure, as well as the concept of nodes and links, is identical to those of the Sankey diagram.Edit this pagePrevious« Column pyramid NextDumbbell chart  »\n\n\n\nDumbbell chartA dumbbell plot can be used to visualize two different values in time, or to show the difference between two different groups or viewpoints (e.g., one dot for male and another dot for female).The dumbbell is a variant of the lollipop plot.Getting startedDumbbell series requires loading the Highcharts and both highcharts-more
and dumbbell.js modules.Here is an example for loading dumbbell modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script>CopyThe demo below represents a change in life expectancy between 1960 and 2018.Configuring optionsThe dot can be customized by:marker series.marker - marker options for the upper dot.lowMarker series.lowMarker - marker options for the lower dot.The demo below represents using of upper and lower markers in a dumbbell chart.Alternatively, the color of the dot can be changed via:fillColor series.marker.fillColor - color for the upper dot.lowColor series.lowColor - color for the lower dot.The upper color of the dot and connector can changed via:color series.colorThe connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.\n\nDumbbell chartA dumbbell plot can be used to visualize two different values in time, or to show the difference between two different groups or viewpoints (e.g., one dot for male and another dot for female).The dumbbell is a variant of the lollipop plot.Getting startedDumbbell series requires loading the Highcharts and both highcharts-more
and dumbbell.js modules.Here is an example for loading dumbbell modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script>CopyThe demo below represents a change in life expectancy between 1960 and 2018.Configuring optionsThe dot can be customized by:marker series.marker - marker options for the upper dot.lowMarker series.lowMarker - marker options for the lower dot.The demo below represents using of upper and lower markers in a dumbbell chart.Alternatively, the color of the dot can be changed via:fillColor series.marker.fillColor - color for the upper dot.lowColor series.lowColor - color for the lower dot.The upper color of the dot and connector can changed via:color series.colorThe connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.Edit this pagePrevious« Dependency wheel NextError bar series  »Getting startedConfiguring options\n\nDumbbell chartA dumbbell plot can be used to visualize two different values in time, or to show the difference between two different groups or viewpoints (e.g., one dot for male and another dot for female).The dumbbell is a variant of the lollipop plot.Getting startedDumbbell series requires loading the Highcharts and both highcharts-more
and dumbbell.js modules.Here is an example for loading dumbbell modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script>CopyThe demo below represents a change in life expectancy between 1960 and 2018.Configuring optionsThe dot can be customized by:marker series.marker - marker options for the upper dot.lowMarker series.lowMarker - marker options for the lower dot.The demo below represents using of upper and lower markers in a dumbbell chart.Alternatively, the color of the dot can be changed via:fillColor series.marker.fillColor - color for the upper dot.lowColor series.lowColor - color for the lower dot.The upper color of the dot and connector can changed via:color series.colorThe connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.Edit this pagePrevious« Dependency wheel NextError bar series  »Getting startedConfiguring options\n\n\n\nError bar seriesError bars are a graphical representation of the variability of data and are used on graphs to indicate the error, or uncertainty in a reported measurement. Setting up the error bar seriesIn Highcharts, an error bar series is defined by setting the type to errorbar. An error bar series relates to a parent series through the option linkedTo. By default, the linkedTo option is ":previous", which means that the error bar series by default relates to the series defined before it in the source code. To use another series, the linkedTo option relates to the id option of the parent series.series: [{    name: 'Rainfall',    color: '#4572A7',    type: 'column',    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]}, {    name: 'Rainfall error',    type: 'errorbar',    data: [[48, 51], [68, 73], [92, 110], [128, 136], [140, 150], [171, 179], [135, 143], [142, 149], [204, 220], [189, 199], [95, 110], [52, 56]]}]CopyStyling the error barsThe different parts of the error bar anatomy can be styled individually. In a non-inverted chart, the stem is the vertical bar in the center, while the whiskers are the top and bottom lines marking the values. The lineWidth option sets the line thickness globally. The whiskerWidth and stemWidth options sets the width of the whiskers and the stem individually. For the full set of options, see plotOptions.errorbar.\n\nError bar seriesError bars are a graphical representation of the variability of data and are used on graphs to indicate the error, or uncertainty in a reported measurement. Setting up the error bar seriesIn Highcharts, an error bar series is defined by setting the type to errorbar. An error bar series relates to a parent series through the option linkedTo. By default, the linkedTo option is ":previous", which means that the error bar series by default relates to the series defined before it in the source code. To use another series, the linkedTo option relates to the id option of the parent series.series: [{    name: 'Rainfall',    color: '#4572A7',    type: 'column',    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]}, {    name: 'Rainfall error',    type: 'errorbar',    data: [[48, 51], [68, 73], [92, 110], [128, 136], [140, 150], [171, 179], [135, 143], [142, 149], [204, 220], [189, 199], [95, 110], [52, 56]]}]CopyStyling the error barsThe different parts of the error bar anatomy can be styled individually. In a non-inverted chart, the stem is the vertical bar in the center, while the whiskers are the top and bottom lines marking the values. The lineWidth option sets the line thickness globally. The whiskerWidth and stemWidth options sets the width of the whiskers and the stem individually. For the full set of options, see plotOptions.errorbar.Edit this pagePrevious« Dumbbell chart NextFunnel series  »Setting up the error bar seriesStyling the error bars\n\nError bar seriesError bars are a graphical representation of the variability of data and are used on graphs to indicate the error, or uncertainty in a reported measurement. Setting up the error bar seriesIn Highcharts, an error bar series is defined by setting the type to errorbar. An error bar series relates to a parent series through the option linkedTo. By default, the linkedTo option is ":previous", which means that the error bar series by default relates to the series defined before it in the source code. To use another series, the linkedTo option relates to the id option of the parent series.series: [{    name: 'Rainfall',    color: '#4572A7',    type: 'column',    data: [        49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4    ]}, {    name: 'Rainfall error',    type: 'errorbar',    data: [[48, 51], [68, 73], [92, 110], [128, 136], [140, 150], [171, 179], [135, 143], [142, 149], [204, 220], [189, 199], [95, 110], [52, 56]]}]CopyStyling the error barsThe different parts of the error bar anatomy can be styled individually. In a non-inverted chart, the stem is the vertical bar in the center, while the whiskers are the top and bottom lines marking the values. The lineWidth option sets the line thickness globally. The whiskerWidth and stemWidth options sets the width of the whiskers and the stem individually. For the full set of options, see plotOptions.errorbar.Edit this pagePrevious« Dumbbell chart NextFunnel series  »Setting up the error bar seriesStyling the error bars\n\n\n\nFunnel seriesSee live demo.Funnel charts are a type of chart often used to visualize stages in a sales project, where the top are the initial stages with the most clients. The funnel narrows as more clients drop off. RequirementsIn order for funnel series to run, the modules/funnel.js file must be loaded after highcharts.js.Setting the funnel sizeEach element of the funnel has a height that relates to the value. The size of the funnel by default fills the plot area, and can be overridden by width and height settings. In addition, the neck's size can be set by the neckWidth and neckHeight options. For the full set of options related to the funnel chart type, see plotOptions.funnel in the API reference.\n\nFunnel seriesSee live demo.Funnel charts are a type of chart often used to visualize stages in a sales project, where the top are the initial stages with the most clients. The funnel narrows as more clients drop off. RequirementsIn order for funnel series to run, the modules/funnel.js file must be loaded after highcharts.js.Setting the funnel sizeEach element of the funnel has a height that relates to the value. The size of the funnel by default fills the plot area, and can be overridden by width and height settings. In addition, the neck's size can be set by the neckWidth and neckHeight options. For the full set of options related to the funnel chart type, see plotOptions.funnel in the API reference.Edit this pagePrevious« Error bar series NextHeatmap  »RequirementsSetting the funnel size\n\nFunnel seriesSee live demo.Funnel charts are a type of chart often used to visualize stages in a sales project, where the top are the initial stages with the most clients. The funnel narrows as more clients drop off. RequirementsIn order for funnel series to run, the modules/funnel.js file must be loaded after highcharts.js.Setting the funnel sizeEach element of the funnel has a height that relates to the value. The size of the funnel by default fills the plot area, and can be overridden by width and height settings. In addition, the neck's size can be set by the neckWidth and neckHeight options. For the full set of options related to the funnel chart type, see plotOptions.funnel in the API reference.Edit this pagePrevious« Error bar series NextHeatmap  »RequirementsSetting the funnel size\n\n\n\nHeatmapA heat map is a graphical representation of data where the individual values contained in a matrix are represented as colors.Setting up the heat map seriesHeat maps require the modules/heatmap.js file to be loaded.The heat map series is defined by setting the type to heatmap. A heat map has an X and Y axis like any cartesian series. The point definitions however, take three values, x, y as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers.The color axisHeat maps borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for detailsInterpolationHeat maps have an interpolation feature, which allows for displaying seamlessly transitioning data points. Check out the featured demo here.ResourcesSee the featured demos at Heat map and Large heatmap. The latter demonstrates how a HTML5 canvas can be plugged in to optimize rendering times.See heatmap in the Highcharts Maps docs.\n\nHeatmapA heat map is a graphical representation of data where the individual values contained in a matrix are represented as colors.Setting up the heat map seriesHeat maps require the modules/heatmap.js file to be loaded.The heat map series is defined by setting the type to heatmap. A heat map has an X and Y axis like any cartesian series. The point definitions however, take three values, x, y as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers.The color axisHeat maps borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for detailsInterpolationHeat maps have an interpolation feature, which allows for displaying seamlessly transitioning data points. Check out the featured demo here.ResourcesSee the featured demos at Heat map and Large heatmap. The latter demonstrates how a HTML5 canvas can be plugged in to optimize rendering times.See heatmap in the Highcharts Maps docs.Edit this pagePrevious« Funnel series NextHistogram  »Setting up the heat map seriesThe color axisInterpolationResources\n\nHeatmapA heat map is a graphical representation of data where the individual values contained in a matrix are represented as colors.Setting up the heat map seriesHeat maps require the modules/heatmap.js file to be loaded.The heat map series is defined by setting the type to heatmap. A heat map has an X and Y axis like any cartesian series. The point definitions however, take three values, x, y as well as value, which serves as the value for color coding the point. These values can also be given as an array of three numbers.The color axisHeat maps borrow a central concept from Highcharts Maps, the color axis. See the docs article on color axis for detailsInterpolationHeat maps have an interpolation feature, which allows for displaying seamlessly transitioning data points. Check out the featured demo here.ResourcesSee the featured demos at Heat map and Large heatmap. The latter demonstrates how a HTML5 canvas can be plugged in to optimize rendering times.See heatmap in the Highcharts Maps docs.Edit this pagePrevious« Funnel series NextHistogram  »Setting up the heat map seriesThe color axisInterpolationResources\n\n\n\nHistogramA histogram series is a graphical representation of the data distribution. Histogram creates intervals (bins) and counts how many values fall into each bin.For more detailed samples and documentation check the API.Click here to check the code.How to create a HistogramThe histogram requires the following module modules/histogram-bellcurve.js.The histogram series is a column series with no padding between the columns and with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create an Histogram chart:Set the series type to histogram 2. Set baseSeries to the right data series’ id or index.series: [{    type: histogram,    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopyHistogram chart specific optionsA histogram series has two additional options:binsNumber: to suggest how many bins the histogram should create. binsNumber can be a number or a function which returns a number or one of the string: square-root, sturges or rice.binWidth: to control the width of each bin. binWidth takes precedence over binsNumber.For the full set of options, see the API.Histogram using pre-aggregated dataA histogram chart can also be created using a column chart if the data is already pre-aggregated.
Use the following setting to set up a histogram chart with a column chart:plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}Copy\n\nHistogramA histogram series is a graphical representation of the data distribution. Histogram creates intervals (bins) and counts how many values fall into each bin.For more detailed samples and documentation check the API.Click here to check the code.How to create a HistogramThe histogram requires the following module modules/histogram-bellcurve.js.The histogram series is a column series with no padding between the columns and with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create an Histogram chart:Set the series type to histogram 2. Set baseSeries to the right data series’ id or index.series: [{    type: histogram,    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopyHistogram chart specific optionsA histogram series has two additional options:binsNumber: to suggest how many bins the histogram should create. binsNumber can be a number or a function which returns a number or one of the string: square-root, sturges or rice.binWidth: to control the width of each bin. binWidth takes precedence over binsNumber.For the full set of options, see the API.Histogram using pre-aggregated dataA histogram chart can also be created using a column chart if the data is already pre-aggregated.
Use the following setting to set up a histogram chart with a column chart:plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}CopyEdit this pagePrevious« Heatmap NextItem chart  »How to create a HistogramHistogram chart specific optionsHistogram using pre-aggregated data\n\nHistogramA histogram series is a graphical representation of the data distribution. Histogram creates intervals (bins) and counts how many values fall into each bin.For more detailed samples and documentation check the API.Click here to check the code.How to create a HistogramThe histogram requires the following module modules/histogram-bellcurve.js.The histogram series is a column series with no padding between the columns and with self-setting data. Unlike most other Highcharts series, the data property is not available - it is set internally based on the base series data (more precisely y values of the data).Two steps are required to create an Histogram chart:Set the series type to histogram 2. Set baseSeries to the right data series’ id or index.series: [{    type: histogram,    xAxis: 1,    yAxis: 1,    baseSeries: 1}, {    data: [3.5, 3, 3.2, 3.1, 3.6, 3.9, 3.4]}]CopyHistogram chart specific optionsA histogram series has two additional options:binsNumber: to suggest how many bins the histogram should create. binsNumber can be a number or a function which returns a number or one of the string: square-root, sturges or rice.binWidth: to control the width of each bin. binWidth takes precedence over binsNumber.For the full set of options, see the API.Histogram using pre-aggregated dataA histogram chart can also be created using a column chart if the data is already pre-aggregated.
Use the following setting to set up a histogram chart with a column chart:plotOptions: {    column: {        pointPadding: 0,        borderWidth: 0,        groupPadding: 0,        shadow: false    }}CopyEdit this pagePrevious« Heatmap NextItem chart  »How to create a HistogramHistogram chart specific optionsHistogram using pre-aggregated data\n\n\n\nItem chartAn item chart in Highcharts is a series type where the values are represented as individual dots or symbols, so that for example a quantity of ten is represented by ten dots. This is similar to a dot chart, except that in the dot chart, the items are rendered on X and Y axis, while in the item chart, they are laid out sequentially.The item chart is used for infographics, typically for a low number of individual items within a low number of groups. The most common use case is a parliament, and other use cases may be the distribution of a feature within a group of persons, or percentages represented by a count rather than a scalar value.Circular layoutItem charts can be laid out either as a rectangle or a circle. The circular layout is enabled by setting a startAngle and an endAngle. To achieve the typical parliament hemisphere, set the startAngle to -100 and the endAngle to 100. Then, as the default center is in the middle of the plot area and the default size is that the full circle will fill out the plot area, we can adjust the size and center. These options provide a reasonable fit for the parliament:// Circular optionscenter: ['50%', '88%'],size: '170%',startAngle: -100,endAngle: 100CopyAlso part of the circular layout is the innerSize and rows settings. If the innerSize is 0, the circle will be filled with dots, while in the typical parliament view we would like the center of the semi-circle to be clear. So the default innerSize is 40%. In some cases we also want to set a fixed number of rows in order to reflect the real-world parliament. In this case we can set the rows option, which will take precedence over the innerSize.Rectangular layoutWhen the angles are not given, the layout will be rectangular, and the layout option can be set either to horizontal or vertical.SymbolsWhen used as an infographic, we would typically use custom symbols to denote the type of data, for example a count of men vs women. This is done in the marker options. See the live demo at jsFiddle.API optionsFor the full set of available options, see the API.\n\nItem chartAn item chart in Highcharts is a series type where the values are represented as individual dots or symbols, so that for example a quantity of ten is represented by ten dots. This is similar to a dot chart, except that in the dot chart, the items are rendered on X and Y axis, while in the item chart, they are laid out sequentially.The item chart is used for infographics, typically for a low number of individual items within a low number of groups. The most common use case is a parliament, and other use cases may be the distribution of a feature within a group of persons, or percentages represented by a count rather than a scalar value.Circular layoutItem charts can be laid out either as a rectangle or a circle. The circular layout is enabled by setting a startAngle and an endAngle. To achieve the typical parliament hemisphere, set the startAngle to -100 and the endAngle to 100. Then, as the default center is in the middle of the plot area and the default size is that the full circle will fill out the plot area, we can adjust the size and center. These options provide a reasonable fit for the parliament:// Circular optionscenter: ['50%', '88%'],size: '170%',startAngle: -100,endAngle: 100CopyAlso part of the circular layout is the innerSize and rows settings. If the innerSize is 0, the circle will be filled with dots, while in the typical parliament view we would like the center of the semi-circle to be clear. So the default innerSize is 40%. In some cases we also want to set a fixed number of rows in order to reflect the real-world parliament. In this case we can set the rows option, which will take precedence over the innerSize.Rectangular layoutWhen the angles are not given, the layout will be rectangular, and the layout option can be set either to horizontal or vertical.SymbolsWhen used as an infographic, we would typically use custom symbols to denote the type of data, for example a count of men vs women. This is done in the marker options. See the live demo at jsFiddle.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Histogram NextLine chart  »Circular layoutRectangular layoutSymbolsAPI options\n\nItem chartAn item chart in Highcharts is a series type where the values are represented as individual dots or symbols, so that for example a quantity of ten is represented by ten dots. This is similar to a dot chart, except that in the dot chart, the items are rendered on X and Y axis, while in the item chart, they are laid out sequentially.The item chart is used for infographics, typically for a low number of individual items within a low number of groups. The most common use case is a parliament, and other use cases may be the distribution of a feature within a group of persons, or percentages represented by a count rather than a scalar value.Circular layoutItem charts can be laid out either as a rectangle or a circle. The circular layout is enabled by setting a startAngle and an endAngle. To achieve the typical parliament hemisphere, set the startAngle to -100 and the endAngle to 100. Then, as the default center is in the middle of the plot area and the default size is that the full circle will fill out the plot area, we can adjust the size and center. These options provide a reasonable fit for the parliament:// Circular optionscenter: ['50%', '88%'],size: '170%',startAngle: -100,endAngle: 100CopyAlso part of the circular layout is the innerSize and rows settings. If the innerSize is 0, the circle will be filled with dots, while in the typical parliament view we would like the center of the semi-circle to be clear. So the default innerSize is 40%. In some cases we also want to set a fixed number of rows in order to reflect the real-world parliament. In this case we can set the rows option, which will take precedence over the innerSize.Rectangular layoutWhen the angles are not given, the layout will be rectangular, and the layout option can be set either to horizontal or vertical.SymbolsWhen used as an infographic, we would typically use custom symbols to denote the type of data, for example a count of men vs women. This is done in the marker options. See the live demo at jsFiddle.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Histogram NextLine chart  »Circular layoutRectangular layoutSymbolsAPI options\n\n\n\nLine chartThe line chart is represented by a series of datapoints connected with a straight line. Line charts are most often used to visualize data that changes over time.Line chart featuresThe line chart inherit the options a series has plus some more. See the API reference for a full list of the line chart plotOptions.Most options set in plotOptions can also be set on a individual series.StepAllows the use of steps instead of a straight line.Try it hereCode to enable step:plotOptions: {    series: {        step: 'left' // or 'center' or 'right'    }}Copy\n\nLine chartThe line chart is represented by a series of datapoints connected with a straight line. Line charts are most often used to visualize data that changes over time.Line chart featuresThe line chart inherit the options a series has plus some more. See the API reference for a full list of the line chart plotOptions.Most options set in plotOptions can also be set on a individual series.StepAllows the use of steps instead of a straight line.Try it hereCode to enable step:plotOptions: {    series: {        step: 'left' // or 'center' or 'right'    }}CopyEdit this pagePrevious« Item chart NextLollipop chart  »Step\n\nLine chartThe line chart is represented by a series of datapoints connected with a straight line. Line charts are most often used to visualize data that changes over time.Line chart featuresThe line chart inherit the options a series has plus some more. See the API reference for a full list of the line chart plotOptions.Most options set in plotOptions can also be set on a individual series.StepAllows the use of steps instead of a straight line.Try it hereCode to enable step:plotOptions: {    series: {        step: 'left' // or 'center' or 'right'    }}CopyEdit this pagePrevious« Item chart NextLollipop chart  »Step\n\n\n\nLollipop chartA lollipop plot is basically a bar plot, but with line and a dot instead of a bar. It shows the relationship between a category and a value. On the Y axis, the value is represented by the center of a dot - not by the top/bottom edge (or right/left for inverted chart) what is commonly mistaken.Using the Lollipop series is useful when you have several bars of the same height, especially when the values are ~90% of range - it avoids the Moiré effect and the chart is not such visually aggressive.Getting startedLollipop series requires loading the Highcharts and all highcharts-more, dumbbell.js and lollipop.js modules.Here is an example for loading lollipop modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script><script src="https://code.highcharts.com/modules/lollipop.js"></script>CopyThe demo below represents a simple lollipop plotVertical lollipop chartTo display a vertical lollipops, set chart.inverted to true.Configuring optionsThe dot can be customized as every other marker in Highcharts, among the others:fillColor series.marker.fillColor - color for the dot.radius series.marker.radius - size of the dot.The connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.\n\nLollipop chartA lollipop plot is basically a bar plot, but with line and a dot instead of a bar. It shows the relationship between a category and a value. On the Y axis, the value is represented by the center of a dot - not by the top/bottom edge (or right/left for inverted chart) what is commonly mistaken.Using the Lollipop series is useful when you have several bars of the same height, especially when the values are ~90% of range - it avoids the Moiré effect and the chart is not such visually aggressive.Getting startedLollipop series requires loading the Highcharts and all highcharts-more, dumbbell.js and lollipop.js modules.Here is an example for loading lollipop modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script><script src="https://code.highcharts.com/modules/lollipop.js"></script>CopyThe demo below represents a simple lollipop plotVertical lollipop chartTo display a vertical lollipops, set chart.inverted to true.Configuring optionsThe dot can be customized as every other marker in Highcharts, among the others:fillColor series.marker.fillColor - color for the dot.radius series.marker.radius - size of the dot.The connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.Edit this pagePrevious« Line chart NextNetwork graph  »Getting startedVertical lollipop chartConfiguring options\n\nLollipop chartA lollipop plot is basically a bar plot, but with line and a dot instead of a bar. It shows the relationship between a category and a value. On the Y axis, the value is represented by the center of a dot - not by the top/bottom edge (or right/left for inverted chart) what is commonly mistaken.Using the Lollipop series is useful when you have several bars of the same height, especially when the values are ~90% of range - it avoids the Moiré effect and the chart is not such visually aggressive.Getting startedLollipop series requires loading the Highcharts and all highcharts-more, dumbbell.js and lollipop.js modules.Here is an example for loading lollipop modules into a webpage:<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/highcharts-more.js"></script><script src="https://code.highcharts.com/modules/dumbbell.js"></script><script src="https://code.highcharts.com/modules/lollipop.js"></script>CopyThe demo below represents a simple lollipop plotVertical lollipop chartTo display a vertical lollipops, set chart.inverted to true.Configuring optionsThe dot can be customized as every other marker in Highcharts, among the others:fillColor series.marker.fillColor - color for the dot.radius series.marker.radius - size of the dot.The connector line can be customized by:connectorColor series.connectorColor - color for the connector line.connectorWidth series.connectorWidth - width of the connector line.Edit this pagePrevious« Line chart NextNetwork graph  »Getting startedVertical lollipop chartConfiguring options\n\n\n\nNetwork graphNetwork graph (force directed graph) is a mathematical structure (graph) to show relations between points in an aesthetically-pleasing way. The graph visualizes how subjects are interconnected with each other. Entities are displayed as nodes and the relationship between them are displayed with lines. The graph is force directed by assigning a weight (force) from the node edges and the other interconnected nodes get assigned a weighted factor. The graph simulates the weight as forces in a physical system, where the forces have impact on the nodes and find the best position on the chart’s plotting area. The Network Graph has various use case such as display relations between people, roads, companies, and products.Getting startedAdd modules/networkgraph.js after you have included Highcharts.Example of loading both files in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/networkgraph.js"></script>CopyData formatThe Network Graph needs a data format that builds up an array of links, where each link is specified by a start and an end node.series: [{    data: [        {from: 'A', to: 'B'},        {from: 'A', to: 'C'},        {from: 'A', to: 'D'},        {from: 'A', to: 'E'},        {from: 'A', to: 'F'},        {from: 'A', to: 'G'},        {from: 'B', to: 'C'},        ...    ]}]CopySee simple Network Graph demoSee a Network Graph with a more complex data structure. Notice: You don't have to specify the from: and to: property for each point when you define the keys: option for plotOptions.networkgraph.keysAlgorithm optionsForces and the algorithm are configured using series.layoutAlgorithm options:attractiveForce series.layoutAlgorithm.attractiveForce - function that returns the force between two connected nodes.enableSimulation series.layoutAlgorithm.enableSimulation - enables/disables simulation.friction series.layoutAlgorithm.friction - friction to show smooth animation of nodes translations.gravitationalConstant series.layoutAlgorithm.gravitationalConstant - constant for barycenter forces applied on nodes.maxIterations series.layoutAlgorithm.maxIterations - max number of iterations that algorithm will be running.initialPositions series.layoutAlgorithm.initialPositions - algorithm for initial placement of nodes (can be one of predefined or a custom function).repulsiveForce series.layoutAlgorithm.repulsiveForce - function that returns the force between two nodes.type series.layoutAlgorithm.type - only reingold-fruchterman available at this moment.Since version 7.1 additional configuration options are available:approximation - when rendering a huge number of nodes, recommended to approximate repulsive forces to decrease complexity from O(N^2) to O(N log N).theta - used in Barnes-Hut approximation to determine when the force on nodes should be approximated or calculated directly.integration - forces integration type. Changes how force is applied on nodes changing the animation too. Note that different integrations have different default attractiveForce and repulsiveForce options.maxSpeed - max speed that node can have in one iteration, preventing small and disconnected nodes to run too fast. Verlet integration onlySee the demo below, for a network graph with custom algorithm options appliedLink configuration optionslink series.link - style options for links/connections (link.width, link.color and link.dashStyle).draggable series.draggable - enables/disables drag&drop for nodes.Node Configuration OptionsNodes are generated automatically from series.data connections. Nodes are instances of Highcharts.Point and are available from the series.nodes array.In addition to auto-generated properties, custom properties such as color or colorIndex can be set by adding an array, series.nodes, to the series options and linking nodes by id. For example: data-optionDatalabels OptionsSince v7.1 dataLabels are available for both, nodes and links, list of new options:linkFormat dataLabels.linkFormat - format for the dataLabels on links (string).linkFormatter dataLabels.linkFormatter - formatter for the dataLabels on links (function).linkTextPath dataLabels.linkTextPath - options for the dataLabels on link if text should be rendered along the link.textPath dataLabels.textPath - options for the dataLabels on node if text should be rendered around the node.Use CasesUse Case 1Simple example{    chart: {        type: 'networkgraph'    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopyCustomized length between points and colored links:{    chart: {        type: 'networkgraph'    },    plotOptions: {        networkgraph: {            layoutAlgorithm: {                linkLength: 50 // in pixels            },            link: {                color: 'red'            }        }    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopySee the demo below for a network graph with customized styled links per data series.Use Case 2Comparison of both integrations, Euler and Verlet:Use Case 3dataLabels around the nodes:Use Case 4dataLabels on links:\n\nNetwork graphNetwork graph (force directed graph) is a mathematical structure (graph) to show relations between points in an aesthetically-pleasing way. The graph visualizes how subjects are interconnected with each other. Entities are displayed as nodes and the relationship between them are displayed with lines. The graph is force directed by assigning a weight (force) from the node edges and the other interconnected nodes get assigned a weighted factor. The graph simulates the weight as forces in a physical system, where the forces have impact on the nodes and find the best position on the chart’s plotting area. The Network Graph has various use case such as display relations between people, roads, companies, and products.Getting startedAdd modules/networkgraph.js after you have included Highcharts.Example of loading both files in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/networkgraph.js"></script>CopyData formatThe Network Graph needs a data format that builds up an array of links, where each link is specified by a start and an end node.series: [{    data: [        {from: 'A', to: 'B'},        {from: 'A', to: 'C'},        {from: 'A', to: 'D'},        {from: 'A', to: 'E'},        {from: 'A', to: 'F'},        {from: 'A', to: 'G'},        {from: 'B', to: 'C'},        ...    ]}]CopySee simple Network Graph demoSee a Network Graph with a more complex data structure. Notice: You don't have to specify the from: and to: property for each point when you define the keys: option for plotOptions.networkgraph.keysAlgorithm optionsForces and the algorithm are configured using series.layoutAlgorithm options:attractiveForce series.layoutAlgorithm.attractiveForce - function that returns the force between two connected nodes.enableSimulation series.layoutAlgorithm.enableSimulation - enables/disables simulation.friction series.layoutAlgorithm.friction - friction to show smooth animation of nodes translations.gravitationalConstant series.layoutAlgorithm.gravitationalConstant - constant for barycenter forces applied on nodes.maxIterations series.layoutAlgorithm.maxIterations - max number of iterations that algorithm will be running.initialPositions series.layoutAlgorithm.initialPositions - algorithm for initial placement of nodes (can be one of predefined or a custom function).repulsiveForce series.layoutAlgorithm.repulsiveForce - function that returns the force between two nodes.type series.layoutAlgorithm.type - only reingold-fruchterman available at this moment.Since version 7.1 additional configuration options are available:approximation - when rendering a huge number of nodes, recommended to approximate repulsive forces to decrease complexity from O(N^2) to O(N log N).theta - used in Barnes-Hut approximation to determine when the force on nodes should be approximated or calculated directly.integration - forces integration type. Changes how force is applied on nodes changing the animation too. Note that different integrations have different default attractiveForce and repulsiveForce options.maxSpeed - max speed that node can have in one iteration, preventing small and disconnected nodes to run too fast. Verlet integration onlySee the demo below, for a network graph with custom algorithm options appliedLink configuration optionslink series.link - style options for links/connections (link.width, link.color and link.dashStyle).draggable series.draggable - enables/disables drag&drop for nodes.Node Configuration OptionsNodes are generated automatically from series.data connections. Nodes are instances of Highcharts.Point and are available from the series.nodes array.In addition to auto-generated properties, custom properties such as color or colorIndex can be set by adding an array, series.nodes, to the series options and linking nodes by id. For example: data-optionDatalabels OptionsSince v7.1 dataLabels are available for both, nodes and links, list of new options:linkFormat dataLabels.linkFormat - format for the dataLabels on links (string).linkFormatter dataLabels.linkFormatter - formatter for the dataLabels on links (function).linkTextPath dataLabels.linkTextPath - options for the dataLabels on link if text should be rendered along the link.textPath dataLabels.textPath - options for the dataLabels on node if text should be rendered around the node.Use CasesUse Case 1Simple example{    chart: {        type: 'networkgraph'    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopyCustomized length between points and colored links:{    chart: {        type: 'networkgraph'    },    plotOptions: {        networkgraph: {            layoutAlgorithm: {                linkLength: 50 // in pixels            },            link: {                color: 'red'            }        }    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopySee the demo below for a network graph with customized styled links per data series.Use Case 2Comparison of both integrations, Euler and Verlet:Use Case 3dataLabels around the nodes:Use Case 4dataLabels on links:Edit this pagePrevious« Lollipop chart NextOrganization chart  »Getting startedData formatAlgorithm optionsLink configuration optionsNode Configuration OptionsDatalabels OptionsUse CasesUse Case 1Use Case 2Use Case 3Use Case 4\n\nNetwork graphNetwork graph (force directed graph) is a mathematical structure (graph) to show relations between points in an aesthetically-pleasing way. The graph visualizes how subjects are interconnected with each other. Entities are displayed as nodes and the relationship between them are displayed with lines. The graph is force directed by assigning a weight (force) from the node edges and the other interconnected nodes get assigned a weighted factor. The graph simulates the weight as forces in a physical system, where the forces have impact on the nodes and find the best position on the chart’s plotting area. The Network Graph has various use case such as display relations between people, roads, companies, and products.Getting startedAdd modules/networkgraph.js after you have included Highcharts.Example of loading both files in a webpage<script src="https://code.highcharts.com/highcharts.js"></script><script src="https://code.highcharts.com/modules/networkgraph.js"></script>CopyData formatThe Network Graph needs a data format that builds up an array of links, where each link is specified by a start and an end node.series: [{    data: [        {from: 'A', to: 'B'},        {from: 'A', to: 'C'},        {from: 'A', to: 'D'},        {from: 'A', to: 'E'},        {from: 'A', to: 'F'},        {from: 'A', to: 'G'},        {from: 'B', to: 'C'},        ...    ]}]CopySee simple Network Graph demoSee a Network Graph with a more complex data structure. Notice: You don't have to specify the from: and to: property for each point when you define the keys: option for plotOptions.networkgraph.keysAlgorithm optionsForces and the algorithm are configured using series.layoutAlgorithm options:attractiveForce series.layoutAlgorithm.attractiveForce - function that returns the force between two connected nodes.enableSimulation series.layoutAlgorithm.enableSimulation - enables/disables simulation.friction series.layoutAlgorithm.friction - friction to show smooth animation of nodes translations.gravitationalConstant series.layoutAlgorithm.gravitationalConstant - constant for barycenter forces applied on nodes.maxIterations series.layoutAlgorithm.maxIterations - max number of iterations that algorithm will be running.initialPositions series.layoutAlgorithm.initialPositions - algorithm for initial placement of nodes (can be one of predefined or a custom function).repulsiveForce series.layoutAlgorithm.repulsiveForce - function that returns the force between two nodes.type series.layoutAlgorithm.type - only reingold-fruchterman available at this moment.Since version 7.1 additional configuration options are available:approximation - when rendering a huge number of nodes, recommended to approximate repulsive forces to decrease complexity from O(N^2) to O(N log N).theta - used in Barnes-Hut approximation to determine when the force on nodes should be approximated or calculated directly.integration - forces integration type. Changes how force is applied on nodes changing the animation too. Note that different integrations have different default attractiveForce and repulsiveForce options.maxSpeed - max speed that node can have in one iteration, preventing small and disconnected nodes to run too fast. Verlet integration onlySee the demo below, for a network graph with custom algorithm options appliedLink configuration optionslink series.link - style options for links/connections (link.width, link.color and link.dashStyle).draggable series.draggable - enables/disables drag&drop for nodes.Node Configuration OptionsNodes are generated automatically from series.data connections. Nodes are instances of Highcharts.Point and are available from the series.nodes array.In addition to auto-generated properties, custom properties such as color or colorIndex can be set by adding an array, series.nodes, to the series options and linking nodes by id. For example: data-optionDatalabels OptionsSince v7.1 dataLabels are available for both, nodes and links, list of new options:linkFormat dataLabels.linkFormat - format for the dataLabels on links (string).linkFormatter dataLabels.linkFormatter - formatter for the dataLabels on links (function).linkTextPath dataLabels.linkTextPath - options for the dataLabels on link if text should be rendered along the link.textPath dataLabels.textPath - options for the dataLabels on node if text should be rendered around the node.Use CasesUse Case 1Simple example{    chart: {        type: 'networkgraph'    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopyCustomized length between points and colored links:{    chart: {        type: 'networkgraph'    },    plotOptions: {        networkgraph: {            layoutAlgorithm: {                linkLength: 50 // in pixels            },            link: {                color: 'red'            }        }    },    series: [{        data: [            ['A', 'B'],            ['B', 'C'],            ['C', 'A']        ]    }]}CopySee the demo below for a network graph with customized styled links per data series.Use Case 2Comparison of both integrations, Euler and Verlet:Use Case 3dataLabels around the nodes:Use Case 4dataLabels on links:Edit this pagePrevious« Lollipop chart NextOrganization chart  »Getting startedData formatAlgorithm optionsLink configuration optionsNode Configuration OptionsDatalabels OptionsUse CasesUse Case 1Use Case 2Use Case 3Use Case 4\n\n\n\nOrganization chartAn organization chart (org chart) is a diagram that portrays the structure of an organization and the relationships and relative ranks of its parts and positions.Options structureIn Highcharts, the organization chart resembles the sankey chart in the way it is built around nodes and links. The nodes of an org chart are the positions or persons, while the links are the lines showing the relations between them. The data structure of the options defines the links.In the nodes array of the series, each node is identified by an id referring to the id in the link. Additional properties like title, description and image may be set in the individual node options.Data labelsEach person or position is represented by a card or label. This card is actually the node's data label, and is subject to the dataLabel options of the series. In org charts, the dataLabel's useHTML option is set to true by default, because we want to leverage layout capabilities that are more complicated to achieve using SVG alone.The actual HTML rendered inside the chart is determined by dataLabels.nodeFormat or dataLabels.nodeFormatter. The default nodeFormatter output depends on whether there is an image setting on the node, and produces a layout based on flex boxes in order to get positioning and alignment right. See the example of overriding the nodeFormatter.LevelsIn an org chart typically, we may want to define specific styling for all nodes on a specific level, for example having all C-level positions in the same color. For this, we can use the [levels option and set the properties there. An example can be seen in the main demo above.API optionsFor the full set of available options, see the API.\n\nOrganization chartAn organization chart (org chart) is a diagram that portrays the structure of an organization and the relationships and relative ranks of its parts and positions.Options structureIn Highcharts, the organization chart resembles the sankey chart in the way it is built around nodes and links. The nodes of an org chart are the positions or persons, while the links are the lines showing the relations between them. The data structure of the options defines the links.In the nodes array of the series, each node is identified by an id referring to the id in the link. Additional properties like title, description and image may be set in the individual node options.Data labelsEach person or position is represented by a card or label. This card is actually the node's data label, and is subject to the dataLabel options of the series. In org charts, the dataLabel's useHTML option is set to true by default, because we want to leverage layout capabilities that are more complicated to achieve using SVG alone.The actual HTML rendered inside the chart is determined by dataLabels.nodeFormat or dataLabels.nodeFormatter. The default nodeFormatter output depends on whether there is an image setting on the node, and produces a layout based on flex boxes in order to get positioning and alignment right. See the example of overriding the nodeFormatter.LevelsIn an org chart typically, we may want to define specific styling for all nodes on a specific level, for example having all C-level positions in the same color. For this, we can use the [levels option and set the properties there. An example can be seen in the main demo above.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Network graph NextPacked bubble  »Options structureData labelsLevelsAPI options\n\nOrganization chartAn organization chart (org chart) is a diagram that portrays the structure of an organization and the relationships and relative ranks of its parts and positions.Options structureIn Highcharts, the organization chart resembles the sankey chart in the way it is built around nodes and links. The nodes of an org chart are the positions or persons, while the links are the lines showing the relations between them. The data structure of the options defines the links.In the nodes array of the series, each node is identified by an id referring to the id in the link. Additional properties like title, description and image may be set in the individual node options.Data labelsEach person or position is represented by a card or label. This card is actually the node's data label, and is subject to the dataLabel options of the series. In org charts, the dataLabel's useHTML option is set to true by default, because we want to leverage layout capabilities that are more complicated to achieve using SVG alone.The actual HTML rendered inside the chart is determined by dataLabels.nodeFormat or dataLabels.nodeFormatter. The default nodeFormatter output depends on whether there is an image setting on the node, and produces a layout based on flex boxes in order to get positioning and alignment right. See the example of overriding the nodeFormatter.LevelsIn an org chart typically, we may want to define specific styling for all nodes on a specific level, for example having all C-level positions in the same color. For this, we can use the [levels option and set the properties there. An example can be seen in the main demo above.API optionsFor the full set of available options, see the API.Edit this pagePrevious« Network graph NextPacked bubble  »Options structureData labelsLevelsAPI options\n\n\n\nPacked bubbleA bubble chart requires three dimensions of data; the x-value and y-value to position the bubble along the value axes and a third value for its volume. Packed Bubble charts have a simpler data structure, a flat, one-dimensional array with volumes is sufficient. The bubble’s x/y position is automatically calculated using an algorithm that packs the bubbles in a cluster. The series data point configuration has support for setting colors and label values. Drag’n drop feature was also added to give the user a chance to quickly move one bubble between series and then check how their relations will change.Get startedPacked Bubble chart are part of the highcharts-more package, make sure this is loaded in your webpage or added as a dependency to your project. The chart.type() property of this chart is set with packedbubble.The configuration of packedbubble differs little from other series types like scatter and bubble charts, and many other settings have defaults for responsiveness, tooltip, colors, legends, etc. A few lines of code are needed to get started with Packed Bubble.Here is an example of a packed bubble chart in its simplest form:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    series: [{        data: [50, 12, 33, 45, 60] // sizes of the bubble    }]});CopyData formatIn the above example, the series data for Packed Bubble takes a one-dimensional array of values, but can also take data point properties for color() and name().Here is an example of how to set the data for a packed bubble with 3 series and different data formats:Highcharts.chart('container', {    chart: {        type: 'packedbubble',    },    series: [{        name: 'Coffee', // Coffee series        data: [{            // name property is used for the datalabel            // value property is used for the volume of the bubble            value: 12,            name: 'Bert'        }, {            value: 5,            name: 'John'        }, {            value: 10,            name: 'Sandra'        }, {            value: 7,            name: 'Cecile'        }]    }, {        name: 'Energy drinks', // Energy drinks series        data: [{            value: 10,            name: 'Tristan'        }]    }, {        name: 'Tea', // Tea series        data: [5, 6, 8, {            value: 10,            name: 'Mustapha',            color: 'pink'        }]    }]});CopyNotice in the code above, that the Tea data series is set with one dimensional array, except for the last point, which is set with values for volume, name and a color.Bubble sizesPacked Bubble charts with a dataset of either many small or large values need some tweaking of the options to control the size of the bubbles displayed. The minimum and maximum size of bubbles is configured by two parameters: minSize and maxSize Bubbles will automatically size between the minSize and maxSize to reflect the volume of each bubble. Can be either pixels (when no unit is given), or a percentage of the smallest one of the plot width and height.Here is an example of setting min and max size for bubbles:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    plotOptions: {        packedbubble: {            minSize: 15,            maxSize: 300        }    },    series: [{        data: [1, 75, 112, 180, 20, 3000]    }]});CopyALGORITHMSThe layout algorithm is configured using series.layoutAlgorithm options when the useSimulation param is enabled.The series.layoutAlgorithm are includes options to change the speed, padding, initial bubbles positions and more.layoutAlgorithm: {    gravitationalConstant: 0.05,    splitSeries: true,    seriesInteraction: false,    dragBetweenSeries: true,    parentNodeLimit: true}CopySPLITWhether to split series into individual groups or to mix all series together.plotOptions: {    packedbubble: {        layoutAlgorithm: {            splitSeries: true        }    }}CopySIMULATIONThe simulation can be disabled or enabled, which has an influence on adding options to the series graph based on the used layout. All parameters reflect in both animation and the final position of bubbles.plotOptions: {    packedbubble: {        useSimulation: true    }}plotOptions: {    packedbubble: {        useSimulation: false    }}CopyDRAG AND DROPFlag to determine if nodes are draggable or not. Available for graph with useSimulation set to true only.plotOptions: {    packedbubble: {        Draggable: true    }}CopyThe option dragBetweenSeries: true is declared in layoutAlgorithm params and allows the user to drag and drop points between series, for changing point related series.layoutAlgorithm: {    splitSeries: true,    dragBetweenSeries: true}CopyUse CasesUse Case 1Force-approach algorithm.ConfigurationplotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: false        }    }}CopyUse Case 2Force-approach algorithm with split series.Configuration:plotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: true,            seriesInteraction: false,            dragBetweenSeries: true,            parentNodeLimit: true        }    }}CopyUse Case 37.0. Spiral packing - simple, fast alternative of the packed bubble, that may be used for more complicated data sets:\n\nPacked bubbleA bubble chart requires three dimensions of data; the x-value and y-value to position the bubble along the value axes and a third value for its volume. Packed Bubble charts have a simpler data structure, a flat, one-dimensional array with volumes is sufficient. The bubble’s x/y position is automatically calculated using an algorithm that packs the bubbles in a cluster. The series data point configuration has support for setting colors and label values. Drag’n drop feature was also added to give the user a chance to quickly move one bubble between series and then check how their relations will change.Get startedPacked Bubble chart are part of the highcharts-more package, make sure this is loaded in your webpage or added as a dependency to your project. The chart.type() property of this chart is set with packedbubble.The configuration of packedbubble differs little from other series types like scatter and bubble charts, and many other settings have defaults for responsiveness, tooltip, colors, legends, etc. A few lines of code are needed to get started with Packed Bubble.Here is an example of a packed bubble chart in its simplest form:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    series: [{        data: [50, 12, 33, 45, 60] // sizes of the bubble    }]});CopyData formatIn the above example, the series data for Packed Bubble takes a one-dimensional array of values, but can also take data point properties for color() and name().Here is an example of how to set the data for a packed bubble with 3 series and different data formats:Highcharts.chart('container', {    chart: {        type: 'packedbubble',    },    series: [{        name: 'Coffee', // Coffee series        data: [{            // name property is used for the datalabel            // value property is used for the volume of the bubble            value: 12,            name: 'Bert'        }, {            value: 5,            name: 'John'        }, {            value: 10,            name: 'Sandra'        }, {            value: 7,            name: 'Cecile'        }]    }, {        name: 'Energy drinks', // Energy drinks series        data: [{            value: 10,            name: 'Tristan'        }]    }, {        name: 'Tea', // Tea series        data: [5, 6, 8, {            value: 10,            name: 'Mustapha',            color: 'pink'        }]    }]});CopyNotice in the code above, that the Tea data series is set with one dimensional array, except for the last point, which is set with values for volume, name and a color.Bubble sizesPacked Bubble charts with a dataset of either many small or large values need some tweaking of the options to control the size of the bubbles displayed. The minimum and maximum size of bubbles is configured by two parameters: minSize and maxSize Bubbles will automatically size between the minSize and maxSize to reflect the volume of each bubble. Can be either pixels (when no unit is given), or a percentage of the smallest one of the plot width and height.Here is an example of setting min and max size for bubbles:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    plotOptions: {        packedbubble: {            minSize: 15,            maxSize: 300        }    },    series: [{        data: [1, 75, 112, 180, 20, 3000]    }]});CopyALGORITHMSThe layout algorithm is configured using series.layoutAlgorithm options when the useSimulation param is enabled.The series.layoutAlgorithm are includes options to change the speed, padding, initial bubbles positions and more.layoutAlgorithm: {    gravitationalConstant: 0.05,    splitSeries: true,    seriesInteraction: false,    dragBetweenSeries: true,    parentNodeLimit: true}CopySPLITWhether to split series into individual groups or to mix all series together.plotOptions: {    packedbubble: {        layoutAlgorithm: {            splitSeries: true        }    }}CopySIMULATIONThe simulation can be disabled or enabled, which has an influence on adding options to the series graph based on the used layout. All parameters reflect in both animation and the final position of bubbles.plotOptions: {    packedbubble: {        useSimulation: true    }}plotOptions: {    packedbubble: {        useSimulation: false    }}CopyDRAG AND DROPFlag to determine if nodes are draggable or not. Available for graph with useSimulation set to true only.plotOptions: {    packedbubble: {        Draggable: true    }}CopyThe option dragBetweenSeries: true is declared in layoutAlgorithm params and allows the user to drag and drop points between series, for changing point related series.layoutAlgorithm: {    splitSeries: true,    dragBetweenSeries: true}CopyUse CasesUse Case 1Force-approach algorithm.ConfigurationplotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: false        }    }}CopyUse Case 2Force-approach algorithm with split series.Configuration:plotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: true,            seriesInteraction: false,            dragBetweenSeries: true,            parentNodeLimit: true        }    }}CopyUse Case 37.0. Spiral packing - simple, fast alternative of the packed bubble, that may be used for more complicated data sets:Edit this pagePrevious« Organization chart NextParallel coordinates  »Get startedData formatBubble sizesALGORITHMSSPLITSIMULATIONDRAG AND DROPUse CasesUse Case 1Use Case 2Use Case 3\n\nPacked bubbleA bubble chart requires three dimensions of data; the x-value and y-value to position the bubble along the value axes and a third value for its volume. Packed Bubble charts have a simpler data structure, a flat, one-dimensional array with volumes is sufficient. The bubble’s x/y position is automatically calculated using an algorithm that packs the bubbles in a cluster. The series data point configuration has support for setting colors and label values. Drag’n drop feature was also added to give the user a chance to quickly move one bubble between series and then check how their relations will change.Get startedPacked Bubble chart are part of the highcharts-more package, make sure this is loaded in your webpage or added as a dependency to your project. The chart.type() property of this chart is set with packedbubble.The configuration of packedbubble differs little from other series types like scatter and bubble charts, and many other settings have defaults for responsiveness, tooltip, colors, legends, etc. A few lines of code are needed to get started with Packed Bubble.Here is an example of a packed bubble chart in its simplest form:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    series: [{        data: [50, 12, 33, 45, 60] // sizes of the bubble    }]});CopyData formatIn the above example, the series data for Packed Bubble takes a one-dimensional array of values, but can also take data point properties for color() and name().Here is an example of how to set the data for a packed bubble with 3 series and different data formats:Highcharts.chart('container', {    chart: {        type: 'packedbubble',    },    series: [{        name: 'Coffee', // Coffee series        data: [{            // name property is used for the datalabel            // value property is used for the volume of the bubble            value: 12,            name: 'Bert'        }, {            value: 5,            name: 'John'        }, {            value: 10,            name: 'Sandra'        }, {            value: 7,            name: 'Cecile'        }]    }, {        name: 'Energy drinks', // Energy drinks series        data: [{            value: 10,            name: 'Tristan'        }]    }, {        name: 'Tea', // Tea series        data: [5, 6, 8, {            value: 10,            name: 'Mustapha',            color: 'pink'        }]    }]});CopyNotice in the code above, that the Tea data series is set with one dimensional array, except for the last point, which is set with values for volume, name and a color.Bubble sizesPacked Bubble charts with a dataset of either many small or large values need some tweaking of the options to control the size of the bubbles displayed. The minimum and maximum size of bubbles is configured by two parameters: minSize and maxSize Bubbles will automatically size between the minSize and maxSize to reflect the volume of each bubble. Can be either pixels (when no unit is given), or a percentage of the smallest one of the plot width and height.Here is an example of setting min and max size for bubbles:Highcharts.chart('container', {    chart: {        type: 'packedbubble'    },    plotOptions: {        packedbubble: {            minSize: 15,            maxSize: 300        }    },    series: [{        data: [1, 75, 112, 180, 20, 3000]    }]});CopyALGORITHMSThe layout algorithm is configured using series.layoutAlgorithm options when the useSimulation param is enabled.The series.layoutAlgorithm are includes options to change the speed, padding, initial bubbles positions and more.layoutAlgorithm: {    gravitationalConstant: 0.05,    splitSeries: true,    seriesInteraction: false,    dragBetweenSeries: true,    parentNodeLimit: true}CopySPLITWhether to split series into individual groups or to mix all series together.plotOptions: {    packedbubble: {        layoutAlgorithm: {            splitSeries: true        }    }}CopySIMULATIONThe simulation can be disabled or enabled, which has an influence on adding options to the series graph based on the used layout. All parameters reflect in both animation and the final position of bubbles.plotOptions: {    packedbubble: {        useSimulation: true    }}plotOptions: {    packedbubble: {        useSimulation: false    }}CopyDRAG AND DROPFlag to determine if nodes are draggable or not. Available for graph with useSimulation set to true only.plotOptions: {    packedbubble: {        Draggable: true    }}CopyThe option dragBetweenSeries: true is declared in layoutAlgorithm params and allows the user to drag and drop points between series, for changing point related series.layoutAlgorithm: {    splitSeries: true,    dragBetweenSeries: true}CopyUse CasesUse Case 1Force-approach algorithm.ConfigurationplotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: false        }    }}CopyUse Case 2Force-approach algorithm with split series.Configuration:plotOptions: {    packedbubble: {        useSimulation: true,        layoutAlgorithm: {            splitSeries: true,            seriesInteraction: false,            dragBetweenSeries: true,            parentNodeLimit: true        }    }}CopyUse Case 37.0. Spiral packing - simple, fast alternative of the packed bubble, that may be used for more complicated data sets:Edit this pagePrevious« Organization chart NextParallel coordinates  »Get startedData formatBubble sizesALGORITHMSSPLITSIMULATIONDRAG AND DROPUse CasesUse Case 1Use Case 2Use Case 3\n\n\n\nParallel coordinatesIn cartesian charting, it is easy to show the relations between two or three dimensions. For example, scatter charts visualize the relationship between X and Y, 3D scatter charts visualize the relationships between three variables, where bubble charts show the relationship between up to four variables X, Y, Z (radius) and C (color).Visualizing relationships with more than four dimensions become challenging with conventional charts, as they support only three dimensions. However, parallel coordinates chart can include many dimensions thanks to its capability to add many axes on one chart. Each axis is a separate series in the parallel coordinates chart, that means “line” or “spline” series can easily be added in any series. Highcharts will create all necessary yAxes, when creating chart according to the points in series.Click here to check the code.How to create parallel coordinates chartParallel coordinates chart requires the following module modules/parallel-coordinates.js.Here are the steps to create a parallel coordinates chart:set chart.parallelCoordinates to true:chart: {  parallelCoordinates: true}CopyHighcharts generates all necessary yAxes according to the dataset, and xAxis.categories includes the yAxes’ titles:xAxis: {  categories: ['Title 1', 'Title 2', 'Title 3', ... , 'Title N'],  labels: {    styles: {      color: '#DFDFDF' // changes titles colors    }  }}CopyEach yAxis can be customized separately:yAxis: [{  lineWidth: 2}, {  tickInterval: 10},  ...]CopyUse chart.parallelAxes to set general configurations to all yAxis such as lineWidth, lineColor, etc.chart: {  parallelAxes: {    tickAmount: 10 // all non-categorized axes will have exactly ten ticks  }}CopyKeep in mind that yAxis: [ ... ] options have higher priority than chart.parallelAxes.Parallel coordinates chart specific optionschart.parallelCoordinates: Enable this option to create Parallel Coordinates Chart.chart.parallelAxes: This option is used to configure all yAxis at once.yAxis.tooltipValueFormat: Use this option to personalize the tooltip for point.y and available in tooltip.pointFormat as {point.formattedValue}.\n\nParallel coordinatesIn cartesian charting, it is easy to show the relations between two or three dimensions. For example, scatter charts visualize the relationship between X and Y, 3D scatter charts visualize the relationships between three variables, where bubble charts show the relationship between up to four variables X, Y, Z (radius) and C (color).Visualizing relationships with more than four dimensions become challenging with conventional charts, as they support only three dimensions. However, parallel coordinates chart can include many dimensions thanks to its capability to add many axes on one chart. Each axis is a separate series in the parallel coordinates chart, that means “line” or “spline” series can easily be added in any series. Highcharts will create all necessary yAxes, when creating chart according to the points in series.Click here to check the code.How to create parallel coordinates chartParallel coordinates chart requires the following module modules/parallel-coordinates.js.Here are the steps to create a parallel coordinates chart:set chart.parallelCoordinates to true:chart: {  parallelCoordinates: true}CopyHighcharts generates all necessary yAxes according to the dataset, and xAxis.categories includes the yAxes’ titles:xAxis: {  categories: ['Title 1', 'Title 2', 'Title 3', ... , 'Title N'],  labels: {    styles: {      color: '#DFDFDF' // changes titles colors    }  }}CopyEach yAxis can be customized separately:yAxis: [{  lineWidth: 2}, {  tickInterval: 10},  ...]CopyUse chart.parallelAxes to set general configurations to all yAxis such as lineWidth, lineColor, etc.chart: {  parallelAxes: {    tickAmount: 10 // all non-categorized axes will have exactly ten ticks  }}CopyKeep in mind that yAxis: [ ... ] options have higher priority than chart.parallelAxes.Parallel coordinates chart specific optionschart.parallelCoordinates: Enable this option to create Parallel Coordinates Chart.chart.parallelAxes: This option is used to configure all yAxis at once.yAxis.tooltipValueFormat: Use this option to personalize the tooltip for point.y and available in tooltip.pointFormat as {point.formattedValue}.Edit this pagePrevious« Packed bubble NextPareto chart  »How to create parallel coordinates chartParallel coordinates chart specific options\n\nParallel coordinatesIn cartesian charting, it is easy to show the relations between two or three dimensions. For example, scatter charts visualize the relationship between X and Y, 3D scatter charts visualize the relationships between three variables, where bubble charts show the relationship between up to four variables X, Y, Z (radius) and C (color).Visualizing relationships with more than four dimensions become challenging with conventional charts, as they support only three dimensions. However, parallel coordinates chart can include many dimensions thanks to its capability to add many axes on one chart. Each axis is a separate series in the parallel coordinates chart, that means “line” or “spline” series can easily be added in any series. Highcharts will create all necessary yAxes, when creating chart according to the points in series.Click here to check the code.How to create parallel coordinates chartParallel coordinates chart requires the following module modules/parallel-coordinates.js.Here are the steps to create a parallel coordinates chart:set chart.parallelCoordinates to true:chart: {  parallelCoordinates: true}CopyHighcharts generates all necessary yAxes according to the dataset, and xAxis.categories includes the yAxes’ titles:xAxis: {  categories: ['Title 1', 'Title 2', 'Title 3', ... , 'Title N'],  labels: {    styles: {      color: '#DFDFDF' // changes titles colors    }  }}CopyEach yAxis can be customized separately:yAxis: [{  lineWidth: 2}, {  tickInterval: 10},  ...]CopyUse chart.parallelAxes to set general configurations to all yAxis such as lineWidth, lineColor, etc.chart: {  parallelAxes: {    tickAmount: 10 // all non-categorized axes will have exactly ten ticks  }}CopyKeep in mind that yAxis: [ ... ] options have higher priority than chart.parallelAxes.Parallel coordinates chart specific optionschart.parallelCoordinates: Enable this option to create Parallel Coordinates Chart.chart.parallelAxes: This option is used to configure all yAxis at once.yAxis.tooltipValueFormat: Use this option to personalize the tooltip for point.y and available in tooltip.pointFormat as {point.formattedValue}.Edit this pagePrevious« Packed bubble NextPareto chart  »How to create parallel coordinates chartParallel coordinates chart specific options\n\n\n\n